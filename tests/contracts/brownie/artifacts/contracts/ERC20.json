{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "20": "../../nucypher/blockchain/eth/sol/source/zeppelin/math/SafeMath.sol",
    "22": "../../nucypher/blockchain/eth/sol/source/zeppelin/token/ERC20/ERC20.sol",
    "24": "../../nucypher/blockchain/eth/sol/source/zeppelin/token/ERC20/IERC20.sol"
  },
  "ast": {
    "absolutePath": "../../nucypher/blockchain/eth/sol/source/zeppelin/token/ERC20/ERC20.sol",
    "exportedSymbols": {
      "ERC20": [
        16024
      ]
    },
    "id": 16025,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15601,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/zeppelin/token/ERC20/IERC20.sol",
        "file": "zeppelin/token/ERC20/IERC20.sol",
        "id": 15602,
        "nodeType": "ImportDirective",
        "scope": 16025,
        "sourceUnit": 16157,
        "src": "26:41:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/zeppelin/math/SafeMath.sol",
        "file": "zeppelin/math/SafeMath.sol",
        "id": 15603,
        "nodeType": "ImportDirective",
        "scope": 16025,
        "sourceUnit": 15479,
        "src": "68:36:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15605,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16156,
              "src": "691:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$16156",
                "typeString": "contract IERC20"
              }
            },
            "id": 15606,
            "nodeType": "InheritanceSpecifier",
            "src": "691:6:22"
          }
        ],
        "contractDependencies": [
          16156
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 15604,
          "nodeType": "StructuredDocumentation",
          "src": "107:565:22",
          "text": "@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\nhttps://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\nOriginally based on code by FirstBlood:\nhttps://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\nall accounts just by listening to said events. Note that this isn't required by the specification, and other\ncompliant implementations may not do it."
        },
        "fullyImplemented": true,
        "id": 16024,
        "linearizedBaseContracts": [
          16024,
          16156
        ],
        "name": "ERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 15609,
            "libraryName": {
              "contractScope": null,
              "id": 15607,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15478,
              "src": "710:8:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$15478",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "704:27:22",
            "typeName": {
              "id": 15608,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "723:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 15613,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 16024,
            "src": "737:46:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 15612,
              "keyType": {
                "id": 15610,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "746:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "737:28:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 15611,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "757:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15619,
            "mutability": "mutable",
            "name": "_allowed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 16024,
            "src": "790:66:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 15618,
              "keyType": {
                "id": 15614,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "799:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "790:49:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 15617,
                "keyType": {
                  "id": 15615,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "819:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "810:28:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 15616,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "830:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15621,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 16024,
            "src": "863:28:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15620,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "863:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              16123
            ],
            "body": {
              "id": 15630,
              "nodeType": "Block",
              "src": "1024:36:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15628,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15621,
                    "src": "1041:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15627,
                  "id": 15629,
                  "nodeType": "Return",
                  "src": "1034:19:22"
                }
              ]
            },
            "documentation": {
              "id": 15622,
              "nodeType": "StructuredDocumentation",
              "src": "898:59:22",
              "text": "@dev Total number of tokens in existence"
            },
            "functionSelector": "18160ddd",
            "id": 15631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15624,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "997:8:22"
            },
            "parameters": {
              "id": 15623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "982:2:22"
            },
            "returnParameters": {
              "id": 15627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15626,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15631,
                  "src": "1015:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1014:9:22"
            },
            "scope": 16024,
            "src": "962:98:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16130
            ],
            "body": {
              "id": 15644,
              "nodeType": "Block",
              "src": "1346:40:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 15640,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15613,
                      "src": "1363:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 15642,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 15641,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15634,
                      "src": "1373:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1363:16:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15639,
                  "id": 15643,
                  "nodeType": "Return",
                  "src": "1356:23:22"
                }
              ]
            },
            "documentation": {
              "id": 15632,
              "nodeType": "StructuredDocumentation",
              "src": "1066:202:22",
              "text": "@dev Gets the balance of the specified address.\n@param owner The address to query the balance of.\n@return An uint256 representing the amount owned by the passed address."
            },
            "functionSelector": "70a08231",
            "id": 15645,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15636,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1319:8:22"
            },
            "parameters": {
              "id": 15635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15634,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15645,
                  "src": "1292:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1292:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1291:15:22"
            },
            "returnParameters": {
              "id": 15639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15638,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15645,
                  "src": "1337:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15637,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1336:9:22"
            },
            "scope": 16024,
            "src": "1273:113:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16139
            ],
            "body": {
              "id": 15662,
              "nodeType": "Block",
              "src": "1807:48:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15656,
                        "name": "_allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15619,
                        "src": "1824:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 15658,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 15657,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15648,
                        "src": "1833:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1824:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 15660,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 15659,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15650,
                      "src": "1840:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1824:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15655,
                  "id": 15661,
                  "nodeType": "Return",
                  "src": "1817:31:22"
                }
              ]
            },
            "documentation": {
              "id": 15646,
              "nodeType": "StructuredDocumentation",
              "src": "1392:320:22",
              "text": "@dev Function to check the amount of tokens that an owner allowed to a spender.\n@param owner address The address which owns the funds.\n@param spender address The address which will spend the funds.\n@return A uint256 specifying the amount of tokens still available for the spender."
            },
            "functionSelector": "dd62ed3e",
            "id": 15663,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15652,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1780:8:22"
            },
            "parameters": {
              "id": 15651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15648,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15663,
                  "src": "1736:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15650,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15663,
                  "src": "1751:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1751:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1735:32:22"
            },
            "returnParameters": {
              "id": 15655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15654,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15663,
                  "src": "1798:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1798:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1797:9:22"
            },
            "scope": 16024,
            "src": "1717:138:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16098
            ],
            "body": {
              "id": 15683,
              "nodeType": "Block",
              "src": "2099:70:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15675,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2119:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2119:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15677,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15666,
                        "src": "2131:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15678,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15668,
                        "src": "2135:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15674,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15861,
                      "src": "2109:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 15679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:32:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15680,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:32:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 15681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2158:4:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15673,
                  "id": 15682,
                  "nodeType": "Return",
                  "src": "2151:11:22"
                }
              ]
            },
            "documentation": {
              "id": 15664,
              "nodeType": "StructuredDocumentation",
              "src": "1861:157:22",
              "text": "@dev Transfer token for a specified address\n@param to The address to transfer to.\n@param value The amount to be transferred."
            },
            "functionSelector": "a9059cbb",
            "id": 15684,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15670,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2075:8:22"
            },
            "parameters": {
              "id": 15669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15666,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15684,
                  "src": "2041:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2041:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15668,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15684,
                  "src": "2053:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2040:27:22"
            },
            "returnParameters": {
              "id": 15673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15672,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15684,
                  "src": "2093:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15671,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2093:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2092:6:22"
            },
            "scope": 16024,
            "src": "2023:146:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16107
            ],
            "body": {
              "id": 15719,
              "nodeType": "Block",
              "src": "2885:447:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 15707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 15696,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15689,
                            "src": "3208:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 15697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3217:1:22",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3208:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 15699,
                                "name": "_allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15619,
                                "src": "3222:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 15702,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 15700,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3231:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 15701,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3231:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3222:20:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 15704,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 15703,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15687,
                              "src": "3243:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3222:29:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 15705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3255:1:22",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3222:34:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3208:48:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15695,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3200:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3200:57:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15709,
                  "nodeType": "ExpressionStatement",
                  "src": "3200:57:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15711,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3277:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3277:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15713,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15687,
                        "src": "3289:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15714,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15689,
                        "src": "3298:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15710,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15994,
                      "src": "3268:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 15715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3268:36:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15716,
                  "nodeType": "ExpressionStatement",
                  "src": "3268:36:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 15717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3321:4:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15694,
                  "id": 15718,
                  "nodeType": "Return",
                  "src": "3314:11:22"
                }
              ]
            },
            "documentation": {
              "id": 15685,
              "nodeType": "StructuredDocumentation",
              "src": "2175:625:22",
              "text": "@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\nBeware that changing an allowance with this method brings the risk that someone may use both the old\nand the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\nrace condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n@param spender The address which will spend the funds.\n@param value The amount of tokens to be spent."
            },
            "functionSelector": "095ea7b3",
            "id": 15720,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15691,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2861:8:22"
            },
            "parameters": {
              "id": 15690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15687,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15720,
                  "src": "2822:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2822:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15689,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15720,
                  "src": "2839:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2839:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2821:32:22"
            },
            "returnParameters": {
              "id": 15694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15693,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15720,
                  "src": "2879:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15692,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2879:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2878:6:22"
            },
            "scope": 16024,
            "src": "2805:527:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16118
            ],
            "body": {
              "id": 15756,
              "nodeType": "Block",
              "src": "3889:139:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15734,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15723,
                        "src": "3909:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15735,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15725,
                        "src": "3915:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15736,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15727,
                        "src": "3919:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15733,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15861,
                      "src": "3899:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 15737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3899:26:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15738,
                  "nodeType": "ExpressionStatement",
                  "src": "3899:26:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15740,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15723,
                        "src": "3944:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15741,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3950:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3950:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15750,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15727,
                            "src": "3993:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 15743,
                                "name": "_allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15619,
                                "src": "3962:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 15745,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 15744,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15723,
                                "src": "3971:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3962:14:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 15748,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 15746,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3977:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 15747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3977:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3962:26:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 15749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15431,
                          "src": "3962:30:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 15751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3962:37:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15739,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15994,
                      "src": "3935:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 15752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3935:65:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15753,
                  "nodeType": "ExpressionStatement",
                  "src": "3935:65:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 15754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4017:4:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15732,
                  "id": 15755,
                  "nodeType": "Return",
                  "src": "4010:11:22"
                }
              ]
            },
            "documentation": {
              "id": 15721,
              "nodeType": "StructuredDocumentation",
              "src": "3338:452:22",
              "text": "@dev Transfer tokens from one address to another.\nNote that while this function emits an Approval event, this is not required as per the specification,\nand other compliant implementations may not emit the event.\n@param from address The address which you want to send tokens from\n@param to address The address which you want to transfer to\n@param value uint256 the amount of tokens to be transferred"
            },
            "functionSelector": "23b872dd",
            "id": 15757,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15729,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3865:8:22"
            },
            "parameters": {
              "id": 15728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15723,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15757,
                  "src": "3817:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15725,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15757,
                  "src": "3831:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3831:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15727,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15757,
                  "src": "3843:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15726,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3843:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3816:41:22"
            },
            "returnParameters": {
              "id": 15732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15731,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15757,
                  "src": "3883:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15730,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3883:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3882:6:22"
            },
            "scope": 16024,
            "src": "3795:233:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15784,
              "nodeType": "Block",
              "src": "4617:114:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15768,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4636:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4636:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15770,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15760,
                        "src": "4648:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15778,
                            "name": "addedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15762,
                            "src": "4691:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 15771,
                                "name": "_allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15619,
                                "src": "4657:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 15774,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 15772,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4666:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 15773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4666:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4657:20:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 15776,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 15775,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15760,
                              "src": "4678:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4657:29:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 15777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15456,
                          "src": "4657:33:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 15779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4657:45:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15767,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15994,
                      "src": "4627:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 15780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4627:76:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15781,
                  "nodeType": "ExpressionStatement",
                  "src": "4627:76:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 15782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4720:4:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15766,
                  "id": 15783,
                  "nodeType": "Return",
                  "src": "4713:11:22"
                }
              ]
            },
            "documentation": {
              "id": 15758,
              "nodeType": "StructuredDocumentation",
              "src": "4034:492:22",
              "text": "@dev Increase the amount of tokens that an owner allowed to a spender.\napprove should be called when allowed_[_spender] == 0. To increment\nallowed value is better to use this function to avoid 2 calls (and wait until\nthe first transaction is mined)\nFrom MonolithDAO Token.sol\nEmits an Approval event.\n@param spender The address which will spend the funds.\n@param addedValue The amount of tokens to increase the allowance by."
            },
            "functionSelector": "39509351",
            "id": 15785,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15760,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15785,
                  "src": "4558:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4558:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15762,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15785,
                  "src": "4575:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4575:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4557:37:22"
            },
            "returnParameters": {
              "id": 15766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15765,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15785,
                  "src": "4611:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15764,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4611:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4610:6:22"
            },
            "scope": 16024,
            "src": "4531:200:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15812,
              "nodeType": "Block",
              "src": "5330:119:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15796,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5349:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5349:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15798,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15788,
                        "src": "5361:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15806,
                            "name": "subtractedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15790,
                            "src": "5404:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 15799,
                                "name": "_allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15619,
                                "src": "5370:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 15802,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 15800,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5379:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 15801,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5379:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5370:20:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 15804,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 15803,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15788,
                              "src": "5391:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5370:29:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 15805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15431,
                          "src": "5370:33:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 15807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5370:50:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15795,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15994,
                      "src": "5340:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 15808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5340:81:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15809,
                  "nodeType": "ExpressionStatement",
                  "src": "5340:81:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 15810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5438:4:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15794,
                  "id": 15811,
                  "nodeType": "Return",
                  "src": "5431:11:22"
                }
              ]
            },
            "documentation": {
              "id": 15786,
              "nodeType": "StructuredDocumentation",
              "src": "4737:497:22",
              "text": "@dev Decrease the amount of tokens that an owner allowed to a spender.\napprove should be called when allowed_[_spender] == 0. To decrement\nallowed value is better to use this function to avoid 2 calls (and wait until\nthe first transaction is mined)\nFrom MonolithDAO Token.sol\nEmits an Approval event.\n@param spender The address which will spend the funds.\n@param subtractedValue The amount of tokens to decrease the allowance by."
            },
            "functionSelector": "a457c2d7",
            "id": 15813,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15788,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15813,
                  "src": "5266:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5266:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15790,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15813,
                  "src": "5283:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5283:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5265:42:22"
            },
            "returnParameters": {
              "id": 15794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15793,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15813,
                  "src": "5324:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15792,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5324:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5323:6:22"
            },
            "scope": 16024,
            "src": "5239:210:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15860,
              "nodeType": "Block",
              "src": "5737:187:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15824,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15818,
                          "src": "5755:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 15827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5769:1:22",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 15826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5761:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 15825,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5761:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 15828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5761:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5755:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15823,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5747:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5747:25:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15831,
                  "nodeType": "ExpressionStatement",
                  "src": "5747:25:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15832,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15613,
                        "src": "5783:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 15834,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 15833,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15816,
                        "src": "5793:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5783:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 15839,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15820,
                          "src": "5821:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 15835,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15613,
                            "src": "5801:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 15837,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 15836,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15816,
                            "src": "5811:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5801:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15431,
                        "src": "5801:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5801:26:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5783:44:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15842,
                  "nodeType": "ExpressionStatement",
                  "src": "5783:44:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15843,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15613,
                        "src": "5837:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 15845,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 15844,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15818,
                        "src": "5847:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5837:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 15850,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15820,
                          "src": "5871:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 15846,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15613,
                            "src": "5853:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 15848,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 15847,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15818,
                            "src": "5863:2:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5853:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15456,
                        "src": "5853:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5853:24:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5837:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15853,
                  "nodeType": "ExpressionStatement",
                  "src": "5837:40:22"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15855,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15816,
                        "src": "5901:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15856,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15818,
                        "src": "5907:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15857,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15820,
                        "src": "5911:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15854,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16147,
                      "src": "5892:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 15858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5892:25:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15859,
                  "nodeType": "EmitStatement",
                  "src": "5887:30:22"
                }
              ]
            },
            "documentation": {
              "id": 15814,
              "nodeType": "StructuredDocumentation",
              "src": "5455:208:22",
              "text": "@dev Transfer token for a specified addresses\n@param from The address to transfer from.\n@param to The address to transfer to.\n@param value The amount to be transferred."
            },
            "id": 15861,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15816,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15861,
                  "src": "5687:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5687:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15818,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15861,
                  "src": "5701:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5701:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15820,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15861,
                  "src": "5713:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5713:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5686:41:22"
            },
            "returnParameters": {
              "id": 15822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5737:0:22"
            },
            "scope": 16024,
            "src": "5668:256:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15905,
              "nodeType": "Block",
              "src": "6323:207:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15870,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15864,
                          "src": "6341:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 15873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6360:1:22",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 15872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6352:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 15871,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6352:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 15874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6352:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6341:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6333:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6333:30:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15877,
                  "nodeType": "ExpressionStatement",
                  "src": "6333:30:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 15878,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15621,
                      "src": "6374:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 15881,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15866,
                          "src": "6406:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 15879,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15621,
                          "src": "6389:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15456,
                        "src": "6389:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6389:23:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6374:38:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15884,
                  "nodeType": "ExpressionStatement",
                  "src": "6374:38:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15885,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15613,
                        "src": "6422:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 15887,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 15886,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15864,
                        "src": "6432:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6422:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 15892,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15866,
                          "src": "6466:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 15888,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15613,
                            "src": "6443:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 15890,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 15889,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15864,
                            "src": "6453:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6443:18:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15456,
                        "src": "6443:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6443:29:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6422:50:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15895,
                  "nodeType": "ExpressionStatement",
                  "src": "6422:50:22"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 15899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6504:1:22",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 15898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6496:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15897,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6496:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 15900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6496:10:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15901,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15864,
                        "src": "6508:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15902,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15866,
                        "src": "6517:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15896,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16147,
                      "src": "6487:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 15903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6487:36:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15904,
                  "nodeType": "EmitStatement",
                  "src": "6482:41:22"
                }
              ]
            },
            "documentation": {
              "id": 15862,
              "nodeType": "StructuredDocumentation",
              "src": "5930:332:22",
              "text": "@dev Internal function that mints an amount of the token and assigns it to\nan account. This encapsulates the modification of balances such that the\nproper events are emitted.\n@param account The account that will receive the created tokens.\n@param value The amount that will be created."
            },
            "id": 15906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15864,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15906,
                  "src": "6282:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6282:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15866,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15906,
                  "src": "6299:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6299:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6281:32:22"
            },
            "returnParameters": {
              "id": 15868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6323:0:22"
            },
            "scope": 16024,
            "src": "6267:263:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15950,
              "nodeType": "Block",
              "src": "6812:207:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15915,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15909,
                          "src": "6830:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 15918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6849:1:22",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 15917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6841:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 15916,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6841:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 15919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6841:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6830:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15914,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6822:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6822:30:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15922,
                  "nodeType": "ExpressionStatement",
                  "src": "6822:30:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 15923,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15621,
                      "src": "6863:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 15926,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15911,
                          "src": "6895:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 15924,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15621,
                          "src": "6878:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15431,
                        "src": "6878:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6878:23:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6863:38:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15929,
                  "nodeType": "ExpressionStatement",
                  "src": "6863:38:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15930,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15613,
                        "src": "6911:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 15932,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 15931,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15909,
                        "src": "6921:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6911:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 15937,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15911,
                          "src": "6955:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 15933,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15613,
                            "src": "6932:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 15935,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 15934,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15909,
                            "src": "6942:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6932:18:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15431,
                        "src": "6932:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6932:29:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6911:50:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15940,
                  "nodeType": "ExpressionStatement",
                  "src": "6911:50:22"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15942,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15909,
                        "src": "6985:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 15945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7002:1:22",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 15944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6994:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15943,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6994:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 15946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6994:10:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15947,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15911,
                        "src": "7006:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15941,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16147,
                      "src": "6976:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 15948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6976:36:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15949,
                  "nodeType": "EmitStatement",
                  "src": "6971:41:22"
                }
              ]
            },
            "documentation": {
              "id": 15907,
              "nodeType": "StructuredDocumentation",
              "src": "6536:215:22",
              "text": "@dev Internal function that burns an amount of the token of a given\naccount.\n@param account The account whose tokens will be burnt.\n@param value The amount that will be burnt."
            },
            "id": 15951,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15909,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15951,
                  "src": "6771:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15908,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6771:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15911,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15951,
                  "src": "6788:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6788:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6770:32:22"
            },
            "returnParameters": {
              "id": 15913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6812:0:22"
            },
            "scope": 16024,
            "src": "6756:263:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15993,
              "nodeType": "Block",
              "src": "7358:174:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15962,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15956,
                          "src": "7376:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 15965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7395:1:22",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 15964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7387:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 15963,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7387:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 15966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7387:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7376:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15961,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7368:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7368:30:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15969,
                  "nodeType": "ExpressionStatement",
                  "src": "7368:30:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15971,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15954,
                          "src": "7416:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 15974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7433:1:22",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 15973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7425:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 15972,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7425:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 15975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7425:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7416:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15970,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7408:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7408:28:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15978,
                  "nodeType": "ExpressionStatement",
                  "src": "7408:28:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 15979,
                          "name": "_allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15619,
                          "src": "7447:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 15982,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 15980,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15954,
                          "src": "7456:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7447:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 15983,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 15981,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15956,
                        "src": "7463:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7447:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 15984,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15958,
                      "src": "7474:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7447:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15986,
                  "nodeType": "ExpressionStatement",
                  "src": "7447:32:22"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15988,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15954,
                        "src": "7503:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15989,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15956,
                        "src": "7510:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15990,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15958,
                        "src": "7519:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15987,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16155,
                      "src": "7494:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 15991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7494:31:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15992,
                  "nodeType": "EmitStatement",
                  "src": "7489:36:22"
                }
              ]
            },
            "documentation": {
              "id": 15952,
              "nodeType": "StructuredDocumentation",
              "src": "7025:254:22",
              "text": "@dev Approve an address to spend another addresses' tokens.\n@param owner The address that owns the tokens.\n@param spender The address that will spend the tokens.\n@param value The number of tokens that can be spent."
            },
            "id": 15994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15954,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15994,
                  "src": "7302:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7302:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15956,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15994,
                  "src": "7317:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7317:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15958,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15994,
                  "src": "7334:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7334:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7301:47:22"
            },
            "returnParameters": {
              "id": 15960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7358:0:22"
            },
            "scope": 16024,
            "src": "7284:248:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16022,
              "nodeType": "Block",
              "src": "7981:119:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16003,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15997,
                        "src": "7997:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16004,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15999,
                        "src": "8006:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16002,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15951,
                      "src": "7991:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 16005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7991:21:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16006,
                  "nodeType": "ExpressionStatement",
                  "src": "7991:21:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16008,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15997,
                        "src": "8031:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 16009,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8040:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8040:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 16018,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15999,
                            "src": "8086:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 16011,
                                "name": "_allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15619,
                                "src": "8052:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 16013,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 16012,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15997,
                                "src": "8061:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8052:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 16016,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 16014,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8070:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 16015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8070:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8052:29:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 16017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15431,
                          "src": "8052:33:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 16019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8052:40:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16007,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15994,
                      "src": "8022:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 16020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8022:71:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16021,
                  "nodeType": "ExpressionStatement",
                  "src": "8022:71:22"
                }
              ]
            },
            "documentation": {
              "id": 15995,
              "nodeType": "StructuredDocumentation",
              "src": "7538:378:22",
              "text": "@dev Internal function that burns an amount of the token of a given\naccount, deducting from the sender's allowance for said account. Uses the\ninternal burn function.\nEmits an Approval event (reflecting the reduced allowance).\n@param account The account whose tokens will be burnt.\n@param value The amount that will be burnt."
            },
            "id": 16023,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnFrom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15997,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16023,
                  "src": "7940:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7940:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15999,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16023,
                  "src": "7957:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7957:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7939:32:22"
            },
            "returnParameters": {
              "id": 16001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7981:0:22"
            },
            "scope": 16024,
            "src": "7921:179:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 16025,
        "src": "673:7430:22"
      }
    ],
    "src": "0:8104:22"
  },
  "bytecode": "608060405234801561001057600080fd5b50610521806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a0823114610149578063a457c2d71461016f578063a9059cbb1461019b578063dd62ed3e146101c757610088565b8063095ea7b31461008d57806318160ddd146100cd57806323b872dd146100e7578063395093511461011d575b600080fd5b6100b9600480360360408110156100a357600080fd5b506001600160a01b0381351690602001356101f5565b604080519115158252519081900360200190f35b6100d5610242565b60408051918252519081900360200190f35b6100b9600480360360608110156100fd57600080fd5b506001600160a01b03813581169160208101359091169060400135610248565b6100b96004803603604081101561013357600080fd5b506001600160a01b03813516906020013561029f565b6100d56004803603602081101561015f57600080fd5b50356001600160a01b03166102db565b6100b96004803603604081101561018557600080fd5b506001600160a01b0381351690602001356102f6565b6100b9600480360360408110156101b157600080fd5b506001600160a01b038135169060200135610332565b6100d5600480360360408110156101dd57600080fd5b506001600160a01b038135811691602001351661033f565b600081158061022557503360009081526001602090815260408083206001600160a01b0387168452909152902054155b61022e57600080fd5b61023933848461036a565b50600192915050565b60025490565b60006102558484846103f2565b6001600160a01b038416600090815260016020908152604080832033808552925290912054610295918691610290908663ffffffff6104bd16565b61036a565b5060019392505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610239918590610290908663ffffffff6104d216565b6001600160a01b031660009081526020819052604090205490565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610239918590610290908663ffffffff6104bd16565b60006102393384846103f2565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03821661037d57600080fd5b6001600160a01b03831661039057600080fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03821661040557600080fd5b6001600160a01b03831660009081526020819052604090205461042e908263ffffffff6104bd16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610463908263ffffffff6104d216565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156104cc57600080fd5b50900390565b6000828201838110156104e457600080fd5b939250505056fea2646970667358221220799407f264abc6d23c0fdc9cf7c1b50ccc7f52157441ccc695835a665e43635464736f6c63430006070033",
  "bytecodeSha1": "eb576b53eb0f3b7c6cd0ecc50437beb88603b6c9",
  "compiler": {
    "evm_version": "berlin",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.7"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "20": {
        "SafeMath.add": {
          "29": [
            1552,
            1558,
            true
          ]
        },
        "SafeMath.sub": {
          "28": [
            1297,
            1303,
            true
          ]
        }
      },
      "22": {
        "ERC20._approve": {
          "25": [
            7376,
            7397,
            true
          ],
          "26": [
            7416,
            7435,
            true
          ]
        },
        "ERC20._transfer": {
          "27": [
            5755,
            5771,
            true
          ]
        },
        "ERC20.approve": {
          "23": [
            3208,
            3218,
            true
          ],
          "24": [
            3222,
            3256,
            true
          ]
        }
      },
      "24": {}
    },
    "statements": {
      "20": {
        "SafeMath.add": {
          "21": [
            1544,
            1559
          ],
          "22": [
            1570,
            1578
          ]
        },
        "SafeMath.sub": {
          "20": [
            1289,
            1304
          ]
        }
      },
      "22": {
        "ERC20._approve": {
          "12": [
            7368,
            7398
          ],
          "13": [
            7408,
            7436
          ],
          "14": [
            7447,
            7479
          ],
          "15": [
            7489,
            7525
          ]
        },
        "ERC20._transfer": {
          "16": [
            5747,
            5772
          ],
          "17": [
            5783,
            5827
          ],
          "18": [
            5837,
            5877
          ],
          "19": [
            5887,
            5917
          ]
        },
        "ERC20.allowance": {
          "11": [
            1817,
            1848
          ]
        },
        "ERC20.approve": {
          "0": [
            3200,
            3257
          ],
          "1": [
            3268,
            3304
          ],
          "2": [
            3314,
            3325
          ]
        },
        "ERC20.balanceOf": {
          "8": [
            1356,
            1379
          ]
        },
        "ERC20.decreaseAllowance": {
          "9": [
            5340,
            5421
          ]
        },
        "ERC20.increaseAllowance": {
          "7": [
            4627,
            4703
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            1034,
            1053
          ]
        },
        "ERC20.transfer": {
          "10": [
            2109,
            2141
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            3899,
            3925
          ],
          "5": [
            3935,
            4000
          ],
          "6": [
            4010,
            4021
          ]
        }
      },
      "24": {}
    }
  },
  "dependencies": [
    "IERC20",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a0823114610149578063a457c2d71461016f578063a9059cbb1461019b578063dd62ed3e146101c757610088565b8063095ea7b31461008d57806318160ddd146100cd57806323b872dd146100e7578063395093511461011d575b600080fd5b6100b9600480360360408110156100a357600080fd5b506001600160a01b0381351690602001356101f5565b604080519115158252519081900360200190f35b6100d5610242565b60408051918252519081900360200190f35b6100b9600480360360608110156100fd57600080fd5b506001600160a01b03813581169160208101359091169060400135610248565b6100b96004803603604081101561013357600080fd5b506001600160a01b03813516906020013561029f565b6100d56004803603602081101561015f57600080fd5b50356001600160a01b03166102db565b6100b96004803603604081101561018557600080fd5b506001600160a01b0381351690602001356102f6565b6100b9600480360360408110156101b157600080fd5b506001600160a01b038135169060200135610332565b6100d5600480360360408110156101dd57600080fd5b506001600160a01b038135811691602001351661033f565b600081158061022557503360009081526001602090815260408083206001600160a01b0387168452909152902054155b61022e57600080fd5b61023933848461036a565b50600192915050565b60025490565b60006102558484846103f2565b6001600160a01b038416600090815260016020908152604080832033808552925290912054610295918691610290908663ffffffff6104bd16565b61036a565b5060019392505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610239918590610290908663ffffffff6104d216565b6001600160a01b031660009081526020819052604090205490565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610239918590610290908663ffffffff6104bd16565b60006102393384846103f2565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03821661037d57600080fd5b6001600160a01b03831661039057600080fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03821661040557600080fd5b6001600160a01b03831660009081526020819052604090205461042e908263ffffffff6104bd16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610463908263ffffffff6104d216565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156104cc57600080fd5b50900390565b6000828201838110156104e457600080fd5b939250505056fea2646970667358221220799407f264abc6d23c0fdc9cf7c1b50ccc7f52157441ccc695835a665e43635464736f6c63430006070033",
  "deployedSourceMap": "673:7430:22:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;673:7430:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2805:527:22;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;2805:527:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;962:98;;;:::i;:::-;;;;;;;;;;;;;;;;3795:233;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3795:233:22;;;;;;;;;;;;;;;;;:::i;4531:200::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4531:200:22;;;;;;;;:::i;1273:113::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1273:113:22;-1:-1:-1;;;;;1273:113:22;;:::i;5239:210::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5239:210:22;;;;;;;;:::i;2023:146::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;2023:146:22;;;;;;;;:::i;1717:138::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;1717:138:22;;;;;;;;;;:::i;2805:527::-;2879:4;3208:10;;;:48;;-1:-1:-1;3231:10:22;3222:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3222:29:22;;;;;;;;;;:34;3208:48;3200:57;;12:1:-1;9;2:12;3200:57:22;3268:36;3277:10;3289:7;3298:5;3268:8;:36::i;:::-;-1:-1:-1;3321:4:22;2805:527;;;;:::o;962:98::-;1041:12;;962:98;:::o;3795:233::-;3883:4;3899:26;3909:4;3915:2;3919:5;3899:9;:26::i;:::-;-1:-1:-1;;;;;3962:14:22;;;;;;:8;:14;;;;;;;;3950:10;3962:26;;;;;;;;;3935:65;;3944:4;;3962:37;;3993:5;3962:37;:30;:37;:::i;:::-;3935:8;:65::i;:::-;-1:-1:-1;4017:4:22;3795:233;;;;;:::o;4531:200::-;4636:10;4611:4;4657:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4657:29:22;;;;;;;;;;4611:4;;4627:76;;4648:7;;4657:45;;4691:10;4657:45;:33;:45;:::i;1273:113::-;-1:-1:-1;;;;;1363:16:22;1337:7;1363:16;;;;;;;;;;;;1273:113::o;5239:210::-;5349:10;5324:4;5370:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5370:29:22;;;;;;;;;;5324:4;;5340:81;;5361:7;;5370:50;;5404:15;5370:50;:33;:50;:::i;2023:146::-;2093:4;2109:32;2119:10;2131:2;2135:5;2109:9;:32::i;1717:138::-;-1:-1:-1;;;;;1824:15:22;;;1798:7;1824:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1717:138::o;7284:248::-;-1:-1:-1;;;;;7376:21:22;;7368:30;;12:1:-1;9;2:12;7368:30:22;-1:-1:-1;;;;;7416:19:22;;7408:28;;12:1:-1;9;2:12;7408:28:22;-1:-1:-1;;;;;7447:15:22;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7494:31;;;;;;;;;;;;;;;;;7284:248;;;:::o;5668:256::-;-1:-1:-1;;;;;5755:16:22;;5747:25;;12:1:-1;9;2:12;5747:25:22;-1:-1:-1;;;;;5801:15:22;;:9;:15;;;;;;;;;;;:26;;5821:5;5801:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5783:15:22;;;:9;:15;;;;;;;;;;;:44;;;;5853:13;;;;;;;:24;;5871:5;5853:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5837:13:22;;;:9;:13;;;;;;;;;;;;:40;;;;5892:25;;;;;;;5837:13;;5892:25;;;;;;;;;;;;;5668:256;;;:::o;1212:145:20:-;1270:7;1302:1;1297;:6;;1289:15;;12:1:-1;9;2:12;1289:15:20;-1:-1:-1;1326:5:20;;;1212:145::o;1440:::-;1498:7;1529:5;;;1552:6;;;;1544:15;;12:1:-1;9;2:12;1544:15:20;1577:1;1440:145;-1:-1:-1;;;1440:145:20:o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the basic standard token. https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md Originally based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for all accounts just by listening to said events. Note that this isn't required by the specification, and other compliant implementations may not do it.",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "returns": {
          "_0": "A uint256 specifying the amount of tokens still available for the spender."
        }
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "returns": {
          "_0": "An uint256 representing the amount owned by the passed address."
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "Standard ERC20 token"
  },
  "offset": [
    673,
    8103
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1C7 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x248 JUMP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x29F JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2DB JUMP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x332 JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x33F JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x225 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x239 CALLER DUP5 DUP5 PUSH2 0x36A JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x255 DUP5 DUP5 DUP5 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x295 SWAP2 DUP7 SWAP2 PUSH2 0x290 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x4BD AND JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x239 SWAP2 DUP6 SWAP1 PUSH2 0x290 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x4D2 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x239 SWAP2 DUP6 SWAP1 PUSH2 0x290 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x4BD AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239 CALLER DUP5 DUP5 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x42E SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x4BD AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x463 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x4D2 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x9407F264ABC6D23C0FDC9CF7C1B50CCC7F52157441CCC695835A PUSH7 0x5E43635464736F PUSH13 0x63430006070033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        673,
        8103
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "REVERT",
      "path": "22"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        673,
        8103
      ],
      "op": "POP",
      "path": "22"
    },
    "18": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "21": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "LT",
      "path": "22"
    },
    "22": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x88"
    },
    "25": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "26": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "29": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "SHR",
      "path": "22"
    },
    "32": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "DUP1",
      "path": "22"
    },
    "33": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "GT",
      "path": "22"
    },
    "39": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "43": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "DUP1",
      "path": "22"
    },
    "44": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "49": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "EQ",
      "path": "22"
    },
    "50": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x149"
    },
    "53": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "54": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "DUP1",
      "path": "22"
    },
    "55": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA457C2D7"
    },
    "60": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "EQ",
      "path": "22"
    },
    "61": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16F"
    },
    "64": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "65": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "DUP1",
      "path": "22"
    },
    "66": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA9059CBB"
    },
    "71": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "EQ",
      "path": "22"
    },
    "72": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x19B"
    },
    "75": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "76": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "DUP1",
      "path": "22"
    },
    "77": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xDD62ED3E"
    },
    "82": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "EQ",
      "path": "22"
    },
    "83": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C7"
    },
    "86": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "87": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x88"
    },
    "90": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "JUMP",
      "path": "22"
    },
    "91": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "92": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "DUP1",
      "path": "22"
    },
    "93": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x95EA7B3"
    },
    "98": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "EQ",
      "path": "22"
    },
    "99": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8D"
    },
    "102": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "103": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "DUP1",
      "path": "22"
    },
    "104": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x18160DDD"
    },
    "109": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "EQ",
      "path": "22"
    },
    "110": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCD"
    },
    "113": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "114": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "DUP1",
      "path": "22"
    },
    "115": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x23B872DD"
    },
    "120": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "EQ",
      "path": "22"
    },
    "121": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE7"
    },
    "124": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "125": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "DUP1",
      "path": "22"
    },
    "126": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x39509351"
    },
    "131": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "EQ",
      "path": "22"
    },
    "132": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11D"
    },
    "135": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "136": {
      "fn": null,
      "offset": [
        673,
        8103
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "139": {
      "op": "DUP1"
    },
    "140": {
      "first_revert": true,
      "op": "REVERT"
    },
    "141": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "142": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB9"
    },
    "145": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "147": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "DUP1",
      "path": "22"
    },
    "148": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "149": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "SUB",
      "path": "22"
    },
    "150": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "152": {
      "op": "DUP2"
    },
    "153": {
      "op": "LT"
    },
    "154": {
      "op": "ISZERO"
    },
    "155": {
      "op": "PUSH2",
      "value": "0xA3"
    },
    "158": {
      "op": "JUMPI"
    },
    "159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "161": {
      "op": "DUP1"
    },
    "162": {
      "op": "REVERT"
    },
    "163": {
      "op": "JUMPDEST"
    },
    "164": {
      "op": "POP"
    },
    "165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "171": {
      "op": "SHL"
    },
    "172": {
      "op": "SUB"
    },
    "173": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "DUP2",
      "path": "22"
    },
    "174": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "175": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "AND",
      "path": "22"
    },
    "176": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "177": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "179": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "ADD",
      "path": "22"
    },
    "180": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "181": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1F5"
    },
    "184": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2805,
        3332
      ],
      "op": "JUMP",
      "path": "22"
    },
    "185": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "186": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "188": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "DUP1",
      "path": "22"
    },
    "189": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "190": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "191": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "192": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "193": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "DUP3",
      "path": "22"
    },
    "194": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "195": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "196": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "197": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "DUP2",
      "path": "22"
    },
    "198": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "199": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "SUB",
      "path": "22"
    },
    "200": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "202": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "ADD",
      "path": "22"
    },
    "203": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "204": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "RETURN",
      "path": "22"
    },
    "205": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "206": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD5"
    },
    "209": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x242"
    },
    "212": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        962,
        1060
      ],
      "op": "JUMP",
      "path": "22"
    },
    "213": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "214": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "216": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "DUP1",
      "path": "22"
    },
    "217": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "218": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "219": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "DUP3",
      "path": "22"
    },
    "220": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "221": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "222": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "223": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "DUP2",
      "path": "22"
    },
    "224": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "225": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "SUB",
      "path": "22"
    },
    "226": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "228": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "ADD",
      "path": "22"
    },
    "229": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "230": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "RETURN",
      "path": "22"
    },
    "231": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "232": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB9"
    },
    "235": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "237": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "DUP1",
      "path": "22"
    },
    "238": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "239": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "SUB",
      "path": "22"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "242": {
      "op": "DUP2"
    },
    "243": {
      "op": "LT"
    },
    "244": {
      "op": "ISZERO"
    },
    "245": {
      "op": "PUSH2",
      "value": "0xFD"
    },
    "248": {
      "op": "JUMPI"
    },
    "249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "251": {
      "op": "DUP1"
    },
    "252": {
      "op": "REVERT"
    },
    "253": {
      "op": "JUMPDEST"
    },
    "254": {
      "op": "POP"
    },
    "255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "261": {
      "op": "SHL"
    },
    "262": {
      "op": "SUB"
    },
    "263": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "DUP2",
      "path": "22"
    },
    "264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "265": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "DUP2",
      "path": "22"
    },
    "266": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "AND",
      "path": "22"
    },
    "267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "268": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "270": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "DUP2",
      "path": "22"
    },
    "271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "ADD",
      "path": "22"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "273": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "274": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "AND",
      "path": "22"
    },
    "276": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "277": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "ADD",
      "path": "22"
    },
    "280": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "281": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x248"
    },
    "284": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3795,
        4028
      ],
      "op": "JUMP",
      "path": "22"
    },
    "285": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4531,
        4731
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "286": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4531,
        4731
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB9"
    },
    "289": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4531,
        4731
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4531,
        4731
      ],
      "op": "DUP1",
      "path": "22"
    },
    "292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4531,
        4731
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "293": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4531,
        4731
      ],
      "op": "SUB",
      "path": "22"
    },
    "294": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "296": {
      "op": "DUP2"
    },
    "297": {
      "op": "LT"
    },
    "298": {
      "op": "ISZERO"
    },
    "299": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "302": {
      "op": "JUMPI"
    },
    "303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "305": {
      "op": "DUP1"
    },
    "306": {
      "op": "REVERT"
    },
    "307": {
      "op": "JUMPDEST"
    },
    "308": {
      "op": "POP"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "315": {
      "op": "SHL"
    },
    "316": {
      "op": "SUB"
    },
    "317": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4531,
        4731
      ],
      "op": "DUP2",
      "path": "22"
    },
    "318": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4531,
        4731
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "319": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4531,
        4731
      ],
      "op": "AND",
      "path": "22"
    },
    "320": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4531,
        4731
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "321": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4531,
        4731
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "323": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4531,
        4731
      ],
      "op": "ADD",
      "path": "22"
    },
    "324": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4531,
        4731
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "325": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4531,
        4731
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x29F"
    },
    "328": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        4531,
        4731
      ],
      "op": "JUMP",
      "path": "22"
    },
    "329": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1273,
        1386
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "330": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1273,
        1386
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD5"
    },
    "333": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1273,
        1386
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "335": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1273,
        1386
      ],
      "op": "DUP1",
      "path": "22"
    },
    "336": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1273,
        1386
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "337": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1273,
        1386
      ],
      "op": "SUB",
      "path": "22"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "340": {
      "op": "DUP2"
    },
    "341": {
      "op": "LT"
    },
    "342": {
      "op": "ISZERO"
    },
    "343": {
      "op": "PUSH2",
      "value": "0x15F"
    },
    "346": {
      "op": "JUMPI"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "349": {
      "op": "DUP1"
    },
    "350": {
      "op": "REVERT"
    },
    "351": {
      "op": "JUMPDEST"
    },
    "352": {
      "op": "POP"
    },
    "353": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1273,
        1386
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "360": {
      "op": "SHL"
    },
    "361": {
      "op": "SUB"
    },
    "362": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1273,
        1386
      ],
      "op": "AND",
      "path": "22"
    },
    "363": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1273,
        1386
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2DB"
    },
    "366": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        1273,
        1386
      ],
      "op": "JUMP",
      "path": "22"
    },
    "367": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5239,
        5449
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "368": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5239,
        5449
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB9"
    },
    "371": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5239,
        5449
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "373": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5239,
        5449
      ],
      "op": "DUP1",
      "path": "22"
    },
    "374": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5239,
        5449
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "375": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5239,
        5449
      ],
      "op": "SUB",
      "path": "22"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "378": {
      "op": "DUP2"
    },
    "379": {
      "op": "LT"
    },
    "380": {
      "op": "ISZERO"
    },
    "381": {
      "op": "PUSH2",
      "value": "0x185"
    },
    "384": {
      "op": "JUMPI"
    },
    "385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "387": {
      "op": "DUP1"
    },
    "388": {
      "op": "REVERT"
    },
    "389": {
      "op": "JUMPDEST"
    },
    "390": {
      "op": "POP"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "397": {
      "op": "SHL"
    },
    "398": {
      "op": "SUB"
    },
    "399": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5239,
        5449
      ],
      "op": "DUP2",
      "path": "22"
    },
    "400": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5239,
        5449
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "401": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5239,
        5449
      ],
      "op": "AND",
      "path": "22"
    },
    "402": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5239,
        5449
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "403": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5239,
        5449
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "405": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5239,
        5449
      ],
      "op": "ADD",
      "path": "22"
    },
    "406": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5239,
        5449
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "407": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5239,
        5449
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F6"
    },
    "410": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        5239,
        5449
      ],
      "op": "JUMP",
      "path": "22"
    },
    "411": {
      "fn": "ERC20.transfer",
      "offset": [
        2023,
        2169
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "412": {
      "fn": "ERC20.transfer",
      "offset": [
        2023,
        2169
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB9"
    },
    "415": {
      "fn": "ERC20.transfer",
      "offset": [
        2023,
        2169
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "417": {
      "fn": "ERC20.transfer",
      "offset": [
        2023,
        2169
      ],
      "op": "DUP1",
      "path": "22"
    },
    "418": {
      "fn": "ERC20.transfer",
      "offset": [
        2023,
        2169
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "419": {
      "fn": "ERC20.transfer",
      "offset": [
        2023,
        2169
      ],
      "op": "SUB",
      "path": "22"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "422": {
      "op": "DUP2"
    },
    "423": {
      "op": "LT"
    },
    "424": {
      "op": "ISZERO"
    },
    "425": {
      "op": "PUSH2",
      "value": "0x1B1"
    },
    "428": {
      "op": "JUMPI"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "431": {
      "op": "DUP1"
    },
    "432": {
      "op": "REVERT"
    },
    "433": {
      "op": "JUMPDEST"
    },
    "434": {
      "op": "POP"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "441": {
      "op": "SHL"
    },
    "442": {
      "op": "SUB"
    },
    "443": {
      "fn": "ERC20.transfer",
      "offset": [
        2023,
        2169
      ],
      "op": "DUP2",
      "path": "22"
    },
    "444": {
      "fn": "ERC20.transfer",
      "offset": [
        2023,
        2169
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "445": {
      "fn": "ERC20.transfer",
      "offset": [
        2023,
        2169
      ],
      "op": "AND",
      "path": "22"
    },
    "446": {
      "fn": "ERC20.transfer",
      "offset": [
        2023,
        2169
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "447": {
      "fn": "ERC20.transfer",
      "offset": [
        2023,
        2169
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "449": {
      "fn": "ERC20.transfer",
      "offset": [
        2023,
        2169
      ],
      "op": "ADD",
      "path": "22"
    },
    "450": {
      "fn": "ERC20.transfer",
      "offset": [
        2023,
        2169
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "451": {
      "fn": "ERC20.transfer",
      "offset": [
        2023,
        2169
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x332"
    },
    "454": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2023,
        2169
      ],
      "op": "JUMP",
      "path": "22"
    },
    "455": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "456": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD5"
    },
    "459": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "461": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "DUP1",
      "path": "22"
    },
    "462": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "463": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "SUB",
      "path": "22"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "466": {
      "op": "DUP2"
    },
    "467": {
      "op": "LT"
    },
    "468": {
      "op": "ISZERO"
    },
    "469": {
      "op": "PUSH2",
      "value": "0x1DD"
    },
    "472": {
      "op": "JUMPI"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "475": {
      "op": "DUP1"
    },
    "476": {
      "op": "REVERT"
    },
    "477": {
      "op": "JUMPDEST"
    },
    "478": {
      "op": "POP"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "483": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "485": {
      "op": "SHL"
    },
    "486": {
      "op": "SUB"
    },
    "487": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "DUP2",
      "path": "22"
    },
    "488": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "489": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "DUP2",
      "path": "22"
    },
    "490": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "AND",
      "path": "22"
    },
    "491": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "492": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "494": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "ADD",
      "path": "22"
    },
    "495": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "496": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "AND",
      "path": "22"
    },
    "497": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33F"
    },
    "500": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        1717,
        1855
      ],
      "op": "JUMP",
      "path": "22"
    },
    "501": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "502": {
      "fn": "ERC20.approve",
      "offset": [
        2879,
        2883
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "504": {
      "fn": "ERC20.approve",
      "offset": [
        3208,
        3218
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 0
    },
    "505": {
      "fn": "ERC20.approve",
      "offset": [
        3208,
        3218
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "506": {
      "branch": 23,
      "fn": "ERC20.approve",
      "offset": [
        3208,
        3218
      ],
      "op": "DUP1",
      "path": "22"
    },
    "507": {
      "fn": "ERC20.approve",
      "offset": [
        3208,
        3256
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x225"
    },
    "510": {
      "branch": 23,
      "fn": "ERC20.approve",
      "offset": [
        3208,
        3256
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "511": {
      "op": "POP"
    },
    "512": {
      "fn": "ERC20.approve",
      "offset": [
        3231,
        3241
      ],
      "op": "CALLER",
      "path": "22"
    },
    "513": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3242
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "515": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3242
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "516": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3242
      ],
      "op": "DUP2",
      "path": "22"
    },
    "517": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3242
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "518": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3230
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "520": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3242
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "522": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3242
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "523": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3242
      ],
      "op": "DUP2",
      "path": "22"
    },
    "524": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3242
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "525": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3242
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "527": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3242
      ],
      "op": "DUP1",
      "path": "22"
    },
    "528": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3242
      ],
      "op": "DUP4",
      "path": "22"
    },
    "529": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3242
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "536": {
      "op": "SHL"
    },
    "537": {
      "op": "SUB"
    },
    "538": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3251
      ],
      "op": "DUP8",
      "path": "22"
    },
    "539": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3251
      ],
      "op": "AND",
      "path": "22"
    },
    "540": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3251
      ],
      "op": "DUP5",
      "path": "22"
    },
    "541": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3251
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "542": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3251
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "543": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3251
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "544": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3251
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "545": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3251
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "546": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3251
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "547": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3251
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "548": {
      "branch": 24,
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3256
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "549": {
      "fn": "ERC20.approve",
      "offset": [
        3208,
        3256
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "550": {
      "fn": "ERC20.approve",
      "offset": [
        3200,
        3257
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x22E"
    },
    "553": {
      "branch": 24,
      "fn": "ERC20.approve",
      "offset": [
        3200,
        3257
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "556": {
      "op": "DUP1"
    },
    "557": {
      "fn": "ERC20.approve",
      "offset": [
        3200,
        3257
      ],
      "op": "REVERT",
      "path": "22"
    },
    "558": {
      "fn": "ERC20.approve",
      "offset": [
        3200,
        3257
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "559": {
      "fn": "ERC20.approve",
      "offset": [
        3268,
        3304
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 1,
      "value": "0x239"
    },
    "562": {
      "fn": "ERC20.approve",
      "offset": [
        3277,
        3287
      ],
      "op": "CALLER",
      "path": "22"
    },
    "563": {
      "fn": "ERC20.approve",
      "offset": [
        3289,
        3296
      ],
      "op": "DUP5",
      "path": "22"
    },
    "564": {
      "fn": "ERC20.approve",
      "offset": [
        3298,
        3303
      ],
      "op": "DUP5",
      "path": "22"
    },
    "565": {
      "fn": "ERC20.approve",
      "offset": [
        3268,
        3276
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x36A"
    },
    "568": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        3268,
        3304
      ],
      "op": "JUMP",
      "path": "22"
    },
    "569": {
      "fn": "ERC20.approve",
      "offset": [
        3268,
        3304
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "570": {
      "op": "POP"
    },
    "571": {
      "fn": "ERC20.approve",
      "offset": [
        3321,
        3325
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 2,
      "value": "0x1"
    },
    "573": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "574": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "575": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "POP",
      "path": "22"
    },
    "576": {
      "fn": "ERC20.approve",
      "offset": [
        2805,
        3332
      ],
      "op": "POP",
      "path": "22"
    },
    "577": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        2805,
        3332
      ],
      "op": "JUMP",
      "path": "22"
    },
    "578": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "579": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1041,
        1053
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 3,
      "value": "0x2"
    },
    "581": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1041,
        1053
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "582": {
      "fn": "ERC20.totalSupply",
      "offset": [
        962,
        1060
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "583": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        962,
        1060
      ],
      "op": "JUMP",
      "path": "22"
    },
    "584": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "585": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3883,
        3887
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "587": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3899,
        3925
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 4,
      "value": "0x255"
    },
    "590": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3909,
        3913
      ],
      "op": "DUP5",
      "path": "22"
    },
    "591": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3915,
        3917
      ],
      "op": "DUP5",
      "path": "22"
    },
    "592": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3919,
        3924
      ],
      "op": "DUP5",
      "path": "22"
    },
    "593": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3899,
        3908
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3F2"
    },
    "596": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3899,
        3925
      ],
      "op": "JUMP",
      "path": "22"
    },
    "597": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3899,
        3925
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "604": {
      "op": "SHL"
    },
    "605": {
      "op": "SUB"
    },
    "606": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3976
      ],
      "op": "DUP5",
      "path": "22",
      "statement": 5
    },
    "607": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3976
      ],
      "op": "AND",
      "path": "22"
    },
    "608": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3976
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "610": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3976
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "611": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3976
      ],
      "op": "DUP2",
      "path": "22"
    },
    "612": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3976
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "613": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3970
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "615": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3976
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "617": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3976
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "618": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3976
      ],
      "op": "DUP2",
      "path": "22"
    },
    "619": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3976
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "620": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3976
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "622": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3976
      ],
      "op": "DUP1",
      "path": "22"
    },
    "623": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3976
      ],
      "op": "DUP4",
      "path": "22"
    },
    "624": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3976
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "625": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3950,
        3960
      ],
      "op": "CALLER",
      "path": "22"
    },
    "626": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3988
      ],
      "op": "DUP1",
      "path": "22"
    },
    "627": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3988
      ],
      "op": "DUP6",
      "path": "22"
    },
    "628": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3988
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "629": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3988
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "630": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3988
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "631": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3988
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "632": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3988
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "633": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3988
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "634": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3988
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "635": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3935,
        4000
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x295"
    },
    "638": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3935,
        4000
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "639": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3944,
        3948
      ],
      "op": "DUP7",
      "path": "22"
    },
    "640": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3944,
        3948
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "641": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3999
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x290"
    },
    "644": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3999
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3993,
        3998
      ],
      "op": "DUP7",
      "path": "22"
    },
    "646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3999
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "651": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3992
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "654": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3999
      ],
      "op": "AND",
      "path": "22"
    },
    "655": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3962,
        3999
      ],
      "op": "JUMP",
      "path": "22"
    },
    "656": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3962,
        3999
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3935,
        3943
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x36A"
    },
    "660": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3935,
        4000
      ],
      "op": "JUMP",
      "path": "22"
    },
    "661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3935,
        4000
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "662": {
      "op": "POP"
    },
    "663": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4017,
        4021
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 6,
      "value": "0x1"
    },
    "665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "POP",
      "path": "22"
    },
    "668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "POP",
      "path": "22"
    },
    "669": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3795,
        4028
      ],
      "op": "POP",
      "path": "22"
    },
    "670": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        3795,
        4028
      ],
      "op": "JUMP",
      "path": "22"
    },
    "671": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4531,
        4731
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "672": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4636,
        4646
      ],
      "op": "CALLER",
      "path": "22",
      "statement": 7
    },
    "673": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4611,
        4615
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "675": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4677
      ],
      "op": "DUP2",
      "path": "22"
    },
    "676": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4677
      ],
      "op": "DUP2",
      "path": "22"
    },
    "677": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4677
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "678": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4665
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "680": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4677
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "682": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4677
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "683": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4677
      ],
      "op": "DUP2",
      "path": "22"
    },
    "684": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4677
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "685": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4677
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "687": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4677
      ],
      "op": "DUP1",
      "path": "22"
    },
    "688": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4677
      ],
      "op": "DUP4",
      "path": "22"
    },
    "689": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4677
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "696": {
      "op": "SHL"
    },
    "697": {
      "op": "SUB"
    },
    "698": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4686
      ],
      "op": "DUP8",
      "path": "22"
    },
    "699": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4686
      ],
      "op": "AND",
      "path": "22"
    },
    "700": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4686
      ],
      "op": "DUP5",
      "path": "22"
    },
    "701": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4686
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "702": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4686
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "703": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4686
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "704": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4686
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "705": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4686
      ],
      "op": "DUP2",
      "path": "22"
    },
    "706": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4686
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "707": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4686
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "708": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4611,
        4615
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "709": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4611,
        4615
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "710": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4627,
        4703
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x239"
    },
    "713": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4627,
        4703
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "714": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4648,
        4655
      ],
      "op": "DUP6",
      "path": "22"
    },
    "715": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4648,
        4655
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "716": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4702
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x290"
    },
    "719": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4702
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "720": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4691,
        4701
      ],
      "op": "DUP7",
      "path": "22"
    },
    "721": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4702
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "726": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4690
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4D2"
    },
    "729": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4657,
        4702
      ],
      "op": "AND",
      "path": "22"
    },
    "730": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        4657,
        4702
      ],
      "op": "JUMP",
      "path": "22"
    },
    "731": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1273,
        1386
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "738": {
      "op": "SHL"
    },
    "739": {
      "op": "SUB"
    },
    "740": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1363,
        1379
      ],
      "op": "AND",
      "path": "22",
      "statement": 8
    },
    "741": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1337,
        1344
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "743": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1363,
        1379
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "744": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1363,
        1379
      ],
      "op": "DUP2",
      "path": "22"
    },
    "745": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1363,
        1379
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "746": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1363,
        1379
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "748": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1363,
        1379
      ],
      "op": "DUP2",
      "path": "22"
    },
    "749": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1363,
        1379
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "750": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1363,
        1379
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "751": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1363,
        1379
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "753": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1363,
        1379
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "754": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1363,
        1379
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "755": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1363,
        1379
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "756": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1363,
        1379
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "757": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        1273,
        1386
      ],
      "op": "JUMP",
      "path": "22"
    },
    "758": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5239,
        5449
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "759": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5349,
        5359
      ],
      "op": "CALLER",
      "path": "22",
      "statement": 9
    },
    "760": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5324,
        5328
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "762": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5390
      ],
      "op": "DUP2",
      "path": "22"
    },
    "763": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5390
      ],
      "op": "DUP2",
      "path": "22"
    },
    "764": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5390
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "765": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5378
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "767": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5390
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "769": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5390
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "770": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5390
      ],
      "op": "DUP2",
      "path": "22"
    },
    "771": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5390
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "772": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5390
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "774": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5390
      ],
      "op": "DUP1",
      "path": "22"
    },
    "775": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5390
      ],
      "op": "DUP4",
      "path": "22"
    },
    "776": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5390
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "783": {
      "op": "SHL"
    },
    "784": {
      "op": "SUB"
    },
    "785": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5399
      ],
      "op": "DUP8",
      "path": "22"
    },
    "786": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5399
      ],
      "op": "AND",
      "path": "22"
    },
    "787": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5399
      ],
      "op": "DUP5",
      "path": "22"
    },
    "788": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5399
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "789": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5399
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "790": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5399
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "791": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5399
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "792": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5399
      ],
      "op": "DUP2",
      "path": "22"
    },
    "793": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5399
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "794": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5399
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "795": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5324,
        5328
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "796": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5324,
        5328
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "797": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5340,
        5421
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x239"
    },
    "800": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5340,
        5421
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "801": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5361,
        5368
      ],
      "op": "DUP6",
      "path": "22"
    },
    "802": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5361,
        5368
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "803": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5420
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x290"
    },
    "806": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5420
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "807": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5404,
        5419
      ],
      "op": "DUP7",
      "path": "22"
    },
    "808": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5420
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "813": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5403
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "816": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5370,
        5420
      ],
      "op": "AND",
      "path": "22"
    },
    "817": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        5370,
        5420
      ],
      "op": "JUMP",
      "path": "22"
    },
    "818": {
      "fn": "ERC20.transfer",
      "offset": [
        2023,
        2169
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "819": {
      "fn": "ERC20.transfer",
      "offset": [
        2093,
        2097
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "821": {
      "fn": "ERC20.transfer",
      "offset": [
        2109,
        2141
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 10,
      "value": "0x239"
    },
    "824": {
      "fn": "ERC20.transfer",
      "offset": [
        2119,
        2129
      ],
      "op": "CALLER",
      "path": "22"
    },
    "825": {
      "fn": "ERC20.transfer",
      "offset": [
        2131,
        2133
      ],
      "op": "DUP5",
      "path": "22"
    },
    "826": {
      "fn": "ERC20.transfer",
      "offset": [
        2135,
        2140
      ],
      "op": "DUP5",
      "path": "22"
    },
    "827": {
      "fn": "ERC20.transfer",
      "offset": [
        2109,
        2118
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3F2"
    },
    "830": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2109,
        2141
      ],
      "op": "JUMP",
      "path": "22"
    },
    "831": {
      "fn": "ERC20.allowance",
      "offset": [
        1717,
        1855
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "838": {
      "op": "SHL"
    },
    "839": {
      "op": "SUB"
    },
    "840": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1839
      ],
      "op": "SWAP2",
      "path": "22",
      "statement": 11
    },
    "841": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1839
      ],
      "op": "DUP3",
      "path": "22"
    },
    "842": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1839
      ],
      "op": "AND",
      "path": "22"
    },
    "843": {
      "fn": "ERC20.allowance",
      "offset": [
        1798,
        1805
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "845": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1839
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "846": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1839
      ],
      "op": "DUP2",
      "path": "22"
    },
    "847": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1839
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "848": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1832
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "850": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1839
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "852": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1839
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "853": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1839
      ],
      "op": "DUP2",
      "path": "22"
    },
    "854": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1839
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "855": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1839
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "857": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1839
      ],
      "op": "DUP1",
      "path": "22"
    },
    "858": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1839
      ],
      "op": "DUP4",
      "path": "22"
    },
    "859": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1839
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "860": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1848
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "861": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1848
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "862": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1848
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "863": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1848
      ],
      "op": "AND",
      "path": "22"
    },
    "864": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1848
      ],
      "op": "DUP3",
      "path": "22"
    },
    "865": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1848
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "866": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1848
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "867": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1848
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "868": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1848
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "869": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1848
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "870": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1848
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "871": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1848
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "872": {
      "fn": "ERC20.allowance",
      "offset": [
        1824,
        1848
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "873": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        1717,
        1855
      ],
      "op": "JUMP",
      "path": "22"
    },
    "874": {
      "fn": "ERC20._approve",
      "offset": [
        7284,
        7532
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "881": {
      "op": "SHL"
    },
    "882": {
      "op": "SUB"
    },
    "883": {
      "fn": "ERC20._approve",
      "offset": [
        7376,
        7397
      ],
      "op": "DUP3",
      "path": "22",
      "statement": 12
    },
    "884": {
      "branch": 25,
      "fn": "ERC20._approve",
      "offset": [
        7376,
        7397
      ],
      "op": "AND",
      "path": "22"
    },
    "885": {
      "fn": "ERC20._approve",
      "offset": [
        7368,
        7398
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x37D"
    },
    "888": {
      "branch": 25,
      "fn": "ERC20._approve",
      "offset": [
        7368,
        7398
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "891": {
      "op": "DUP1"
    },
    "892": {
      "fn": "ERC20._approve",
      "offset": [
        7368,
        7398
      ],
      "op": "REVERT",
      "path": "22"
    },
    "893": {
      "fn": "ERC20._approve",
      "offset": [
        7368,
        7398
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "900": {
      "op": "SHL"
    },
    "901": {
      "op": "SUB"
    },
    "902": {
      "fn": "ERC20._approve",
      "offset": [
        7416,
        7435
      ],
      "op": "DUP4",
      "path": "22",
      "statement": 13
    },
    "903": {
      "branch": 26,
      "fn": "ERC20._approve",
      "offset": [
        7416,
        7435
      ],
      "op": "AND",
      "path": "22"
    },
    "904": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7436
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x390"
    },
    "907": {
      "branch": 26,
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7436
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "910": {
      "op": "DUP1"
    },
    "911": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7436
      ],
      "op": "REVERT",
      "path": "22"
    },
    "912": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7436
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "919": {
      "op": "SHL"
    },
    "920": {
      "op": "SUB"
    },
    "921": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7462
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 14
    },
    "922": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7462
      ],
      "op": "DUP5",
      "path": "22"
    },
    "923": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7462
      ],
      "op": "AND",
      "path": "22"
    },
    "924": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7462
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "926": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7462
      ],
      "op": "DUP2",
      "path": "22"
    },
    "927": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7462
      ],
      "op": "DUP2",
      "path": "22"
    },
    "928": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7462
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "929": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7455
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "931": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7462
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "933": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7462
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "934": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7462
      ],
      "op": "DUP2",
      "path": "22"
    },
    "935": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7462
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "936": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7462
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "938": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7462
      ],
      "op": "DUP1",
      "path": "22"
    },
    "939": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7462
      ],
      "op": "DUP4",
      "path": "22"
    },
    "940": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7462
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "941": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7471
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "942": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7471
      ],
      "op": "DUP8",
      "path": "22"
    },
    "943": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7471
      ],
      "op": "AND",
      "path": "22"
    },
    "944": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7471
      ],
      "op": "DUP1",
      "path": "22"
    },
    "945": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7471
      ],
      "op": "DUP5",
      "path": "22"
    },
    "946": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7471
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "947": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7471
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "948": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7471
      ],
      "op": "DUP3",
      "path": "22"
    },
    "949": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7471
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "950": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7471
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "951": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7471
      ],
      "op": "DUP3",
      "path": "22"
    },
    "952": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7471
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "953": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7471
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "954": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7479
      ],
      "op": "DUP6",
      "path": "22"
    },
    "955": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7479
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "956": {
      "fn": "ERC20._approve",
      "offset": [
        7447,
        7479
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "957": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 15
    },
    "958": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "959": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "DUP6",
      "path": "22"
    },
    "960": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "DUP2",
      "path": "22"
    },
    "961": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "962": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "963": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "964": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "997": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "998": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "DUP2",
      "path": "22"
    },
    "999": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1000": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "SUB",
      "path": "22"
    },
    "1001": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1002": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1003": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "ADD",
      "path": "22"
    },
    "1004": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1005": {
      "fn": "ERC20._approve",
      "offset": [
        7494,
        7525
      ],
      "op": "LOG3",
      "path": "22"
    },
    "1006": {
      "fn": "ERC20._approve",
      "offset": [
        7284,
        7532
      ],
      "op": "POP",
      "path": "22"
    },
    "1007": {
      "fn": "ERC20._approve",
      "offset": [
        7284,
        7532
      ],
      "op": "POP",
      "path": "22"
    },
    "1008": {
      "fn": "ERC20._approve",
      "offset": [
        7284,
        7532
      ],
      "op": "POP",
      "path": "22"
    },
    "1009": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        7284,
        7532
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1010": {
      "fn": "ERC20._transfer",
      "offset": [
        5668,
        5924
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1017": {
      "op": "SHL"
    },
    "1018": {
      "op": "SUB"
    },
    "1019": {
      "fn": "ERC20._transfer",
      "offset": [
        5755,
        5771
      ],
      "op": "DUP3",
      "path": "22",
      "statement": 16
    },
    "1020": {
      "branch": 27,
      "fn": "ERC20._transfer",
      "offset": [
        5755,
        5771
      ],
      "op": "AND",
      "path": "22"
    },
    "1021": {
      "fn": "ERC20._transfer",
      "offset": [
        5747,
        5772
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x405"
    },
    "1024": {
      "branch": 27,
      "fn": "ERC20._transfer",
      "offset": [
        5747,
        5772
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1027": {
      "op": "DUP1"
    },
    "1028": {
      "fn": "ERC20._transfer",
      "offset": [
        5747,
        5772
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1029": {
      "fn": "ERC20._transfer",
      "offset": [
        5747,
        5772
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1036": {
      "op": "SHL"
    },
    "1037": {
      "op": "SUB"
    },
    "1038": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5816
      ],
      "op": "DUP4",
      "path": "22",
      "statement": 17
    },
    "1039": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5816
      ],
      "op": "AND",
      "path": "22"
    },
    "1040": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5810
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1042": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5816
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1043": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5816
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1044": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5816
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1045": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5816
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1047": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5816
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1048": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5816
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1049": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5816
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1050": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5816
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1052": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5816
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1053": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5816
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1054": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5816
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1055": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5827
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x42E"
    },
    "1058": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5827
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1059": {
      "fn": "ERC20._transfer",
      "offset": [
        5821,
        5826
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1060": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5827
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1065": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BD"
    },
    "1068": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5827
      ],
      "op": "AND",
      "path": "22"
    },
    "1069": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5801,
        5827
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1070": {
      "fn": "ERC20._transfer",
      "offset": [
        5801,
        5827
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1077": {
      "op": "SHL"
    },
    "1078": {
      "op": "SUB"
    },
    "1079": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5798
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1080": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5798
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1081": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5798
      ],
      "op": "AND",
      "path": "22"
    },
    "1082": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5792
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1084": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5798
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1085": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5798
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1086": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5798
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1087": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5798
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1089": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5798
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1090": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5798
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1091": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5798
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1092": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5798
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1094": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5798
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1095": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5798
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1096": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5798
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1097": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5827
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1098": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5827
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1099": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5827
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1100": {
      "fn": "ERC20._transfer",
      "offset": [
        5783,
        5827
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1101": {
      "fn": "ERC20._transfer",
      "offset": [
        5853,
        5866
      ],
      "op": "SWAP1",
      "path": "22",
      "statement": 18
    },
    "1102": {
      "fn": "ERC20._transfer",
      "offset": [
        5853,
        5866
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1103": {
      "fn": "ERC20._transfer",
      "offset": [
        5853,
        5866
      ],
      "op": "AND",
      "path": "22"
    },
    "1104": {
      "fn": "ERC20._transfer",
      "offset": [
        5853,
        5866
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1105": {
      "fn": "ERC20._transfer",
      "offset": [
        5853,
        5866
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1106": {
      "fn": "ERC20._transfer",
      "offset": [
        5853,
        5866
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1107": {
      "fn": "ERC20._transfer",
      "offset": [
        5853,
        5866
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1108": {
      "fn": "ERC20._transfer",
      "offset": [
        5853,
        5877
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x463"
    },
    "1111": {
      "fn": "ERC20._transfer",
      "offset": [
        5853,
        5877
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1112": {
      "fn": "ERC20._transfer",
      "offset": [
        5871,
        5876
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1113": {
      "fn": "ERC20._transfer",
      "offset": [
        5853,
        5877
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1118": {
      "fn": "ERC20._transfer",
      "offset": [
        5853,
        5870
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4D2"
    },
    "1121": {
      "fn": "ERC20._transfer",
      "offset": [
        5853,
        5877
      ],
      "op": "AND",
      "path": "22"
    },
    "1122": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5853,
        5877
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1123": {
      "fn": "ERC20._transfer",
      "offset": [
        5853,
        5877
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1130": {
      "op": "SHL"
    },
    "1131": {
      "op": "SUB"
    },
    "1132": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1133": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1134": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "AND",
      "path": "22"
    },
    "1135": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5846
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1137": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1138": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1139": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1140": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1142": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1143": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1144": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1145": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1147": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1148": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1149": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1150": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1151": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5877
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1152": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5877
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1153": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5877
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1154": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5877
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1155": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 19
    },
    "1156": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1157": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1158": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1159": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1160": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1161": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1162": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1163": {
      "fn": "ERC20._transfer",
      "offset": [
        5837,
        5850
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1164": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1165": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "DUP8",
      "path": "22"
    },
    "1166": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "AND",
      "path": "22"
    },
    "1167": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1168": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1201": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1202": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1203": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1204": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1205": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "SUB",
      "path": "22"
    },
    "1206": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "ADD",
      "path": "22"
    },
    "1207": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1208": {
      "fn": "ERC20._transfer",
      "offset": [
        5892,
        5917
      ],
      "op": "LOG3",
      "path": "22"
    },
    "1209": {
      "fn": "ERC20._transfer",
      "offset": [
        5668,
        5924
      ],
      "op": "POP",
      "path": "22"
    },
    "1210": {
      "fn": "ERC20._transfer",
      "offset": [
        5668,
        5924
      ],
      "op": "POP",
      "path": "22"
    },
    "1211": {
      "fn": "ERC20._transfer",
      "offset": [
        5668,
        5924
      ],
      "op": "POP",
      "path": "22"
    },
    "1212": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        5668,
        5924
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1213": {
      "fn": "SafeMath.sub",
      "offset": [
        1212,
        1357
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1214": {
      "fn": "SafeMath.sub",
      "offset": [
        1270,
        1277
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1216": {
      "fn": "SafeMath.sub",
      "offset": [
        1302,
        1303
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 20
    },
    "1217": {
      "fn": "SafeMath.sub",
      "offset": [
        1297,
        1298
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1218": {
      "fn": "SafeMath.sub",
      "offset": [
        1297,
        1303
      ],
      "op": "GT",
      "path": "20"
    },
    "1219": {
      "branch": 28,
      "fn": "SafeMath.sub",
      "offset": [
        1297,
        1303
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1220": {
      "fn": "SafeMath.sub",
      "offset": [
        1289,
        1304
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4CC"
    },
    "1223": {
      "branch": 28,
      "fn": "SafeMath.sub",
      "offset": [
        1289,
        1304
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1226": {
      "op": "DUP1"
    },
    "1227": {
      "fn": "SafeMath.sub",
      "offset": [
        1289,
        1304
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1228": {
      "fn": "SafeMath.sub",
      "offset": [
        1289,
        1304
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1229": {
      "op": "POP"
    },
    "1230": {
      "fn": "SafeMath.sub",
      "offset": [
        1326,
        1331
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1231": {
      "fn": "SafeMath.sub",
      "offset": [
        1326,
        1331
      ],
      "op": "SUB",
      "path": "20"
    },
    "1232": {
      "fn": "SafeMath.sub",
      "offset": [
        1326,
        1331
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1233": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1212,
        1357
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1234": {
      "fn": "SafeMath.add",
      "offset": [
        1440,
        1585
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1235": {
      "fn": "SafeMath.add",
      "offset": [
        1498,
        1505
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1237": {
      "fn": "SafeMath.add",
      "offset": [
        1529,
        1534
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1238": {
      "fn": "SafeMath.add",
      "offset": [
        1529,
        1534
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1239": {
      "fn": "SafeMath.add",
      "offset": [
        1529,
        1534
      ],
      "op": "ADD",
      "path": "20"
    },
    "1240": {
      "fn": "SafeMath.add",
      "offset": [
        1552,
        1558
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 21
    },
    "1241": {
      "fn": "SafeMath.add",
      "offset": [
        1552,
        1558
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1242": {
      "fn": "SafeMath.add",
      "offset": [
        1552,
        1558
      ],
      "op": "LT",
      "path": "20"
    },
    "1243": {
      "branch": 29,
      "fn": "SafeMath.add",
      "offset": [
        1552,
        1558
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1244": {
      "fn": "SafeMath.add",
      "offset": [
        1544,
        1559
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4E4"
    },
    "1247": {
      "branch": 29,
      "fn": "SafeMath.add",
      "offset": [
        1544,
        1559
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1250": {
      "op": "DUP1"
    },
    "1251": {
      "fn": "SafeMath.add",
      "offset": [
        1544,
        1559
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1252": {
      "fn": "SafeMath.add",
      "offset": [
        1544,
        1559
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1253": {
      "fn": "SafeMath.add",
      "offset": [
        1577,
        1578
      ],
      "op": "SWAP4",
      "path": "20",
      "statement": 22
    },
    "1254": {
      "fn": "SafeMath.add",
      "offset": [
        1440,
        1585
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1255": {
      "op": "POP"
    },
    "1256": {
      "op": "POP"
    },
    "1257": {
      "op": "POP"
    },
    "1258": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        1440,
        1585
      ],
      "op": "JUMP",
      "path": "20"
    }
  },
  "sha1": "d87ddeb5d0965c225f3df99d7e6d288b8517185f",
  "source": "pragma solidity ^0.6.1;\n\n\nimport \"zeppelin/token/ERC20/IERC20.sol\";\nimport \"zeppelin/math/SafeMath.sol\";\n\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\n * Originally based on code by FirstBlood:\n * https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n *\n * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\n * all accounts just by listening to said events. Note that this isn't required by the specification, and other\n * compliant implementations may not do it.\n */\ncontract ERC20 is IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowed;\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev Total number of tokens in existence\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev Gets the balance of the specified address.\n     * @param owner The address to query the balance of.\n     * @return An uint256 representing the amount owned by the passed address.\n     */\n    function balanceOf(address owner) public view override returns (uint256) {\n        return _balances[owner];\n    }\n\n    /**\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\n     * @param owner address The address which owns the funds.\n     * @param spender address The address which will spend the funds.\n     * @return A uint256 specifying the amount of tokens still available for the spender.\n     */\n    function allowance(address owner, address spender) public view override returns (uint256) {\n        return _allowed[owner][spender];\n    }\n\n    /**\n     * @dev Transfer token for a specified address\n     * @param to The address to transfer to.\n     * @param value The amount to be transferred.\n     */\n    function transfer(address to, uint256 value) public override returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     */\n    function approve(address spender, uint256 value) public override returns (bool) {\n\n        // To change the approve amount you first have to reduce the addresses`\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\n        //  already 0 to mitigate the race condition described here:\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        require(value == 0 || _allowed[msg.sender][spender] == 0);\n\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev Transfer tokens from one address to another.\n     * Note that while this function emits an Approval event, this is not required as per the specification,\n     * and other compliant implementations may not emit the event.\n     * @param from address The address which you want to send tokens from\n     * @param to address The address which you want to transfer to\n     * @param value uint256 the amount of tokens to be transferred\n     */\n    function transferFrom(address from, address to, uint256 value) public override returns (bool) {\n        _transfer(from, to, value);\n        _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n        return true;\n    }\n\n    /**\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\n     * approve should be called when allowed_[_spender] == 0. To increment\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined)\n     * From MonolithDAO Token.sol\n     * Emits an Approval event.\n     * @param spender The address which will spend the funds.\n     * @param addedValue The amount of tokens to increase the allowance by.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\n     * approve should be called when allowed_[_spender] == 0. To decrement\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined)\n     * From MonolithDAO Token.sol\n     * Emits an Approval event.\n     * @param spender The address which will spend the funds.\n     * @param subtractedValue The amount of tokens to decrease the allowance by.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\n        return true;\n    }\n\n    /**\n     * @dev Transfer token for a specified addresses\n     * @param from The address to transfer from.\n     * @param to The address to transfer to.\n     * @param value The amount to be transferred.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        require(to != address(0));\n\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Internal function that mints an amount of the token and assigns it to\n     * an account. This encapsulates the modification of balances such that the\n     * proper events are emitted.\n     * @param account The account that will receive the created tokens.\n     * @param value The amount that will be created.\n     */\n    function _mint(address account, uint256 value) internal {\n        require(account != address(0));\n\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }\n\n    /**\n     * @dev Internal function that burns an amount of the token of a given\n     * account.\n     * @param account The account whose tokens will be burnt.\n     * @param value The amount that will be burnt.\n     */\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0));\n\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\n\n    /**\n     * @dev Approve an address to spend another addresses' tokens.\n     * @param owner The address that owns the tokens.\n     * @param spender The address that will spend the tokens.\n     * @param value The number of tokens that can be spent.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(spender != address(0));\n        require(owner != address(0));\n\n        _allowed[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    /**\n     * @dev Internal function that burns an amount of the token of a given\n     * account, deducting from the sender's allowance for said account. Uses the\n     * internal burn function.\n     * Emits an Approval event (reflecting the reduced allowance).\n     * @param account The account whose tokens will be burnt.\n     * @param value The amount that will be burnt.\n     */\n    function _burnFrom(address account, uint256 value) internal {\n        _burn(account, value);\n        _approve(account, msg.sender, _allowed[account][msg.sender].sub(value));\n    }\n\n}\n",
  "sourceMap": "673:7430:22:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;673:7430:22;;;;;;;",
  "sourcePath": "../../nucypher/blockchain/eth/sol/source/zeppelin/token/ERC20/ERC20.sol",
  "type": "contract"
}