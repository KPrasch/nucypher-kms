{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_required",
          "type": "uint8"
        },
        {
          "internalType": "address[]",
          "name": "_owners",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Executed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "required",
          "type": "uint16"
        }
      ],
      "name": "RequirementChanged",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MAX_OWNER_COUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "addOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_required",
          "type": "uint8"
        }
      ],
      "name": "changeRequirement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8[]",
          "name": "_sigV",
          "type": "uint8[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "_sigR",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "_sigS",
          "type": "bytes32[]"
        },
        {
          "internalType": "address",
          "name": "_destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumberOfOwners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "getUnsignedTransactionHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "owners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "removeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "required",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "20": "../../nucypher/blockchain/eth/sol/source/zeppelin/math/SafeMath.sol",
    "3": "../../nucypher/blockchain/eth/sol/source/contracts/MultiSig.sol"
  },
  "ast": {
    "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/MultiSig.sol",
    "exportedSymbols": {
      "MultiSig": [
        1565
      ]
    },
    "id": 1566,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1113,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/zeppelin/math/SafeMath.sol",
        "file": "zeppelin/math/SafeMath.sol",
        "id": 1114,
        "nodeType": "ImportDirective",
        "scope": 1566,
        "sourceUnit": 15479,
        "src": "26:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1115,
          "nodeType": "StructuredDocumentation",
          "src": "65:82:3",
          "text": "@title MultiSig\n@notice Multi-signature contract with off-chain signing"
        },
        "fullyImplemented": true,
        "id": 1565,
        "linearizedBaseContracts": [
          1565
        ],
        "name": "MultiSig",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1118,
            "libraryName": {
              "contractScope": null,
              "id": 1116,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15478,
              "src": "178:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$15478",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "172:27:3",
            "typeName": {
              "id": 1117,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "191:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1128,
            "name": "Executed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1120,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1128,
                  "src": "220:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "220:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1122,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1128,
                  "src": "244:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "244:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1124,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "destination",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1128,
                  "src": "267:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "267:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1126,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1128,
                  "src": "296:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "219:91:3"
            },
            "src": "205:106:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1132,
            "name": "OwnerAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1130,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1132,
                  "src": "333:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "333:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "332:23:3"
            },
            "src": "316:40:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1136,
            "name": "OwnerRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1134,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1136,
                  "src": "380:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "379:23:3"
            },
            "src": "361:42:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1140,
            "name": "RequirementChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1138,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "required",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1140,
                  "src": "433:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "432:17:3"
            },
            "src": "408:42:3"
          },
          {
            "constant": true,
            "functionSelector": "d74f8edd",
            "id": 1143,
            "mutability": "constant",
            "name": "MAX_OWNER_COUNT",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1565,
            "src": "456:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1141,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "456:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530",
              "id": 1142,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "498:2:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "affed0e0",
            "id": 1145,
            "mutability": "mutable",
            "name": "nonce",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1565,
            "src": "507:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1144,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "507:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dc8452cd",
            "id": 1147,
            "mutability": "mutable",
            "name": "required",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1565,
            "src": "533:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1146,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "533:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2f54bf6e",
            "id": 1151,
            "mutability": "mutable",
            "name": "isOwner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1565,
            "src": "560:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1150,
              "keyType": {
                "id": 1148,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "569:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "560:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1149,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "580:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "025e7c27",
            "id": 1154,
            "mutability": "mutable",
            "name": "owners",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1565,
            "src": "606:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1152,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "606:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1153,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "606:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1168,
              "nodeType": "Block",
              "src": "728:64:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 1164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1158,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "746:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "746:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1162,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "768:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MultiSig_$1565",
                                "typeString": "contract MultiSig"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MultiSig_$1565",
                                "typeString": "contract MultiSig"
                              }
                            ],
                            "id": 1161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "760:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1160,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "760:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "760:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "746:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "738:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "738:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1166,
                  "nodeType": "ExpressionStatement",
                  "src": "738:36:3"
                },
                {
                  "id": 1167,
                  "nodeType": "PlaceholderStatement",
                  "src": "784:1:3"
                }
              ]
            },
            "documentation": {
              "id": 1155,
              "nodeType": "StructuredDocumentation",
              "src": "636:59:3",
              "text": "@notice Only this contract can call method"
            },
            "id": 1169,
            "name": "onlyThisContract",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 1156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "725:2:3"
            },
            "src": "700:92:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1172,
              "nodeType": "Block",
              "src": "880:2:3",
              "statements": []
            },
            "documentation": null,
            "id": 1173,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:2:3"
            },
            "returnParameters": {
              "id": 1171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:0:3"
            },
            "scope": 1565,
            "src": "852:30:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1245,
              "nodeType": "Block",
              "src": "1062:389:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1183,
                                "name": "_owners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1179,
                                "src": "1080:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1080:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1185,
                              "name": "MAX_OWNER_COUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1143,
                              "src": "1098:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1080:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1187,
                              "name": "_required",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1176,
                              "src": "1129:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1188,
                                "name": "_owners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1179,
                                "src": "1142:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1142:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1129:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1080:76:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 1194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1192,
                            "name": "_required",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1176,
                            "src": "1172:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1184:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1172:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1080:105:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1072:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1072:114:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1197,
                  "nodeType": "ExpressionStatement",
                  "src": "1072:114:3"
                },
                {
                  "body": {
                    "id": 1235,
                    "nodeType": "Block",
                    "src": "1242:147:3",
                    "statements": [
                      {
                        "assignments": [
                          1210
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1210,
                            "mutability": "mutable",
                            "name": "owner",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1235,
                            "src": "1256:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1209,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1256:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1214,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1211,
                            "name": "_owners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1179,
                            "src": "1272:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1213,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1212,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "1280:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1272:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1256:26:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1219,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "1304:15:3",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1216,
                                    "name": "isOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1151,
                                    "src": "1305:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 1218,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1217,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1210,
                                    "src": "1313:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1305:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1220,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1210,
                                  "src": "1323:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 1223,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1340:1:3",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1222,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1332:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1221,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1332:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 1224,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1332:10:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "1323:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1304:38:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1215,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1296:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1296:47:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1228,
                        "nodeType": "ExpressionStatement",
                        "src": "1296:47:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1229,
                              "name": "isOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1151,
                              "src": "1357:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1231,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1230,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "1365:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1357:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1374:4:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1357:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1234,
                        "nodeType": "ExpressionStatement",
                        "src": "1357:21:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1202,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1199,
                      "src": "1217:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1203,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "1221:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1221:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1217:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1236,
                  "initializationExpression": {
                    "assignments": [
                      1199
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1199,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1236,
                        "src": "1202:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1198,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1202:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1201,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1214:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1202:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1237:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1206,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "1237:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1208,
                    "nodeType": "ExpressionStatement",
                    "src": "1237:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "1197:192:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1237,
                      "name": "owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1154,
                      "src": "1398:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1238,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1179,
                      "src": "1407:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "1398:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 1240,
                  "nodeType": "ExpressionStatement",
                  "src": "1398:16:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1241,
                      "name": "required",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1147,
                      "src": "1424:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1242,
                      "name": "_required",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1176,
                      "src": "1435:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1424:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1244,
                  "nodeType": "ExpressionStatement",
                  "src": "1424:20:3"
                }
              ]
            },
            "documentation": {
              "id": 1174,
              "nodeType": "StructuredDocumentation",
              "src": "888:106:3",
              "text": "@param _required Number of required signings\n@param _owners List of initial owners."
            },
            "id": 1246,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1176,
                  "mutability": "mutable",
                  "name": "_required",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1246,
                  "src": "1012:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1175,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1179,
                  "mutability": "mutable",
                  "name": "_owners",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1246,
                  "src": "1029:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1177,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1029:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1178,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1029:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1011:43:3"
            },
            "returnParameters": {
              "id": 1181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1062:0:3"
            },
            "scope": 1565,
            "src": "999:452:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1285,
              "nodeType": "Block",
              "src": "2043:146:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30783139",
                                "id": 1267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2105:4:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_25_by_1",
                                  "typeString": "int_const 25"
                                },
                                "value": "0x19"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_25_by_1",
                                  "typeString": "int_const 25"
                                }
                              ],
                              "id": 1266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2100:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 1265,
                                "name": "byte",
                                "nodeType": "ElementaryTypeName",
                                "src": "2100:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2100:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2117:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2112:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 1269,
                                "name": "byte",
                                "nodeType": "ElementaryTypeName",
                                "src": "2112:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2112:7:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1275,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2129:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MultiSig_$1565",
                                  "typeString": "contract MultiSig"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MultiSig_$1565",
                                  "typeString": "contract MultiSig"
                                }
                              ],
                              "id": 1274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2121:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1273,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2121:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2121:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1277,
                            "name": "_sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1249,
                            "src": "2136:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1278,
                            "name": "_destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1251,
                            "src": "2145:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1279,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1253,
                            "src": "2159:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1280,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1255,
                            "src": "2167:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1281,
                            "name": "_nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1257,
                            "src": "2174:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            },
                            {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1263,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2083:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2083:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2083:98:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1262,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2060:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2060:122:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1261,
                  "id": 1284,
                  "nodeType": "Return",
                  "src": "2053:129:3"
                }
              ]
            },
            "documentation": {
              "id": 1247,
              "nodeType": "StructuredDocumentation",
              "src": "1457:366:3",
              "text": "@notice Get unsigned hash for transaction parameters\n@dev Follows ERC191 signature scheme: https://github.com/ethereum/EIPs/issues/191\n@param _sender Trustee who will execute the transaction\n@param _destination Destination address\n@param _value Amount of ETH to transfer\n@param _data Call data\n@param _nonce Nonce"
            },
            "functionSelector": "25747dc3",
            "id": 1286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUnsignedTransactionHash",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1249,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1286,
                  "src": "1873:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1873:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1251,
                  "mutability": "mutable",
                  "name": "_destination",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1286,
                  "src": "1898:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1898:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1286,
                  "src": "1928:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1928:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1286,
                  "src": "1952:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1952:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1257,
                  "mutability": "mutable",
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1286,
                  "src": "1980:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1863:137:3"
            },
            "returnParameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1260,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1286,
                  "src": "2030:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1259,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2029:9:3"
            },
            "scope": 1565,
            "src": "1828:361:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1412,
              "nodeType": "Block",
              "src": "2786:715:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1306,
                                "name": "_sigR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1293,
                                "src": "2804:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                  "typeString": "bytes32[] calldata"
                                }
                              },
                              "id": 1307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2804:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1308,
                              "name": "required",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1147,
                              "src": "2820:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "2804:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1310,
                                "name": "_sigR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1293,
                                "src": "2844:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                  "typeString": "bytes32[] calldata"
                                }
                              },
                              "id": 1311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2844:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1312,
                                "name": "_sigS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1296,
                                "src": "2860:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                  "typeString": "bytes32[] calldata"
                                }
                              },
                              "id": 1313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2860:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2844:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2804:68:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1316,
                              "name": "_sigR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1293,
                              "src": "2888:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                "typeString": "bytes32[] calldata"
                              }
                            },
                            "id": 1317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2888:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1318,
                              "name": "_sigV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1290,
                              "src": "2904:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
                                "typeString": "uint8[] calldata"
                              }
                            },
                            "id": 1319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2904:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2888:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2804:112:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2796:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2796:121:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1323,
                  "nodeType": "ExpressionStatement",
                  "src": "2796:121:3"
                },
                {
                  "assignments": [
                    1325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1325,
                      "mutability": "mutable",
                      "name": "txHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1412,
                      "src": "2928:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1324,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2928:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1334,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1327,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2972:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2972:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1329,
                        "name": "_destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "2984:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1330,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1300,
                        "src": "2998:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1331,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "3006:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1332,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "3013:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1326,
                      "name": "getUnsignedTransactionHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1286,
                      "src": "2945:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,address,uint256,bytes memory,uint256) view returns (bytes32)"
                      }
                    },
                    "id": 1333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2945:74:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2928:91:3"
                },
                {
                  "assignments": [
                    1336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1336,
                      "mutability": "mutable",
                      "name": "lastAdd",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1412,
                      "src": "3029:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1335,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3029:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1341,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3055:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3047:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1337,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3047:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3047:10:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3029:28:3"
                },
                {
                  "body": {
                    "id": 1382,
                    "nodeType": "Block",
                    "src": "3110:189:3",
                    "statements": [
                      {
                        "assignments": [
                          1354
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1354,
                            "mutability": "mutable",
                            "name": "recovered",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1382,
                            "src": "3124:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1353,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3124:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1367,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1356,
                              "name": "txHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1325,
                              "src": "3154:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1357,
                                "name": "_sigV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1290,
                                "src": "3162:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
                                  "typeString": "uint8[] calldata"
                                }
                              },
                              "id": 1359,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1358,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1343,
                                "src": "3168:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3162:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1360,
                                "name": "_sigR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1293,
                                "src": "3172:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                  "typeString": "bytes32[] calldata"
                                }
                              },
                              "id": 1362,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1361,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1343,
                                "src": "3178:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3172:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1363,
                                "name": "_sigS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1296,
                                "src": "3182:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                  "typeString": "bytes32[] calldata"
                                }
                              },
                              "id": 1365,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1364,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1343,
                                "src": "3188:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3182:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1355,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -6,
                            "src": "3144:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 1366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3144:47:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3124:67:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1369,
                                  "name": "recovered",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1354,
                                  "src": "3213:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1370,
                                  "name": "lastAdd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1336,
                                  "src": "3225:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3213:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1372,
                                  "name": "isOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1151,
                                  "src": "3236:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 1374,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1373,
                                  "name": "recovered",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1354,
                                  "src": "3244:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3236:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3213:41:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1368,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3205:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3205:50:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1377,
                        "nodeType": "ExpressionStatement",
                        "src": "3205:50:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1378,
                            "name": "lastAdd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1336,
                            "src": "3269:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1379,
                            "name": "recovered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "3279:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3269:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1381,
                        "nodeType": "ExpressionStatement",
                        "src": "3269:19:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1346,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1343,
                      "src": "3087:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1347,
                        "name": "_sigR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1293,
                        "src": "3091:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      "id": 1348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3091:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3087:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1383,
                  "initializationExpression": {
                    "assignments": [
                      1343
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1343,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1383,
                        "src": "3072:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1342,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3072:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1345,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3084:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3072:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3105:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1350,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1343,
                        "src": "3105:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1352,
                    "nodeType": "ExpressionStatement",
                    "src": "3105:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "3067:232:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1385,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3323:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3323:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1387,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "3335:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1388,
                        "name": "_destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "3342:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1389,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1300,
                        "src": "3356:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1384,
                      "name": "Executed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "3314:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 1390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3314:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1391,
                  "nodeType": "EmitStatement",
                  "src": "3309:54:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1392,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1145,
                      "src": "3373:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3391:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1393,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1145,
                          "src": "3381:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15456,
                        "src": "3381:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3381:12:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3373:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1398,
                  "nodeType": "ExpressionStatement",
                  "src": "3373:20:3"
                },
                {
                  "assignments": [
                    1400,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1400,
                      "mutability": "mutable",
                      "name": "callSuccess",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1412,
                      "src": "3404:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1399,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3404:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1407,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1405,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "3458:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1401,
                          "name": "_destination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1298,
                          "src": "3425:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3425:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 1403,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1300,
                          "src": "3450:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3425:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3425:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3403:61:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1409,
                        "name": "callSuccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1400,
                        "src": "3482:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3474:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3474:20:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1411,
                  "nodeType": "ExpressionStatement",
                  "src": "3474:20:3"
                }
              ]
            },
            "documentation": {
              "id": 1287,
              "nodeType": "StructuredDocumentation",
              "src": "2195:358:3",
              "text": "@dev Note that address recovered from signatures must be strictly increasing\n@param _sigV Array of signatures values V\n@param _sigR Array of signatures values R\n@param _sigS Array of signatures values S\n@param _destination Destination address\n@param _value Amount of ETH to transfer\n@param _data Call data"
            },
            "functionSelector": "f12d394f",
            "id": 1413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1290,
                  "mutability": "mutable",
                  "name": "_sigV",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1413,
                  "src": "2584:22:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1288,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "2584:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1289,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2584:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1293,
                  "mutability": "mutable",
                  "name": "_sigR",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1413,
                  "src": "2616:24:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1291,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2616:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1292,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2616:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1296,
                  "mutability": "mutable",
                  "name": "_sigS",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1413,
                  "src": "2650:24:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1294,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2650:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1295,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2650:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1298,
                  "mutability": "mutable",
                  "name": "_destination",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1413,
                  "src": "2684:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2684:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1300,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1413,
                  "src": "2714:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2714:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1302,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1413,
                  "src": "2738:20:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1301,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2738:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2574:190:3"
            },
            "returnParameters": {
              "id": 1304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2786:0:3"
            },
            "scope": 1565,
            "src": "2558:943:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1456,
              "nodeType": "Block",
              "src": "3742:219:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1422,
                                "name": "owners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1154,
                                "src": "3760:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3760:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1424,
                              "name": "MAX_OWNER_COUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1143,
                              "src": "3776:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3760:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1426,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1416,
                              "src": "3807:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 1429,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3825:1:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3817:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1427,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3817:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3817:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "3807:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3760:67:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3843:16:3",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1433,
                              "name": "isOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1151,
                              "src": "3844:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1435,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1434,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1416,
                              "src": "3852:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3844:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3760:99:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3752:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3752:108:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1439,
                  "nodeType": "ExpressionStatement",
                  "src": "3752:108:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1440,
                        "name": "isOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1151,
                        "src": "3870:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1442,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1441,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1416,
                        "src": "3878:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3870:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3888:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3870:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1445,
                  "nodeType": "ExpressionStatement",
                  "src": "3870:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1449,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1416,
                        "src": "3914:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1446,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1154,
                        "src": "3902:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3902:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3902:19:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1451,
                  "nodeType": "ExpressionStatement",
                  "src": "3902:19:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1453,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1416,
                        "src": "3947:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1452,
                      "name": "OwnerAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1132,
                      "src": "3936:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3936:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1455,
                  "nodeType": "EmitStatement",
                  "src": "3931:23:3"
                }
              ]
            },
            "documentation": {
              "id": 1414,
              "nodeType": "StructuredDocumentation",
              "src": "3507:150:3",
              "text": "@notice Allows to add a new owner\n@dev Transaction has to be sent by `execute` method.\n@param _owner Address of new owner"
            },
            "functionSelector": "7065cb48",
            "id": 1457,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1419,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1418,
                  "name": "onlyThisContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1169,
                  "src": "3721:16:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3721:16:3"
              }
            ],
            "name": "addOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1416,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1457,
                  "src": "3680:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3680:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3679:16:3"
            },
            "returnParameters": {
              "id": 1420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3742:0:3"
            },
            "scope": 1565,
            "src": "3662:299:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1525,
              "nodeType": "Block",
              "src": "4201:358:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1466,
                              "name": "owners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1154,
                              "src": "4219:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4219:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1468,
                            "name": "required",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1147,
                            "src": "4235:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "4219:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1470,
                            "name": "isOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1151,
                            "src": "4247:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1472,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1471,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1460,
                            "src": "4255:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4247:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4219:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4211:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4211:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1475,
                  "nodeType": "ExpressionStatement",
                  "src": "4211:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1476,
                        "name": "isOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1151,
                        "src": "4273:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1478,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1477,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1460,
                        "src": "4281:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4273:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4291:5:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4273:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1481,
                  "nodeType": "ExpressionStatement",
                  "src": "4273:23:3"
                },
                {
                  "body": {
                    "id": 1514,
                    "nodeType": "Block",
                    "src": "4354:142:3",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1495,
                              "name": "owners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1154,
                              "src": "4372:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1497,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1496,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1483,
                              "src": "4379:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4372:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1498,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1460,
                            "src": "4385:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4372:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1513,
                        "nodeType": "IfStatement",
                        "src": "4368:118:3",
                        "trueBody": {
                          "id": 1512,
                          "nodeType": "Block",
                          "src": "4393:93:3",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1509,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1500,
                                    "name": "owners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1154,
                                    "src": "4411:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1502,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1501,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1483,
                                    "src": "4418:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4411:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1503,
                                    "name": "owners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1154,
                                    "src": "4423:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1508,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1507,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1504,
                                        "name": "owners",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1154,
                                        "src": "4430:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 1505,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "4430:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 1506,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4446:1:3",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "4430:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4423:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4411:37:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1510,
                              "nodeType": "ExpressionStatement",
                              "src": "4411:37:3"
                            },
                            {
                              "id": 1511,
                              "nodeType": "Break",
                              "src": "4466:5:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1486,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1483,
                      "src": "4326:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1487,
                          "name": "owners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1154,
                          "src": "4330:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4330:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4346:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4330:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4326:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1515,
                  "initializationExpression": {
                    "assignments": [
                      1483
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1483,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1515,
                        "src": "4311:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1482,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4311:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1485,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4323:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4311:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4349:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1492,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "4349:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1494,
                    "nodeType": "ExpressionStatement",
                    "src": "4349:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "4306:190:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1516,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1154,
                        "src": "4505:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4505:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4505:12:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1520,
                  "nodeType": "ExpressionStatement",
                  "src": "4505:12:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1522,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1460,
                        "src": "4545:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1521,
                      "name": "OwnerRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
                      "src": "4532:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4532:20:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1524,
                  "nodeType": "EmitStatement",
                  "src": "4527:25:3"
                }
              ]
            },
            "documentation": {
              "id": 1458,
              "nodeType": "StructuredDocumentation",
              "src": "3967:146:3",
              "text": "@notice Allows to remove an owner\n@dev Transaction has to be sent by `execute` method.\n@param _owner Address of owner"
            },
            "functionSelector": "173825d9",
            "id": 1526,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1463,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1462,
                  "name": "onlyThisContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1169,
                  "src": "4180:16:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4180:16:3"
              }
            ],
            "name": "removeOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1460,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1526,
                  "src": "4139:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4139:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4138:16:3"
            },
            "returnParameters": {
              "id": 1464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4201:0:3"
            },
            "scope": 1565,
            "src": "4118:441:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1535,
              "nodeType": "Block",
              "src": "4701:37:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1532,
                      "name": "owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1154,
                      "src": "4718:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4718:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1531,
                  "id": 1534,
                  "nodeType": "Return",
                  "src": "4711:20:3"
                }
              ]
            },
            "documentation": {
              "id": 1527,
              "nodeType": "StructuredDocumentation",
              "src": "4565:70:3",
              "text": "@notice Returns the number of owners of this MultiSig"
            },
            "functionSelector": "b85e5b74",
            "id": 1536,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumberOfOwners",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4666:2:3"
            },
            "returnParameters": {
              "id": 1531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1530,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1536,
                  "src": "4692:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4692:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4691:9:3"
            },
            "scope": 1565,
            "src": "4640:98:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1563,
              "nodeType": "Block",
              "src": "5025:143:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1545,
                            "name": "_required",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1539,
                            "src": "5043:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1546,
                              "name": "owners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1154,
                              "src": "5056:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5056:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5043:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 1551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1549,
                            "name": "_required",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1539,
                            "src": "5073:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5085:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5073:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5043:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5035:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5035:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1554,
                  "nodeType": "ExpressionStatement",
                  "src": "5035:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1555,
                      "name": "required",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1147,
                      "src": "5097:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1556,
                      "name": "_required",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1539,
                      "src": "5108:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5097:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1558,
                  "nodeType": "ExpressionStatement",
                  "src": "5097:20:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1560,
                        "name": "_required",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1539,
                        "src": "5151:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1559,
                      "name": "RequirementChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1140,
                      "src": "5132:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16)"
                      }
                    },
                    "id": 1561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5132:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1562,
                  "nodeType": "EmitStatement",
                  "src": "5127:34:3"
                }
              ]
            },
            "documentation": {
              "id": 1537,
              "nodeType": "StructuredDocumentation",
              "src": "4744:186:3",
              "text": "@notice Allows to change the number of required signatures\n@dev Transaction has to be sent by `execute` method\n@param _required Number of required signatures"
            },
            "functionSelector": "fe9abc7c",
            "id": 1564,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1542,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1541,
                  "name": "onlyThisContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1169,
                  "src": "5004:16:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5004:16:3"
              }
            ],
            "name": "changeRequirement",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1539,
                  "mutability": "mutable",
                  "name": "_required",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1564,
                  "src": "4962:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1538,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4962:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4961:17:3"
            },
            "returnParameters": {
              "id": 1543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5025:0:3"
            },
            "scope": 1565,
            "src": "4935:233:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1566,
        "src": "148:5023:3"
      }
    ],
    "src": "0:5172:3"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000d9038038062000d90833981810160405260408110156200003757600080fd5b8151602083018051604051929492938301929190846401000000008211156200005f57600080fd5b9083019060208201858111156200007557600080fd5b82518660208202830111640100000000821117156200009357600080fd5b82525081516020918201928201910280838360005b83811015620000c2578181015183820152602001620000a8565b505050509050016040525050506032815111158015620000e6575080518260ff1611155b8015620000f6575060008260ff16115b6200010057600080fd5b60005b8151811015620001945760008282815181106200011c57fe5b6020908102919091018101516001600160a01b0381166000908152600290925260409091205490915060ff161580156200015e57506001600160a01b03811615155b6200016857600080fd5b6001600160a01b03166000908152600260205260409020805460ff191660019081179091550162000103565b508051620001aa906003906020840190620001c6565b50506001805460ff191660ff929092169190911790556200025a565b8280548282559060005260206000209081019282156200021e579160200282015b828111156200021e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001e7565b506200022c92915062000230565b5090565b6200025791905b808211156200022c5780546001600160a01b031916815560010162000237565b90565b610b26806200026a6000396000f3fe60806040526004361061009c5760003560e01c8063affed0e011610064578063affed0e014610276578063b85e5b741461028b578063d74f8edd146102a0578063dc8452cd146102b5578063f12d394f146102e0578063fe9abc7c146104605761009c565b8063025e7c271461009e578063173825d9146100e457806325747dc3146101175780632f54bf6e146101fc5780637065cb4814610243575b005b3480156100aa57600080fd5b506100c8600480360360208110156100c157600080fd5b503561048d565b604080516001600160a01b039092168252519081900360200190f35b3480156100f057600080fd5b5061009c6004803603602081101561010757600080fd5b50356001600160a01b03166104b4565b34801561012357600080fd5b506101ea600480360360a081101561013a57600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561017457600080fd5b82018360208201111561018657600080fd5b803590602001918460018302840111600160201b831117156101a757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505091359250610632915050565b60408051918252519081900360200190f35b34801561020857600080fd5b5061022f6004803603602081101561021f57600080fd5b50356001600160a01b0316610707565b604080519115158252519081900360200190f35b34801561024f57600080fd5b5061009c6004803603602081101561026657600080fd5b50356001600160a01b031661071c565b34801561028257600080fd5b506101ea6107fc565b34801561029757600080fd5b506101ea610802565b3480156102ac57600080fd5b506101ea610808565b3480156102c157600080fd5b506102ca61080d565b6040805160ff9092168252519081900360200190f35b3480156102ec57600080fd5b5061009c600480360360c081101561030357600080fd5b810190602081018135600160201b81111561031d57600080fd5b82018360208201111561032f57600080fd5b803590602001918460208302840111600160201b8311171561035057600080fd5b919390929091602081019035600160201b81111561036d57600080fd5b82018360208201111561037f57600080fd5b803590602001918460208302840111600160201b831117156103a057600080fd5b919390929091602081019035600160201b8111156103bd57600080fd5b8201836020820111156103cf57600080fd5b803590602001918460208302840111600160201b831117156103f057600080fd5b919390926001600160a01b03833516926020810135929190606081019060400135600160201b81111561042257600080fd5b82018360208201111561043457600080fd5b803590602001918460018302840111600160201b8311171561045557600080fd5b509092509050610816565b34801561046c57600080fd5b5061009c6004803603602081101561048357600080fd5b503560ff16610a62565b6003818154811061049a57fe5b6000918252602090912001546001600160a01b0316905081565b3330146104c057600080fd5b60015460035460ff9091161080156104f057506001600160a01b03811660009081526002602052604090205460ff165b6104f957600080fd5b6001600160a01b0381166000908152600260205260408120805460ff191690555b600354600019018110156105cd57816001600160a01b03166003828154811061053f57fe5b6000918252602090912001546001600160a01b031614156105c55760038054600019810190811061056c57fe5b600091825260209091200154600380546001600160a01b03909216918390811061059257fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506105cd565b60010161051a565b5060038054806105d957fe5b600082815260208120820160001990810180546001600160a01b03191690559091019091556040516001600160a01b038316917f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da91a250565b604051601960f81b602080830182815260006021850181905230606081811b60228801526bffffffffffffffffffffffff198c821b81166036890152908b901b16604a870152605e860189905287519195869491938c938c938c938c938c939092607e909201918501908083835b602083106106bf5780518252601f1990920191602091820191016106a0565b51815160209384036101000a6000190180199092169116179052920193845250604080518085038152938201905282519201919091209e9d5050505050505050505050505050565b60026020526000908152604090205460ff1681565b33301461072857600080fd5b600354603211801561074257506001600160a01b03811615155b801561076757506001600160a01b03811660009081526002602052604090205460ff16155b61077057600080fd5b6001600160a01b038116600081815260026020526040808220805460ff1916600190811790915560038054918201815583527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b03191684179055517f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c39190a250565b60005481565b60035490565b603281565b60015460ff1681565b60015460ff16871080159061082a57508685145b801561083557508689145b61083e57600080fd5b600061088333868686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250549250610632915050565b90506000805b898110156109815760006001848f8f858181106108a257fe5b9050602002013560ff168e8e868181106108b857fe5b905060200201358d8d878181106108cb57fe5b9050602002013560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610929573d6000803e3d6000fd5b505050602060405103519050826001600160a01b0316816001600160a01b031611801561096e57506001600160a01b03811660009081526002602052604090205460ff165b61097757600080fd5b9150600101610889565b506000546040805187815290516001600160a01b038916929133917ff5bd825d17fe288739d8d08ef45cea22d549b66160dfca441227cc1e23a458e49181900360200190a46000546109da90600163ffffffff610ad716565b6000819055506000866001600160a01b0316868686604051808383808284376040519201945060009350909150508083038185875af1925050503d8060008114610a40576040519150601f19603f3d011682016040523d82523d6000602084013e610a45565b606091505b5050905080610a5357600080fd5b50505050505050505050505050565b333014610a6e57600080fd5b60035460ff821611801590610a86575060008160ff16115b610a8f57600080fd5b6001805460ff831660ff19909116811790915560408051918252517f168dafe5f579d94207d1614819d41482de1e0a1cce54ab8face74bd3fcd8a38b9181900360200190a150565b600082820183811015610ae957600080fd5b939250505056fea26469706673582212208c4ea12f086ac2bbb4e8862a94b9dbd36d50a5c0642345bfc6d338b3bd6867c164736f6c63430006070033",
  "bytecodeSha1": "3814e0d108289bc8c0941ec34cadfe412afcce24",
  "compiler": {
    "evm_version": "berlin",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.7"
  },
  "contractName": "MultiSig",
  "coverageMap": {
    "branches": {
      "20": {
        "SafeMath.add": {
          "37": [
            1552,
            1558,
            true
          ]
        }
      },
      "3": {
        "MultiSig.addOwner": {
          "27": [
            3807,
            3827,
            false
          ],
          "28": [
            3844,
            3859,
            true
          ]
        },
        "MultiSig.changeRequirement": {
          "35": [
            5043,
            5069,
            false
          ],
          "36": [
            5073,
            5086,
            true
          ]
        },
        "MultiSig.execute": {
          "29": [
            2804,
            2828,
            false
          ],
          "30": [
            2844,
            2872,
            false
          ],
          "31": [
            2888,
            2916,
            true
          ],
          "32": [
            3213,
            3232,
            false
          ],
          "33": [
            3236,
            3254,
            true
          ],
          "34": [
            3482,
            3493,
            true
          ]
        },
        "MultiSig.removeOwner": {
          "25": [
            4247,
            4262,
            true
          ],
          "26": [
            4372,
            4391,
            false
          ]
        }
      }
    },
    "statements": {
      "20": {
        "SafeMath.add": {
          "23": [
            1544,
            1559
          ],
          "24": [
            1570,
            1578
          ]
        }
      },
      "3": {
        "MultiSig.addOwner": {
          "8": [
            3752,
            3860
          ],
          "9": [
            3870,
            3892
          ],
          "10": [
            3902,
            3921
          ],
          "11": [
            3931,
            3954
          ]
        },
        "MultiSig.changeRequirement": {
          "20": [
            5035,
            5087
          ],
          "21": [
            5097,
            5117
          ],
          "22": [
            5127,
            5161
          ]
        },
        "MultiSig.execute": {
          "13": [
            2796,
            2917
          ],
          "14": [
            3205,
            3255
          ],
          "15": [
            3269,
            3288
          ],
          "16": [
            3105,
            3108
          ],
          "17": [
            3309,
            3363
          ],
          "18": [
            3373,
            3393
          ],
          "19": [
            3474,
            3494
          ]
        },
        "MultiSig.getNumberOfOwners": {
          "12": [
            4711,
            4731
          ]
        },
        "MultiSig.getUnsignedTransactionHash": {
          "7": [
            2053,
            2182
          ]
        },
        "MultiSig.removeOwner": {
          "0": [
            4211,
            4263
          ],
          "1": [
            4273,
            4296
          ],
          "2": [
            4411,
            4448
          ],
          "3": [
            4466,
            4471
          ],
          "4": [
            4349,
            4352
          ],
          "5": [
            4505,
            4517
          ],
          "6": [
            4527,
            4552
          ]
        }
      }
    }
  },
  "dependencies": [
    "SafeMath"
  ],
  "deployedBytecode": "60806040526004361061009c5760003560e01c8063affed0e011610064578063affed0e014610276578063b85e5b741461028b578063d74f8edd146102a0578063dc8452cd146102b5578063f12d394f146102e0578063fe9abc7c146104605761009c565b8063025e7c271461009e578063173825d9146100e457806325747dc3146101175780632f54bf6e146101fc5780637065cb4814610243575b005b3480156100aa57600080fd5b506100c8600480360360208110156100c157600080fd5b503561048d565b604080516001600160a01b039092168252519081900360200190f35b3480156100f057600080fd5b5061009c6004803603602081101561010757600080fd5b50356001600160a01b03166104b4565b34801561012357600080fd5b506101ea600480360360a081101561013a57600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561017457600080fd5b82018360208201111561018657600080fd5b803590602001918460018302840111600160201b831117156101a757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505091359250610632915050565b60408051918252519081900360200190f35b34801561020857600080fd5b5061022f6004803603602081101561021f57600080fd5b50356001600160a01b0316610707565b604080519115158252519081900360200190f35b34801561024f57600080fd5b5061009c6004803603602081101561026657600080fd5b50356001600160a01b031661071c565b34801561028257600080fd5b506101ea6107fc565b34801561029757600080fd5b506101ea610802565b3480156102ac57600080fd5b506101ea610808565b3480156102c157600080fd5b506102ca61080d565b6040805160ff9092168252519081900360200190f35b3480156102ec57600080fd5b5061009c600480360360c081101561030357600080fd5b810190602081018135600160201b81111561031d57600080fd5b82018360208201111561032f57600080fd5b803590602001918460208302840111600160201b8311171561035057600080fd5b919390929091602081019035600160201b81111561036d57600080fd5b82018360208201111561037f57600080fd5b803590602001918460208302840111600160201b831117156103a057600080fd5b919390929091602081019035600160201b8111156103bd57600080fd5b8201836020820111156103cf57600080fd5b803590602001918460208302840111600160201b831117156103f057600080fd5b919390926001600160a01b03833516926020810135929190606081019060400135600160201b81111561042257600080fd5b82018360208201111561043457600080fd5b803590602001918460018302840111600160201b8311171561045557600080fd5b509092509050610816565b34801561046c57600080fd5b5061009c6004803603602081101561048357600080fd5b503560ff16610a62565b6003818154811061049a57fe5b6000918252602090912001546001600160a01b0316905081565b3330146104c057600080fd5b60015460035460ff9091161080156104f057506001600160a01b03811660009081526002602052604090205460ff165b6104f957600080fd5b6001600160a01b0381166000908152600260205260408120805460ff191690555b600354600019018110156105cd57816001600160a01b03166003828154811061053f57fe5b6000918252602090912001546001600160a01b031614156105c55760038054600019810190811061056c57fe5b600091825260209091200154600380546001600160a01b03909216918390811061059257fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506105cd565b60010161051a565b5060038054806105d957fe5b600082815260208120820160001990810180546001600160a01b03191690559091019091556040516001600160a01b038316917f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da91a250565b604051601960f81b602080830182815260006021850181905230606081811b60228801526bffffffffffffffffffffffff198c821b81166036890152908b901b16604a870152605e860189905287519195869491938c938c938c938c938c939092607e909201918501908083835b602083106106bf5780518252601f1990920191602091820191016106a0565b51815160209384036101000a6000190180199092169116179052920193845250604080518085038152938201905282519201919091209e9d5050505050505050505050505050565b60026020526000908152604090205460ff1681565b33301461072857600080fd5b600354603211801561074257506001600160a01b03811615155b801561076757506001600160a01b03811660009081526002602052604090205460ff16155b61077057600080fd5b6001600160a01b038116600081815260026020526040808220805460ff1916600190811790915560038054918201815583527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b03191684179055517f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c39190a250565b60005481565b60035490565b603281565b60015460ff1681565b60015460ff16871080159061082a57508685145b801561083557508689145b61083e57600080fd5b600061088333868686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250549250610632915050565b90506000805b898110156109815760006001848f8f858181106108a257fe5b9050602002013560ff168e8e868181106108b857fe5b905060200201358d8d878181106108cb57fe5b9050602002013560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610929573d6000803e3d6000fd5b505050602060405103519050826001600160a01b0316816001600160a01b031611801561096e57506001600160a01b03811660009081526002602052604090205460ff165b61097757600080fd5b9150600101610889565b506000546040805187815290516001600160a01b038916929133917ff5bd825d17fe288739d8d08ef45cea22d549b66160dfca441227cc1e23a458e49181900360200190a46000546109da90600163ffffffff610ad716565b6000819055506000866001600160a01b0316868686604051808383808284376040519201945060009350909150508083038185875af1925050503d8060008114610a40576040519150601f19603f3d011682016040523d82523d6000602084013e610a45565b606091505b5050905080610a5357600080fd5b50505050505050505050505050565b333014610a6e57600080fd5b60035460ff821611801590610a86575060008160ff16115b610a8f57600080fd5b6001805460ff831660ff19909116811790915560408051918252517f168dafe5f579d94207d1614819d41482de1e0a1cce54ab8face74bd3fcd8a38b9181900360200190a150565b600082820183811015610ae957600080fd5b939250505056fea26469706673582212208c4ea12f086ac2bbb4e8862a94b9dbd36d50a5c0642345bfc6d338b3bd6867c164736f6c63430006070033",
  "deployedSourceMap": "148:5023:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;606:23;;5:9:-1;2:2;;;27:1;24;17:12;2:2;606:23:3;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;606:23:3;;:::i;:::-;;;;-1:-1:-1;;;;;606:23:3;;;;;;;;;;;;;;4118:441;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4118:441:3;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4118:441:3;-1:-1:-1;;;;;4118:441:3;;:::i;1828:361::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1828:361:3;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;1828:361:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;1828:361:3;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1828:361:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1828:361:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1828:361:3;;-1:-1:-1;;1828:361:3;;;-1:-1:-1;1828:361:3;;-1:-1:-1;;1828:361:3:i;:::-;;;;;;;;;;;;;;;;560:40;;5:9:-1;2:2;;;27:1;24;17:12;2:2;560:40:3;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;560:40:3;-1:-1:-1;;;;;560:40:3;;:::i;:::-;;;;;;;;;;;;;;;;;;3662:299;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3662:299:3;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3662:299:3;-1:-1:-1;;;;;3662:299:3;;:::i;507:20::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;507:20:3;;;:::i;4640:98::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4640:98:3;;;:::i;456:44::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;456:44:3;;;:::i;533:21::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;533:21:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2558:943;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2558:943:3;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;2558:943:3;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;2558:943:3;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2558:943:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2558:943:3;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;2558:943:3;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2558:943:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2558:943:3;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;2558:943:3;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2558:943:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2558:943:3;;;;-1:-1:-1;;;;;2558:943:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;2558:943:3;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2558:943:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;2558:943:3;;-1:-1:-1;2558:943:3;-1:-1:-1;2558:943:3;:::i;4935:233::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4935:233:3;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4935:233:3;;;;:::i;606:23::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;606:23:3;;-1:-1:-1;606:23:3;:::o;4118:441::-;746:10;768:4;746:27;738:36;;12:1:-1;9;2:12;738:36:3;4235:8:::1;::::0;4219:6:::1;:13:::0;4235:8:::1;::::0;;::::1;-1:-1:-1::0;4219:43:3;::::1;;;-1:-1:-1::0;;;;;;4247:15:3;::::1;;::::0;;;:7:::1;:15;::::0;;;;;::::1;;4219:43;4211:52;;12:1:-1;9::::0;2:12:::1;4211:52:3;-1:-1:-1::0;;;;;4273:15:3;::::1;4291:5;4273:15:::0;;;:7:::1;:15;::::0;;;;:23;;-1:-1:-1;;4273:23:3::1;::::0;;4306:190:::1;4330:6;:13:::0;-1:-1:-1;;4330:17:3;4326:21;::::1;4306:190;;;4385:6;-1:-1:-1::0;;;;;4372:19:3::1;:6;4379:1;4372:9;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;4372:9:3::1;:19;4368:118;;;4423:6;4430:13:::0;;-1:-1:-1;;4430:17:3;;;4423:25;::::1;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;4411:6:::1;:9:::0;;-1:-1:-1;;;;;4423:25:3;;::::1;::::0;4418:1;;4411:9;::::1;;;;;;;;;;;;;:37;;;;;-1:-1:-1::0;;;;;4411:37:3::1;;;;;-1:-1:-1::0;;;;;4411:37:3::1;;;;;;4466:5;;4368:118;4349:3;;4306:190;;;;4505:6;:12;;;;;;;;::::0;;;::::1;::::0;;;;-1:-1:-1;;4505:12:3;;;;;-1:-1:-1;;;;;;4505:12:3::1;::::0;;;;;;;;4532:20:::1;::::0;-1:-1:-1;;;;;4532:20:3;::::1;::::0;::::1;::::0;::::1;4118:441:::0;:::o;1828:361::-;2083:98;;-1:-1:-1;;;2083:98:3;;;;;;;2030:7;2083:98;;;;;;2129:4;2083:98;;;;;;;;-1:-1:-1;;2083:98:3;;;;;;;;;;;;;;;;;;;;;;;;;;2030:7;;;;2129:4;;2136:7;;2145:12;;2159:6;;2167:5;;2174:6;;2083:98;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2083:98:3;;;;;-1:-1:-1;2083:98:3;;;26:21:-1;;;6:49;;2083:98:3;;;;;2060:122;;;;;;;;;1828:361;-1:-1:-1;;;;;;;;;;;;;;1828:361:3:o;560:40::-;;;;;;;;;;;;;;;:::o;3662:299::-;746:10;768:4;746:27;738:36;;12:1:-1;9;2:12;738:36:3;3760:6:::1;:13:::0;498:2:::1;-1:-1:-1::0;3760:67:3;::::1;;;-1:-1:-1::0;;;;;;3807:20:3;::::1;::::0;::::1;3760:67;:99;;;;-1:-1:-1::0;;;;;;3844:15:3;::::1;;::::0;;;:7:::1;:15;::::0;;;;;::::1;;3843:16;3760:99;3752:108;;12:1:-1;9::::0;2:12:::1;3752:108:3;-1:-1:-1::0;;;;;3870:15:3;::::1;;::::0;;;:7:::1;:15;::::0;;;;;:22;;-1:-1:-1;;3870:22:3::1;3888:4;3870:22:::0;;::::1;::::0;;;3902:6:::1;27:10:-1::0;;23:18;;::::1;45:23:::0;;3902:19:3;;;::::1;::::0;;-1:-1:-1;;;;;;3902:19:3::1;::::0;::::1;::::0;;3936:18;::::1;::::0;3870:15;3936:18:::1;3662:299:::0;:::o;507:20::-;;;;:::o;4640:98::-;4718:6;:13;4640:98;:::o;456:44::-;498:2;456:44;:::o;533:21::-;;;;;;:::o;2558:943::-;2820:8;;;;2804:24;;;;;:68;;-1:-1:-1;2844:28:3;;;2804:68;:112;;;;-1:-1:-1;2888:28:3;;;2804:112;2796:121;;12:1:-1;9;2:12;2796:121:3;2928:14;2945:74;2972:10;2984:12;2998:6;3006:5;;2945:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;-1:-1;3013:5:3;;-1:-1:-1;2945:26:3;;-1:-1:-1;;2945:74:3:i;:::-;2928:91;-1:-1:-1;3029:15:3;;3067:232;3087:16;;;3067:232;;;3124:17;3144:47;3154:6;3162:5;;3168:1;3162:8;;;;;;;;;;;;;;;3172:5;;3178:1;3172:8;;;;;;;;;;;;;3182:5;;3188:1;3182:8;;;;;;;;;;;;;3144:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3144:47:3;;;;;;;;3124:67;;3225:7;-1:-1:-1;;;;;3213:19:3;:9;-1:-1:-1;;;;;3213:19:3;;:41;;;;-1:-1:-1;;;;;;3236:18:3;;;;;;:7;:18;;;;;;;;3213:41;3205:50;;12:1:-1;9;2:12;3205:50:3;3279:9;-1:-1:-1;3105:3:3;;3067:232;;;-1:-1:-1;3335:5:3;;3314:49;;;;;;;;-1:-1:-1;;;;;3314:49:3;;;3335:5;3323:10;;3314:49;;;;;;;;;3381:5;;:12;;3391:1;3381:12;:9;:12;:::i;:::-;3373:5;:20;;;;3404:16;3425:12;-1:-1:-1;;;;;3425:17:3;3450:6;3458:5;;3425:39;;;;;30:3:-1;22:6;14;1:33;3425:39:3;;45:16:-1;;;-1:-1;3425:39:3;;-1:-1:-1;3425:39:3;;-1:-1:-1;;3425:39:3;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;3403:61:3;;;3482:11;3474:20;;12:1:-1;9;2:12;3474:20:3;2558:943;;;;;;;;;;;;;:::o;4935:233::-;746:10;768:4;746:27;738:36;;12:1:-1;9;2:12;738:36:3;5056:6:::1;:13:::0;5043:26:::1;::::0;::::1;;::::0;::::1;::::0;:43:::1;;;5085:1;5073:9;:13;;;5043:43;5035:52;;12:1:-1;9::::0;2:12:::1;5035:52:3;5097:8;:20:::0;;::::1;::::0;::::1;-1:-1:-1::0;;5097:20:3;;::::1;::::0;::::1;::::0;;;5132:29:::1;::::0;;;;;;::::1;::::0;;;;::::1;::::0;;::::1;4935:233:::0;:::o;1440:145:20:-;1498:7;1529:5;;;1552:6;;;;1544:15;;12:1:-1;9;2:12;1544:15:20;1577:1;1440:145;-1:-1:-1;;;1440:145:20:o",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "addOwner(address)": {
        "details": "Transaction has to be sent by `execute` method.",
        "notice": "Allows to add a new owner",
        "params": {
          "_owner": "Address of new owner"
        }
      },
      "changeRequirement(uint8)": {
        "details": "Transaction has to be sent by `execute` method",
        "notice": "Allows to change the number of required signatures",
        "params": {
          "_required": "Number of required signatures"
        }
      },
      "constructor": {
        "params": {
          "_owners": "List of initial owners.",
          "_required": "Number of required signings"
        }
      },
      "execute(uint8[],bytes32[],bytes32[],address,uint256,bytes)": {
        "details": "Note that address recovered from signatures must be strictly increasing",
        "params": {
          "_data": "Call data",
          "_destination": "Destination address",
          "_sigR": "Array of signatures values R",
          "_sigS": "Array of signatures values S",
          "_sigV": "Array of signatures values V",
          "_value": "Amount of ETH to transfer"
        }
      },
      "getNumberOfOwners()": {
        "notice": "Returns the number of owners of this MultiSig"
      },
      "getUnsignedTransactionHash(address,address,uint256,bytes,uint256)": {
        "details": "Follows ERC191 signature scheme: https://github.com/ethereum/EIPs/issues/191",
        "notice": "Get unsigned hash for transaction parameters",
        "params": {
          "_data": "Call data",
          "_destination": "Destination address",
          "_nonce": "Nonce",
          "_sender": "Trustee who will execute the transaction",
          "_value": "Amount of ETH to transfer"
        }
      },
      "removeOwner(address)": {
        "details": "Transaction has to be sent by `execute` method.",
        "notice": "Allows to remove an owner",
        "params": {
          "_owner": "Address of owner"
        }
      }
    },
    "notice": "Multi-signature contract with off-chain signing",
    "title": "MultiSig"
  },
  "offset": [
    148,
    5171
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFFED0E0 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xB85E5B74 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0xD74F8EDD EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xDC8452CD EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xF12D394F EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xFE9ABC7C EQ PUSH2 0x460 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x25E7C27 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x173825D9 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x25747DC3 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x7065CB48 EQ PUSH2 0x243 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP SWAP2 CALLDATALOAD SWAP3 POP PUSH2 0x632 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x71C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x7FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x802 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x808 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 CALLDATALOAD AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP3 SWAP2 SWAP1 PUSH1 0x60 DUP2 ADD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x816 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x49A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0xFF SWAP1 SWAP2 AND LT DUP1 ISZERO PUSH2 0x4F0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 NOT ADD DUP2 LT ISZERO PUSH2 0x5CD JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x53F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x56C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x592 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x51A JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD DUP1 PUSH2 0x5D9 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 DUP3 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH32 0x58619076ADF5BB0943D100EF88D52D7C3FD691B19D3A9071B555B651FBF418DA SWAP2 LOG2 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x19 PUSH1 0xF8 SHL PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x21 DUP6 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP2 DUP2 SHL PUSH1 0x22 DUP9 ADD MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP13 DUP3 SHL DUP2 AND PUSH1 0x36 DUP10 ADD MSTORE SWAP1 DUP12 SWAP1 SHL AND PUSH1 0x4A DUP8 ADD MSTORE PUSH1 0x5E DUP7 ADD DUP10 SWAP1 MSTORE DUP8 MLOAD SWAP2 SWAP6 DUP7 SWAP5 SWAP2 SWAP4 DUP13 SWAP4 DUP13 SWAP4 DUP13 SWAP4 DUP13 SWAP4 DUP13 SWAP4 SWAP1 SWAP3 PUSH1 0x7E SWAP1 SWAP3 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x6BF JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x6A0 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP4 DUP5 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 SUB DUP2 MSTORE SWAP4 DUP3 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x32 GT DUP1 ISZERO PUSH2 0x742 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x767 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD PUSH32 0x994A936646FE87FFE4F1E469D3D6AA417D6B855598397F323DE5B449F765F0C3 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND DUP8 LT DUP1 ISZERO SWAP1 PUSH2 0x82A JUMPI POP DUP7 DUP6 EQ JUMPDEST DUP1 ISZERO PUSH2 0x835 JUMPI POP DUP7 DUP10 EQ JUMPDEST PUSH2 0x83E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x883 CALLER DUP7 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SLOAD SWAP3 POP PUSH2 0x632 SWAP2 POP POP JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP10 DUP2 LT ISZERO PUSH2 0x981 JUMPI PUSH1 0x0 PUSH1 0x1 DUP5 DUP16 DUP16 DUP6 DUP2 DUP2 LT PUSH2 0x8A2 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0xFF AND DUP15 DUP15 DUP7 DUP2 DUP2 LT PUSH2 0x8B8 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP14 DUP14 DUP8 DUP2 DUP2 LT PUSH2 0x8CB JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x929 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT DUP1 ISZERO PUSH2 0x96E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x977 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x889 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP3 SWAP2 CALLER SWAP2 PUSH32 0xF5BD825D17FE288739D8D08EF45CEA22D549B66160DFCA441227CC1E23A458E4 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG4 PUSH1 0x0 SLOAD PUSH2 0x9DA SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xAD7 AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA40 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xA6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF DUP3 AND GT DUP1 ISZERO SWAP1 PUSH2 0xA86 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0xFF AND GT JUMPDEST PUSH2 0xA8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF DUP4 AND PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x168DAFE5F579D94207D1614819D41482DE1E0A1CCE54AB8FACE74BD3FCD8A38B SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0x4E LOG1 0x2F ADDMOD PUSH11 0xC2BBB4E8862A94B9DBD36D POP 0xA5 0xC0 PUSH5 0x2345BFC6D3 CODESIZE 0xB3 0xBD PUSH9 0x67C164736F6C634300 MOD SMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        148,
        5171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9C"
    },
    "12": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xAFFED0E0"
    },
    "25": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "GT",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x64"
    },
    "29": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xAFFED0E0"
    },
    "36": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "EQ",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x276"
    },
    "40": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB85E5B74"
    },
    "47": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "EQ",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x28B"
    },
    "51": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD74F8EDD"
    },
    "58": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A0"
    },
    "62": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDC8452CD"
    },
    "69": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B5"
    },
    "73": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF12D394F"
    },
    "80": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "EQ",
      "path": "3"
    },
    "81": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E0"
    },
    "84": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "85": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "86": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFE9ABC7C"
    },
    "91": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "EQ",
      "path": "3"
    },
    "92": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x460"
    },
    "95": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "96": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9C"
    },
    "99": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "JUMP",
      "path": "3"
    },
    "100": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x25E7C27"
    },
    "107": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "EQ",
      "path": "3"
    },
    "108": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9E"
    },
    "111": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x173825D9"
    },
    "118": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "EQ",
      "path": "3"
    },
    "119": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE4"
    },
    "122": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x25747DC3"
    },
    "129": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "EQ",
      "path": "3"
    },
    "130": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x117"
    },
    "133": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "134": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "135": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2F54BF6E"
    },
    "140": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "EQ",
      "path": "3"
    },
    "141": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FC"
    },
    "144": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "145": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "146": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7065CB48"
    },
    "151": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "EQ",
      "path": "3"
    },
    "152": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x243"
    },
    "155": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "156": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "157": {
      "fn": null,
      "offset": [
        148,
        5171
      ],
      "op": "STOP",
      "path": "3"
    },
    "158": {
      "offset": [
        606,
        629
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "159": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "160": {
      "op": "DUP1"
    },
    "161": {
      "op": "ISZERO"
    },
    "162": {
      "op": "PUSH2",
      "value": "0xAA"
    },
    "165": {
      "op": "JUMPI"
    },
    "166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "168": {
      "op": "DUP1"
    },
    "169": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "REVERT",
      "path": "3"
    },
    "170": {
      "op": "JUMPDEST"
    },
    "171": {
      "offset": [
        606,
        629
      ],
      "op": "POP",
      "path": "3"
    },
    "172": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC8"
    },
    "175": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "177": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "178": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "179": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "SUB",
      "path": "3"
    },
    "180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "182": {
      "op": "DUP2"
    },
    "183": {
      "op": "LT"
    },
    "184": {
      "op": "ISZERO"
    },
    "185": {
      "op": "PUSH2",
      "value": "0xC1"
    },
    "188": {
      "op": "JUMPI"
    },
    "189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "191": {
      "op": "DUP1"
    },
    "192": {
      "op": "REVERT"
    },
    "193": {
      "op": "JUMPDEST"
    },
    "194": {
      "op": "POP"
    },
    "195": {
      "offset": [
        606,
        629
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "196": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x48D"
    },
    "199": {
      "fn": null,
      "jump": "i",
      "offset": [
        606,
        629
      ],
      "op": "JUMP",
      "path": "3"
    },
    "200": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "201": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "203": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "204": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "211": {
      "op": "SHL"
    },
    "212": {
      "op": "SUB"
    },
    "213": {
      "offset": [
        606,
        629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "214": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "215": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "AND",
      "path": "3"
    },
    "216": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "DUP3",
      "path": "3"
    },
    "217": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "218": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "219": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "220": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "DUP2",
      "path": "3"
    },
    "221": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "222": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "SUB",
      "path": "3"
    },
    "223": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "225": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "ADD",
      "path": "3"
    },
    "226": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "227": {
      "fn": null,
      "offset": [
        606,
        629
      ],
      "op": "RETURN",
      "path": "3"
    },
    "228": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4118,
        4559
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "229": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4118,
        4559
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "230": {
      "op": "DUP1"
    },
    "231": {
      "op": "ISZERO"
    },
    "232": {
      "op": "PUSH2",
      "value": "0xF0"
    },
    "235": {
      "op": "JUMPI"
    },
    "236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "238": {
      "op": "DUP1"
    },
    "239": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MultiSig.removeOwner",
      "offset": [
        4118,
        4559
      ],
      "op": "REVERT",
      "path": "3"
    },
    "240": {
      "op": "JUMPDEST"
    },
    "241": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4118,
        4559
      ],
      "op": "POP",
      "path": "3"
    },
    "242": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4118,
        4559
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9C"
    },
    "245": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4118,
        4559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "247": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4118,
        4559
      ],
      "op": "DUP1",
      "path": "3"
    },
    "248": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4118,
        4559
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "249": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4118,
        4559
      ],
      "op": "SUB",
      "path": "3"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "252": {
      "op": "DUP2"
    },
    "253": {
      "op": "LT"
    },
    "254": {
      "op": "ISZERO"
    },
    "255": {
      "op": "PUSH2",
      "value": "0x107"
    },
    "258": {
      "op": "JUMPI"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "261": {
      "op": "DUP1"
    },
    "262": {
      "op": "REVERT"
    },
    "263": {
      "op": "JUMPDEST"
    },
    "264": {
      "op": "POP"
    },
    "265": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4118,
        4559
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "272": {
      "op": "SHL"
    },
    "273": {
      "op": "SUB"
    },
    "274": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4118,
        4559
      ],
      "op": "AND",
      "path": "3"
    },
    "275": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4118,
        4559
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B4"
    },
    "278": {
      "fn": "MultiSig.removeOwner",
      "jump": "i",
      "offset": [
        4118,
        4559
      ],
      "op": "JUMP",
      "path": "3"
    },
    "279": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "280": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "281": {
      "op": "DUP1"
    },
    "282": {
      "op": "ISZERO"
    },
    "283": {
      "op": "PUSH2",
      "value": "0x123"
    },
    "286": {
      "op": "JUMPI"
    },
    "287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "289": {
      "op": "DUP1"
    },
    "290": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "REVERT",
      "path": "3"
    },
    "291": {
      "op": "JUMPDEST"
    },
    "292": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "POP",
      "path": "3"
    },
    "293": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EA"
    },
    "296": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "298": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP1",
      "path": "3"
    },
    "299": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "300": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SUB",
      "path": "3"
    },
    "301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "303": {
      "op": "DUP2"
    },
    "304": {
      "op": "LT"
    },
    "305": {
      "op": "ISZERO"
    },
    "306": {
      "op": "PUSH2",
      "value": "0x13A"
    },
    "309": {
      "op": "JUMPI"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "312": {
      "op": "DUP1"
    },
    "313": {
      "op": "REVERT"
    },
    "314": {
      "op": "JUMPDEST"
    },
    "315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "321": {
      "op": "SHL"
    },
    "322": {
      "op": "SUB"
    },
    "323": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP3",
      "path": "3"
    },
    "324": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "325": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP2",
      "path": "3"
    },
    "326": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "AND",
      "path": "3"
    },
    "327": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "328": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "330": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP2",
      "path": "3"
    },
    "331": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "ADD",
      "path": "3"
    },
    "332": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "333": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "334": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "335": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "AND",
      "path": "3"
    },
    "336": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "337": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "339": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP3",
      "path": "3"
    },
    "340": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "ADD",
      "path": "3"
    },
    "341": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "342": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "343": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "344": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP2",
      "path": "3"
    },
    "345": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "ADD",
      "path": "3"
    },
    "346": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "347": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "349": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP2",
      "path": "3"
    },
    "350": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "ADD",
      "path": "3"
    },
    "351": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "353": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP3",
      "path": "3"
    },
    "354": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "ADD",
      "path": "3"
    },
    "355": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "360": {
      "op": "SHL"
    },
    "361": {
      "op": "DUP2"
    },
    "362": {
      "op": "GT"
    },
    "363": {
      "op": "ISZERO"
    },
    "364": {
      "op": "PUSH2",
      "value": "0x174"
    },
    "367": {
      "op": "JUMPI"
    },
    "368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "370": {
      "op": "DUP1"
    },
    "371": {
      "op": "REVERT"
    },
    "372": {
      "op": "JUMPDEST"
    },
    "373": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP3",
      "path": "3"
    },
    "374": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "ADD",
      "path": "3"
    },
    "375": {
      "op": "DUP4"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "378": {
      "op": "DUP3"
    },
    "379": {
      "op": "ADD"
    },
    "380": {
      "op": "GT"
    },
    "381": {
      "op": "ISZERO"
    },
    "382": {
      "op": "PUSH2",
      "value": "0x186"
    },
    "385": {
      "op": "JUMPI"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "388": {
      "op": "DUP1"
    },
    "389": {
      "op": "REVERT"
    },
    "390": {
      "op": "JUMPDEST"
    },
    "391": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP1",
      "path": "3"
    },
    "392": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "393": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "394": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "396": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "ADD",
      "path": "3"
    },
    "397": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "398": {
      "op": "DUP5"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "DUP4"
    },
    "402": {
      "op": "MUL"
    },
    "403": {
      "op": "DUP5"
    },
    "404": {
      "op": "ADD"
    },
    "405": {
      "op": "GT"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "410": {
      "op": "SHL"
    },
    "411": {
      "op": "DUP4"
    },
    "412": {
      "op": "GT"
    },
    "413": {
      "op": "OR"
    },
    "414": {
      "op": "ISZERO"
    },
    "415": {
      "op": "PUSH2",
      "value": "0x1A7"
    },
    "418": {
      "op": "JUMPI"
    },
    "419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "421": {
      "op": "DUP1"
    },
    "422": {
      "op": "REVERT"
    },
    "423": {
      "op": "JUMPDEST"
    },
    "424": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "425": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "426": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP1",
      "path": "3"
    },
    "427": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP1",
      "path": "3"
    },
    "428": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "430": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "ADD",
      "path": "3"
    },
    "431": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "433": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP1",
      "path": "3"
    },
    "434": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "435": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DIV",
      "path": "3"
    },
    "436": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "MUL",
      "path": "3"
    },
    "437": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "439": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "ADD",
      "path": "3"
    },
    "440": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "442": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "443": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "444": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP2",
      "path": "3"
    },
    "445": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "ADD",
      "path": "3"
    },
    "446": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "448": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "449": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP1",
      "path": "3"
    },
    "450": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "451": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "452": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "453": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "454": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP2",
      "path": "3"
    },
    "455": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP2",
      "path": "3"
    },
    "456": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "457": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "459": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "ADD",
      "path": "3"
    },
    "460": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP4",
      "path": "3"
    },
    "461": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP4",
      "path": "3"
    },
    "462": {
      "op": "DUP1"
    },
    "463": {
      "op": "DUP3"
    },
    "464": {
      "op": "DUP5"
    },
    "465": {
      "op": "CALLDATACOPY"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "468": {
      "op": "SWAP3"
    },
    "469": {
      "op": "ADD"
    },
    "470": {
      "op": "SWAP2"
    },
    "471": {
      "op": "SWAP1"
    },
    "472": {
      "op": "SWAP2"
    },
    "473": {
      "op": "MSTORE"
    },
    "474": {
      "op": "POP"
    },
    "475": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "476": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "477": {
      "op": "POP"
    },
    "478": {
      "op": "POP"
    },
    "479": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "480": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "481": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x632"
    },
    "486": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "487": {
      "op": "POP"
    },
    "488": {
      "op": "POP"
    },
    "489": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "jump": "i",
      "offset": [
        1828,
        2189
      ],
      "op": "JUMP",
      "path": "3"
    },
    "490": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "491": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "493": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP1",
      "path": "3"
    },
    "494": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "495": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "496": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP3",
      "path": "3"
    },
    "497": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "498": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "499": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "500": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "DUP2",
      "path": "3"
    },
    "501": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "502": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SUB",
      "path": "3"
    },
    "503": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "505": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "ADD",
      "path": "3"
    },
    "506": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "507": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "RETURN",
      "path": "3"
    },
    "508": {
      "offset": [
        560,
        600
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "509": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "510": {
      "op": "DUP1"
    },
    "511": {
      "op": "ISZERO"
    },
    "512": {
      "op": "PUSH2",
      "value": "0x208"
    },
    "515": {
      "op": "JUMPI"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "518": {
      "op": "DUP1"
    },
    "519": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "REVERT",
      "path": "3"
    },
    "520": {
      "op": "JUMPDEST"
    },
    "521": {
      "offset": [
        560,
        600
      ],
      "op": "POP",
      "path": "3"
    },
    "522": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22F"
    },
    "525": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "527": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "DUP1",
      "path": "3"
    },
    "528": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "529": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "SUB",
      "path": "3"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "532": {
      "op": "DUP2"
    },
    "533": {
      "op": "LT"
    },
    "534": {
      "op": "ISZERO"
    },
    "535": {
      "op": "PUSH2",
      "value": "0x21F"
    },
    "538": {
      "op": "JUMPI"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "541": {
      "op": "DUP1"
    },
    "542": {
      "op": "REVERT"
    },
    "543": {
      "op": "JUMPDEST"
    },
    "544": {
      "op": "POP"
    },
    "545": {
      "offset": [
        560,
        600
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "552": {
      "op": "SHL"
    },
    "553": {
      "op": "SUB"
    },
    "554": {
      "offset": [
        560,
        600
      ],
      "op": "AND",
      "path": "3"
    },
    "555": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x707"
    },
    "558": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "jump": "i",
      "offset": [
        560,
        600
      ],
      "op": "JUMP",
      "path": "3"
    },
    "559": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "560": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "562": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "DUP1",
      "path": "3"
    },
    "563": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "564": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "565": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "566": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "567": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "DUP3",
      "path": "3"
    },
    "568": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "569": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "570": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "571": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "572": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "573": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "SUB",
      "path": "3"
    },
    "574": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "576": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "ADD",
      "path": "3"
    },
    "577": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "578": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "RETURN",
      "path": "3"
    },
    "579": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3662,
        3961
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "580": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3662,
        3961
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "581": {
      "op": "DUP1"
    },
    "582": {
      "op": "ISZERO"
    },
    "583": {
      "op": "PUSH2",
      "value": "0x24F"
    },
    "586": {
      "op": "JUMPI"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "589": {
      "op": "DUP1"
    },
    "590": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MultiSig.addOwner",
      "offset": [
        3662,
        3961
      ],
      "op": "REVERT",
      "path": "3"
    },
    "591": {
      "op": "JUMPDEST"
    },
    "592": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3662,
        3961
      ],
      "op": "POP",
      "path": "3"
    },
    "593": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3662,
        3961
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9C"
    },
    "596": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3662,
        3961
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "598": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3662,
        3961
      ],
      "op": "DUP1",
      "path": "3"
    },
    "599": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3662,
        3961
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "600": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3662,
        3961
      ],
      "op": "SUB",
      "path": "3"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "603": {
      "op": "DUP2"
    },
    "604": {
      "op": "LT"
    },
    "605": {
      "op": "ISZERO"
    },
    "606": {
      "op": "PUSH2",
      "value": "0x266"
    },
    "609": {
      "op": "JUMPI"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "612": {
      "op": "DUP1"
    },
    "613": {
      "op": "REVERT"
    },
    "614": {
      "op": "JUMPDEST"
    },
    "615": {
      "op": "POP"
    },
    "616": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3662,
        3961
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "623": {
      "op": "SHL"
    },
    "624": {
      "op": "SUB"
    },
    "625": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3662,
        3961
      ],
      "op": "AND",
      "path": "3"
    },
    "626": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3662,
        3961
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x71C"
    },
    "629": {
      "fn": "MultiSig.addOwner",
      "jump": "i",
      "offset": [
        3662,
        3961
      ],
      "op": "JUMP",
      "path": "3"
    },
    "630": {
      "offset": [
        507,
        527
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "631": {
      "fn": "MultiSig.addOwner",
      "offset": [
        507,
        527
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "632": {
      "op": "DUP1"
    },
    "633": {
      "op": "ISZERO"
    },
    "634": {
      "op": "PUSH2",
      "value": "0x282"
    },
    "637": {
      "op": "JUMPI"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "640": {
      "op": "DUP1"
    },
    "641": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MultiSig.addOwner",
      "offset": [
        507,
        527
      ],
      "op": "REVERT",
      "path": "3"
    },
    "642": {
      "op": "JUMPDEST"
    },
    "643": {
      "offset": [
        507,
        527
      ],
      "op": "POP",
      "path": "3"
    },
    "644": {
      "fn": "MultiSig.addOwner",
      "offset": [
        507,
        527
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EA"
    },
    "647": {
      "fn": "MultiSig.addOwner",
      "offset": [
        507,
        527
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7FC"
    },
    "650": {
      "fn": "MultiSig.addOwner",
      "jump": "i",
      "offset": [
        507,
        527
      ],
      "op": "JUMP",
      "path": "3"
    },
    "651": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        4640,
        4738
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "652": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        4640,
        4738
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "653": {
      "op": "DUP1"
    },
    "654": {
      "op": "ISZERO"
    },
    "655": {
      "op": "PUSH2",
      "value": "0x297"
    },
    "658": {
      "op": "JUMPI"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "661": {
      "op": "DUP1"
    },
    "662": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        4640,
        4738
      ],
      "op": "REVERT",
      "path": "3"
    },
    "663": {
      "op": "JUMPDEST"
    },
    "664": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        4640,
        4738
      ],
      "op": "POP",
      "path": "3"
    },
    "665": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        4640,
        4738
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EA"
    },
    "668": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        4640,
        4738
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x802"
    },
    "671": {
      "fn": "MultiSig.getNumberOfOwners",
      "jump": "i",
      "offset": [
        4640,
        4738
      ],
      "op": "JUMP",
      "path": "3"
    },
    "672": {
      "offset": [
        456,
        500
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "673": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        456,
        500
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "674": {
      "op": "DUP1"
    },
    "675": {
      "op": "ISZERO"
    },
    "676": {
      "op": "PUSH2",
      "value": "0x2AC"
    },
    "679": {
      "op": "JUMPI"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "682": {
      "op": "DUP1"
    },
    "683": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        456,
        500
      ],
      "op": "REVERT",
      "path": "3"
    },
    "684": {
      "op": "JUMPDEST"
    },
    "685": {
      "offset": [
        456,
        500
      ],
      "op": "POP",
      "path": "3"
    },
    "686": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        456,
        500
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EA"
    },
    "689": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        456,
        500
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x808"
    },
    "692": {
      "fn": "MultiSig.getNumberOfOwners",
      "jump": "i",
      "offset": [
        456,
        500
      ],
      "op": "JUMP",
      "path": "3"
    },
    "693": {
      "offset": [
        533,
        554
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "694": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "695": {
      "op": "DUP1"
    },
    "696": {
      "op": "ISZERO"
    },
    "697": {
      "op": "PUSH2",
      "value": "0x2C1"
    },
    "700": {
      "op": "JUMPI"
    },
    "701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "703": {
      "op": "DUP1"
    },
    "704": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "REVERT",
      "path": "3"
    },
    "705": {
      "op": "JUMPDEST"
    },
    "706": {
      "offset": [
        533,
        554
      ],
      "op": "POP",
      "path": "3"
    },
    "707": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2CA"
    },
    "710": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x80D"
    },
    "713": {
      "fn": "MultiSig.getNumberOfOwners",
      "jump": "i",
      "offset": [
        533,
        554
      ],
      "op": "JUMP",
      "path": "3"
    },
    "714": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "715": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "717": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "DUP1",
      "path": "3"
    },
    "718": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "719": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "721": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "722": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "723": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "AND",
      "path": "3"
    },
    "724": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "DUP3",
      "path": "3"
    },
    "725": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "726": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "727": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "728": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "DUP2",
      "path": "3"
    },
    "729": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "730": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "SUB",
      "path": "3"
    },
    "731": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "733": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "ADD",
      "path": "3"
    },
    "734": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "735": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "RETURN",
      "path": "3"
    },
    "736": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "737": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "738": {
      "op": "DUP1"
    },
    "739": {
      "op": "ISZERO"
    },
    "740": {
      "op": "PUSH2",
      "value": "0x2EC"
    },
    "743": {
      "op": "JUMPI"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "746": {
      "op": "DUP1"
    },
    "747": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "REVERT",
      "path": "3"
    },
    "748": {
      "op": "JUMPDEST"
    },
    "749": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "POP",
      "path": "3"
    },
    "750": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9C"
    },
    "753": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "755": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP1",
      "path": "3"
    },
    "756": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "757": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SUB",
      "path": "3"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "760": {
      "op": "DUP2"
    },
    "761": {
      "op": "LT"
    },
    "762": {
      "op": "ISZERO"
    },
    "763": {
      "op": "PUSH2",
      "value": "0x303"
    },
    "766": {
      "op": "JUMPI"
    },
    "767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "769": {
      "op": "DUP1"
    },
    "770": {
      "op": "REVERT"
    },
    "771": {
      "op": "JUMPDEST"
    },
    "772": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP2",
      "path": "3"
    },
    "773": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "ADD",
      "path": "3"
    },
    "774": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "775": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "777": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP2",
      "path": "3"
    },
    "778": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "ADD",
      "path": "3"
    },
    "779": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP2",
      "path": "3"
    },
    "780": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "785": {
      "op": "SHL"
    },
    "786": {
      "op": "DUP2"
    },
    "787": {
      "op": "GT"
    },
    "788": {
      "op": "ISZERO"
    },
    "789": {
      "op": "PUSH2",
      "value": "0x31D"
    },
    "792": {
      "op": "JUMPI"
    },
    "793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "795": {
      "op": "DUP1"
    },
    "796": {
      "op": "REVERT"
    },
    "797": {
      "op": "JUMPDEST"
    },
    "798": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP3",
      "path": "3"
    },
    "799": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "ADD",
      "path": "3"
    },
    "800": {
      "op": "DUP4"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "803": {
      "op": "DUP3"
    },
    "804": {
      "op": "ADD"
    },
    "805": {
      "op": "GT"
    },
    "806": {
      "op": "ISZERO"
    },
    "807": {
      "op": "PUSH2",
      "value": "0x32F"
    },
    "810": {
      "op": "JUMPI"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "813": {
      "op": "DUP1"
    },
    "814": {
      "op": "REVERT"
    },
    "815": {
      "op": "JUMPDEST"
    },
    "816": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP1",
      "path": "3"
    },
    "817": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "818": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "819": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "821": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "ADD",
      "path": "3"
    },
    "822": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "823": {
      "op": "DUP5"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "826": {
      "op": "DUP4"
    },
    "827": {
      "op": "MUL"
    },
    "828": {
      "op": "DUP5"
    },
    "829": {
      "op": "ADD"
    },
    "830": {
      "op": "GT"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "835": {
      "op": "SHL"
    },
    "836": {
      "op": "DUP4"
    },
    "837": {
      "op": "GT"
    },
    "838": {
      "op": "OR"
    },
    "839": {
      "op": "ISZERO"
    },
    "840": {
      "op": "PUSH2",
      "value": "0x350"
    },
    "843": {
      "op": "JUMPI"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "846": {
      "op": "DUP1"
    },
    "847": {
      "op": "REVERT"
    },
    "848": {
      "op": "JUMPDEST"
    },
    "849": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "850": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "851": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "852": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "853": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "854": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "855": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "857": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP2",
      "path": "3"
    },
    "858": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "ADD",
      "path": "3"
    },
    "859": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "860": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "865": {
      "op": "SHL"
    },
    "866": {
      "op": "DUP2"
    },
    "867": {
      "op": "GT"
    },
    "868": {
      "op": "ISZERO"
    },
    "869": {
      "op": "PUSH2",
      "value": "0x36D"
    },
    "872": {
      "op": "JUMPI"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "875": {
      "op": "DUP1"
    },
    "876": {
      "op": "REVERT"
    },
    "877": {
      "op": "JUMPDEST"
    },
    "878": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP3",
      "path": "3"
    },
    "879": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "ADD",
      "path": "3"
    },
    "880": {
      "op": "DUP4"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "883": {
      "op": "DUP3"
    },
    "884": {
      "op": "ADD"
    },
    "885": {
      "op": "GT"
    },
    "886": {
      "op": "ISZERO"
    },
    "887": {
      "op": "PUSH2",
      "value": "0x37F"
    },
    "890": {
      "op": "JUMPI"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "893": {
      "op": "DUP1"
    },
    "894": {
      "op": "REVERT"
    },
    "895": {
      "op": "JUMPDEST"
    },
    "896": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP1",
      "path": "3"
    },
    "897": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "898": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "899": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "901": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "ADD",
      "path": "3"
    },
    "902": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "903": {
      "op": "DUP5"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "906": {
      "op": "DUP4"
    },
    "907": {
      "op": "MUL"
    },
    "908": {
      "op": "DUP5"
    },
    "909": {
      "op": "ADD"
    },
    "910": {
      "op": "GT"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "915": {
      "op": "SHL"
    },
    "916": {
      "op": "DUP4"
    },
    "917": {
      "op": "GT"
    },
    "918": {
      "op": "OR"
    },
    "919": {
      "op": "ISZERO"
    },
    "920": {
      "op": "PUSH2",
      "value": "0x3A0"
    },
    "923": {
      "op": "JUMPI"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "926": {
      "op": "DUP1"
    },
    "927": {
      "op": "REVERT"
    },
    "928": {
      "op": "JUMPDEST"
    },
    "929": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "930": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "931": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "932": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "933": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "934": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "935": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "937": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP2",
      "path": "3"
    },
    "938": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "ADD",
      "path": "3"
    },
    "939": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "940": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "945": {
      "op": "SHL"
    },
    "946": {
      "op": "DUP2"
    },
    "947": {
      "op": "GT"
    },
    "948": {
      "op": "ISZERO"
    },
    "949": {
      "op": "PUSH2",
      "value": "0x3BD"
    },
    "952": {
      "op": "JUMPI"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "955": {
      "op": "DUP1"
    },
    "956": {
      "op": "REVERT"
    },
    "957": {
      "op": "JUMPDEST"
    },
    "958": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP3",
      "path": "3"
    },
    "959": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "ADD",
      "path": "3"
    },
    "960": {
      "op": "DUP4"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "963": {
      "op": "DUP3"
    },
    "964": {
      "op": "ADD"
    },
    "965": {
      "op": "GT"
    },
    "966": {
      "op": "ISZERO"
    },
    "967": {
      "op": "PUSH2",
      "value": "0x3CF"
    },
    "970": {
      "op": "JUMPI"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "973": {
      "op": "DUP1"
    },
    "974": {
      "op": "REVERT"
    },
    "975": {
      "op": "JUMPDEST"
    },
    "976": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP1",
      "path": "3"
    },
    "977": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "978": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "979": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "981": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "ADD",
      "path": "3"
    },
    "982": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "983": {
      "op": "DUP5"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "986": {
      "op": "DUP4"
    },
    "987": {
      "op": "MUL"
    },
    "988": {
      "op": "DUP5"
    },
    "989": {
      "op": "ADD"
    },
    "990": {
      "op": "GT"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "op": "DUP4"
    },
    "997": {
      "op": "GT"
    },
    "998": {
      "op": "OR"
    },
    "999": {
      "op": "ISZERO"
    },
    "1000": {
      "op": "PUSH2",
      "value": "0x3F0"
    },
    "1003": {
      "op": "JUMPI"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1006": {
      "op": "DUP1"
    },
    "1007": {
      "op": "REVERT"
    },
    "1008": {
      "op": "JUMPDEST"
    },
    "1009": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1010": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1011": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1012": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1019": {
      "op": "SHL"
    },
    "1020": {
      "op": "SUB"
    },
    "1021": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1022": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1023": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "AND",
      "path": "3"
    },
    "1024": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1025": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1027": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1028": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "ADD",
      "path": "3"
    },
    "1029": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1030": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1031": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1032": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1033": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1035": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1036": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "ADD",
      "path": "3"
    },
    "1037": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1038": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1040": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "ADD",
      "path": "3"
    },
    "1041": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1046": {
      "op": "SHL"
    },
    "1047": {
      "op": "DUP2"
    },
    "1048": {
      "op": "GT"
    },
    "1049": {
      "op": "ISZERO"
    },
    "1050": {
      "op": "PUSH2",
      "value": "0x422"
    },
    "1053": {
      "op": "JUMPI"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1056": {
      "op": "DUP1"
    },
    "1057": {
      "op": "REVERT"
    },
    "1058": {
      "op": "JUMPDEST"
    },
    "1059": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1060": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "ADD",
      "path": "3"
    },
    "1061": {
      "op": "DUP4"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1064": {
      "op": "DUP3"
    },
    "1065": {
      "op": "ADD"
    },
    "1066": {
      "op": "GT"
    },
    "1067": {
      "op": "ISZERO"
    },
    "1068": {
      "op": "PUSH2",
      "value": "0x434"
    },
    "1071": {
      "op": "JUMPI"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1074": {
      "op": "DUP1"
    },
    "1075": {
      "op": "REVERT"
    },
    "1076": {
      "op": "JUMPDEST"
    },
    "1077": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1078": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1079": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1080": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1082": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "ADD",
      "path": "3"
    },
    "1083": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1084": {
      "op": "DUP5"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "DUP4"
    },
    "1088": {
      "op": "MUL"
    },
    "1089": {
      "op": "DUP5"
    },
    "1090": {
      "op": "ADD"
    },
    "1091": {
      "op": "GT"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "op": "DUP4"
    },
    "1098": {
      "op": "GT"
    },
    "1099": {
      "op": "OR"
    },
    "1100": {
      "op": "ISZERO"
    },
    "1101": {
      "op": "PUSH2",
      "value": "0x455"
    },
    "1104": {
      "op": "JUMPI"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1107": {
      "op": "DUP1"
    },
    "1108": {
      "op": "REVERT"
    },
    "1109": {
      "op": "JUMPDEST"
    },
    "1110": {
      "op": "POP"
    },
    "1111": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1112": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1113": {
      "op": "POP"
    },
    "1114": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1115": {
      "op": "POP"
    },
    "1116": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x816"
    },
    "1119": {
      "fn": "MultiSig.execute",
      "jump": "i",
      "offset": [
        2558,
        3501
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1120": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        4935,
        5168
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1121": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        4935,
        5168
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1122": {
      "op": "DUP1"
    },
    "1123": {
      "op": "ISZERO"
    },
    "1124": {
      "op": "PUSH2",
      "value": "0x46C"
    },
    "1127": {
      "op": "JUMPI"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1130": {
      "op": "DUP1"
    },
    "1131": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MultiSig.changeRequirement",
      "offset": [
        4935,
        5168
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1132": {
      "op": "JUMPDEST"
    },
    "1133": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        4935,
        5168
      ],
      "op": "POP",
      "path": "3"
    },
    "1134": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        4935,
        5168
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9C"
    },
    "1137": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        4935,
        5168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1139": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        4935,
        5168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1140": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        4935,
        5168
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1141": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        4935,
        5168
      ],
      "op": "SUB",
      "path": "3"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1144": {
      "op": "DUP2"
    },
    "1145": {
      "op": "LT"
    },
    "1146": {
      "op": "ISZERO"
    },
    "1147": {
      "op": "PUSH2",
      "value": "0x483"
    },
    "1150": {
      "op": "JUMPI"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1153": {
      "op": "DUP1"
    },
    "1154": {
      "op": "REVERT"
    },
    "1155": {
      "op": "JUMPDEST"
    },
    "1156": {
      "op": "POP"
    },
    "1157": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        4935,
        5168
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1158": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        4935,
        5168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1160": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        4935,
        5168
      ],
      "op": "AND",
      "path": "3"
    },
    "1161": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        4935,
        5168
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA62"
    },
    "1164": {
      "fn": "MultiSig.changeRequirement",
      "jump": "i",
      "offset": [
        4935,
        5168
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1165": {
      "offset": [
        606,
        629
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1166": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1168": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1169": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1170": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1171": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1172": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "LT",
      "path": "3"
    },
    "1173": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x49A"
    },
    "1176": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1177": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "INVALID",
      "path": "3"
    },
    "1178": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1179": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1181": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1182": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1183": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1184": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1186": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1187": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1188": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1189": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "ADD",
      "path": "3"
    },
    "1190": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1197": {
      "op": "SHL"
    },
    "1198": {
      "op": "SUB"
    },
    "1199": {
      "offset": [
        606,
        629
      ],
      "op": "AND",
      "path": "3"
    },
    "1200": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        606,
        629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1201": {
      "op": "POP"
    },
    "1202": {
      "offset": [
        606,
        629
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1203": {
      "fn": "MultiSig.changeRequirement",
      "jump": "o",
      "offset": [
        606,
        629
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1204": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4118,
        4559
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1205": {
      "offset": [
        746,
        756
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1206": {
      "offset": [
        768,
        772
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "1207": {
      "offset": [
        746,
        773
      ],
      "op": "EQ",
      "path": "3"
    },
    "1208": {
      "offset": [
        738,
        774
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C0"
    },
    "1211": {
      "offset": [
        738,
        774
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1214": {
      "op": "DUP1"
    },
    "1215": {
      "op": "REVERT"
    },
    "1216": {
      "offset": [
        738,
        774
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1217": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4235,
        4243
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x1"
    },
    "1219": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4235,
        4243
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1220": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4219,
        4225
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1222": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4219,
        4232
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1223": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4235,
        4243
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1225": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4235,
        4243
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1226": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4235,
        4243
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1227": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4235,
        4243
      ],
      "op": "AND",
      "path": "3"
    },
    "1228": {
      "op": "LT"
    },
    "1229": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4219,
        4262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1230": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4219,
        4262
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1231": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4219,
        4262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F0"
    },
    "1234": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4219,
        4262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1235": {
      "op": "POP"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1242": {
      "op": "SHL"
    },
    "1243": {
      "op": "SUB"
    },
    "1244": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4247,
        4262
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1245": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4247,
        4262
      ],
      "op": "AND",
      "path": "3"
    },
    "1246": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4247,
        4262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1248": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4247,
        4262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1249": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4247,
        4262
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1250": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4247,
        4262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1251": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4247,
        4254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1253": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4247,
        4262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1255": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4247,
        4262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1256": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4247,
        4262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1258": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4247,
        4262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1259": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4247,
        4262
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1260": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4247,
        4262
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1261": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4247,
        4262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1263": {
      "branch": 25,
      "fn": "MultiSig.removeOwner",
      "offset": [
        4247,
        4262
      ],
      "op": "AND",
      "path": "3"
    },
    "1264": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4219,
        4262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1265": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4211,
        4263
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F9"
    },
    "1268": {
      "branch": 25,
      "fn": "MultiSig.removeOwner",
      "offset": [
        4211,
        4263
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1271": {
      "op": "DUP1"
    },
    "1272": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4211,
        4263
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1273": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4211,
        4263
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1280": {
      "op": "SHL"
    },
    "1281": {
      "op": "SUB"
    },
    "1282": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4273,
        4288
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 1
    },
    "1283": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4273,
        4288
      ],
      "op": "AND",
      "path": "3"
    },
    "1284": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4291,
        4296
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1286": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4273,
        4288
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1287": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4273,
        4288
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1288": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4273,
        4288
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1289": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4273,
        4280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1291": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4273,
        4288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1293": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4273,
        4288
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1294": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4273,
        4288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1296": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4273,
        4288
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1297": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4273,
        4288
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1298": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4273,
        4296
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1299": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4273,
        4296
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1302": {
      "op": "NOT"
    },
    "1303": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4273,
        4296
      ],
      "op": "AND",
      "path": "3"
    },
    "1304": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4273,
        4296
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1305": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4273,
        4296
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1306": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4306,
        4496
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1307": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4330,
        4336
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1309": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4330,
        4343
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1312": {
      "op": "NOT"
    },
    "1313": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4330,
        4347
      ],
      "op": "ADD",
      "path": "3"
    },
    "1314": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4326,
        4347
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1315": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4326,
        4347
      ],
      "op": "LT",
      "path": "3"
    },
    "1316": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4306,
        4496
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1317": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4306,
        4496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5CD"
    },
    "1320": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4306,
        4496
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1321": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4385,
        4391
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1328": {
      "op": "SHL"
    },
    "1329": {
      "op": "SUB"
    },
    "1330": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4391
      ],
      "op": "AND",
      "path": "3"
    },
    "1331": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1333": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4379,
        4380
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1334": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1335": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1336": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1337": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "LT",
      "path": "3"
    },
    "1338": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x53F"
    },
    "1341": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1342": {
      "dev": "Index out of range",
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "INVALID",
      "path": "3"
    },
    "1343": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1344": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1346": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1347": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1348": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1349": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1351": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1352": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1353": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1354": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "ADD",
      "path": "3"
    },
    "1355": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1362": {
      "op": "SHL"
    },
    "1363": {
      "op": "SUB"
    },
    "1364": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4381
      ],
      "op": "AND",
      "path": "3"
    },
    "1365": {
      "branch": 26,
      "fn": "MultiSig.removeOwner",
      "offset": [
        4372,
        4391
      ],
      "op": "EQ",
      "path": "3"
    },
    "1366": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4368,
        4486
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1367": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4368,
        4486
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5C5"
    },
    "1370": {
      "branch": 26,
      "fn": "MultiSig.removeOwner",
      "offset": [
        4368,
        4486
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1371": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4429
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x3"
    },
    "1373": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4430,
        4443
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1374": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4430,
        4443
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1377": {
      "op": "NOT"
    },
    "1378": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4430,
        4447
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1379": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4430,
        4447
      ],
      "op": "ADD",
      "path": "3"
    },
    "1380": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4430,
        4447
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1381": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1382": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "LT",
      "path": "3"
    },
    "1383": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x56C"
    },
    "1386": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1387": {
      "dev": "Index out of range",
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "INVALID",
      "path": "3"
    },
    "1388": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1389": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1391": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1392": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1393": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1394": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1396": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1397": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1398": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1399": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "ADD",
      "path": "3"
    },
    "1400": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1401": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4417
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1403": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4420
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1404": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4420
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1411": {
      "op": "SHL"
    },
    "1412": {
      "op": "SUB"
    },
    "1413": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1414": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1415": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "AND",
      "path": "3"
    },
    "1416": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4423,
        4448
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1417": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4418,
        4419
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1418": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4418,
        4419
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1419": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4420
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1420": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4420
      ],
      "op": "LT",
      "path": "3"
    },
    "1421": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4420
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x592"
    },
    "1424": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4420
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1425": {
      "dev": "Index out of range",
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4420
      ],
      "op": "INVALID",
      "path": "3"
    },
    "1426": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4420
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1427": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4420
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1428": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1430": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4420
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1431": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1433": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1435": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4420
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1436": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4420
      ],
      "op": "ADD",
      "path": "3"
    },
    "1437": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1439": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4448
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1442": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4448
      ],
      "op": "EXP",
      "path": "3"
    },
    "1443": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1444": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4448
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1445": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1452": {
      "op": "SHL"
    },
    "1453": {
      "op": "SUB"
    },
    "1454": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4448
      ],
      "op": "MUL",
      "path": "3"
    },
    "1455": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4448
      ],
      "op": "NOT",
      "path": "3"
    },
    "1456": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4448
      ],
      "op": "AND",
      "path": "3"
    },
    "1457": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4448
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1458": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4448
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "op": "SUB"
    },
    "1467": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4448
      ],
      "op": "AND",
      "path": "3"
    },
    "1468": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4448
      ],
      "op": "MUL",
      "path": "3"
    },
    "1469": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4448
      ],
      "op": "OR",
      "path": "3"
    },
    "1470": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4448
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1471": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4448
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1472": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4411,
        4448
      ],
      "op": "POP",
      "path": "3"
    },
    "1473": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4466,
        4471
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 3,
      "value": "0x5CD"
    },
    "1476": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4466,
        4471
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1477": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4368,
        4486
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1478": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4349,
        4352
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x1"
    },
    "1480": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4349,
        4352
      ],
      "op": "ADD",
      "path": "3"
    },
    "1481": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4306,
        4496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51A"
    },
    "1484": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4306,
        4496
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1485": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4306,
        4496
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1486": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4306,
        4496
      ],
      "op": "POP",
      "path": "3"
    },
    "1487": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4511
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x3"
    },
    "1489": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1490": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1491": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1492": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5D9"
    },
    "1495": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1496": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "INVALID",
      "path": "3"
    },
    "1497": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1498": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1500": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1501": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1502": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1503": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1505": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1506": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1507": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1508": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "ADD",
      "path": "3"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1511": {
      "op": "NOT"
    },
    "1512": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1513": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1514": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "ADD",
      "path": "3"
    },
    "1515": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1516": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1523": {
      "op": "SHL"
    },
    "1524": {
      "op": "SUB"
    },
    "1525": {
      "op": "NOT"
    },
    "1526": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "AND",
      "path": "3"
    },
    "1527": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1528": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1529": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1530": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1531": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "ADD",
      "path": "3"
    },
    "1532": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1533": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1534": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4505,
        4517
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1535": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4532,
        4552
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x40"
    },
    "1537": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4532,
        4552
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1544": {
      "op": "SHL"
    },
    "1545": {
      "op": "SUB"
    },
    "1546": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4532,
        4552
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1547": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4532,
        4552
      ],
      "op": "AND",
      "path": "3"
    },
    "1548": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4532,
        4552
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1549": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4532,
        4552
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x58619076ADF5BB0943D100EF88D52D7C3FD691B19D3A9071B555B651FBF418DA"
    },
    "1582": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4532,
        4552
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1583": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4532,
        4552
      ],
      "op": "LOG2",
      "path": "3"
    },
    "1584": {
      "fn": "MultiSig.removeOwner",
      "offset": [
        4118,
        4559
      ],
      "op": "POP",
      "path": "3"
    },
    "1585": {
      "fn": "MultiSig.removeOwner",
      "jump": "o",
      "offset": [
        4118,
        4559
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1586": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1587": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 7,
      "value": "0x40"
    },
    "1589": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "1594": {
      "op": "SHL"
    },
    "1595": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1597": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1598": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1599": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "ADD",
      "path": "3"
    },
    "1600": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1601": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1602": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1603": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2030,
        2037
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1605": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "1607": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1608": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "ADD",
      "path": "3"
    },
    "1609": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1610": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1611": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1612": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2129,
        2133
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "1613": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1615": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1616": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1617": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SHL",
      "path": "3"
    },
    "1618": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "1620": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1621": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "ADD",
      "path": "3"
    },
    "1622": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1623": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1636": {
      "op": "NOT"
    },
    "1637": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP13",
      "path": "3"
    },
    "1638": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1639": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SHL",
      "path": "3"
    },
    "1640": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1641": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "AND",
      "path": "3"
    },
    "1642": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x36"
    },
    "1644": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP10",
      "path": "3"
    },
    "1645": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "ADD",
      "path": "3"
    },
    "1646": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1647": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1648": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP12",
      "path": "3"
    },
    "1649": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1650": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SHL",
      "path": "3"
    },
    "1651": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "AND",
      "path": "3"
    },
    "1652": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4A"
    },
    "1654": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1655": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "ADD",
      "path": "3"
    },
    "1656": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1657": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5E"
    },
    "1659": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1660": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "ADD",
      "path": "3"
    },
    "1661": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP10",
      "path": "3"
    },
    "1662": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1663": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1664": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1665": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1666": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2030,
        2037
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1667": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2030,
        2037
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1668": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2030,
        2037
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1669": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2030,
        2037
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1670": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2129,
        2133
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1671": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2129,
        2133
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1672": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2136,
        2143
      ],
      "op": "DUP13",
      "path": "3"
    },
    "1673": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2136,
        2143
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1674": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2145,
        2157
      ],
      "op": "DUP13",
      "path": "3"
    },
    "1675": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2145,
        2157
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1676": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2159,
        2165
      ],
      "op": "DUP13",
      "path": "3"
    },
    "1677": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2159,
        2165
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1678": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2167,
        2172
      ],
      "op": "DUP13",
      "path": "3"
    },
    "1679": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2167,
        2172
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1680": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2174,
        2180
      ],
      "op": "DUP13",
      "path": "3"
    },
    "1681": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2174,
        2180
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1682": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1683": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1684": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7E"
    },
    "1686": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1687": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1688": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "ADD",
      "path": "3"
    },
    "1689": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1690": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1691": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "ADD",
      "path": "3"
    },
    "1692": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1693": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1694": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1695": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1696": {
      "op": "JUMPDEST"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1699": {
      "op": "DUP4"
    },
    "1700": {
      "op": "LT"
    },
    "1701": {
      "op": "PUSH2",
      "value": "0x6BF"
    },
    "1704": {
      "op": "JUMPI"
    },
    "1705": {
      "op": "DUP1"
    },
    "1706": {
      "op": "MLOAD"
    },
    "1707": {
      "op": "DUP3"
    },
    "1708": {
      "op": "MSTORE"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1711": {
      "op": "NOT"
    },
    "1712": {
      "op": "SWAP1"
    },
    "1713": {
      "op": "SWAP3"
    },
    "1714": {
      "op": "ADD"
    },
    "1715": {
      "op": "SWAP2"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1718": {
      "op": "SWAP2"
    },
    "1719": {
      "op": "DUP3"
    },
    "1720": {
      "op": "ADD"
    },
    "1721": {
      "op": "SWAP2"
    },
    "1722": {
      "op": "ADD"
    },
    "1723": {
      "op": "PUSH2",
      "value": "0x6A0"
    },
    "1726": {
      "op": "JUMP"
    },
    "1727": {
      "op": "JUMPDEST"
    },
    "1728": {
      "op": "MLOAD"
    },
    "1729": {
      "op": "DUP2"
    },
    "1730": {
      "op": "MLOAD"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1733": {
      "op": "SWAP4"
    },
    "1734": {
      "op": "DUP5"
    },
    "1735": {
      "op": "SUB"
    },
    "1736": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1739": {
      "op": "EXP"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1742": {
      "op": "NOT"
    },
    "1743": {
      "op": "ADD"
    },
    "1744": {
      "op": "DUP1"
    },
    "1745": {
      "op": "NOT"
    },
    "1746": {
      "op": "SWAP1"
    },
    "1747": {
      "op": "SWAP3"
    },
    "1748": {
      "op": "AND"
    },
    "1749": {
      "op": "SWAP2"
    },
    "1750": {
      "op": "AND"
    },
    "1751": {
      "op": "OR"
    },
    "1752": {
      "op": "SWAP1"
    },
    "1753": {
      "op": "MSTORE"
    },
    "1754": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1755": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "ADD",
      "path": "3"
    },
    "1756": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1757": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1758": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1759": {
      "op": "POP"
    },
    "1760": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1762": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1763": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1764": {
      "op": "DUP1"
    },
    "1765": {
      "op": "DUP6"
    },
    "1766": {
      "op": "SUB"
    },
    "1767": {
      "op": "DUP2"
    },
    "1768": {
      "op": "MSTORE"
    },
    "1769": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1770": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1771": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "ADD",
      "path": "3"
    },
    "1772": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1773": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2083,
        2181
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1774": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2060,
        2182
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1775": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2060,
        2182
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1776": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2060,
        2182
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1777": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2060,
        2182
      ],
      "op": "ADD",
      "path": "3"
    },
    "1778": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2060,
        2182
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1779": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2060,
        2182
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1780": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2060,
        2182
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1781": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2060,
        2182
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1782": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        2060,
        2182
      ],
      "op": "SWAP15",
      "path": "3"
    },
    "1783": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        1828,
        2189
      ],
      "op": "SWAP14",
      "path": "3"
    },
    "1784": {
      "op": "POP"
    },
    "1785": {
      "op": "POP"
    },
    "1786": {
      "op": "POP"
    },
    "1787": {
      "op": "POP"
    },
    "1788": {
      "op": "POP"
    },
    "1789": {
      "op": "POP"
    },
    "1790": {
      "op": "POP"
    },
    "1791": {
      "op": "POP"
    },
    "1792": {
      "op": "POP"
    },
    "1793": {
      "op": "POP"
    },
    "1794": {
      "op": "POP"
    },
    "1795": {
      "op": "POP"
    },
    "1796": {
      "op": "POP"
    },
    "1797": {
      "op": "POP"
    },
    "1798": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "jump": "o",
      "offset": [
        1828,
        2189
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1799": {
      "offset": [
        560,
        600
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1800": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1802": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1804": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1805": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1807": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1808": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1809": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1810": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1812": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1813": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1814": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1815": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1817": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "AND",
      "path": "3"
    },
    "1818": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "offset": [
        560,
        600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1819": {
      "fn": "MultiSig.getUnsignedTransactionHash",
      "jump": "o",
      "offset": [
        560,
        600
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1820": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3662,
        3961
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1821": {
      "offset": [
        746,
        756
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1822": {
      "offset": [
        768,
        772
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "1823": {
      "offset": [
        746,
        773
      ],
      "op": "EQ",
      "path": "3"
    },
    "1824": {
      "offset": [
        738,
        774
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x728"
    },
    "1827": {
      "offset": [
        738,
        774
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1830": {
      "op": "DUP1"
    },
    "1831": {
      "op": "REVERT"
    },
    "1832": {
      "offset": [
        738,
        774
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1833": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3760,
        3766
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x3"
    },
    "1835": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3760,
        3773
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1836": {
      "offset": [
        498,
        500
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x32"
    },
    "1838": {
      "op": "GT"
    },
    "1839": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3760,
        3827
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1840": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3760,
        3827
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1841": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3760,
        3827
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x742"
    },
    "1844": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3760,
        3827
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1845": {
      "op": "POP"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1852": {
      "op": "SHL"
    },
    "1853": {
      "op": "SUB"
    },
    "1854": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3807,
        3827
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1855": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3807,
        3827
      ],
      "op": "AND",
      "path": "3"
    },
    "1856": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3807,
        3827
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1857": {
      "branch": 27,
      "fn": "MultiSig.addOwner",
      "offset": [
        3807,
        3827
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1858": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3760,
        3827
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1859": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3760,
        3859
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1860": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3760,
        3859
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1861": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3760,
        3859
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x767"
    },
    "1864": {
      "branch": 27,
      "fn": "MultiSig.addOwner",
      "offset": [
        3760,
        3859
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1865": {
      "op": "POP"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1872": {
      "op": "SHL"
    },
    "1873": {
      "op": "SUB"
    },
    "1874": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3844,
        3859
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1875": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3844,
        3859
      ],
      "op": "AND",
      "path": "3"
    },
    "1876": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1878": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3844,
        3859
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1879": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3844,
        3859
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1880": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3844,
        3859
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1881": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3844,
        3851
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1883": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1885": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3844,
        3859
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1886": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1888": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3844,
        3859
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1889": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3844,
        3859
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1890": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3844,
        3859
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1891": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3844,
        3859
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1893": {
      "branch": 28,
      "fn": "MultiSig.addOwner",
      "offset": [
        3844,
        3859
      ],
      "op": "AND",
      "path": "3"
    },
    "1894": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3843,
        3859
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1895": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3760,
        3859
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1896": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3752,
        3860
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x770"
    },
    "1899": {
      "branch": 28,
      "fn": "MultiSig.addOwner",
      "offset": [
        3752,
        3860
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1902": {
      "op": "DUP1"
    },
    "1903": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3752,
        3860
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1904": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3752,
        3860
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1911": {
      "op": "SHL"
    },
    "1912": {
      "op": "SUB"
    },
    "1913": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3885
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 9
    },
    "1914": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3885
      ],
      "op": "AND",
      "path": "3"
    },
    "1915": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3885
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1917": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3885
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1918": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3885
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1919": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3885
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1920": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3877
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1922": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3885
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1924": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3885
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1925": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3885
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1927": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3885
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1928": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3885
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1929": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3885
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1930": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3892
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1931": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3892
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1934": {
      "op": "NOT"
    },
    "1935": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3892
      ],
      "op": "AND",
      "path": "3"
    },
    "1936": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3888,
        3892
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1938": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3892
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1939": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3892
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1940": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3892
      ],
      "op": "OR",
      "path": "3"
    },
    "1941": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3892
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1942": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3892
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1943": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3892
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1944": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3902,
        3908
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x3"
    },
    "1946": {
      "op": "DUP1"
    },
    "1947": {
      "op": "SLOAD"
    },
    "1948": {
      "op": "SWAP2"
    },
    "1949": {
      "op": "DUP3"
    },
    "1950": {
      "op": "ADD"
    },
    "1951": {
      "op": "DUP2"
    },
    "1952": {
      "op": "SSTORE"
    },
    "1953": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3902,
        3921
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1954": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3902,
        3921
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1955": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3902,
        3921
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "1988": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3902,
        3921
      ],
      "op": "ADD",
      "path": "3"
    },
    "1989": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3902,
        3921
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1990": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3902,
        3921
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1997": {
      "op": "SHL"
    },
    "1998": {
      "op": "SUB"
    },
    "1999": {
      "op": "NOT"
    },
    "2000": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3902,
        3921
      ],
      "op": "AND",
      "path": "3"
    },
    "2001": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3902,
        3921
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2002": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3902,
        3921
      ],
      "op": "OR",
      "path": "3"
    },
    "2003": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3902,
        3921
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2004": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3902,
        3921
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2005": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3936,
        3954
      ],
      "op": "MLOAD",
      "path": "3",
      "statement": 11
    },
    "2006": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3936,
        3954
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x994A936646FE87FFE4F1E469D3D6AA417D6B855598397F323DE5B449F765F0C3"
    },
    "2039": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3936,
        3954
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2040": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3870,
        3885
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2041": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3936,
        3954
      ],
      "op": "LOG2",
      "path": "3"
    },
    "2042": {
      "fn": "MultiSig.addOwner",
      "offset": [
        3662,
        3961
      ],
      "op": "POP",
      "path": "3"
    },
    "2043": {
      "fn": "MultiSig.addOwner",
      "jump": "o",
      "offset": [
        3662,
        3961
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2044": {
      "offset": [
        507,
        527
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2045": {
      "fn": "MultiSig.addOwner",
      "offset": [
        507,
        527
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2047": {
      "fn": "MultiSig.addOwner",
      "offset": [
        507,
        527
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2048": {
      "fn": "MultiSig.addOwner",
      "offset": [
        507,
        527
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2049": {
      "fn": "MultiSig.addOwner",
      "jump": "o",
      "offset": [
        507,
        527
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2050": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        4640,
        4738
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2051": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        4718,
        4724
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 12,
      "value": "0x3"
    },
    "2053": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        4718,
        4731
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2054": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        4640,
        4738
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2055": {
      "fn": "MultiSig.getNumberOfOwners",
      "jump": "o",
      "offset": [
        4640,
        4738
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2056": {
      "offset": [
        456,
        500
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2057": {
      "offset": [
        498,
        500
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x32"
    },
    "2059": {
      "offset": [
        456,
        500
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2060": {
      "fn": "MultiSig.getNumberOfOwners",
      "jump": "o",
      "offset": [
        456,
        500
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2061": {
      "offset": [
        533,
        554
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2062": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2064": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2065": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2067": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "AND",
      "path": "3"
    },
    "2068": {
      "fn": "MultiSig.getNumberOfOwners",
      "offset": [
        533,
        554
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2069": {
      "fn": "MultiSig.getNumberOfOwners",
      "jump": "o",
      "offset": [
        533,
        554
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2070": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2071": {
      "fn": "MultiSig.execute",
      "offset": [
        2820,
        2828
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 13,
      "value": "0x1"
    },
    "2073": {
      "fn": "MultiSig.execute",
      "offset": [
        2820,
        2828
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2074": {
      "fn": "MultiSig.execute",
      "offset": [
        2820,
        2828
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2076": {
      "fn": "MultiSig.execute",
      "offset": [
        2820,
        2828
      ],
      "op": "AND",
      "path": "3"
    },
    "2077": {
      "fn": "MultiSig.execute",
      "offset": [
        2804,
        2828
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2078": {
      "fn": "MultiSig.execute",
      "offset": [
        2804,
        2828
      ],
      "op": "LT",
      "path": "3"
    },
    "2079": {
      "fn": "MultiSig.execute",
      "offset": [
        2804,
        2828
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2080": {
      "fn": "MultiSig.execute",
      "offset": [
        2804,
        2828
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2081": {
      "branch": 29,
      "fn": "MultiSig.execute",
      "offset": [
        2804,
        2828
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2082": {
      "fn": "MultiSig.execute",
      "offset": [
        2804,
        2872
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x82A"
    },
    "2085": {
      "branch": 29,
      "fn": "MultiSig.execute",
      "offset": [
        2804,
        2872
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2086": {
      "op": "POP"
    },
    "2087": {
      "fn": "MultiSig.execute",
      "offset": [
        2844,
        2872
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2088": {
      "fn": "MultiSig.execute",
      "offset": [
        2844,
        2872
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2089": {
      "branch": 30,
      "fn": "MultiSig.execute",
      "offset": [
        2844,
        2872
      ],
      "op": "EQ",
      "path": "3"
    },
    "2090": {
      "fn": "MultiSig.execute",
      "offset": [
        2804,
        2872
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2091": {
      "fn": "MultiSig.execute",
      "offset": [
        2804,
        2916
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2092": {
      "fn": "MultiSig.execute",
      "offset": [
        2804,
        2916
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2093": {
      "fn": "MultiSig.execute",
      "offset": [
        2804,
        2916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x835"
    },
    "2096": {
      "branch": 30,
      "fn": "MultiSig.execute",
      "offset": [
        2804,
        2916
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2097": {
      "op": "POP"
    },
    "2098": {
      "fn": "MultiSig.execute",
      "offset": [
        2888,
        2916
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2099": {
      "fn": "MultiSig.execute",
      "offset": [
        2888,
        2916
      ],
      "op": "DUP10",
      "path": "3"
    },
    "2100": {
      "branch": 31,
      "fn": "MultiSig.execute",
      "offset": [
        2888,
        2916
      ],
      "op": "EQ",
      "path": "3"
    },
    "2101": {
      "fn": "MultiSig.execute",
      "offset": [
        2804,
        2916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2102": {
      "fn": "MultiSig.execute",
      "offset": [
        2796,
        2917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x83E"
    },
    "2105": {
      "branch": 31,
      "fn": "MultiSig.execute",
      "offset": [
        2796,
        2917
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2108": {
      "op": "DUP1"
    },
    "2109": {
      "fn": "MultiSig.execute",
      "offset": [
        2796,
        2917
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2110": {
      "fn": "MultiSig.execute",
      "offset": [
        2796,
        2917
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2111": {
      "fn": "MultiSig.execute",
      "offset": [
        2928,
        2942
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2113": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x883"
    },
    "2116": {
      "fn": "MultiSig.execute",
      "offset": [
        2972,
        2982
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2117": {
      "fn": "MultiSig.execute",
      "offset": [
        2984,
        2996
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2118": {
      "fn": "MultiSig.execute",
      "offset": [
        2998,
        3004
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2119": {
      "fn": "MultiSig.execute",
      "offset": [
        3006,
        3011
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2120": {
      "fn": "MultiSig.execute",
      "offset": [
        3006,
        3011
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2121": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2122": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2123": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2125": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "ADD",
      "path": "3"
    },
    "2126": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2128": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2129": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2130": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "DIV",
      "path": "3"
    },
    "2131": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "MUL",
      "path": "3"
    },
    "2132": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2134": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "ADD",
      "path": "3"
    },
    "2135": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2137": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2138": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2139": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2140": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "ADD",
      "path": "3"
    },
    "2141": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2143": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2144": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2145": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2146": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2147": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2148": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2149": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2150": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2151": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2152": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2154": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "ADD",
      "path": "3"
    },
    "2155": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2156": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2157": {
      "op": "DUP1"
    },
    "2158": {
      "op": "DUP3"
    },
    "2159": {
      "op": "DUP5"
    },
    "2160": {
      "op": "CALLDATACOPY"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2163": {
      "op": "SWAP3"
    },
    "2164": {
      "op": "ADD"
    },
    "2165": {
      "op": "DUP3"
    },
    "2166": {
      "op": "SWAP1"
    },
    "2167": {
      "op": "MSTORE"
    },
    "2168": {
      "op": "POP"
    },
    "2169": {
      "fn": "MultiSig.execute",
      "offset": [
        3013,
        3018
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2170": {
      "fn": "MultiSig.execute",
      "offset": [
        3013,
        3018
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2171": {
      "op": "POP"
    },
    "2172": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        2971
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x632"
    },
    "2175": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        2971
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2176": {
      "op": "POP"
    },
    "2177": {
      "op": "POP"
    },
    "2178": {
      "fn": "MultiSig.execute",
      "jump": "i",
      "offset": [
        2945,
        3019
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2179": {
      "fn": "MultiSig.execute",
      "offset": [
        2945,
        3019
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2180": {
      "fn": "MultiSig.execute",
      "offset": [
        2928,
        3019
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2181": {
      "op": "POP"
    },
    "2182": {
      "fn": "MultiSig.execute",
      "offset": [
        3029,
        3044
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2184": {
      "fn": "MultiSig.execute",
      "offset": [
        3029,
        3044
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2185": {
      "fn": "MultiSig.execute",
      "offset": [
        3067,
        3299
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2186": {
      "fn": "MultiSig.execute",
      "offset": [
        3087,
        3103
      ],
      "op": "DUP10",
      "path": "3"
    },
    "2187": {
      "fn": "MultiSig.execute",
      "offset": [
        3087,
        3103
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2188": {
      "fn": "MultiSig.execute",
      "offset": [
        3087,
        3103
      ],
      "op": "LT",
      "path": "3"
    },
    "2189": {
      "fn": "MultiSig.execute",
      "offset": [
        3067,
        3299
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2190": {
      "fn": "MultiSig.execute",
      "offset": [
        3067,
        3299
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x981"
    },
    "2193": {
      "fn": "MultiSig.execute",
      "offset": [
        3067,
        3299
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2194": {
      "fn": "MultiSig.execute",
      "offset": [
        3124,
        3141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2196": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2198": {
      "fn": "MultiSig.execute",
      "offset": [
        3154,
        3160
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2199": {
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3167
      ],
      "op": "DUP16",
      "path": "3"
    },
    "2200": {
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3167
      ],
      "op": "DUP16",
      "path": "3"
    },
    "2201": {
      "fn": "MultiSig.execute",
      "offset": [
        3168,
        3169
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2202": {
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3170
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2203": {
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3170
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2204": {
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3170
      ],
      "op": "LT",
      "path": "3"
    },
    "2205": {
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3170
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A2"
    },
    "2208": {
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3170
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2209": {
      "dev": "Index out of range",
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3170
      ],
      "op": "INVALID",
      "path": "3"
    },
    "2210": {
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3170
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2211": {
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3170
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2212": {
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3170
      ],
      "op": "POP",
      "path": "3"
    },
    "2213": {
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3170
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2215": {
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3170
      ],
      "op": "MUL",
      "path": "3"
    },
    "2216": {
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3170
      ],
      "op": "ADD",
      "path": "3"
    },
    "2217": {
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3170
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "2218": {
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3170
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2220": {
      "fn": "MultiSig.execute",
      "offset": [
        3162,
        3170
      ],
      "op": "AND",
      "path": "3"
    },
    "2221": {
      "fn": "MultiSig.execute",
      "offset": [
        3172,
        3177
      ],
      "op": "DUP15",
      "path": "3"
    },
    "2222": {
      "fn": "MultiSig.execute",
      "offset": [
        3172,
        3177
      ],
      "op": "DUP15",
      "path": "3"
    },
    "2223": {
      "fn": "MultiSig.execute",
      "offset": [
        3178,
        3179
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2224": {
      "fn": "MultiSig.execute",
      "offset": [
        3172,
        3180
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2225": {
      "fn": "MultiSig.execute",
      "offset": [
        3172,
        3180
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2226": {
      "fn": "MultiSig.execute",
      "offset": [
        3172,
        3180
      ],
      "op": "LT",
      "path": "3"
    },
    "2227": {
      "fn": "MultiSig.execute",
      "offset": [
        3172,
        3180
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8B8"
    },
    "2230": {
      "fn": "MultiSig.execute",
      "offset": [
        3172,
        3180
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2231": {
      "dev": "Index out of range",
      "fn": "MultiSig.execute",
      "offset": [
        3172,
        3180
      ],
      "op": "INVALID",
      "path": "3"
    },
    "2232": {
      "fn": "MultiSig.execute",
      "offset": [
        3172,
        3180
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2233": {
      "fn": "MultiSig.execute",
      "offset": [
        3172,
        3180
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2234": {
      "fn": "MultiSig.execute",
      "offset": [
        3172,
        3180
      ],
      "op": "POP",
      "path": "3"
    },
    "2235": {
      "fn": "MultiSig.execute",
      "offset": [
        3172,
        3180
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2237": {
      "fn": "MultiSig.execute",
      "offset": [
        3172,
        3180
      ],
      "op": "MUL",
      "path": "3"
    },
    "2238": {
      "fn": "MultiSig.execute",
      "offset": [
        3172,
        3180
      ],
      "op": "ADD",
      "path": "3"
    },
    "2239": {
      "fn": "MultiSig.execute",
      "offset": [
        3172,
        3180
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "2240": {
      "fn": "MultiSig.execute",
      "offset": [
        3182,
        3187
      ],
      "op": "DUP14",
      "path": "3"
    },
    "2241": {
      "fn": "MultiSig.execute",
      "offset": [
        3182,
        3187
      ],
      "op": "DUP14",
      "path": "3"
    },
    "2242": {
      "fn": "MultiSig.execute",
      "offset": [
        3188,
        3189
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2243": {
      "fn": "MultiSig.execute",
      "offset": [
        3182,
        3190
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2244": {
      "fn": "MultiSig.execute",
      "offset": [
        3182,
        3190
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2245": {
      "fn": "MultiSig.execute",
      "offset": [
        3182,
        3190
      ],
      "op": "LT",
      "path": "3"
    },
    "2246": {
      "fn": "MultiSig.execute",
      "offset": [
        3182,
        3190
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8CB"
    },
    "2249": {
      "fn": "MultiSig.execute",
      "offset": [
        3182,
        3190
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2250": {
      "dev": "Index out of range",
      "fn": "MultiSig.execute",
      "offset": [
        3182,
        3190
      ],
      "op": "INVALID",
      "path": "3"
    },
    "2251": {
      "fn": "MultiSig.execute",
      "offset": [
        3182,
        3190
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2252": {
      "fn": "MultiSig.execute",
      "offset": [
        3182,
        3190
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2253": {
      "fn": "MultiSig.execute",
      "offset": [
        3182,
        3190
      ],
      "op": "POP",
      "path": "3"
    },
    "2254": {
      "fn": "MultiSig.execute",
      "offset": [
        3182,
        3190
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2256": {
      "fn": "MultiSig.execute",
      "offset": [
        3182,
        3190
      ],
      "op": "MUL",
      "path": "3"
    },
    "2257": {
      "fn": "MultiSig.execute",
      "offset": [
        3182,
        3190
      ],
      "op": "ADD",
      "path": "3"
    },
    "2258": {
      "fn": "MultiSig.execute",
      "offset": [
        3182,
        3190
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "2259": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2261": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2262": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2264": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2265": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2266": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2268": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "ADD",
      "path": "3"
    },
    "2269": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2271": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2272": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2274": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2275": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2276": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2277": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2278": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2279": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2281": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "ADD",
      "path": "3"
    },
    "2282": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2283": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2285": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "AND",
      "path": "3"
    },
    "2286": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2288": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "AND",
      "path": "3"
    },
    "2289": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2290": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2291": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2293": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "ADD",
      "path": "3"
    },
    "2294": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2295": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2296": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2297": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2299": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "ADD",
      "path": "3"
    },
    "2300": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2301": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2302": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2303": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2305": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "ADD",
      "path": "3"
    },
    "2306": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2307": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "POP",
      "path": "3"
    },
    "2308": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "POP",
      "path": "3"
    },
    "2309": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "POP",
      "path": "3"
    },
    "2310": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "POP",
      "path": "3"
    },
    "2311": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "POP",
      "path": "3"
    },
    "2312": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2314": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2316": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2317": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2319": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2320": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "SUB",
      "path": "3"
    },
    "2321": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2322": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2323": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2324": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "SUB",
      "path": "3"
    },
    "2325": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2326": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2327": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "GAS",
      "path": "3"
    },
    "2328": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "2329": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2330": {
      "op": "DUP1"
    },
    "2331": {
      "op": "ISZERO"
    },
    "2332": {
      "op": "PUSH2",
      "value": "0x929"
    },
    "2335": {
      "op": "JUMPI"
    },
    "2336": {
      "op": "RETURNDATASIZE"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2339": {
      "op": "DUP1"
    },
    "2340": {
      "op": "RETURNDATACOPY"
    },
    "2341": {
      "op": "RETURNDATASIZE"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2344": {
      "op": "REVERT"
    },
    "2345": {
      "op": "JUMPDEST"
    },
    "2346": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "POP",
      "path": "3"
    },
    "2347": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "POP",
      "path": "3"
    },
    "2348": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "POP",
      "path": "3"
    },
    "2349": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2351": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2353": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2354": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "SUB",
      "path": "3"
    },
    "2355": {
      "fn": "MultiSig.execute",
      "offset": [
        3144,
        3191
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2356": {
      "fn": "MultiSig.execute",
      "offset": [
        3124,
        3191
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2357": {
      "fn": "MultiSig.execute",
      "offset": [
        3124,
        3191
      ],
      "op": "POP",
      "path": "3"
    },
    "2358": {
      "fn": "MultiSig.execute",
      "offset": [
        3225,
        3232
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 14
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2365": {
      "op": "SHL"
    },
    "2366": {
      "op": "SUB"
    },
    "2367": {
      "fn": "MultiSig.execute",
      "offset": [
        3213,
        3232
      ],
      "op": "AND",
      "path": "3"
    },
    "2368": {
      "fn": "MultiSig.execute",
      "offset": [
        3213,
        3222
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2375": {
      "op": "SHL"
    },
    "2376": {
      "op": "SUB"
    },
    "2377": {
      "fn": "MultiSig.execute",
      "offset": [
        3213,
        3232
      ],
      "op": "AND",
      "path": "3"
    },
    "2378": {
      "branch": 32,
      "fn": "MultiSig.execute",
      "offset": [
        3213,
        3232
      ],
      "op": "GT",
      "path": "3"
    },
    "2379": {
      "fn": "MultiSig.execute",
      "offset": [
        3213,
        3254
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2380": {
      "fn": "MultiSig.execute",
      "offset": [
        3213,
        3254
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2381": {
      "fn": "MultiSig.execute",
      "offset": [
        3213,
        3254
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x96E"
    },
    "2384": {
      "branch": 32,
      "fn": "MultiSig.execute",
      "offset": [
        3213,
        3254
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2385": {
      "op": "POP"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2392": {
      "op": "SHL"
    },
    "2393": {
      "op": "SUB"
    },
    "2394": {
      "fn": "MultiSig.execute",
      "offset": [
        3236,
        3254
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2395": {
      "fn": "MultiSig.execute",
      "offset": [
        3236,
        3254
      ],
      "op": "AND",
      "path": "3"
    },
    "2396": {
      "fn": "MultiSig.execute",
      "offset": [
        3236,
        3254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2398": {
      "fn": "MultiSig.execute",
      "offset": [
        3236,
        3254
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2399": {
      "fn": "MultiSig.execute",
      "offset": [
        3236,
        3254
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2400": {
      "fn": "MultiSig.execute",
      "offset": [
        3236,
        3254
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2401": {
      "fn": "MultiSig.execute",
      "offset": [
        3236,
        3243
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2403": {
      "fn": "MultiSig.execute",
      "offset": [
        3236,
        3254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2405": {
      "fn": "MultiSig.execute",
      "offset": [
        3236,
        3254
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2406": {
      "fn": "MultiSig.execute",
      "offset": [
        3236,
        3254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2408": {
      "fn": "MultiSig.execute",
      "offset": [
        3236,
        3254
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2409": {
      "fn": "MultiSig.execute",
      "offset": [
        3236,
        3254
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2410": {
      "fn": "MultiSig.execute",
      "offset": [
        3236,
        3254
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2411": {
      "fn": "MultiSig.execute",
      "offset": [
        3236,
        3254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2413": {
      "branch": 33,
      "fn": "MultiSig.execute",
      "offset": [
        3236,
        3254
      ],
      "op": "AND",
      "path": "3"
    },
    "2414": {
      "fn": "MultiSig.execute",
      "offset": [
        3213,
        3254
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2415": {
      "fn": "MultiSig.execute",
      "offset": [
        3205,
        3255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x977"
    },
    "2418": {
      "branch": 33,
      "fn": "MultiSig.execute",
      "offset": [
        3205,
        3255
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2421": {
      "op": "DUP1"
    },
    "2422": {
      "fn": "MultiSig.execute",
      "offset": [
        3205,
        3255
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2423": {
      "fn": "MultiSig.execute",
      "offset": [
        3205,
        3255
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2424": {
      "fn": "MultiSig.execute",
      "offset": [
        3279,
        3288
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 15
    },
    "2425": {
      "op": "POP"
    },
    "2426": {
      "fn": "MultiSig.execute",
      "offset": [
        3105,
        3108
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 16,
      "value": "0x1"
    },
    "2428": {
      "fn": "MultiSig.execute",
      "offset": [
        3105,
        3108
      ],
      "op": "ADD",
      "path": "3"
    },
    "2429": {
      "fn": "MultiSig.execute",
      "offset": [
        3067,
        3299
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x889"
    },
    "2432": {
      "fn": "MultiSig.execute",
      "offset": [
        3067,
        3299
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2433": {
      "fn": "MultiSig.execute",
      "offset": [
        3067,
        3299
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2434": {
      "op": "POP"
    },
    "2435": {
      "fn": "MultiSig.execute",
      "offset": [
        3335,
        3340
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 17,
      "value": "0x0"
    },
    "2437": {
      "fn": "MultiSig.execute",
      "offset": [
        3335,
        3340
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2438": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2440": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2441": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2442": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2443": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2444": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2445": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2446": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2453": {
      "op": "SHL"
    },
    "2454": {
      "op": "SUB"
    },
    "2455": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "DUP10",
      "path": "3"
    },
    "2456": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "AND",
      "path": "3"
    },
    "2457": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2458": {
      "fn": "MultiSig.execute",
      "offset": [
        3335,
        3340
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2459": {
      "fn": "MultiSig.execute",
      "offset": [
        3323,
        3333
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2460": {
      "fn": "MultiSig.execute",
      "offset": [
        3323,
        3333
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2461": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xF5BD825D17FE288739D8D08EF45CEA22D549B66160DFCA441227CC1E23A458E4"
    },
    "2494": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2495": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2496": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2497": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "SUB",
      "path": "3"
    },
    "2498": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2500": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "ADD",
      "path": "3"
    },
    "2501": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2502": {
      "fn": "MultiSig.execute",
      "offset": [
        3314,
        3363
      ],
      "op": "LOG4",
      "path": "3"
    },
    "2503": {
      "fn": "MultiSig.execute",
      "offset": [
        3381,
        3386
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 18,
      "value": "0x0"
    },
    "2505": {
      "fn": "MultiSig.execute",
      "offset": [
        3381,
        3386
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2506": {
      "fn": "MultiSig.execute",
      "offset": [
        3381,
        3393
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9DA"
    },
    "2509": {
      "fn": "MultiSig.execute",
      "offset": [
        3381,
        3393
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2510": {
      "fn": "MultiSig.execute",
      "offset": [
        3391,
        3392
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2512": {
      "fn": "MultiSig.execute",
      "offset": [
        3381,
        3393
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "2517": {
      "fn": "MultiSig.execute",
      "offset": [
        3381,
        3390
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD7"
    },
    "2520": {
      "fn": "MultiSig.execute",
      "offset": [
        3381,
        3393
      ],
      "op": "AND",
      "path": "3"
    },
    "2521": {
      "fn": "MultiSig.execute",
      "jump": "i",
      "offset": [
        3381,
        3393
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2522": {
      "fn": "MultiSig.execute",
      "offset": [
        3381,
        3393
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2523": {
      "fn": "MultiSig.execute",
      "offset": [
        3373,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2525": {
      "fn": "MultiSig.execute",
      "offset": [
        3373,
        3393
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2526": {
      "fn": "MultiSig.execute",
      "offset": [
        3373,
        3393
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2527": {
      "fn": "MultiSig.execute",
      "offset": [
        3373,
        3393
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2528": {
      "fn": "MultiSig.execute",
      "offset": [
        3373,
        3393
      ],
      "op": "POP",
      "path": "3"
    },
    "2529": {
      "fn": "MultiSig.execute",
      "offset": [
        3404,
        3420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2531": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3437
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2538": {
      "op": "SHL"
    },
    "2539": {
      "op": "SUB"
    },
    "2540": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3442
      ],
      "op": "AND",
      "path": "3"
    },
    "2541": {
      "fn": "MultiSig.execute",
      "offset": [
        3450,
        3456
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2542": {
      "fn": "MultiSig.execute",
      "offset": [
        3458,
        3463
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2543": {
      "fn": "MultiSig.execute",
      "offset": [
        3458,
        3463
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2544": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2546": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2547": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2548": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2549": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2550": {
      "op": "DUP1"
    },
    "2551": {
      "op": "DUP3"
    },
    "2552": {
      "op": "DUP5"
    },
    "2553": {
      "op": "CALLDATACOPY"
    },
    "2554": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2556": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2557": {
      "op": "SWAP3"
    },
    "2558": {
      "op": "ADD"
    },
    "2559": {
      "op": "SWAP5"
    },
    "2560": {
      "op": "POP"
    },
    "2561": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2563": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2564": {
      "op": "POP"
    },
    "2565": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2566": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2567": {
      "op": "POP"
    },
    "2568": {
      "op": "POP"
    },
    "2569": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2570": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2571": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "SUB",
      "path": "3"
    },
    "2572": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2573": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2574": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2575": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "GAS",
      "path": "3"
    },
    "2576": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "CALL",
      "path": "3"
    },
    "2577": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2578": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "POP",
      "path": "3"
    },
    "2579": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "POP",
      "path": "3"
    },
    "2580": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "POP",
      "path": "3"
    },
    "2581": {
      "fn": "MultiSig.execute",
      "offset": [
        3425,
        3464
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2582": {
      "op": "DUP1"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2585": {
      "op": "DUP2"
    },
    "2586": {
      "op": "EQ"
    },
    "2587": {
      "op": "PUSH2",
      "value": "0xA40"
    },
    "2590": {
      "op": "JUMPI"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2593": {
      "op": "MLOAD"
    },
    "2594": {
      "op": "SWAP2"
    },
    "2595": {
      "op": "POP"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2598": {
      "op": "NOT"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2601": {
      "op": "RETURNDATASIZE"
    },
    "2602": {
      "op": "ADD"
    },
    "2603": {
      "op": "AND"
    },
    "2604": {
      "op": "DUP3"
    },
    "2605": {
      "op": "ADD"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2608": {
      "op": "MSTORE"
    },
    "2609": {
      "op": "RETURNDATASIZE"
    },
    "2610": {
      "op": "DUP3"
    },
    "2611": {
      "op": "MSTORE"
    },
    "2612": {
      "op": "RETURNDATASIZE"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2617": {
      "op": "DUP5"
    },
    "2618": {
      "op": "ADD"
    },
    "2619": {
      "op": "RETURNDATACOPY"
    },
    "2620": {
      "op": "PUSH2",
      "value": "0xA45"
    },
    "2623": {
      "op": "JUMP"
    },
    "2624": {
      "op": "JUMPDEST"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2627": {
      "op": "SWAP2"
    },
    "2628": {
      "op": "POP"
    },
    "2629": {
      "op": "JUMPDEST"
    },
    "2630": {
      "op": "POP"
    },
    "2631": {
      "fn": "MultiSig.execute",
      "offset": [
        3403,
        3464
      ],
      "op": "POP",
      "path": "3"
    },
    "2632": {
      "fn": "MultiSig.execute",
      "offset": [
        3403,
        3464
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2633": {
      "fn": "MultiSig.execute",
      "offset": [
        3403,
        3464
      ],
      "op": "POP",
      "path": "3"
    },
    "2634": {
      "branch": 34,
      "fn": "MultiSig.execute",
      "offset": [
        3482,
        3493
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 19
    },
    "2635": {
      "fn": "MultiSig.execute",
      "offset": [
        3474,
        3494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA53"
    },
    "2638": {
      "branch": 34,
      "fn": "MultiSig.execute",
      "offset": [
        3474,
        3494
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2641": {
      "op": "DUP1"
    },
    "2642": {
      "fn": "MultiSig.execute",
      "offset": [
        3474,
        3494
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2643": {
      "fn": "MultiSig.execute",
      "offset": [
        3474,
        3494
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2644": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "POP",
      "path": "3"
    },
    "2645": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "POP",
      "path": "3"
    },
    "2646": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "POP",
      "path": "3"
    },
    "2647": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "POP",
      "path": "3"
    },
    "2648": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "POP",
      "path": "3"
    },
    "2649": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "POP",
      "path": "3"
    },
    "2650": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "POP",
      "path": "3"
    },
    "2651": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "POP",
      "path": "3"
    },
    "2652": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "POP",
      "path": "3"
    },
    "2653": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "POP",
      "path": "3"
    },
    "2654": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "POP",
      "path": "3"
    },
    "2655": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "POP",
      "path": "3"
    },
    "2656": {
      "fn": "MultiSig.execute",
      "offset": [
        2558,
        3501
      ],
      "op": "POP",
      "path": "3"
    },
    "2657": {
      "fn": "MultiSig.execute",
      "jump": "o",
      "offset": [
        2558,
        3501
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2658": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        4935,
        5168
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2659": {
      "offset": [
        746,
        756
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2660": {
      "offset": [
        768,
        772
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2661": {
      "offset": [
        746,
        773
      ],
      "op": "EQ",
      "path": "3"
    },
    "2662": {
      "offset": [
        738,
        774
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA6E"
    },
    "2665": {
      "offset": [
        738,
        774
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2668": {
      "op": "DUP1"
    },
    "2669": {
      "op": "REVERT"
    },
    "2670": {
      "offset": [
        738,
        774
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2671": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5056,
        5062
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 20,
      "value": "0x3"
    },
    "2673": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5056,
        5069
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2674": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5043,
        5069
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2676": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5043,
        5069
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2677": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5043,
        5069
      ],
      "op": "AND",
      "path": "3"
    },
    "2678": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5043,
        5069
      ],
      "op": "GT",
      "path": "3"
    },
    "2679": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5043,
        5069
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2680": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5043,
        5069
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2681": {
      "branch": 35,
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5043,
        5069
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2682": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5043,
        5086
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA86"
    },
    "2685": {
      "branch": 35,
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5043,
        5086
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2686": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5043,
        5086
      ],
      "op": "POP",
      "path": "3"
    },
    "2687": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5085,
        5086
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2689": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5073,
        5082
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2690": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5073,
        5086
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2692": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5073,
        5086
      ],
      "op": "AND",
      "path": "3"
    },
    "2693": {
      "branch": 36,
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5073,
        5086
      ],
      "op": "GT",
      "path": "3"
    },
    "2694": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5043,
        5086
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2695": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5035,
        5087
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA8F"
    },
    "2698": {
      "branch": 36,
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5035,
        5087
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2701": {
      "op": "DUP1"
    },
    "2702": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5035,
        5087
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2703": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5035,
        5087
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2704": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5097,
        5105
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 21,
      "value": "0x1"
    },
    "2706": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5097,
        5117
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2707": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5097,
        5117
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2708": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5097,
        5117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2710": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5097,
        5117
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2711": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5097,
        5117
      ],
      "op": "AND",
      "path": "3"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2714": {
      "op": "NOT"
    },
    "2715": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5097,
        5117
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2716": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5097,
        5117
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2717": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5097,
        5117
      ],
      "op": "AND",
      "path": "3"
    },
    "2718": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5097,
        5117
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2719": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5097,
        5117
      ],
      "op": "OR",
      "path": "3"
    },
    "2720": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5097,
        5117
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2721": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5097,
        5117
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2722": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5097,
        5117
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2723": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5132,
        5161
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 22,
      "value": "0x40"
    },
    "2725": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5132,
        5161
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2726": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5132,
        5161
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2727": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5132,
        5161
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2728": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5132,
        5161
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2729": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5132,
        5161
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2730": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5132,
        5161
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2731": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5132,
        5161
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x168DAFE5F579D94207D1614819D41482DE1E0A1CCE54AB8FACE74BD3FCD8A38B"
    },
    "2764": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5132,
        5161
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2765": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5132,
        5161
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2766": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5132,
        5161
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2767": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5132,
        5161
      ],
      "op": "SUB",
      "path": "3"
    },
    "2768": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5132,
        5161
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2770": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5132,
        5161
      ],
      "op": "ADD",
      "path": "3"
    },
    "2771": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5132,
        5161
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2772": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        5132,
        5161
      ],
      "op": "LOG1",
      "path": "3"
    },
    "2773": {
      "fn": "MultiSig.changeRequirement",
      "offset": [
        4935,
        5168
      ],
      "op": "POP",
      "path": "3"
    },
    "2774": {
      "fn": "MultiSig.changeRequirement",
      "jump": "o",
      "offset": [
        4935,
        5168
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2775": {
      "fn": "SafeMath.add",
      "offset": [
        1440,
        1585
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2776": {
      "fn": "SafeMath.add",
      "offset": [
        1498,
        1505
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2778": {
      "fn": "SafeMath.add",
      "offset": [
        1529,
        1534
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2779": {
      "fn": "SafeMath.add",
      "offset": [
        1529,
        1534
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2780": {
      "fn": "SafeMath.add",
      "offset": [
        1529,
        1534
      ],
      "op": "ADD",
      "path": "20"
    },
    "2781": {
      "fn": "SafeMath.add",
      "offset": [
        1552,
        1558
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 23
    },
    "2782": {
      "fn": "SafeMath.add",
      "offset": [
        1552,
        1558
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2783": {
      "fn": "SafeMath.add",
      "offset": [
        1552,
        1558
      ],
      "op": "LT",
      "path": "20"
    },
    "2784": {
      "branch": 37,
      "fn": "SafeMath.add",
      "offset": [
        1552,
        1558
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2785": {
      "fn": "SafeMath.add",
      "offset": [
        1544,
        1559
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAE9"
    },
    "2788": {
      "branch": 37,
      "fn": "SafeMath.add",
      "offset": [
        1544,
        1559
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2791": {
      "op": "DUP1"
    },
    "2792": {
      "fn": "SafeMath.add",
      "offset": [
        1544,
        1559
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2793": {
      "fn": "SafeMath.add",
      "offset": [
        1544,
        1559
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2794": {
      "fn": "SafeMath.add",
      "offset": [
        1577,
        1578
      ],
      "op": "SWAP4",
      "path": "20",
      "statement": 24
    },
    "2795": {
      "fn": "SafeMath.add",
      "offset": [
        1440,
        1585
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2796": {
      "op": "POP"
    },
    "2797": {
      "op": "POP"
    },
    "2798": {
      "op": "POP"
    },
    "2799": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        1440,
        1585
      ],
      "op": "JUMP",
      "path": "20"
    }
  },
  "sha1": "1f460aaea1ae3c68adde599b2988250e24079d3b",
  "source": "pragma solidity ^0.6.1;\n\n\nimport \"zeppelin/math/SafeMath.sol\";\n\n\n/**\n* @title MultiSig\n* @notice Multi-signature contract with off-chain signing\n*/\ncontract MultiSig {\n    using SafeMath for uint256;\n\n    event Executed(address indexed sender, uint256 indexed nonce, address indexed destination, uint256 value);\n    event OwnerAdded(address indexed owner);\n    event OwnerRemoved(address indexed owner);\n    event RequirementChanged(uint16 required);\n\n    uint256 constant public MAX_OWNER_COUNT = 50;\n\n    uint256 public nonce;\n    uint8 public required;\n    mapping (address => bool) public isOwner;\n    address[] public owners;\n\n    /**\n    * @notice Only this contract can call method\n    */\n    modifier onlyThisContract() {\n        require(msg.sender == address(this));\n        _;\n    }\n\n    // TODO #1809\n//    receive() external payable {}\n    fallback() external payable {}\n\n    /**\n    * @param _required Number of required signings\n    * @param _owners List of initial owners.\n    */\n    constructor (uint8 _required, address[] memory _owners) public {\n        require(_owners.length <= MAX_OWNER_COUNT &&\n            _required <= _owners.length &&\n            _required > 0);\n\n        for (uint256 i = 0; i < _owners.length; i++) {\n            address owner = _owners[i];\n            require(!isOwner[owner] && owner != address(0));\n            isOwner[owner] = true;\n        }\n        owners = _owners;\n        required = _required;\n    }\n\n    /**\n    * @notice Get unsigned hash for transaction parameters\n    * @dev Follows ERC191 signature scheme: https://github.com/ethereum/EIPs/issues/191\n    * @param _sender Trustee who will execute the transaction\n    * @param _destination Destination address\n    * @param _value Amount of ETH to transfer\n    * @param _data Call data\n    * @param _nonce Nonce\n    */\n    function getUnsignedTransactionHash(\n        address _sender,\n        address _destination,\n        uint256 _value,\n        bytes memory _data,\n        uint256 _nonce\n    )\n        public view returns (bytes32)\n    {\n        return keccak256(\n            abi.encodePacked(byte(0x19), byte(0), address(this), _sender, _destination, _value, _data, _nonce));\n    }\n\n    /**\n    * @dev Note that address recovered from signatures must be strictly increasing\n    * @param _sigV Array of signatures values V\n    * @param _sigR Array of signatures values R\n    * @param _sigS Array of signatures values S\n    * @param _destination Destination address\n    * @param _value Amount of ETH to transfer\n    * @param _data Call data\n    */\n    function execute(\n        uint8[] calldata _sigV,\n        bytes32[] calldata _sigR,\n        bytes32[] calldata _sigS,\n        address _destination,\n        uint256 _value,\n        bytes calldata _data\n    )\n        external\n    {\n        require(_sigR.length >= required &&\n            _sigR.length == _sigS.length &&\n            _sigR.length == _sigV.length);\n\n        bytes32 txHash = getUnsignedTransactionHash(msg.sender, _destination, _value, _data, nonce);\n        address lastAdd = address(0);\n        for (uint256 i = 0; i < _sigR.length; i++) {\n            address recovered = ecrecover(txHash, _sigV[i], _sigR[i], _sigS[i]);\n            require(recovered > lastAdd && isOwner[recovered]);\n            lastAdd = recovered;\n        }\n\n        emit Executed(msg.sender, nonce, _destination, _value);\n        nonce = nonce.add(1);\n        (bool callSuccess,) = _destination.call{value: _value}(_data);\n        require(callSuccess);\n    }\n\n    /**\n    * @notice Allows to add a new owner\n    * @dev Transaction has to be sent by `execute` method.\n    * @param _owner Address of new owner\n    */\n    function addOwner(address _owner)\n        external\n        onlyThisContract\n    {\n        require(owners.length < MAX_OWNER_COUNT &&\n            _owner != address(0) &&\n            !isOwner[_owner]);\n        isOwner[_owner] = true;\n        owners.push(_owner);\n        emit OwnerAdded(_owner);\n    }\n\n    /**\n    * @notice Allows to remove an owner\n    * @dev Transaction has to be sent by `execute` method.\n    * @param _owner Address of owner\n    */\n    function removeOwner(address _owner)\n        external\n        onlyThisContract\n    {\n        require(owners.length > required && isOwner[_owner]);\n        isOwner[_owner] = false;\n        for (uint256 i = 0; i < owners.length - 1; i++) {\n            if (owners[i] == _owner) {\n                owners[i] = owners[owners.length - 1];\n                break;\n            }\n        }\n        owners.pop();\n        emit OwnerRemoved(_owner);\n    }\n\n    /**\n    * @notice Returns the number of owners of this MultiSig\n    */\n    function getNumberOfOwners() external view returns (uint256) {\n        return owners.length;\n    }\n\n    /**\n    * @notice Allows to change the number of required signatures\n    * @dev Transaction has to be sent by `execute` method\n    * @param _required Number of required signatures\n    */\n    function changeRequirement(uint8 _required)\n        external\n        onlyThisContract\n    {\n        require(_required <= owners.length && _required > 0);\n        required = _required;\n        emit RequirementChanged(_required);\n    }\n\n}\n",
  "sourceMap": "148:5023:3:-:0;;;999:452;5:9:-1;2:2;;;27:1;24;17:12;2:2;999:452:3;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;999:452:3;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;373:25;;-1:-1;999:452:3;;421:4:-1;412:14;;;;999:452:3;;;;;412:14:-1;999:452:3;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;999:452:3;;;;;;;;;;;498:2;1080:7;:14;:33;;:76;;;;;1142:7;:14;1129:9;:27;;;;1080:76;:105;;;;;1184:1;1172:9;:13;;;1080:105;1072:114;;12:1:-1;9;2:12;1072:114:3;1202:9;1197:192;1221:7;:14;1217:1;:18;1197:192;;;1256:13;1272:7;1280:1;1272:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1305:14:3;;;;;;:7;:14;;;;;;;;1272:10;;-1:-1:-1;1305:14:3;;1304:15;:38;;;;-1:-1:-1;;;;;;1323:19:3;;;;1304:38;1296:47;;12:1:-1;9;2:12;1296:47:3;-1:-1:-1;;;;;1357:14:3;;;;;:7;:14;;;;;:21;;-1:-1:-1;;1357:21:3;1374:4;1357:21;;;;;;1237:3;1197:192;;;-1:-1:-1;1398:16:3;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;;1424:8:3;:20;;-1:-1:-1;;1424:20:3;;;;;;;;;;;;148:5023;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;148:5023:3;-1:-1:-1;;;;;148:5023:3;;;;;;;;;;;-1:-1:-1;148:5023:3;;;;;;;-1:-1:-1;148:5023:3;;;-1:-1:-1;148:5023:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;148:5023:3;;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "../../nucypher/blockchain/eth/sol/source/contracts/MultiSig.sol",
  "type": "contract"
}