{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "RolledBack",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "testTarget",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "StateVerified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "UpgradeFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "finishUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isUpgrade",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "previousTarget",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxyType",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rollback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_testTarget",
          "type": "address"
        }
      ],
      "name": "verifyState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "14": "../../nucypher/blockchain/eth/sol/source/contracts/proxy/Dispatcher.sol",
    "15": "../../nucypher/blockchain/eth/sol/source/contracts/proxy/Upgradeable.sol",
    "21": "../../nucypher/blockchain/eth/sol/source/zeppelin/ownership/Ownable.sol",
    "26": "../../nucypher/blockchain/eth/sol/source/zeppelin/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/proxy/Dispatcher.sol",
    "exportedSymbols": {
      "Dispatcher": [
        13982
      ],
      "ERCProxy": [
        13621
      ]
    },
    "id": 13983,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13607,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/proxy/Upgradeable.sol",
        "file": "./Upgradeable.sol",
        "id": 13608,
        "nodeType": "ImportDirective",
        "scope": 13983,
        "sourceUnit": 14147,
        "src": "26:27:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/zeppelin/utils/Address.sol",
        "file": "zeppelin/utils/Address.sol",
        "id": 13609,
        "nodeType": "ImportDirective",
        "scope": 13983,
        "sourceUnit": 16368,
        "src": "54:36:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 13610,
          "nodeType": "StructuredDocumentation",
          "src": "93:43:14",
          "text": "@notice ERC897 - ERC DelegateProxy"
        },
        "fullyImplemented": false,
        "id": 13621,
        "linearizedBaseContracts": [
          13621
        ],
        "name": "ERCProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "4555d5c9",
            "id": 13615,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "proxyType",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "180:2:14"
            },
            "returnParameters": {
              "id": 13614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13613,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13615,
                  "src": "206:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13612,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "206:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "205:9:14"
            },
            "scope": 13621,
            "src": "162:53:14",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "5c60da1b",
            "id": 13620,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "243:2:14"
            },
            "returnParameters": {
              "id": 13619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13618,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13620,
                  "src": "269:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "268:9:14"
            },
            "scope": 13621,
            "src": "220:58:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 13983,
        "src": "137:143:14"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13623,
              "name": "Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14146,
              "src": "431:11:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Upgradeable_$14146",
                "typeString": "contract Upgradeable"
              }
            },
            "id": 13624,
            "nodeType": "InheritanceSpecifier",
            "src": "431:11:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13625,
              "name": "ERCProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13621,
              "src": "444:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERCProxy_$13621",
                "typeString": "contract ERCProxy"
              }
            },
            "id": 13626,
            "nodeType": "InheritanceSpecifier",
            "src": "444:8:14"
          }
        ],
        "contractDependencies": [
          13621,
          14146,
          15599
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 13622,
          "nodeType": "StructuredDocumentation",
          "src": "283:124:14",
          "text": "@notice Proxying requests to other contracts.\nClient should use ABI of real contract and address of this contract"
        },
        "fullyImplemented": true,
        "id": 13982,
        "linearizedBaseContracts": [
          13982,
          13621,
          14146,
          15599
        ],
        "name": "Dispatcher",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13629,
            "libraryName": {
              "contractScope": null,
              "id": 13627,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16367,
              "src": "465:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$16367",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "459:26:14",
            "typeName": {
              "id": 13628,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "477:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 13637,
            "name": "Upgraded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13631,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13637,
                  "src": "506:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13633,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13637,
                  "src": "528:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13635,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13637,
                  "src": "548:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13634,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "505:57:14"
            },
            "src": "491:72:14"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 13645,
            "name": "RolledBack",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13639,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13645,
                  "src": "585:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13641,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13645,
                  "src": "607:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13643,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13645,
                  "src": "627:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "627:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "584:57:14"
            },
            "src": "568:74:14"
          },
          {
            "body": {
              "id": 13657,
              "nodeType": "Block",
              "src": "748:87:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13648,
                      "name": "isUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14006,
                      "src": "758:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13649,
                      "name": "UPGRADE_TRUE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14014,
                      "src": "770:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "758:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 13651,
                  "nodeType": "ExpressionStatement",
                  "src": "758:24:14"
                },
                {
                  "id": 13652,
                  "nodeType": "PlaceholderStatement",
                  "src": "792:1:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13653,
                      "name": "isUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14006,
                      "src": "803:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13654,
                      "name": "UPGRADE_FALSE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14011,
                      "src": "815:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "803:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 13656,
                  "nodeType": "ExpressionStatement",
                  "src": "803:25:14"
                }
              ]
            },
            "documentation": {
              "id": 13646,
              "nodeType": "StructuredDocumentation",
              "src": "648:70:14",
              "text": "@dev Set upgrading status before and after operations"
            },
            "id": 13658,
            "name": "upgrading",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 13647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "741:2:14"
            },
            "src": "723:112:14",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13698,
              "nodeType": "Block",
              "src": "947:351:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 13667,
                            "name": "_target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13661,
                            "src": "965:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 13668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16332,
                          "src": "965:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 13669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "965:20:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13666,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "957:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "957:29:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13671,
                  "nodeType": "ExpressionStatement",
                  "src": "957:29:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13673,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13661,
                        "src": "1073:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13672,
                      "name": "verifyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13946
                      ],
                      "referencedDeclaration": 13946,
                      "src": "1061:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 13674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1061:20:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13675,
                  "nodeType": "ExpressionStatement",
                  "src": "1061:20:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13677,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13661,
                        "src": "1167:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13678,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13661,
                        "src": "1176:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13676,
                      "name": "verifyUpgradeableState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13849,
                      "src": "1144:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 13679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:40:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13680,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:40:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13681,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14002,
                      "src": "1194:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13682,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13661,
                      "src": "1203:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1194:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13684,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:16:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13685,
                      "name": "finishUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13871,
                        13954
                      ],
                      "referencedDeclaration": 13871,
                      "src": "1220:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:15:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13687,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:15:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 13691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1267:1:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 13690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1259:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13689,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1259:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 13692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1259:10:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13693,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13661,
                        "src": "1271:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13694,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1280:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1280:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 13688,
                      "name": "Upgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13637,
                      "src": "1250:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 13696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1250:41:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13697,
                  "nodeType": "EmitStatement",
                  "src": "1245:46:14"
                }
              ]
            },
            "documentation": {
              "id": 13659,
              "nodeType": "StructuredDocumentation",
              "src": "841:55:14",
              "text": "@param _target Target contract address"
            },
            "id": 13699,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": null,
                "id": 13664,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13663,
                  "name": "upgrading",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13658,
                  "src": "937:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "937:9:14"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13661,
                  "mutability": "mutable",
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13699,
                  "src": "913:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "912:17:14"
            },
            "returnParameters": {
              "id": 13665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:0:14"
            },
            "scope": 13982,
            "src": "901:397:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13615
            ],
            "body": {
              "id": 13708,
              "nodeType": "Block",
              "src": "1525:25:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "32",
                    "id": 13706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1542:1:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "functionReturnParameters": 13705,
                  "id": 13707,
                  "nodeType": "Return",
                  "src": "1535:8:14"
                }
              ]
            },
            "documentation": {
              "id": 13700,
              "nodeType": "StructuredDocumentation",
              "src": "1365:93:14",
              "text": "@notice ERC897, whether it is a forwarding (1) or an upgradeable (2) proxy"
            },
            "functionSelector": "4555d5c9",
            "id": 13709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxyType",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13702,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1498:8:14"
            },
            "parameters": {
              "id": 13701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1481:2:14"
            },
            "returnParameters": {
              "id": 13705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13704,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13709,
                  "src": "1516:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13703,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1515:9:14"
            },
            "scope": 13982,
            "src": "1463:87:14",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13620
            ],
            "body": {
              "id": 13718,
              "nodeType": "Block",
              "src": "1736:30:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13716,
                    "name": "target",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14002,
                    "src": "1753:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 13715,
                  "id": 13717,
                  "nodeType": "Return",
                  "src": "1746:13:14"
                }
              ]
            },
            "documentation": {
              "id": 13710,
              "nodeType": "StructuredDocumentation",
              "src": "1556:108:14",
              "text": "@notice ERC897, gets the address of the implementation where every call will be delegated"
            },
            "functionSelector": "5c60da1b",
            "id": 13719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13712,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1709:8:14"
            },
            "parameters": {
              "id": 13711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1692:2:14"
            },
            "returnParameters": {
              "id": 13715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13714,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13719,
                  "src": "1727:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1726:9:14"
            },
            "scope": 13982,
            "src": "1669:97:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 13772,
              "nodeType": "Block",
              "src": "2025:508:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 13730,
                            "name": "_target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13722,
                            "src": "2043:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 13731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16332,
                          "src": "2043:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 13732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2043:20:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13729,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2035:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2035:29:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13734,
                  "nodeType": "ExpressionStatement",
                  "src": "2035:29:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13736,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13722,
                        "src": "2174:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13735,
                      "name": "verifyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13946
                      ],
                      "referencedDeclaration": 13946,
                      "src": "2162:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 13737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2162:20:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13738,
                  "nodeType": "ExpressionStatement",
                  "src": "2162:20:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13740,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13722,
                        "src": "2267:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13741,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13722,
                        "src": "2276:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13739,
                      "name": "verifyUpgradeableState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13849,
                      "src": "2244:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 13742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2244:40:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13743,
                  "nodeType": "ExpressionStatement",
                  "src": "2244:40:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13744,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14002,
                        "src": "2298:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 13745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16332,
                      "src": "2298:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 13746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2298:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 13753,
                  "nodeType": "IfStatement",
                  "src": "2294:89:14",
                  "trueBody": {
                    "id": 13752,
                    "nodeType": "Block",
                    "src": "2319:64:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 13748,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14002,
                              "src": "2356:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 13749,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13722,
                              "src": "2364:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 13747,
                            "name": "verifyUpgradeableState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13849,
                            "src": "2333:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 13750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2333:39:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13751,
                        "nodeType": "ExpressionStatement",
                        "src": "2333:39:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13754,
                      "name": "previousTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14004,
                      "src": "2392:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13755,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14002,
                      "src": "2409:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2392:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13757,
                  "nodeType": "ExpressionStatement",
                  "src": "2392:23:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13758,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14002,
                      "src": "2425:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13759,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13722,
                      "src": "2434:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2425:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13761,
                  "nodeType": "ExpressionStatement",
                  "src": "2425:16:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13762,
                      "name": "finishUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13871,
                        13954
                      ],
                      "referencedDeclaration": 13871,
                      "src": "2451:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2451:15:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13764,
                  "nodeType": "ExpressionStatement",
                  "src": "2451:15:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13766,
                        "name": "previousTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14004,
                        "src": "2490:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13767,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13722,
                        "src": "2506:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13768,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2515:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2515:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 13765,
                      "name": "Upgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13637,
                      "src": "2481:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 13770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2481:45:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13771,
                  "nodeType": "EmitStatement",
                  "src": "2476:50:14"
                }
              ]
            },
            "documentation": {
              "id": 13720,
              "nodeType": "StructuredDocumentation",
              "src": "1839:120:14",
              "text": "@notice Verify new contract storage and upgrade target\n@param _target New target contract address"
            },
            "functionSelector": "0900f010",
            "id": 13773,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 13725,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13724,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15526,
                  "src": "2005:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2005:9:14"
              },
              {
                "arguments": null,
                "id": 13727,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13726,
                  "name": "upgrading",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13658,
                  "src": "2015:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2015:9:14"
              }
            ],
            "name": "upgrade",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13722,
                  "mutability": "mutable",
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13773,
                  "src": "1981:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1981:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1980:17:14"
            },
            "returnParameters": {
              "id": 13728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2025:0:14"
            },
            "scope": 13982,
            "src": "1964:569:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13822,
              "nodeType": "Block",
              "src": "2713:509:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 13782,
                            "name": "previousTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14004,
                            "src": "2731:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 13783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16332,
                          "src": "2731:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 13784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2731:27:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13781,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2723:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2723:36:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13786,
                  "nodeType": "ExpressionStatement",
                  "src": "2723:36:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13788,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14002,
                        "src": "2785:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13789,
                        "name": "previousTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14004,
                        "src": "2793:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13790,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2809:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2809:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 13787,
                      "name": "RolledBack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13645,
                      "src": "2774:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 13792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2774:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13793,
                  "nodeType": "EmitStatement",
                  "src": "2769:51:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13795,
                        "name": "previousTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14004,
                        "src": "3000:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13794,
                      "name": "verifyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13946
                      ],
                      "referencedDeclaration": 13946,
                      "src": "2988:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 13796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2988:27:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13797,
                  "nodeType": "ExpressionStatement",
                  "src": "2988:27:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13798,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14002,
                        "src": "3029:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 13799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16332,
                      "src": "3029:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 13800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3029:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 13807,
                  "nodeType": "IfStatement",
                  "src": "3025:96:14",
                  "trueBody": {
                    "id": 13806,
                    "nodeType": "Block",
                    "src": "3050:71:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 13802,
                              "name": "previousTarget",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14004,
                              "src": "3087:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 13803,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14002,
                              "src": "3103:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 13801,
                            "name": "verifyUpgradeableState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13849,
                            "src": "3064:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 13804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3064:46:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13805,
                        "nodeType": "ExpressionStatement",
                        "src": "3064:46:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13808,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14002,
                      "src": "3130:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13809,
                      "name": "previousTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14004,
                      "src": "3139:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3130:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13811,
                  "nodeType": "ExpressionStatement",
                  "src": "3130:23:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13812,
                      "name": "previousTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14004,
                      "src": "3163:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 13815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3188:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 13814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3180:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 13813,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3180:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 13816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3180:10:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3163:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13818,
                  "nodeType": "ExpressionStatement",
                  "src": "3163:27:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13819,
                      "name": "finishUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13871,
                        13954
                      ],
                      "referencedDeclaration": 13871,
                      "src": "3200:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3200:15:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13821,
                  "nodeType": "ExpressionStatement",
                  "src": "3200:15:14"
                }
              ]
            },
            "documentation": {
              "id": 13774,
              "nodeType": "StructuredDocumentation",
              "src": "2539:122:14",
              "text": "@notice Rollback to previous target\n@dev Test storage carefully before upgrade again after rollback"
            },
            "functionSelector": "9afd9d78",
            "id": 13823,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 13777,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13776,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15526,
                  "src": "2693:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2693:9:14"
              },
              {
                "arguments": null,
                "id": 13779,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13778,
                  "name": "upgrading",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13658,
                  "src": "2703:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2703:9:14"
              }
            ],
            "name": "rollback",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2683:2:14"
            },
            "returnParameters": {
              "id": 13780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2713:0:14"
            },
            "scope": 13982,
            "src": "2666:556:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13848,
              "nodeType": "Block",
              "src": "3371:143:14",
              "statements": [
                {
                  "assignments": [
                    13832,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13832,
                      "mutability": "mutable",
                      "name": "callSuccess",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 13848,
                      "src": "3382:16:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 13831,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3382:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 13843,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 13837,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3445:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Dispatcher_$13982",
                                  "typeString": "contract Dispatcher"
                                }
                              },
                              "id": 13838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifyState",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13946,
                              "src": "3445:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address) external"
                              }
                            },
                            "id": 13839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3445:25:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13840,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13828,
                            "src": "3472:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 13835,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3422:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 13836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3422:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 13841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3422:54:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13833,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13826,
                        "src": "3403:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 13834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3403:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 13842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3403:74:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3381:96:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13845,
                        "name": "callSuccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13832,
                        "src": "3495:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13844,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3487:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3487:20:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13847,
                  "nodeType": "ExpressionStatement",
                  "src": "3487:20:14"
                }
              ]
            },
            "documentation": {
              "id": 13824,
              "nodeType": "StructuredDocumentation",
              "src": "3228:70:14",
              "text": "@dev Call verifyState method for Upgradeable contract"
            },
            "id": 13849,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyUpgradeableState",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13826,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13849,
                  "src": "3335:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13828,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13849,
                  "src": "3350:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3350:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3334:28:14"
            },
            "returnParameters": {
              "id": 13830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3371:0:14"
            },
            "scope": 13982,
            "src": "3303:211:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 13870,
              "nodeType": "Block",
              "src": "3635:149:14",
              "statements": [
                {
                  "assignments": [
                    13854,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13854,
                      "mutability": "mutable",
                      "name": "callSuccess",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 13870,
                      "src": "3646:16:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 13853,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3646:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 13865,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 13859,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3710:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Dispatcher_$13982",
                                  "typeString": "contract Dispatcher"
                                }
                              },
                              "id": 13860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "finishUpgrade",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13954,
                              "src": "3710:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address) external"
                              }
                            },
                            "id": 13861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3710:27:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13862,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14002,
                            "src": "3739:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 13857,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3687:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 13858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3687:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 13863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3687:59:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13855,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14002,
                        "src": "3667:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 13856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3667:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 13864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3667:80:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3645:102:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13867,
                        "name": "callSuccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13854,
                        "src": "3765:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13866,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3757:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3757:20:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13869,
                  "nodeType": "ExpressionStatement",
                  "src": "3757:20:14"
                }
              ]
            },
            "documentation": {
              "id": 13850,
              "nodeType": "StructuredDocumentation",
              "src": "3520:77:14",
              "text": "@dev Call finishUpgrade method from the Upgradeable contract"
            },
            "id": 13871,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finishUpgrade",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3624:2:14"
            },
            "returnParameters": {
              "id": 13852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3635:0:14"
            },
            "scope": 13982,
            "src": "3602:182:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              14040
            ],
            "body": {
              "id": 13945,
              "nodeType": "Block",
              "src": "3867:476:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 13885,
                                      "name": "_testTarget",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13873,
                                      "src": "3999:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 13886,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "4012:4:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Dispatcher_$13982",
                                            "typeString": "contract Dispatcher"
                                          }
                                        },
                                        "id": 13887,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "owner",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 15516,
                                        "src": "4012:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                          "typeString": "function () view external returns (address)"
                                        }
                                      },
                                      "id": 13888,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "4012:19:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    ],
                                    "id": 13884,
                                    "name": "delegateGet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      14095,
                                      14119,
                                      14145
                                    ],
                                    "referencedDeclaration": 14095,
                                    "src": "3987:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$_t_uint256_$",
                                      "typeString": "function (address,bytes4) returns (uint256)"
                                    }
                                  },
                                  "id": 13889,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3987:45:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 13883,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3979:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint160_$",
                                  "typeString": "type(uint160)"
                                },
                                "typeName": {
                                  "id": 13882,
                                  "name": "uint160",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3979:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 13890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3979:54:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            ],
                            "id": 13881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3971:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13880,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3971:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 13891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3971:63:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 13892,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15516,
                            "src": "4038:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 13893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4038:7:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3971:74:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13879,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3963:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3963:83:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13896,
                  "nodeType": "ExpressionStatement",
                  "src": "3963:83:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 13903,
                                      "name": "_testTarget",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13873,
                                      "src": "4092:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 13904,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "4105:4:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Dispatcher_$13982",
                                            "typeString": "contract Dispatcher"
                                          }
                                        },
                                        "id": 13905,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 14002,
                                        "src": "4105:11:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                          "typeString": "function () view external returns (address)"
                                        }
                                      },
                                      "id": 13906,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "4105:20:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    ],
                                    "id": 13902,
                                    "name": "delegateGet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      14095,
                                      14119,
                                      14145
                                    ],
                                    "referencedDeclaration": 14095,
                                    "src": "4080:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$_t_uint256_$",
                                      "typeString": "function (address,bytes4) returns (uint256)"
                                    }
                                  },
                                  "id": 13907,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4080:46:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 13901,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4072:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint160_$",
                                  "typeString": "type(uint160)"
                                },
                                "typeName": {
                                  "id": 13900,
                                  "name": "uint160",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4072:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 13908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4072:55:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            ],
                            "id": 13899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4064:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13898,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4064:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 13909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4064:64:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 13910,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14002,
                          "src": "4132:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4064:74:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13897,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4056:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4056:83:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13913,
                  "nodeType": "ExpressionStatement",
                  "src": "4056:83:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 13920,
                                      "name": "_testTarget",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13873,
                                      "src": "4185:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 13921,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "4198:4:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Dispatcher_$13982",
                                            "typeString": "contract Dispatcher"
                                          }
                                        },
                                        "id": 13922,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "previousTarget",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 14004,
                                        "src": "4198:19:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                          "typeString": "function () view external returns (address)"
                                        }
                                      },
                                      "id": 13923,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "4198:28:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    ],
                                    "id": 13919,
                                    "name": "delegateGet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      14095,
                                      14119,
                                      14145
                                    ],
                                    "referencedDeclaration": 14095,
                                    "src": "4173:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$_t_uint256_$",
                                      "typeString": "function (address,bytes4) returns (uint256)"
                                    }
                                  },
                                  "id": 13924,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4173:54:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 13918,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4165:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint160_$",
                                  "typeString": "type(uint160)"
                                },
                                "typeName": {
                                  "id": 13917,
                                  "name": "uint160",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4165:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 13925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4165:63:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            ],
                            "id": 13916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4157:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13915,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4157:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 13926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4157:72:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 13927,
                          "name": "previousTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14004,
                          "src": "4233:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4157:90:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13914,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4149:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4149:99:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13930,
                  "nodeType": "ExpressionStatement",
                  "src": "4149:99:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 13942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 13935,
                                  "name": "_testTarget",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13873,
                                  "src": "4284:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 13936,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4297:4:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Dispatcher_$13982",
                                        "typeString": "contract Dispatcher"
                                      }
                                    },
                                    "id": 13937,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "isUpgrade",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14006,
                                    "src": "4297:14:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 13938,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "4297:23:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "id": 13934,
                                "name": "delegateGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  14095,
                                  14119,
                                  14145
                                ],
                                "referencedDeclaration": 14095,
                                "src": "4272:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$_t_uint256_$",
                                  "typeString": "function (address,bytes4) returns (uint256)"
                                }
                              },
                              "id": 13939,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4272:49:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 13933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4266:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 13932,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "4266:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 13940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4266:56:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 13941,
                          "name": "isUpgrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14006,
                          "src": "4326:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "4266:69:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13931,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4258:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4258:78:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13944,
                  "nodeType": "ExpressionStatement",
                  "src": "4258:78:14"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b9626d21",
            "id": 13946,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 13877,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13876,
                  "name": "onlyWhileUpgrading",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14025,
                  "src": "3848:18:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3848:18:14"
              }
            ],
            "name": "verifyState",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13875,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3839:8:14"
            },
            "parameters": {
              "id": 13874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13873,
                  "mutability": "mutable",
                  "name": "_testTarget",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13946,
                  "src": "3811:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3811:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3810:21:14"
            },
            "returnParameters": {
              "id": 13878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3867:0:14"
            },
            "scope": 13982,
            "src": "3790:553:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14055
            ],
            "body": {
              "id": 13953,
              "nodeType": "Block",
              "src": "4512:2:14",
              "statements": []
            },
            "documentation": {
              "id": 13947,
              "nodeType": "StructuredDocumentation",
              "src": "4349:110:14",
              "text": "@dev Override function using empty code because no reason to call this function in Dispatcher"
            },
            "functionSelector": "e8dccd06",
            "id": 13954,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finishUpgrade",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13951,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4503:8:14"
            },
            "parameters": {
              "id": 13950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13949,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13954,
                  "src": "4487:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4487:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4486:9:14"
            },
            "returnParameters": {
              "id": 13952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4512:0:14"
            },
            "scope": 13982,
            "src": "4464:50:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13980,
              "nodeType": "Block",
              "src": "4633:613:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 13959,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14002,
                            "src": "4650:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 13960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16332,
                          "src": "4650:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 13961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4650:19:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13958,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "4643:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4643:27:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13963,
                  "nodeType": "ExpressionStatement",
                  "src": "4643:27:14"
                },
                {
                  "assignments": [
                    13965,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13965,
                      "mutability": "mutable",
                      "name": "callSuccess",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 13980,
                      "src": "4772:16:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 13964,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4772:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 13971,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13968,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4813:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4813:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13966,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14002,
                        "src": "4793:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 13967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4793:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 13970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4793:29:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4771:51:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 13972,
                    "name": "callSuccess",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13965,
                    "src": "4836:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 13978,
                    "nodeType": "Block",
                    "src": "5207:33:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 13975,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "5221:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 13976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5221:8:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13977,
                        "nodeType": "ExpressionStatement",
                        "src": "5221:8:14"
                      }
                    ]
                  },
                  "id": 13979,
                  "nodeType": "IfStatement",
                  "src": "4832:408:14",
                  "trueBody": {
                    "id": 13974,
                    "nodeType": "Block",
                    "src": "4849:352:14",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "5071:120:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5104:3:14",
                                    "type": "",
                                    "value": "0x0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5109:3:14",
                                    "type": "",
                                    "value": "0x0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "5114:14:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5114:16:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "5089:14:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5089:42:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5089:42:14"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5155:3:14",
                                    "type": "",
                                    "value": "0x0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "5160:14:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5160:16:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nodeType": "YulIdentifier",
                                  "src": "5148:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5148:29:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5148:29:14"
                            }
                          ]
                        },
                        "evmVersion": "berlin",
                        "externalReferences": [],
                        "id": 13973,
                        "nodeType": "InlineAssembly",
                        "src": "5062:129:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 13955,
              "nodeType": "StructuredDocumentation",
              "src": "4520:80:14",
              "text": "@dev Fallback function send all requests to the target contract"
            },
            "id": 13981,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4613:2:14"
            },
            "returnParameters": {
              "id": 13957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4633:0:14"
            },
            "scope": 13982,
            "src": "4605:641:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 13983,
        "src": "408:4841:14"
      }
    ],
    "src": "0:5250:14"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000f5d38038062000f5d833981810160405260208110156200003757600080fd5b5051600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36002805460ff60a01b1916600160a11b179055620000b56001600160a01b03821662000168602090811b6200034117901c565b620000bf57600080fd5b620000d3816001600160e01b03620001a516565b620000e881806001600160e01b03620002b316565b600180546001600160a01b0319166001600160a01b0383161790556200010d620003a4565b6040805133815290516001600160a01b038316916000917f354bd4b6eb65d64e6c79c53fa4f983a5e6bec4824ce4627c71be0b2722f4917e9181900360200190a3506002805460ff60a01b1916600160a01b17905562000516565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906200019d57508115155b949350505050565b60028054600160a01b900460ff1614620001be57600080fd5b620001d16001600160e01b036200048f16565b6001600160a01b0316620001f682638da5cb5b60e01b6001600160e01b036200049e16565b6001600160a01b0316146200020a57600080fd5b6001546001600160a01b03166200023282636a5c1cc960e11b6001600160e01b036200049e16565b6001600160a01b0316146200024657600080fd5b6002546001600160a01b03166200026e826309659a2360e31b6001600160e01b036200049e16565b6001600160a01b0316146200028257600080fd5b600254600160a01b900460ff16620002a28263e38a303b60e01b6200049e565b60ff1614620002b057600080fd5b50565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b031663b9626d2160e01b17815292518251600094928716939282918083835b60208310620003295780518252601f19909201916020918201910162000308565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146200038b576040519150601f19603f3d011682016040523d82523d6000602084013e62000390565b606091505b50509050806200039f57600080fd5b505050565b600154604080516001600160a01b03909216602480840182905282518085039091018152604490930182526020830180516001600160e01b031663746e668360e11b17815291518351600094929382918083835b60208310620004195780518252601f199092019160209182019101620003f8565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146200047b576040519150601f19603f3d011682016040523d82523d6000602084013e62000480565b606091505b5050905080620002b057600080fd5b6000546001600160a01b031690565b600080620004b984848380806001600160e01b03620004c216565b51949350505050565b6040518481528315620004d6578260048201525b6001841115620004e7578160248201525b6000808560200260040183895af4801562000507573d6000833e6200050c565b600082fd5b5095945050505050565b610a3780620005266000396000f3fe6080604052600436106100c25760003560e01c80638f32d59b1161007f578063d4b8399211610059578063d4b839921461029b578063e38a303b146102b0578063e8dccd06146102db578063f2fde38b1461030e576100c2565b80638f32d59b1461022a5780639afd9d7814610253578063b9626d2114610268576100c2565b80630900f0101461015e5780634555d5c9146101935780634b2cd118146101ba5780635c60da1b146101eb578063715018a6146102005780638da5cb5b14610215575b6001546100d7906001600160a01b0316610341565b6100dd57fe5b6001546040516000916001600160a01b031690829036908083838082843760405192019450600093509091505080830381855af49150503d8060008114610140576040519150601f19603f3d011682016040523d82523d6000602084013e610145565b606091505b505090508015610159573d6000803e3d6000f35b600080fd5b34801561016a57600080fd5b506101916004803603602081101561018157600080fd5b50356001600160a01b031661037d565b005b34801561019f57600080fd5b506101a861048e565b60408051918252519081900360200190f35b3480156101c657600080fd5b506101cf610493565b604080516001600160a01b039092168252519081900360200190f35b3480156101f757600080fd5b506101cf6104a2565b34801561020c57600080fd5b506101916104b1565b34801561022157600080fd5b506101cf61050c565b34801561023657600080fd5b5061023f61051b565b604080519115158252519081900360200190f35b34801561025f57600080fd5b5061019161052c565b34801561027457600080fd5b506101916004803603602081101561028b57600080fd5b50356001600160a01b0316610644565b3480156102a757600080fd5b506101cf61071f565b3480156102bc57600080fd5b506102c561072e565b6040805160ff9092168252519081900360200190f35b3480156102e757600080fd5b50610191600480360360208110156102fe57600080fd5b50356001600160a01b031661071c565b34801561031a57600080fd5b506101916004803603602081101561033157600080fd5b50356001600160a01b031661073e565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061037557508115155b949350505050565b61038561051b565b61038e57600080fd5b6002805460ff60a01b1916600160a11b1790556103b36001600160a01b038216610341565b6103bc57600080fd5b6103c581610644565b6103cf8182610758565b6001546103e4906001600160a01b0316610341565b156103ff576001546103ff906001600160a01b031682610758565b60018054600280546001600160a01b038084166001600160a01b031992831617909255909116908316179055610433610844565b6002546040805133815290516001600160a01b038085169316917f354bd4b6eb65d64e6c79c53fa4f983a5e6bec4824ce4627c71be0b2722f4917e919081900360200190a3506002805460ff60a01b1916600160a01b179055565b600290565b6002546001600160a01b031681565b6001546001600160a01b031690565b6104b961051b565b6104c257600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b61053461051b565b61053d57600080fd5b6002805460ff60a01b1916600160a11b1790819055610564906001600160a01b0316610341565b61056d57600080fd5b6002546001546040805133815290516001600160a01b039384169392909216917f86e04d1de380d22833cb4409f3ee7c6ad818a8d8387a83b6371f5ce018ddc1549181900360200190a36002546105cc906001600160a01b0316610644565b6001546105e1906001600160a01b0316610341565b1561060257600254600154610602916001600160a01b039081169116610758565b60028054600180546001600160a01b03199081166001600160a01b0384161790915516905561062f610844565b6002805460ff60a01b1916600160a01b179055565b60028054600160a01b900460ff161461065c57600080fd5b61066461050c565b6001600160a01b031661067e82638da5cb5b60e01b61092a565b6001600160a01b03161461069157600080fd5b6001546001600160a01b03166106ae82636a5c1cc960e11b61092a565b6001600160a01b0316146106c157600080fd5b6002546001600160a01b03166106de826309659a2360e31b61092a565b6001600160a01b0316146106f157600080fd5b600254600160a01b900460ff1661070f8263e38a303b60e01b61092a565b60ff161461071c57600080fd5b50565b6001546001600160a01b031681565b600254600160a01b900460ff1681565b61074661051b565b61074f57600080fd5b61071c81610943565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b031663b9626d2160e01b17815292518251600094928716939282918083835b602083106107cc5780518252601f1990920191602091820191016107ad565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461082c576040519150601f19603f3d011682016040523d82523d6000602084013e610831565b606091505b505090508061083f57600080fd5b505050565b600154604080516001600160a01b03909216602480840182905282518085039091018152604490930182526020830180516001600160e01b031663746e668360e11b17815291518351600094929382918083835b602083106108b75780518252601f199092019160209182019101610898565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610917576040519150601f19603f3d011682016040523d82523d6000602084013e61091c565b606091505b505090508061071c57600080fd5b60008061093a84848380806109b1565b51949350505050565b6001600160a01b03811661095657600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60405184815283156109c4578260048201525b60018411156109d4578160248201525b6000808560200260040183895af480156109f2573d6000833e6109f7565b600082fd5b509594505050505056fea26469706673582212209b6426bad3b688ddaedb05ee2c43d22ecc9dca1a77937a2fab1682b6091c7e6364736f6c63430006070033",
  "bytecodeSha1": "1ad0faf87d6ee939f97857caf15f578c6bed3469",
  "compiler": {
    "evm_version": "berlin",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.7"
  },
  "contractName": "Dispatcher",
  "coverageMap": {
    "branches": {
      "14": {
        "Dispatcher.<fallback>": {
          "33": [
            4836,
            4847,
            false
          ]
        },
        "Dispatcher.finishUpgrade": {
          "43": [
            3765,
            3776,
            true
          ]
        },
        "Dispatcher.rollback": {
          "36": [
            2731,
            2758,
            true
          ],
          "37": [
            3029,
            3048,
            false
          ]
        },
        "Dispatcher.upgrade": {
          "34": [
            2043,
            2063,
            true
          ],
          "35": [
            2298,
            2317,
            false
          ]
        },
        "Dispatcher.verifyState": {
          "38": [
            3971,
            4045,
            true
          ],
          "39": [
            4064,
            4138,
            true
          ],
          "40": [
            4157,
            4247,
            true
          ],
          "41": [
            4266,
            4335,
            true
          ]
        },
        "Dispatcher.verifyUpgradeableState": {
          "42": [
            3495,
            3506,
            true
          ]
        }
      },
      "15": {},
      "21": {
        "Ownable._transferOwnership": {
          "45": [
            1980,
            2002,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "44": [
            864,
            873,
            true
          ]
        }
      },
      "26": {}
    },
    "statements": {
      "14": {
        "Dispatcher.<fallback>": {
          "0": [
            4643,
            4670
          ]
        },
        "Dispatcher.finishUpgrade": {
          "29": [
            3757,
            3777
          ]
        },
        "Dispatcher.implementation": {
          "11": [
            1746,
            1759
          ]
        },
        "Dispatcher.proxyType": {
          "10": [
            1535,
            1543
          ]
        },
        "Dispatcher.rollback": {
          "16": [
            2723,
            2759
          ],
          "17": [
            2769,
            2820
          ],
          "18": [
            2988,
            3015
          ],
          "19": [
            3064,
            3110
          ],
          "20": [
            3130,
            3153
          ],
          "21": [
            3163,
            3190
          ],
          "22": [
            3200,
            3215
          ]
        },
        "Dispatcher.upgrade": {
          "2": [
            2035,
            2064
          ],
          "3": [
            2162,
            2182
          ],
          "4": [
            2244,
            2284
          ],
          "5": [
            2333,
            2372
          ],
          "6": [
            2392,
            2415
          ],
          "7": [
            2425,
            2441
          ],
          "8": [
            2451,
            2466
          ],
          "9": [
            2476,
            2526
          ]
        },
        "Dispatcher.verifyState": {
          "23": [
            3963,
            4046
          ],
          "24": [
            4056,
            4139
          ],
          "25": [
            4149,
            4248
          ],
          "26": [
            4258,
            4336
          ]
        },
        "Dispatcher.verifyUpgradeableState": {
          "28": [
            3487,
            3507
          ]
        }
      },
      "15": {},
      "21": {
        "Ownable._transferOwnership": {
          "30": [
            1972,
            2003
          ],
          "31": [
            2013,
            2056
          ],
          "32": [
            2066,
            2083
          ]
        },
        "Ownable.isOwner": {
          "15": [
            1036,
            1063
          ]
        },
        "Ownable.owner": {
          "14": [
            717,
            730
          ]
        },
        "Ownable.renounceOwnership": {
          "12": [
            1404,
            1449
          ],
          "13": [
            1459,
            1478
          ]
        },
        "Ownable.transferOwnership": {
          "27": [
            1728,
            1756
          ]
        }
      },
      "26": {
        "Address.isContract": {
          "1": [
            1237,
            1288
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "ERCProxy",
    "Ownable",
    "Upgradeable"
  ],
  "deployedBytecode": "6080604052600436106100c25760003560e01c80638f32d59b1161007f578063d4b8399211610059578063d4b839921461029b578063e38a303b146102b0578063e8dccd06146102db578063f2fde38b1461030e576100c2565b80638f32d59b1461022a5780639afd9d7814610253578063b9626d2114610268576100c2565b80630900f0101461015e5780634555d5c9146101935780634b2cd118146101ba5780635c60da1b146101eb578063715018a6146102005780638da5cb5b14610215575b6001546100d7906001600160a01b0316610341565b6100dd57fe5b6001546040516000916001600160a01b031690829036908083838082843760405192019450600093509091505080830381855af49150503d8060008114610140576040519150601f19603f3d011682016040523d82523d6000602084013e610145565b606091505b505090508015610159573d6000803e3d6000f35b600080fd5b34801561016a57600080fd5b506101916004803603602081101561018157600080fd5b50356001600160a01b031661037d565b005b34801561019f57600080fd5b506101a861048e565b60408051918252519081900360200190f35b3480156101c657600080fd5b506101cf610493565b604080516001600160a01b039092168252519081900360200190f35b3480156101f757600080fd5b506101cf6104a2565b34801561020c57600080fd5b506101916104b1565b34801561022157600080fd5b506101cf61050c565b34801561023657600080fd5b5061023f61051b565b604080519115158252519081900360200190f35b34801561025f57600080fd5b5061019161052c565b34801561027457600080fd5b506101916004803603602081101561028b57600080fd5b50356001600160a01b0316610644565b3480156102a757600080fd5b506101cf61071f565b3480156102bc57600080fd5b506102c561072e565b6040805160ff9092168252519081900360200190f35b3480156102e757600080fd5b50610191600480360360208110156102fe57600080fd5b50356001600160a01b031661071c565b34801561031a57600080fd5b506101916004803603602081101561033157600080fd5b50356001600160a01b031661073e565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061037557508115155b949350505050565b61038561051b565b61038e57600080fd5b6002805460ff60a01b1916600160a11b1790556103b36001600160a01b038216610341565b6103bc57600080fd5b6103c581610644565b6103cf8182610758565b6001546103e4906001600160a01b0316610341565b156103ff576001546103ff906001600160a01b031682610758565b60018054600280546001600160a01b038084166001600160a01b031992831617909255909116908316179055610433610844565b6002546040805133815290516001600160a01b038085169316917f354bd4b6eb65d64e6c79c53fa4f983a5e6bec4824ce4627c71be0b2722f4917e919081900360200190a3506002805460ff60a01b1916600160a01b179055565b600290565b6002546001600160a01b031681565b6001546001600160a01b031690565b6104b961051b565b6104c257600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b61053461051b565b61053d57600080fd5b6002805460ff60a01b1916600160a11b1790819055610564906001600160a01b0316610341565b61056d57600080fd5b6002546001546040805133815290516001600160a01b039384169392909216917f86e04d1de380d22833cb4409f3ee7c6ad818a8d8387a83b6371f5ce018ddc1549181900360200190a36002546105cc906001600160a01b0316610644565b6001546105e1906001600160a01b0316610341565b1561060257600254600154610602916001600160a01b039081169116610758565b60028054600180546001600160a01b03199081166001600160a01b0384161790915516905561062f610844565b6002805460ff60a01b1916600160a01b179055565b60028054600160a01b900460ff161461065c57600080fd5b61066461050c565b6001600160a01b031661067e82638da5cb5b60e01b61092a565b6001600160a01b03161461069157600080fd5b6001546001600160a01b03166106ae82636a5c1cc960e11b61092a565b6001600160a01b0316146106c157600080fd5b6002546001600160a01b03166106de826309659a2360e31b61092a565b6001600160a01b0316146106f157600080fd5b600254600160a01b900460ff1661070f8263e38a303b60e01b61092a565b60ff161461071c57600080fd5b50565b6001546001600160a01b031681565b600254600160a01b900460ff1681565b61074661051b565b61074f57600080fd5b61071c81610943565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b031663b9626d2160e01b17815292518251600094928716939282918083835b602083106107cc5780518252601f1990920191602091820191016107ad565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461082c576040519150601f19603f3d011682016040523d82523d6000602084013e610831565b606091505b505090508061083f57600080fd5b505050565b600154604080516001600160a01b03909216602480840182905282518085039091018152604490930182526020830180516001600160e01b031663746e668360e11b17815291518351600094929382918083835b602083106108b75780518252601f199092019160209182019101610898565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610917576040519150601f19603f3d011682016040523d82523d6000602084013e61091c565b606091505b505090508061071c57600080fd5b60008061093a84848380806109b1565b51949350505050565b6001600160a01b03811661095657600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60405184815283156109c4578260048201525b60018411156109d4578160248201525b6000808560200260040183895af480156109f2573d6000833e6109f7565b600082fd5b509594505050505056fea26469706673582212209b6426bad3b688ddaedb05ee2c43d22ecc9dca1a77937a2fab1682b6091c7e6364736f6c63430006070033",
  "deployedSourceMap": "408:4841:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4650:6;;:19;;-1:-1:-1;;;;;4650:6:14;:17;:19::i;:::-;4643:27;;;;4793:6;;:29;;4772:16;;-1:-1:-1;;;;;4793:6:14;;4772:16;;4813:8;;4793:29;4772:16;4813:8;;4772:16;4793:29;1:33:-1;4793:29:14;;45:16:-1;;;-1:-1;4793:29:14;;-1:-1:-1;4793:29:14;;-1:-1:-1;;4793:29:14;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;4771:51:14;;;4836:11;4832:408;;;5114:16;5109:3;;5089:42;5160:16;5109:3;5148:29;5071:120;12:1:-1;9;2:12;1964:569:14;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1964:569:14;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1964:569:14;-1:-1:-1;;;;;1964:569:14;;:::i;:::-;;1463:87;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1463:87:14;;;:::i;:::-;;;;;;;;;;;;;;;;973:29:15;;5:9:-1;2:2;;;27:1;24;17:12;2:2;973:29:15;;;:::i;:::-;;;;-1:-1:-1;;;;;973:29:15;;;;;;;;;;;;;;1669:97:14;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1669:97:14;;;:::i;1348:137:21:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1348:137:21;;;:::i;660:77::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;660:77:21;;;:::i;980:90::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;980:90:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;2666:556:14;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2666:556:14;;;:::i;3790:553::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3790:553:14;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3790:553:14;-1:-1:-1;;;;;3790:553:14;;:::i;859:21:15:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;859:21:15;;;:::i;1132:22::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1132:22:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4464:50:14;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4464:50:14;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4464:50:14;-1:-1:-1;;;;;4464:50:14;;:::i;1656:107:21:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1656:107:21;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1656:107:21;-1:-1:-1;;;;;1656:107:21;;:::i;685:610:26:-;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;1272:15:26;;;1245:42;1237:51;685:610;-1:-1:-1;;;;685:610:26:o;1964:569:14:-;864:9:21;:7;:9::i;:::-;856:18;;12:1:-1;9;2:12;856:18:21;1384:1:15::1;758:24:14::0;;-1:-1:-1;;;;758:24:14::1;-1:-1:-1::0;;;758:24:14::1;::::0;;2043:20:::2;-1:-1:-1::0;;;;;2043:18:14;::::2;;:20::i;:::-;2035:29;;12:1:-1;9::::0;2:12:::2;2035:29:14;2162:20;2174:7;2162:11;:20::i;:::-;2244:40;2267:7;2276;2244:22;:40::i;:::-;2298:6;::::0;:19:::2;::::0;-1:-1:-1;;;;;2298:6:14::2;:17;:19::i;:::-;2294:89;;;2356:6;::::0;2333:39:::2;::::0;-1:-1:-1;;;;;2356:6:14::2;2364:7:::0;2333:22:::2;:39::i;:::-;2409:6;::::0;;2392:14:::2;:23:::0;;-1:-1:-1;;;;;2409:6:14;;::::2;-1:-1:-1::0;;;;;;2392:23:14;;::::2;;::::0;;;2425:16;;::::2;::::0;;::::2;;::::0;;2451:15:::2;:13;:15::i;:::-;2490:14;::::0;2481:45:::2;::::0;;2515:10:::2;2481:45:::0;;;;-1:-1:-1;;;;;2481:45:14;;::::2;::::0;2490:14:::2;::::0;2481:45:::2;::::0;;;;;::::2;::::0;;::::2;-1:-1:-1::0;803:9:14::1;:25:::0;;-1:-1:-1;;;;803:25:14::1;-1:-1:-1::0;;;803:25:14::1;::::0;;1964:569::o;1463:87::-;1542:1;1463:87;:::o;973:29:15:-;;;-1:-1:-1;;;;;973:29:15;;:::o;1669:97:14:-;1753:6;;-1:-1:-1;;;;;1753:6:14;1669:97;:::o;1348:137:21:-;864:9;:7;:9::i;:::-;856:18;;12:1:-1;9;2:12;856:18:21;1446:1:::1;1430:6:::0;;1409:40:::1;::::0;-1:-1:-1;;;;;1430:6:21;;::::1;::::0;1409:40:::1;::::0;1446:1;;1409:40:::1;1476:1;1459:19:::0;;-1:-1:-1;;;;;;1459:19:21::1;::::0;;1348:137::o;660:77::-;698:7;724:6;-1:-1:-1;;;;;724:6:21;660:77;:::o;980:90::-;1020:4;1057:6;-1:-1:-1;;;;;1057:6:21;1043:10;:20;;980:90::o;2666:556:14:-;864:9:21;:7;:9::i;:::-;856:18;;12:1:-1;9;2:12;856:18:21;1384:1:15::1;758:24:14::0;;-1:-1:-1;;;;758:24:14::1;-1:-1:-1::0;;;758:24:14::1;::::0;;;;2731:27:::2;::::0;-1:-1:-1;;;;;2731:14:14::2;:25;:27::i;:::-;2723:36;;12:1:-1;9::::0;2:12:::2;2723:36:14;2793:14;::::0;;2785:6;2774:46:::2;::::0;;2809:10:::2;2774:46:::0;;;;-1:-1:-1;;;;;2793:14:14;;::::2;::::0;2785:6;;;::::2;::::0;2774:46:::2;::::0;;;;::::2;::::0;;::::2;3000:14;::::0;2988:27:::2;::::0;-1:-1:-1;;;;;3000:14:14::2;2988:11;:27::i;:::-;3029:6;::::0;:19:::2;::::0;-1:-1:-1;;;;;3029:6:14::2;:17;:19::i;:::-;3025:96;;;3087:14;::::0;;3103:6;3064:46:::2;::::0;-1:-1:-1;;;;;3087:14:14;;::::2;::::0;3103:6:::2;3064:22;:46::i;:::-;3139:14;::::0;;;3130:23;;-1:-1:-1;;;;;;3130:23:14;;::::2;-1:-1:-1::0;;;;;3139:14:14;::::2;3130:23;::::0;;;3163:27:::2;::::0;;3200:15:::2;:13;:15::i;:::-;803:9:::1;:25:::0;;-1:-1:-1;;;;803:25:14::1;-1:-1:-1::0;;;803:25:14::1;::::0;;2666:556::o;3790:553::-;1384:1:15;1586:9;;-1:-1:-1;;;1586:9:15;;:25;:9;:25;1578:34;;12:1:-1;9;2:12;1578:34:15;4038:7:14::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;3971:74:14::1;3987:45;3999:11:::0;-1:-1:-1;;;3987:11:14::1;:45::i;:::-;-1:-1:-1::0;;;;;3971:74:14::1;;3963:83;;12:1:-1;9::::0;2:12:::1;3963:83:14;4132:6;::::0;-1:-1:-1;;;;;4132:6:14::1;4080:46;4092:11:::0;-1:-1:-1;;;4080:11:14::1;:46::i;:::-;-1:-1:-1::0;;;;;4064:74:14::1;;4056:83;;12:1:-1;9::::0;2:12:::1;4056:83:14;4233:14;::::0;-1:-1:-1;;;;;4233:14:14::1;4173:54;4185:11:::0;-1:-1:-1;;;4173:11:14::1;:54::i;:::-;-1:-1:-1::0;;;;;4157:90:14::1;;4149:99;;12:1:-1;9::::0;2:12:::1;4149:99:14;4326:9;::::0;-1:-1:-1;;;4326:9:14;::::1;;;4272:49;4284:11:::0;-1:-1:-1;;;4272:11:14::1;:49::i;:::-;4266:69;;;4258:78;;12:1:-1;9::::0;2:12:::1;4258:78:14;3790:553:::0;:::o;859:21:15:-;;;-1:-1:-1;;;;;859:21:15;;:::o;1132:22::-;;;-1:-1:-1;;;1132:22:15;;;;;:::o;1656:107:21:-;864:9;:7;:9::i;:::-;856:18;;12:1:-1;9;2:12;856:18:21;1728:28:::1;1747:8;1728:18;:28::i;3303:211:14:-:0;3422:54;;;-1:-1:-1;;;;;3422:54:14;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3422:54:14;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;3403:74:14;;;;3382:16;;3403:18;;;;3422:54;3403:74;;;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3403:74:14;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;3381:96:14;;;3495:11;3487:20;;12:1:-1;9;2:12;3487:20:14;3303:211;;;:::o;3602:182::-;3667:6;;3687:59;;;-1:-1:-1;;;;;3667:6:14;;;3687:59;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3687:59:14;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;3667:80:14;;;;3646:16;;3667:6;;:80;;;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3667:80:14;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;3645:102:14;;;3765:11;3757:20;;12:1:-1;9;2:12;3532:259:15;3614:14;;3668:44;3684:7;3693:9;3614:14;;;3668:15;:44::i;:::-;3755:20;;3731:54;-1:-1:-1;;;;3731:54:15:o;1907:183:21:-;-1:-1:-1;;;;;1980:22:21;;1972:31;;12:1:-1;9;2:12;1972:31:21;2039:6;;;2018:38;;-1:-1:-1;;;;;2018:38:21;;;;2039:6;;;2018:38;;;2066:6;:17;;-1:-1:-1;;;;;;2066:17:21;-1:-1:-1;;;;;2066:17:21;;;;;;;;;;1907:183::o;2527:899:15:-;2808:4;2802:11;2826:32;;;2874:25;;2871:2;;2951:10;2944:4;2929:13;2925:24;2918:44;2871:2;3015:1;2995:18;2992:25;2989:2;;;3069:10;3062:4;3047:13;3043:24;3036:44;2989:2;3203:1;3200;3178:18;3172:4;3168:29;3162:4;3158:40;3143:13;3134:7;3127:5;3114:91;3222:71;;;;3375:16;3370:3;3355:13;3340:52;3107:303;;3222:71;3273:1;3258:13;3251:24;3107:303;;2771:649;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "constructor": {
        "params": {
          "_target": "Target contract address"
        }
      },
      "finishUpgrade(address)": {
        "details": "Override function using empty code because no reason to call this function in Dispatcher"
      },
      "implementation()": {
        "notice": "ERC897, gets the address of the implementation where every call will be delegated"
      },
      "proxyType()": {
        "notice": "ERC897, whether it is a forwarding (1) or an upgradeable (2) proxy"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.",
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "rollback()": {
        "details": "Test storage carefully before upgrade again after rollback",
        "notice": "Rollback to previous target"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "upgrade(address)": {
        "notice": "Verify new contract storage and upgrade target",
        "params": {
          "_target": "New target contract address"
        }
      }
    },
    "notice": "Proxying requests to other contracts. Client should use ABI of real contract and address of this contract"
  },
  "offset": [
    408,
    5249
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F32D59B GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD4B83992 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD4B83992 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xE38A303B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xE8DCCD06 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30E JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x9AFD9D78 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xB9626D21 EQ PUSH2 0x268 JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x900F010 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x4555D5C9 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x4B2CD118 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x215 JUMPI JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xD7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x341 JUMP JUMPDEST PUSH2 0xDD JUMPI INVALID JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 CALLDATASIZE SWAP1 DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x140 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x145 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 ISZERO PUSH2 0x159 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x37D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x4A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x4B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x50C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x52C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x644 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x71F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH2 0x72E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x71C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x73E JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x375 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x385 PUSH2 0x51B JUMP JUMPDEST PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA1 SHL OR SWAP1 SSTORE PUSH2 0x3B3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x341 JUMP JUMPDEST PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C5 DUP2 PUSH2 0x644 JUMP JUMPDEST PUSH2 0x3CF DUP2 DUP3 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x3E4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x341 JUMP JUMPDEST ISZERO PUSH2 0x3FF JUMPI PUSH1 0x1 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH2 0x433 PUSH2 0x844 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 AND SWAP2 PUSH32 0x354BD4B6EB65D64E6C79C53FA4F983A5E6BEC4824CE4627C71BE0B2722F4917E SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x4B9 PUSH2 0x51B JUMP JUMPDEST PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH2 0x534 PUSH2 0x51B JUMP JUMPDEST PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA1 SHL OR SWAP1 DUP2 SWAP1 SSTORE PUSH2 0x564 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x341 JUMP JUMPDEST PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH32 0x86E04D1DE380D22833CB4409F3EE7C6AD818A8D8387A83B6371F5CE018DDC154 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x2 SLOAD PUSH2 0x5CC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x644 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x5E1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x341 JUMP JUMPDEST ISZERO PUSH2 0x602 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0x602 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND PUSH2 0x758 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE PUSH2 0x62F PUSH2 0x844 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND EQ PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x664 PUSH2 0x50C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x67E DUP3 PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL PUSH2 0x92A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6AE DUP3 PUSH4 0x6A5C1CC9 PUSH1 0xE1 SHL PUSH2 0x92A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DE DUP3 PUSH4 0x9659A23 PUSH1 0xE3 SHL PUSH2 0x92A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x70F DUP3 PUSH4 0xE38A303B PUSH1 0xE0 SHL PUSH2 0x92A JUMP JUMPDEST PUSH1 0xFF AND EQ PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x746 PUSH2 0x51B JUMP JUMPDEST PUSH2 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71C DUP2 PUSH2 0x943 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xB9626D21 PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 SWAP3 DUP8 AND SWAP4 SWAP3 DUP3 SWAP2 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x7CC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x7AD JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x82C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x831 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x83F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP4 ADD DUP3 MSTORE PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x746E6683 PUSH1 0xE1 SHL OR DUP2 MSTORE SWAP2 MLOAD DUP4 MLOAD PUSH1 0x0 SWAP5 SWAP3 SWAP4 DUP3 SWAP2 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x8B7 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x898 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x91C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x93A DUP5 DUP5 DUP4 DUP1 DUP1 PUSH2 0x9B1 JUMP JUMPDEST MLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x956 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP4 ISZERO PUSH2 0x9C4 JUMPI DUP3 PUSH1 0x4 DUP3 ADD MSTORE JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x9D4 JUMPI DUP2 PUSH1 0x24 DUP3 ADD MSTORE JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x20 MUL PUSH1 0x4 ADD DUP4 DUP10 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x9F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x0 DUP3 REVERT JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 PUSH5 0x26BAD3B688 0xDD 0xAE 0xDB SDIV 0xEE 0x2C NUMBER 0xD2 0x2E 0xCC SWAP14 0xCA BYTE PUSH24 0x937A2FAB1682B6091C7E6364736F6C634300060700330000 ",
  "pcMap": {
    "0": {
      "offset": [
        408,
        5249
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "8": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "LT",
      "path": "14"
    },
    "9": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC2"
    },
    "12": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "13": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "16": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "SHR",
      "path": "14"
    },
    "19": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "DUP1",
      "path": "14"
    },
    "20": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8F32D59B"
    },
    "25": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "GT",
      "path": "14"
    },
    "26": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7F"
    },
    "29": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "30": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "DUP1",
      "path": "14"
    },
    "31": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xD4B83992"
    },
    "36": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "GT",
      "path": "14"
    },
    "37": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "41": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "DUP1",
      "path": "14"
    },
    "42": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xD4B83992"
    },
    "47": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "EQ",
      "path": "14"
    },
    "48": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x29B"
    },
    "51": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "52": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "DUP1",
      "path": "14"
    },
    "53": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xE38A303B"
    },
    "58": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "EQ",
      "path": "14"
    },
    "59": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2B0"
    },
    "62": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "63": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "DUP1",
      "path": "14"
    },
    "64": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xE8DCCD06"
    },
    "69": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "EQ",
      "path": "14"
    },
    "70": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2DB"
    },
    "73": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "74": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "DUP1",
      "path": "14"
    },
    "75": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "EQ",
      "path": "14"
    },
    "81": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x30E"
    },
    "84": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "85": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC2"
    },
    "88": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMP",
      "path": "14"
    },
    "89": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "90": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "DUP1",
      "path": "14"
    },
    "91": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8F32D59B"
    },
    "96": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "EQ",
      "path": "14"
    },
    "97": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22A"
    },
    "100": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "101": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "DUP1",
      "path": "14"
    },
    "102": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x9AFD9D78"
    },
    "107": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "EQ",
      "path": "14"
    },
    "108": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x253"
    },
    "111": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "112": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "DUP1",
      "path": "14"
    },
    "113": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB9626D21"
    },
    "118": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "EQ",
      "path": "14"
    },
    "119": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x268"
    },
    "122": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "123": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC2"
    },
    "126": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMP",
      "path": "14"
    },
    "127": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "128": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "DUP1",
      "path": "14"
    },
    "129": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x900F010"
    },
    "134": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "EQ",
      "path": "14"
    },
    "135": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15E"
    },
    "138": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "139": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "DUP1",
      "path": "14"
    },
    "140": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4555D5C9"
    },
    "145": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "EQ",
      "path": "14"
    },
    "146": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x193"
    },
    "149": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "150": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "DUP1",
      "path": "14"
    },
    "151": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4B2CD118"
    },
    "156": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "EQ",
      "path": "14"
    },
    "157": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BA"
    },
    "160": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "161": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "DUP1",
      "path": "14"
    },
    "162": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x5C60DA1B"
    },
    "167": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "EQ",
      "path": "14"
    },
    "168": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EB"
    },
    "171": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "172": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "DUP1",
      "path": "14"
    },
    "173": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x715018A6"
    },
    "178": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "EQ",
      "path": "14"
    },
    "179": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x200"
    },
    "182": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "183": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "DUP1",
      "path": "14"
    },
    "184": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8DA5CB5B"
    },
    "189": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "EQ",
      "path": "14"
    },
    "190": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x215"
    },
    "193": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "194": {
      "fn": null,
      "offset": [
        408,
        5249
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "195": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4650,
        4656
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 0,
      "value": "0x1"
    },
    "197": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4650,
        4656
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "198": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4650,
        4669
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD7"
    },
    "201": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4650,
        4669
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "208": {
      "op": "SHL"
    },
    "209": {
      "op": "SUB"
    },
    "210": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4650,
        4656
      ],
      "op": "AND",
      "path": "14"
    },
    "211": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4650,
        4667
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x341"
    },
    "214": {
      "fn": "Dispatcher.<fallback>",
      "jump": "i",
      "offset": [
        4650,
        4669
      ],
      "op": "JUMP",
      "path": "14"
    },
    "215": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4650,
        4669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "216": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4643,
        4670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDD"
    },
    "219": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4643,
        4670
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "220": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4643,
        4670
      ],
      "op": "INVALID",
      "path": "14"
    },
    "221": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4643,
        4670
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "222": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4799
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "224": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4799
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "225": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "227": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "228": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4772,
        4788
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "230": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4772,
        4788
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "237": {
      "op": "SHL"
    },
    "238": {
      "op": "SUB"
    },
    "239": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4799
      ],
      "op": "AND",
      "path": "14"
    },
    "240": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4799
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "241": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4772,
        4788
      ],
      "op": "DUP3",
      "path": "14"
    },
    "242": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4772,
        4788
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "243": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4813,
        4821
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "244": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4813,
        4821
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "245": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "DUP1",
      "path": "14"
    },
    "246": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4772,
        4788
      ],
      "op": "DUP4",
      "path": "14"
    },
    "247": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4813,
        4821
      ],
      "op": "DUP4",
      "path": "14"
    },
    "248": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4813,
        4821
      ],
      "op": "DUP1",
      "path": "14"
    },
    "249": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4772,
        4788
      ],
      "op": "DUP3",
      "path": "14"
    },
    "250": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "DUP5",
      "path": "14"
    },
    "251": {
      "op": "CALLDATACOPY"
    },
    "252": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "254": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "255": {
      "op": "SWAP3"
    },
    "256": {
      "op": "ADD"
    },
    "257": {
      "op": "SWAP5"
    },
    "258": {
      "op": "POP"
    },
    "259": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "261": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "262": {
      "op": "POP"
    },
    "263": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "264": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "265": {
      "op": "POP"
    },
    "266": {
      "op": "POP"
    },
    "267": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "DUP1",
      "path": "14"
    },
    "268": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "DUP4",
      "path": "14"
    },
    "269": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "SUB",
      "path": "14"
    },
    "270": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "DUP2",
      "path": "14"
    },
    "271": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "DUP6",
      "path": "14"
    },
    "272": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "GAS",
      "path": "14"
    },
    "273": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "DELEGATECALL",
      "path": "14"
    },
    "274": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "275": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "POP",
      "path": "14"
    },
    "276": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "POP",
      "path": "14"
    },
    "277": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4793,
        4822
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "278": {
      "op": "DUP1"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "281": {
      "op": "DUP2"
    },
    "282": {
      "op": "EQ"
    },
    "283": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "286": {
      "op": "JUMPI"
    },
    "287": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "289": {
      "op": "MLOAD"
    },
    "290": {
      "op": "SWAP2"
    },
    "291": {
      "op": "POP"
    },
    "292": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "294": {
      "op": "NOT"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "297": {
      "op": "RETURNDATASIZE"
    },
    "298": {
      "op": "ADD"
    },
    "299": {
      "op": "AND"
    },
    "300": {
      "op": "DUP3"
    },
    "301": {
      "op": "ADD"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "304": {
      "op": "MSTORE"
    },
    "305": {
      "op": "RETURNDATASIZE"
    },
    "306": {
      "op": "DUP3"
    },
    "307": {
      "op": "MSTORE"
    },
    "308": {
      "op": "RETURNDATASIZE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "313": {
      "op": "DUP5"
    },
    "314": {
      "op": "ADD"
    },
    "315": {
      "op": "RETURNDATACOPY"
    },
    "316": {
      "op": "PUSH2",
      "value": "0x145"
    },
    "319": {
      "op": "JUMP"
    },
    "320": {
      "op": "JUMPDEST"
    },
    "321": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "323": {
      "op": "SWAP2"
    },
    "324": {
      "op": "POP"
    },
    "325": {
      "op": "JUMPDEST"
    },
    "326": {
      "op": "POP"
    },
    "327": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4771,
        4822
      ],
      "op": "POP",
      "path": "14"
    },
    "328": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4771,
        4822
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "329": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4771,
        4822
      ],
      "op": "POP",
      "path": "14"
    },
    "330": {
      "branch": 33,
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4836,
        4847
      ],
      "op": "DUP1",
      "path": "14"
    },
    "331": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4832,
        5240
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "332": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4832,
        5240
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x159"
    },
    "335": {
      "branch": 33,
      "fn": "Dispatcher.<fallback>",
      "offset": [
        4832,
        5240
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "336": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5114,
        5130
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "337": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5109,
        5112
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "339": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5109,
        5112
      ],
      "op": "DUP1",
      "path": "14"
    },
    "340": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5089,
        5131
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "341": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5160,
        5176
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "342": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5109,
        5112
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "344": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5148,
        5177
      ],
      "op": "RETURN",
      "path": "14"
    },
    "345": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5071,
        5191
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "348": {
      "op": "DUP1"
    },
    "349": {
      "op": "REVERT"
    },
    "350": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        1964,
        2533
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "351": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        1964,
        2533
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "352": {
      "op": "DUP1"
    },
    "353": {
      "op": "ISZERO"
    },
    "354": {
      "op": "PUSH2",
      "value": "0x16A"
    },
    "357": {
      "op": "JUMPI"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "360": {
      "op": "DUP1"
    },
    "361": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Dispatcher.upgrade",
      "offset": [
        1964,
        2533
      ],
      "op": "REVERT",
      "path": "14"
    },
    "362": {
      "op": "JUMPDEST"
    },
    "363": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        1964,
        2533
      ],
      "op": "POP",
      "path": "14"
    },
    "364": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        1964,
        2533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x191"
    },
    "367": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        1964,
        2533
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "369": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        1964,
        2533
      ],
      "op": "DUP1",
      "path": "14"
    },
    "370": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        1964,
        2533
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "371": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        1964,
        2533
      ],
      "op": "SUB",
      "path": "14"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "374": {
      "op": "DUP2"
    },
    "375": {
      "op": "LT"
    },
    "376": {
      "op": "ISZERO"
    },
    "377": {
      "op": "PUSH2",
      "value": "0x181"
    },
    "380": {
      "op": "JUMPI"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "383": {
      "op": "DUP1"
    },
    "384": {
      "op": "REVERT"
    },
    "385": {
      "op": "JUMPDEST"
    },
    "386": {
      "op": "POP"
    },
    "387": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        1964,
        2533
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "394": {
      "op": "SHL"
    },
    "395": {
      "op": "SUB"
    },
    "396": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        1964,
        2533
      ],
      "op": "AND",
      "path": "14"
    },
    "397": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        1964,
        2533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x37D"
    },
    "400": {
      "fn": "Dispatcher.upgrade",
      "jump": "i",
      "offset": [
        1964,
        2533
      ],
      "op": "JUMP",
      "path": "14"
    },
    "401": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        1964,
        2533
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "402": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        1964,
        2533
      ],
      "op": "STOP",
      "path": "14"
    },
    "403": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "404": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "405": {
      "op": "DUP1"
    },
    "406": {
      "op": "ISZERO"
    },
    "407": {
      "op": "PUSH2",
      "value": "0x19F"
    },
    "410": {
      "op": "JUMPI"
    },
    "411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "413": {
      "op": "DUP1"
    },
    "414": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "REVERT",
      "path": "14"
    },
    "415": {
      "op": "JUMPDEST"
    },
    "416": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "POP",
      "path": "14"
    },
    "417": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A8"
    },
    "420": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x48E"
    },
    "423": {
      "fn": "Dispatcher.proxyType",
      "jump": "i",
      "offset": [
        1463,
        1550
      ],
      "op": "JUMP",
      "path": "14"
    },
    "424": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "425": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "427": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "DUP1",
      "path": "14"
    },
    "428": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "429": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "430": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "DUP3",
      "path": "14"
    },
    "431": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "432": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "433": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "434": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "DUP2",
      "path": "14"
    },
    "435": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "436": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "SUB",
      "path": "14"
    },
    "437": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "439": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "ADD",
      "path": "14"
    },
    "440": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "441": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "RETURN",
      "path": "14"
    },
    "442": {
      "offset": [
        973,
        1002
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "443": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "444": {
      "op": "DUP1"
    },
    "445": {
      "op": "ISZERO"
    },
    "446": {
      "op": "PUSH2",
      "value": "0x1C6"
    },
    "449": {
      "op": "JUMPI"
    },
    "450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "452": {
      "op": "DUP1"
    },
    "453": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "REVERT",
      "path": "15"
    },
    "454": {
      "op": "JUMPDEST"
    },
    "455": {
      "offset": [
        973,
        1002
      ],
      "op": "POP",
      "path": "15"
    },
    "456": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CF"
    },
    "459": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x493"
    },
    "462": {
      "fn": "Dispatcher.proxyType",
      "jump": "i",
      "offset": [
        973,
        1002
      ],
      "op": "JUMP",
      "path": "15"
    },
    "463": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "464": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "466": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "DUP1",
      "path": "15"
    },
    "467": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "474": {
      "op": "SHL"
    },
    "475": {
      "op": "SUB"
    },
    "476": {
      "offset": [
        973,
        1002
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "477": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "478": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "AND",
      "path": "15"
    },
    "479": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "DUP3",
      "path": "15"
    },
    "480": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "481": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "482": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "483": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "DUP2",
      "path": "15"
    },
    "484": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "485": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "SUB",
      "path": "15"
    },
    "486": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "488": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "ADD",
      "path": "15"
    },
    "489": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "490": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "RETURN",
      "path": "15"
    },
    "491": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1669,
        1766
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "492": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1669,
        1766
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "493": {
      "op": "DUP1"
    },
    "494": {
      "op": "ISZERO"
    },
    "495": {
      "op": "PUSH2",
      "value": "0x1F7"
    },
    "498": {
      "op": "JUMPI"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "501": {
      "op": "DUP1"
    },
    "502": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Dispatcher.implementation",
      "offset": [
        1669,
        1766
      ],
      "op": "REVERT",
      "path": "14"
    },
    "503": {
      "op": "JUMPDEST"
    },
    "504": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1669,
        1766
      ],
      "op": "POP",
      "path": "14"
    },
    "505": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1669,
        1766
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1CF"
    },
    "508": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1669,
        1766
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4A2"
    },
    "511": {
      "fn": "Dispatcher.implementation",
      "jump": "i",
      "offset": [
        1669,
        1766
      ],
      "op": "JUMP",
      "path": "14"
    },
    "512": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "513": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "514": {
      "op": "DUP1"
    },
    "515": {
      "op": "ISZERO"
    },
    "516": {
      "op": "PUSH2",
      "value": "0x20C"
    },
    "519": {
      "op": "JUMPI"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "522": {
      "op": "DUP1"
    },
    "523": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "REVERT",
      "path": "21"
    },
    "524": {
      "op": "JUMPDEST"
    },
    "525": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "POP",
      "path": "21"
    },
    "526": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x191"
    },
    "529": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4B1"
    },
    "532": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1348,
        1485
      ],
      "op": "JUMP",
      "path": "21"
    },
    "533": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "534": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "535": {
      "op": "DUP1"
    },
    "536": {
      "op": "ISZERO"
    },
    "537": {
      "op": "PUSH2",
      "value": "0x221"
    },
    "540": {
      "op": "JUMPI"
    },
    "541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "543": {
      "op": "DUP1"
    },
    "544": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "REVERT",
      "path": "21"
    },
    "545": {
      "op": "JUMPDEST"
    },
    "546": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "POP",
      "path": "21"
    },
    "547": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1CF"
    },
    "550": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x50C"
    },
    "553": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        660,
        737
      ],
      "op": "JUMP",
      "path": "21"
    },
    "554": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "555": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "556": {
      "op": "DUP1"
    },
    "557": {
      "op": "ISZERO"
    },
    "558": {
      "op": "PUSH2",
      "value": "0x236"
    },
    "561": {
      "op": "JUMPI"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "564": {
      "op": "DUP1"
    },
    "565": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "REVERT",
      "path": "21"
    },
    "566": {
      "op": "JUMPDEST"
    },
    "567": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "POP",
      "path": "21"
    },
    "568": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x23F"
    },
    "571": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x51B"
    },
    "574": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        980,
        1070
      ],
      "op": "JUMP",
      "path": "21"
    },
    "575": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "576": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "578": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "DUP1",
      "path": "21"
    },
    "579": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "580": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "581": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "582": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "583": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "DUP3",
      "path": "21"
    },
    "584": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "585": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "586": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "587": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "DUP2",
      "path": "21"
    },
    "588": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "589": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SUB",
      "path": "21"
    },
    "590": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "592": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "ADD",
      "path": "21"
    },
    "593": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "594": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "RETURN",
      "path": "21"
    },
    "595": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2666,
        3222
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "596": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2666,
        3222
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "597": {
      "op": "DUP1"
    },
    "598": {
      "op": "ISZERO"
    },
    "599": {
      "op": "PUSH2",
      "value": "0x25F"
    },
    "602": {
      "op": "JUMPI"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "605": {
      "op": "DUP1"
    },
    "606": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Dispatcher.rollback",
      "offset": [
        2666,
        3222
      ],
      "op": "REVERT",
      "path": "14"
    },
    "607": {
      "op": "JUMPDEST"
    },
    "608": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2666,
        3222
      ],
      "op": "POP",
      "path": "14"
    },
    "609": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2666,
        3222
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x191"
    },
    "612": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2666,
        3222
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x52C"
    },
    "615": {
      "fn": "Dispatcher.rollback",
      "jump": "i",
      "offset": [
        2666,
        3222
      ],
      "op": "JUMP",
      "path": "14"
    },
    "616": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3790,
        4343
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "617": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3790,
        4343
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "618": {
      "op": "DUP1"
    },
    "619": {
      "op": "ISZERO"
    },
    "620": {
      "op": "PUSH2",
      "value": "0x274"
    },
    "623": {
      "op": "JUMPI"
    },
    "624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "626": {
      "op": "DUP1"
    },
    "627": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Dispatcher.verifyState",
      "offset": [
        3790,
        4343
      ],
      "op": "REVERT",
      "path": "14"
    },
    "628": {
      "op": "JUMPDEST"
    },
    "629": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3790,
        4343
      ],
      "op": "POP",
      "path": "14"
    },
    "630": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3790,
        4343
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x191"
    },
    "633": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3790,
        4343
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "635": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3790,
        4343
      ],
      "op": "DUP1",
      "path": "14"
    },
    "636": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3790,
        4343
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "637": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3790,
        4343
      ],
      "op": "SUB",
      "path": "14"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "640": {
      "op": "DUP2"
    },
    "641": {
      "op": "LT"
    },
    "642": {
      "op": "ISZERO"
    },
    "643": {
      "op": "PUSH2",
      "value": "0x28B"
    },
    "646": {
      "op": "JUMPI"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "649": {
      "op": "DUP1"
    },
    "650": {
      "op": "REVERT"
    },
    "651": {
      "op": "JUMPDEST"
    },
    "652": {
      "op": "POP"
    },
    "653": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3790,
        4343
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "660": {
      "op": "SHL"
    },
    "661": {
      "op": "SUB"
    },
    "662": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3790,
        4343
      ],
      "op": "AND",
      "path": "14"
    },
    "663": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3790,
        4343
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x644"
    },
    "666": {
      "fn": "Dispatcher.verifyState",
      "jump": "i",
      "offset": [
        3790,
        4343
      ],
      "op": "JUMP",
      "path": "14"
    },
    "667": {
      "offset": [
        859,
        880
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "668": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        859,
        880
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "669": {
      "op": "DUP1"
    },
    "670": {
      "op": "ISZERO"
    },
    "671": {
      "op": "PUSH2",
      "value": "0x2A7"
    },
    "674": {
      "op": "JUMPI"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "677": {
      "op": "DUP1"
    },
    "678": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Dispatcher.verifyState",
      "offset": [
        859,
        880
      ],
      "op": "REVERT",
      "path": "15"
    },
    "679": {
      "op": "JUMPDEST"
    },
    "680": {
      "offset": [
        859,
        880
      ],
      "op": "POP",
      "path": "15"
    },
    "681": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        859,
        880
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CF"
    },
    "684": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        859,
        880
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x71F"
    },
    "687": {
      "fn": "Dispatcher.verifyState",
      "jump": "i",
      "offset": [
        859,
        880
      ],
      "op": "JUMP",
      "path": "15"
    },
    "688": {
      "offset": [
        1132,
        1154
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "689": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "690": {
      "op": "DUP1"
    },
    "691": {
      "op": "ISZERO"
    },
    "692": {
      "op": "PUSH2",
      "value": "0x2BC"
    },
    "695": {
      "op": "JUMPI"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "698": {
      "op": "DUP1"
    },
    "699": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "REVERT",
      "path": "15"
    },
    "700": {
      "op": "JUMPDEST"
    },
    "701": {
      "offset": [
        1132,
        1154
      ],
      "op": "POP",
      "path": "15"
    },
    "702": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C5"
    },
    "705": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x72E"
    },
    "708": {
      "fn": "Dispatcher.verifyState",
      "jump": "i",
      "offset": [
        1132,
        1154
      ],
      "op": "JUMP",
      "path": "15"
    },
    "709": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "710": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "712": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "DUP1",
      "path": "15"
    },
    "713": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "714": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "716": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "717": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "718": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "AND",
      "path": "15"
    },
    "719": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "DUP3",
      "path": "15"
    },
    "720": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "721": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "722": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "723": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "DUP2",
      "path": "15"
    },
    "724": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "725": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "SUB",
      "path": "15"
    },
    "726": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "728": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "ADD",
      "path": "15"
    },
    "729": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "730": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "RETURN",
      "path": "15"
    },
    "731": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4464,
        4514
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "732": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4464,
        4514
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "733": {
      "op": "DUP1"
    },
    "734": {
      "op": "ISZERO"
    },
    "735": {
      "op": "PUSH2",
      "value": "0x2E7"
    },
    "738": {
      "op": "JUMPI"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "741": {
      "op": "DUP1"
    },
    "742": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4464,
        4514
      ],
      "op": "REVERT",
      "path": "14"
    },
    "743": {
      "op": "JUMPDEST"
    },
    "744": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4464,
        4514
      ],
      "op": "POP",
      "path": "14"
    },
    "745": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4464,
        4514
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x191"
    },
    "748": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4464,
        4514
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "750": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4464,
        4514
      ],
      "op": "DUP1",
      "path": "14"
    },
    "751": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4464,
        4514
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "752": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4464,
        4514
      ],
      "op": "SUB",
      "path": "14"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "755": {
      "op": "DUP2"
    },
    "756": {
      "op": "LT"
    },
    "757": {
      "op": "ISZERO"
    },
    "758": {
      "op": "PUSH2",
      "value": "0x2FE"
    },
    "761": {
      "op": "JUMPI"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "764": {
      "op": "DUP1"
    },
    "765": {
      "op": "REVERT"
    },
    "766": {
      "op": "JUMPDEST"
    },
    "767": {
      "op": "POP"
    },
    "768": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4464,
        4514
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "775": {
      "op": "SHL"
    },
    "776": {
      "op": "SUB"
    },
    "777": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4464,
        4514
      ],
      "op": "AND",
      "path": "14"
    },
    "778": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4464,
        4514
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x71C"
    },
    "781": {
      "fn": "Dispatcher.finishUpgrade",
      "jump": "i",
      "offset": [
        4464,
        4514
      ],
      "op": "JUMP",
      "path": "14"
    },
    "782": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "783": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "784": {
      "op": "DUP1"
    },
    "785": {
      "op": "ISZERO"
    },
    "786": {
      "op": "PUSH2",
      "value": "0x31A"
    },
    "789": {
      "op": "JUMPI"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "792": {
      "op": "DUP1"
    },
    "793": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "REVERT",
      "path": "21"
    },
    "794": {
      "op": "JUMPDEST"
    },
    "795": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "POP",
      "path": "21"
    },
    "796": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x191"
    },
    "799": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "801": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "DUP1",
      "path": "21"
    },
    "802": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "803": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "SUB",
      "path": "21"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "806": {
      "op": "DUP2"
    },
    "807": {
      "op": "LT"
    },
    "808": {
      "op": "ISZERO"
    },
    "809": {
      "op": "PUSH2",
      "value": "0x331"
    },
    "812": {
      "op": "JUMPI"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "815": {
      "op": "DUP1"
    },
    "816": {
      "op": "REVERT"
    },
    "817": {
      "op": "JUMPDEST"
    },
    "818": {
      "op": "POP"
    },
    "819": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "CALLDATALOAD",
      "path": "21"
    },
    "820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "826": {
      "op": "SHL"
    },
    "827": {
      "op": "SUB"
    },
    "828": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "AND",
      "path": "21"
    },
    "829": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x73E"
    },
    "832": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1656,
        1763
      ],
      "op": "JUMP",
      "path": "21"
    },
    "833": {
      "fn": "Address.isContract",
      "offset": [
        685,
        1295
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "834": {
      "fn": "Address.isContract",
      "offset": [
        745,
        749
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "836": {
      "fn": "Address.isContract",
      "offset": [
        1206,
        1226
      ],
      "op": "DUP2",
      "path": "26"
    },
    "837": {
      "fn": "Address.isContract",
      "offset": [
        1206,
        1226
      ],
      "op": "EXTCODEHASH",
      "path": "26"
    },
    "838": {
      "fn": "Address.isContract",
      "offset": [
        1051,
        1117
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "871": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "DUP2",
      "path": "26",
      "statement": 1
    },
    "872": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "DUP2",
      "path": "26"
    },
    "873": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "EQ",
      "path": "26"
    },
    "874": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "DUP1",
      "path": "26"
    },
    "875": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "876": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "877": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1287
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x375"
    },
    "880": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1287
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "881": {
      "op": "POP"
    },
    "882": {
      "fn": "Address.isContract",
      "offset": [
        1272,
        1287
      ],
      "op": "DUP2",
      "path": "26"
    },
    "883": {
      "fn": "Address.isContract",
      "offset": [
        1272,
        1287
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "884": {
      "fn": "Address.isContract",
      "offset": [
        1272,
        1287
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "885": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1287
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "886": {
      "fn": "Address.isContract",
      "offset": [
        1237,
        1288
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "887": {
      "fn": "Address.isContract",
      "offset": [
        685,
        1295
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "888": {
      "op": "POP"
    },
    "889": {
      "op": "POP"
    },
    "890": {
      "op": "POP"
    },
    "891": {
      "op": "POP"
    },
    "892": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        685,
        1295
      ],
      "op": "JUMP",
      "path": "26"
    },
    "893": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        1964,
        2533
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "894": {
      "offset": [
        864,
        873
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x385"
    },
    "897": {
      "offset": [
        864,
        871
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x51B"
    },
    "900": {
      "jump": "i",
      "offset": [
        864,
        873
      ],
      "op": "JUMP",
      "path": "21"
    },
    "901": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        864,
        873
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "902": {
      "offset": [
        856,
        874
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x38E"
    },
    "905": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "908": {
      "op": "DUP1"
    },
    "909": {
      "op": "REVERT"
    },
    "910": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "911": {
      "offset": [
        1384,
        1385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "913": {
      "offset": [
        758,
        782
      ],
      "op": "DUP1",
      "path": "14"
    },
    "914": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        758,
        782
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "915": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "919": {
      "op": "SHL"
    },
    "920": {
      "op": "NOT"
    },
    "921": {
      "offset": [
        758,
        782
      ],
      "op": "AND",
      "path": "14"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "924": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "926": {
      "op": "SHL"
    },
    "927": {
      "offset": [
        758,
        782
      ],
      "op": "OR",
      "path": "14"
    },
    "928": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        758,
        782
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "929": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        758,
        782
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "930": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2043,
        2063
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 2,
      "value": "0x3B3"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "939": {
      "op": "SHL"
    },
    "940": {
      "op": "SUB"
    },
    "941": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2043,
        2061
      ],
      "op": "DUP3",
      "path": "14"
    },
    "942": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2043,
        2061
      ],
      "op": "AND",
      "path": "14"
    },
    "943": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2043,
        2061
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x341"
    },
    "946": {
      "fn": "Dispatcher.upgrade",
      "jump": "i",
      "offset": [
        2043,
        2063
      ],
      "op": "JUMP",
      "path": "14"
    },
    "947": {
      "branch": 34,
      "fn": "Dispatcher.upgrade",
      "offset": [
        2043,
        2063
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "948": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2035,
        2064
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3BC"
    },
    "951": {
      "branch": 34,
      "fn": "Dispatcher.upgrade",
      "offset": [
        2035,
        2064
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "954": {
      "op": "DUP1"
    },
    "955": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2035,
        2064
      ],
      "op": "REVERT",
      "path": "14"
    },
    "956": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2035,
        2064
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "957": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2162,
        2182
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 3,
      "value": "0x3C5"
    },
    "960": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2174,
        2181
      ],
      "op": "DUP2",
      "path": "14"
    },
    "961": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2162,
        2173
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x644"
    },
    "964": {
      "fn": "Dispatcher.upgrade",
      "jump": "i",
      "offset": [
        2162,
        2182
      ],
      "op": "JUMP",
      "path": "14"
    },
    "965": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2162,
        2182
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "966": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2244,
        2284
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 4,
      "value": "0x3CF"
    },
    "969": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2267,
        2274
      ],
      "op": "DUP2",
      "path": "14"
    },
    "970": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2276,
        2283
      ],
      "op": "DUP3",
      "path": "14"
    },
    "971": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2244,
        2266
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x758"
    },
    "974": {
      "fn": "Dispatcher.upgrade",
      "jump": "i",
      "offset": [
        2244,
        2284
      ],
      "op": "JUMP",
      "path": "14"
    },
    "975": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2244,
        2284
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "976": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2298,
        2304
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "978": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2298,
        2304
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "979": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2298,
        2317
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3E4"
    },
    "982": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2298,
        2317
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "989": {
      "op": "SHL"
    },
    "990": {
      "op": "SUB"
    },
    "991": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2298,
        2304
      ],
      "op": "AND",
      "path": "14"
    },
    "992": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2298,
        2315
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x341"
    },
    "995": {
      "fn": "Dispatcher.upgrade",
      "jump": "i",
      "offset": [
        2298,
        2317
      ],
      "op": "JUMP",
      "path": "14"
    },
    "996": {
      "branch": 35,
      "fn": "Dispatcher.upgrade",
      "offset": [
        2298,
        2317
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "997": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2294,
        2383
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "998": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2294,
        2383
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3FF"
    },
    "1001": {
      "branch": 35,
      "fn": "Dispatcher.upgrade",
      "offset": [
        2294,
        2383
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1002": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2356,
        2362
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 5,
      "value": "0x1"
    },
    "1004": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2356,
        2362
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1005": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2333,
        2372
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3FF"
    },
    "1008": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2333,
        2372
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1015": {
      "op": "SHL"
    },
    "1016": {
      "op": "SUB"
    },
    "1017": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2356,
        2362
      ],
      "op": "AND",
      "path": "14"
    },
    "1018": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2364,
        2371
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1019": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2333,
        2355
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x758"
    },
    "1022": {
      "fn": "Dispatcher.upgrade",
      "jump": "i",
      "offset": [
        2333,
        2372
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1023": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2333,
        2372
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1024": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2409,
        2415
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 6,
      "value": "0x1"
    },
    "1026": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2409,
        2415
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1027": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2409,
        2415
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1028": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2392,
        2406
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1030": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2392,
        2415
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1031": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2392,
        2415
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "op": "SUB"
    },
    "1040": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2409,
        2415
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1041": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2409,
        2415
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1042": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2409,
        2415
      ],
      "op": "AND",
      "path": "14"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1049": {
      "op": "SHL"
    },
    "1050": {
      "op": "SUB"
    },
    "1051": {
      "op": "NOT"
    },
    "1052": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2392,
        2415
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1053": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2392,
        2415
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1054": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2392,
        2415
      ],
      "op": "AND",
      "path": "14"
    },
    "1055": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2392,
        2415
      ],
      "op": "OR",
      "path": "14"
    },
    "1056": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2392,
        2415
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1057": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2392,
        2415
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1058": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2392,
        2415
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1059": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2425,
        2441
      ],
      "op": "SWAP1",
      "path": "14",
      "statement": 7
    },
    "1060": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2425,
        2441
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1061": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2425,
        2441
      ],
      "op": "AND",
      "path": "14"
    },
    "1062": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2425,
        2441
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1063": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2425,
        2441
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1064": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2425,
        2441
      ],
      "op": "AND",
      "path": "14"
    },
    "1065": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2425,
        2441
      ],
      "op": "OR",
      "path": "14"
    },
    "1066": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2425,
        2441
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1067": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2425,
        2441
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1068": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2451,
        2466
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 8,
      "value": "0x433"
    },
    "1071": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2451,
        2464
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x844"
    },
    "1074": {
      "fn": "Dispatcher.upgrade",
      "jump": "i",
      "offset": [
        2451,
        2466
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1075": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2451,
        2466
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1076": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2490,
        2504
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 9,
      "value": "0x2"
    },
    "1078": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2490,
        2504
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1079": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1081": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1082": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1083": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2515,
        2525
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1084": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1085": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1086": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1087": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1094": {
      "op": "SHL"
    },
    "1095": {
      "op": "SUB"
    },
    "1096": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1097": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1098": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "AND",
      "path": "14"
    },
    "1099": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1100": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2490,
        2504
      ],
      "op": "AND",
      "path": "14"
    },
    "1101": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2490,
        2504
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1102": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x354BD4B6EB65D64E6C79C53FA4F983A5E6BEC4824CE4627C71BE0B2722F4917E"
    },
    "1135": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1136": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1137": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1138": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1139": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "SUB",
      "path": "14"
    },
    "1140": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1142": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "ADD",
      "path": "14"
    },
    "1143": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1144": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2481,
        2526
      ],
      "op": "LOG3",
      "path": "14"
    },
    "1145": {
      "op": "POP"
    },
    "1146": {
      "offset": [
        803,
        812
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1148": {
      "offset": [
        803,
        828
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1149": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        803,
        828
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1154": {
      "op": "SHL"
    },
    "1155": {
      "op": "NOT"
    },
    "1156": {
      "offset": [
        803,
        828
      ],
      "op": "AND",
      "path": "14"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1161": {
      "op": "SHL"
    },
    "1162": {
      "offset": [
        803,
        828
      ],
      "op": "OR",
      "path": "14"
    },
    "1163": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        803,
        828
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1164": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        803,
        828
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1165": {
      "fn": "Dispatcher.upgrade",
      "jump": "o",
      "offset": [
        1964,
        2533
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1166": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1167": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1542,
        1543
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 10,
      "value": "0x2"
    },
    "1169": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1463,
        1550
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1170": {
      "fn": "Dispatcher.proxyType",
      "jump": "o",
      "offset": [
        1463,
        1550
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1171": {
      "offset": [
        973,
        1002
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1172": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "1174": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1181": {
      "op": "SHL"
    },
    "1182": {
      "op": "SUB"
    },
    "1183": {
      "offset": [
        973,
        1002
      ],
      "op": "AND",
      "path": "15"
    },
    "1184": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        973,
        1002
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1185": {
      "fn": "Dispatcher.proxyType",
      "jump": "o",
      "offset": [
        973,
        1002
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1186": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1669,
        1766
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1187": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1753,
        1759
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 11,
      "value": "0x1"
    },
    "1189": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1753,
        1759
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1196": {
      "op": "SHL"
    },
    "1197": {
      "op": "SUB"
    },
    "1198": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1753,
        1759
      ],
      "op": "AND",
      "path": "14"
    },
    "1199": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1669,
        1766
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1200": {
      "fn": "Dispatcher.implementation",
      "jump": "o",
      "offset": [
        1669,
        1766
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1201": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1202": {
      "offset": [
        864,
        873
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4B9"
    },
    "1205": {
      "offset": [
        864,
        871
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x51B"
    },
    "1208": {
      "jump": "i",
      "offset": [
        864,
        873
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1209": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        864,
        873
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1210": {
      "offset": [
        856,
        874
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4C2"
    },
    "1213": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1216": {
      "op": "DUP1"
    },
    "1217": {
      "op": "REVERT"
    },
    "1218": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1219": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1446,
        1447
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 12,
      "value": "0x0"
    },
    "1221": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1222": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1223": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1225": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1232": {
      "op": "SHL"
    },
    "1233": {
      "op": "SUB"
    },
    "1234": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1235": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1236": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "AND",
      "path": "21"
    },
    "1237": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1238": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1271": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1272": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1446,
        1447
      ],
      "op": "DUP4",
      "path": "21"
    },
    "1273": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1446,
        1447
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1274": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "LOG3",
      "path": "21"
    },
    "1275": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1476,
        1477
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 13,
      "value": "0x0"
    },
    "1277": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1278": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1285": {
      "op": "SHL"
    },
    "1286": {
      "op": "SUB"
    },
    "1287": {
      "op": "NOT"
    },
    "1288": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "AND",
      "path": "21"
    },
    "1289": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1290": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "1291": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1348,
        1485
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1292": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1293": {
      "fn": "Ownable.owner",
      "offset": [
        698,
        705
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1295": {
      "fn": "Ownable.owner",
      "offset": [
        724,
        730
      ],
      "op": "SLOAD",
      "path": "21",
      "statement": 14
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1302": {
      "op": "SHL"
    },
    "1303": {
      "op": "SUB"
    },
    "1304": {
      "fn": "Ownable.owner",
      "offset": [
        724,
        730
      ],
      "op": "AND",
      "path": "21"
    },
    "1305": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1306": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        660,
        737
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1307": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1308": {
      "fn": "Ownable.isOwner",
      "offset": [
        1020,
        1024
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1310": {
      "fn": "Ownable.isOwner",
      "offset": [
        1057,
        1063
      ],
      "op": "SLOAD",
      "path": "21",
      "statement": 15
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "op": "SUB"
    },
    "1319": {
      "fn": "Ownable.isOwner",
      "offset": [
        1057,
        1063
      ],
      "op": "AND",
      "path": "21"
    },
    "1320": {
      "fn": "Ownable.isOwner",
      "offset": [
        1043,
        1053
      ],
      "op": "CALLER",
      "path": "21"
    },
    "1321": {
      "fn": "Ownable.isOwner",
      "offset": [
        1043,
        1063
      ],
      "op": "EQ",
      "path": "21"
    },
    "1322": {
      "fn": "Ownable.isOwner",
      "offset": [
        1043,
        1063
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1323": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        980,
        1070
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1324": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2666,
        3222
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1325": {
      "offset": [
        864,
        873
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x534"
    },
    "1328": {
      "offset": [
        864,
        871
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x51B"
    },
    "1331": {
      "jump": "i",
      "offset": [
        864,
        873
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1332": {
      "fn": "Dispatcher.rollback",
      "offset": [
        864,
        873
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1333": {
      "offset": [
        856,
        874
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x53D"
    },
    "1336": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1339": {
      "op": "DUP1"
    },
    "1340": {
      "op": "REVERT"
    },
    "1341": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1342": {
      "offset": [
        1384,
        1385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "1344": {
      "offset": [
        758,
        782
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1345": {
      "fn": "Dispatcher.rollback",
      "offset": [
        758,
        782
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1350": {
      "op": "SHL"
    },
    "1351": {
      "op": "NOT"
    },
    "1352": {
      "offset": [
        758,
        782
      ],
      "op": "AND",
      "path": "14"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "1357": {
      "op": "SHL"
    },
    "1358": {
      "offset": [
        758,
        782
      ],
      "op": "OR",
      "path": "14"
    },
    "1359": {
      "fn": "Dispatcher.rollback",
      "offset": [
        758,
        782
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1360": {
      "fn": "Dispatcher.rollback",
      "offset": [
        758,
        782
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1361": {
      "fn": "Dispatcher.rollback",
      "offset": [
        758,
        782
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1362": {
      "fn": "Dispatcher.rollback",
      "offset": [
        758,
        782
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1363": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2731,
        2758
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 16,
      "value": "0x564"
    },
    "1366": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2731,
        2758
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1373": {
      "op": "SHL"
    },
    "1374": {
      "op": "SUB"
    },
    "1375": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2731,
        2745
      ],
      "op": "AND",
      "path": "14"
    },
    "1376": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2731,
        2756
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x341"
    },
    "1379": {
      "fn": "Dispatcher.rollback",
      "jump": "i",
      "offset": [
        2731,
        2758
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1380": {
      "branch": 36,
      "fn": "Dispatcher.rollback",
      "offset": [
        2731,
        2758
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1381": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2723,
        2759
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x56D"
    },
    "1384": {
      "branch": 36,
      "fn": "Dispatcher.rollback",
      "offset": [
        2723,
        2759
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1387": {
      "op": "DUP1"
    },
    "1388": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2723,
        2759
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1389": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2723,
        2759
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1390": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2793,
        2807
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 17,
      "value": "0x2"
    },
    "1392": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2793,
        2807
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1393": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2793,
        2807
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1395": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2785,
        2791
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1396": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2774,
        2820
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1398": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2774,
        2820
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1399": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2774,
        2820
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1400": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2809,
        2819
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1401": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2774,
        2820
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1402": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2774,
        2820
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1403": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2774,
        2820
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1404": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2774,
        2820
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1411": {
      "op": "SHL"
    },
    "1412": {
      "op": "SUB"
    },
    "1413": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2793,
        2807
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1414": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2793,
        2807
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1415": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2793,
        2807
      ],
      "op": "AND",
      "path": "14"
    },
    "1416": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2793,
        2807
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1417": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2785,
        2791
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1418": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2785,
        2791
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1419": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2785,
        2791
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1420": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2785,
        2791
      ],
      "op": "AND",
      "path": "14"
    },
    "1421": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2785,
        2791
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1422": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2774,
        2820
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x86E04D1DE380D22833CB4409F3EE7C6AD818A8D8387A83B6371F5CE018DDC154"
    },
    "1455": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2774,
        2820
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1456": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2774,
        2820
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1457": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2774,
        2820
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1458": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2774,
        2820
      ],
      "op": "SUB",
      "path": "14"
    },
    "1459": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2774,
        2820
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1461": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2774,
        2820
      ],
      "op": "ADD",
      "path": "14"
    },
    "1462": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2774,
        2820
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1463": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2774,
        2820
      ],
      "op": "LOG3",
      "path": "14"
    },
    "1464": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3000,
        3014
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 18,
      "value": "0x2"
    },
    "1466": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3000,
        3014
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1467": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2988,
        3015
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5CC"
    },
    "1470": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2988,
        3015
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1477": {
      "op": "SHL"
    },
    "1478": {
      "op": "SUB"
    },
    "1479": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3000,
        3014
      ],
      "op": "AND",
      "path": "14"
    },
    "1480": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2988,
        2999
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x644"
    },
    "1483": {
      "fn": "Dispatcher.rollback",
      "jump": "i",
      "offset": [
        2988,
        3015
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1484": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2988,
        3015
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1485": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3029,
        3035
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1487": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3029,
        3035
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1488": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3029,
        3048
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5E1"
    },
    "1491": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3029,
        3048
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1498": {
      "op": "SHL"
    },
    "1499": {
      "op": "SUB"
    },
    "1500": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3029,
        3035
      ],
      "op": "AND",
      "path": "14"
    },
    "1501": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3029,
        3046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x341"
    },
    "1504": {
      "fn": "Dispatcher.rollback",
      "jump": "i",
      "offset": [
        3029,
        3048
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1505": {
      "branch": 37,
      "fn": "Dispatcher.rollback",
      "offset": [
        3029,
        3048
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1506": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3025,
        3121
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1507": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3025,
        3121
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x602"
    },
    "1510": {
      "branch": 37,
      "fn": "Dispatcher.rollback",
      "offset": [
        3025,
        3121
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1511": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3087,
        3101
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 19,
      "value": "0x2"
    },
    "1513": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3087,
        3101
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1514": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3087,
        3101
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1516": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3103,
        3109
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1517": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3064,
        3110
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x602"
    },
    "1520": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3064,
        3110
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1527": {
      "op": "SHL"
    },
    "1528": {
      "op": "SUB"
    },
    "1529": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3087,
        3101
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1530": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3087,
        3101
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1531": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3087,
        3101
      ],
      "op": "AND",
      "path": "14"
    },
    "1532": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3087,
        3101
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1533": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3103,
        3109
      ],
      "op": "AND",
      "path": "14"
    },
    "1534": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3064,
        3086
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x758"
    },
    "1537": {
      "fn": "Dispatcher.rollback",
      "jump": "i",
      "offset": [
        3064,
        3110
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1538": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3064,
        3110
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1539": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3139,
        3153
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 20,
      "value": "0x2"
    },
    "1541": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3139,
        3153
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1542": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3139,
        3153
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1543": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3139,
        3153
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1545": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3130,
        3153
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1546": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3130,
        3153
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1553": {
      "op": "SHL"
    },
    "1554": {
      "op": "SUB"
    },
    "1555": {
      "op": "NOT"
    },
    "1556": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3130,
        3153
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1557": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3130,
        3153
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1558": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3130,
        3153
      ],
      "op": "AND",
      "path": "14"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1565": {
      "op": "SHL"
    },
    "1566": {
      "op": "SUB"
    },
    "1567": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3139,
        3153
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1568": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3139,
        3153
      ],
      "op": "AND",
      "path": "14"
    },
    "1569": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3130,
        3153
      ],
      "op": "OR",
      "path": "14"
    },
    "1570": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3130,
        3153
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1571": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3130,
        3153
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1572": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3130,
        3153
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1573": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3163,
        3190
      ],
      "op": "AND",
      "path": "14",
      "statement": 21
    },
    "1574": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3163,
        3190
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1575": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3163,
        3190
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1576": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3200,
        3215
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 22,
      "value": "0x62F"
    },
    "1579": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3200,
        3213
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x844"
    },
    "1582": {
      "fn": "Dispatcher.rollback",
      "jump": "i",
      "offset": [
        3200,
        3215
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1583": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3200,
        3215
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1584": {
      "offset": [
        803,
        812
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1586": {
      "offset": [
        803,
        828
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1587": {
      "fn": "Dispatcher.rollback",
      "offset": [
        803,
        828
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1592": {
      "op": "SHL"
    },
    "1593": {
      "op": "NOT"
    },
    "1594": {
      "offset": [
        803,
        828
      ],
      "op": "AND",
      "path": "14"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1599": {
      "op": "SHL"
    },
    "1600": {
      "offset": [
        803,
        828
      ],
      "op": "OR",
      "path": "14"
    },
    "1601": {
      "fn": "Dispatcher.rollback",
      "offset": [
        803,
        828
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1602": {
      "fn": "Dispatcher.rollback",
      "offset": [
        803,
        828
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1603": {
      "fn": "Dispatcher.rollback",
      "jump": "o",
      "offset": [
        2666,
        3222
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1604": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3790,
        4343
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1605": {
      "offset": [
        1384,
        1385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "1607": {
      "offset": [
        1586,
        1595
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1608": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1586,
        1595
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1613": {
      "op": "SHL"
    },
    "1614": {
      "offset": [
        1586,
        1595
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1615": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1586,
        1595
      ],
      "op": "DIV",
      "path": "15"
    },
    "1616": {
      "offset": [
        1586,
        1611
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1618": {
      "offset": [
        1586,
        1595
      ],
      "op": "AND",
      "path": "15"
    },
    "1619": {
      "offset": [
        1586,
        1611
      ],
      "op": "EQ",
      "path": "15"
    },
    "1620": {
      "offset": [
        1578,
        1612
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x65C"
    },
    "1623": {
      "offset": [
        1578,
        1612
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1626": {
      "op": "DUP1"
    },
    "1627": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4258,
        4265
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1628": {
      "offset": [
        1578,
        1612
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1629": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4038,
        4045
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 23,
      "value": "0x664"
    },
    "1632": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4038,
        4043
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x50C"
    },
    "1635": {
      "fn": "Dispatcher.verifyState",
      "jump": "i",
      "offset": [
        4038,
        4045
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1636": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4038,
        4045
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1643": {
      "op": "SHL"
    },
    "1644": {
      "op": "SUB"
    },
    "1645": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3971,
        4045
      ],
      "op": "AND",
      "path": "14"
    },
    "1646": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3987,
        4032
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x67E"
    },
    "1649": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3999,
        4010
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1650": {
      "op": "PUSH4",
      "value": "0x8DA5CB5B"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1657": {
      "op": "SHL"
    },
    "1658": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3987,
        3998
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x92A"
    },
    "1661": {
      "fn": "Dispatcher.verifyState",
      "jump": "i",
      "offset": [
        3987,
        4032
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1662": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3987,
        4032
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "op": "SUB"
    },
    "1671": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3971,
        4045
      ],
      "op": "AND",
      "path": "14"
    },
    "1672": {
      "branch": 38,
      "fn": "Dispatcher.verifyState",
      "offset": [
        3971,
        4045
      ],
      "op": "EQ",
      "path": "14"
    },
    "1673": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3963,
        4046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x691"
    },
    "1676": {
      "branch": 38,
      "fn": "Dispatcher.verifyState",
      "offset": [
        3963,
        4046
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1679": {
      "op": "DUP1"
    },
    "1680": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3963,
        4046
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1681": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3963,
        4046
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1682": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4132,
        4138
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 24,
      "value": "0x1"
    },
    "1684": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4132,
        4138
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1691": {
      "op": "SHL"
    },
    "1692": {
      "op": "SUB"
    },
    "1693": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4132,
        4138
      ],
      "op": "AND",
      "path": "14"
    },
    "1694": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4080,
        4126
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6AE"
    },
    "1697": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4092,
        4103
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1698": {
      "op": "PUSH4",
      "value": "0x6A5C1CC9"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1705": {
      "op": "SHL"
    },
    "1706": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4080,
        4091
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x92A"
    },
    "1709": {
      "fn": "Dispatcher.verifyState",
      "jump": "i",
      "offset": [
        4080,
        4126
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1710": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4080,
        4126
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1717": {
      "op": "SHL"
    },
    "1718": {
      "op": "SUB"
    },
    "1719": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4064,
        4138
      ],
      "op": "AND",
      "path": "14"
    },
    "1720": {
      "branch": 39,
      "fn": "Dispatcher.verifyState",
      "offset": [
        4064,
        4138
      ],
      "op": "EQ",
      "path": "14"
    },
    "1721": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4056,
        4139
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6C1"
    },
    "1724": {
      "branch": 39,
      "fn": "Dispatcher.verifyState",
      "offset": [
        4056,
        4139
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1727": {
      "op": "DUP1"
    },
    "1728": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4056,
        4139
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1729": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4056,
        4139
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1730": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4233,
        4247
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 25,
      "value": "0x2"
    },
    "1732": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4233,
        4247
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1739": {
      "op": "SHL"
    },
    "1740": {
      "op": "SUB"
    },
    "1741": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4233,
        4247
      ],
      "op": "AND",
      "path": "14"
    },
    "1742": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4173,
        4227
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6DE"
    },
    "1745": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4185,
        4196
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1746": {
      "op": "PUSH4",
      "value": "0x9659A23"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1753": {
      "op": "SHL"
    },
    "1754": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4173,
        4184
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x92A"
    },
    "1757": {
      "fn": "Dispatcher.verifyState",
      "jump": "i",
      "offset": [
        4173,
        4227
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1758": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4173,
        4227
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1765": {
      "op": "SHL"
    },
    "1766": {
      "op": "SUB"
    },
    "1767": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4157,
        4247
      ],
      "op": "AND",
      "path": "14"
    },
    "1768": {
      "branch": 40,
      "fn": "Dispatcher.verifyState",
      "offset": [
        4157,
        4247
      ],
      "op": "EQ",
      "path": "14"
    },
    "1769": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4149,
        4248
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6F1"
    },
    "1772": {
      "branch": 40,
      "fn": "Dispatcher.verifyState",
      "offset": [
        4149,
        4248
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1775": {
      "op": "DUP1"
    },
    "1776": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4149,
        4248
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1777": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4149,
        4248
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1778": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4326,
        4335
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 26,
      "value": "0x2"
    },
    "1780": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4326,
        4335
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1785": {
      "op": "SHL"
    },
    "1786": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4326,
        4335
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1787": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4326,
        4335
      ],
      "op": "DIV",
      "path": "14"
    },
    "1788": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4326,
        4335
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1790": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4326,
        4335
      ],
      "op": "AND",
      "path": "14"
    },
    "1791": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4272,
        4321
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x70F"
    },
    "1794": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4284,
        4295
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1795": {
      "op": "PUSH4",
      "value": "0xE38A303B"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1802": {
      "op": "SHL"
    },
    "1803": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4272,
        4283
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x92A"
    },
    "1806": {
      "fn": "Dispatcher.verifyState",
      "jump": "i",
      "offset": [
        4272,
        4321
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1807": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4272,
        4321
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1808": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4266,
        4335
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1810": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4266,
        4335
      ],
      "op": "AND",
      "path": "14"
    },
    "1811": {
      "branch": 41,
      "fn": "Dispatcher.verifyState",
      "offset": [
        4266,
        4335
      ],
      "op": "EQ",
      "path": "14"
    },
    "1812": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4258,
        4336
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x71C"
    },
    "1815": {
      "branch": 41,
      "fn": "Dispatcher.verifyState",
      "offset": [
        4258,
        4336
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1818": {
      "op": "DUP1"
    },
    "1819": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4258,
        4336
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1820": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4258,
        4336
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1821": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3790,
        4343
      ],
      "op": "POP",
      "path": "14"
    },
    "1822": {
      "fn": "Dispatcher.verifyState",
      "jump": "o",
      "offset": [
        3790,
        4343
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1823": {
      "offset": [
        859,
        880
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1824": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        859,
        880
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1826": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        859,
        880
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1833": {
      "op": "SHL"
    },
    "1834": {
      "op": "SUB"
    },
    "1835": {
      "offset": [
        859,
        880
      ],
      "op": "AND",
      "path": "15"
    },
    "1836": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        859,
        880
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1837": {
      "fn": "Dispatcher.verifyState",
      "jump": "o",
      "offset": [
        859,
        880
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1838": {
      "offset": [
        1132,
        1154
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1839": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "1841": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1846": {
      "op": "SHL"
    },
    "1847": {
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1848": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "DIV",
      "path": "15"
    },
    "1849": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1851": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "AND",
      "path": "15"
    },
    "1852": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1853": {
      "fn": "Dispatcher.verifyState",
      "jump": "o",
      "offset": [
        1132,
        1154
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1854": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1855": {
      "offset": [
        864,
        873
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x746"
    },
    "1858": {
      "offset": [
        864,
        871
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x51B"
    },
    "1861": {
      "jump": "i",
      "offset": [
        864,
        873
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1862": {
      "branch": 44,
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        873
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1863": {
      "offset": [
        856,
        874
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x74F"
    },
    "1866": {
      "branch": 44,
      "offset": [
        856,
        874
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1869": {
      "op": "DUP1"
    },
    "1870": {
      "op": "REVERT"
    },
    "1871": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1872": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1728,
        1756
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 27,
      "value": "0x71C"
    },
    "1875": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1747,
        1755
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1876": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1728,
        1746
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x943"
    },
    "1879": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1728,
        1756
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1880": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3303,
        3514
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1881": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1883": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1884": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1891": {
      "op": "SHL"
    },
    "1892": {
      "op": "SUB"
    },
    "1893": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1894": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1895": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "AND",
      "path": "14"
    },
    "1896": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1898": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1899": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1900": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "ADD",
      "path": "14"
    },
    "1901": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1902": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1903": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1904": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1905": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1906": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1907": {
      "op": "DUP1"
    },
    "1908": {
      "op": "DUP5"
    },
    "1909": {
      "op": "SUB"
    },
    "1910": {
      "op": "SWAP1"
    },
    "1911": {
      "op": "SWAP2"
    },
    "1912": {
      "op": "ADD"
    },
    "1913": {
      "op": "DUP2"
    },
    "1914": {
      "op": "MSTORE"
    },
    "1915": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1917": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1918": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1919": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "ADD",
      "path": "14"
    },
    "1920": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1921": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1922": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1924": {
      "op": "DUP3"
    },
    "1925": {
      "op": "ADD"
    },
    "1926": {
      "op": "DUP1"
    },
    "1927": {
      "op": "MLOAD"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1934": {
      "op": "SHL"
    },
    "1935": {
      "op": "SUB"
    },
    "1936": {
      "op": "AND"
    },
    "1937": {
      "op": "PUSH4",
      "value": "0xB9626D21"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1944": {
      "op": "SHL"
    },
    "1945": {
      "op": "OR"
    },
    "1946": {
      "op": "DUP2"
    },
    "1947": {
      "op": "MSTORE"
    },
    "1948": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1949": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1950": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1951": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1952": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3382,
        3398
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1954": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3382,
        3398
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "1955": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3421
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1956": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3421
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1957": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3421
      ],
      "op": "AND",
      "path": "14"
    },
    "1958": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3421
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1959": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3422,
        3476
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1960": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1961": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1962": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1963": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1964": {
      "op": "DUP4"
    },
    "1965": {
      "op": "JUMPDEST"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1968": {
      "op": "DUP4"
    },
    "1969": {
      "op": "LT"
    },
    "1970": {
      "op": "PUSH2",
      "value": "0x7CC"
    },
    "1973": {
      "op": "JUMPI"
    },
    "1974": {
      "op": "DUP1"
    },
    "1975": {
      "op": "MLOAD"
    },
    "1976": {
      "op": "DUP3"
    },
    "1977": {
      "op": "MSTORE"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1980": {
      "op": "NOT"
    },
    "1981": {
      "op": "SWAP1"
    },
    "1982": {
      "op": "SWAP3"
    },
    "1983": {
      "op": "ADD"
    },
    "1984": {
      "op": "SWAP2"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1987": {
      "op": "SWAP2"
    },
    "1988": {
      "op": "DUP3"
    },
    "1989": {
      "op": "ADD"
    },
    "1990": {
      "op": "SWAP2"
    },
    "1991": {
      "op": "ADD"
    },
    "1992": {
      "op": "PUSH2",
      "value": "0x7AD"
    },
    "1995": {
      "op": "JUMP"
    },
    "1996": {
      "op": "JUMPDEST"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1999": {
      "op": "DUP4"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2002": {
      "op": "SUB"
    },
    "2003": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2006": {
      "op": "EXP"
    },
    "2007": {
      "op": "SUB"
    },
    "2008": {
      "op": "DUP1"
    },
    "2009": {
      "op": "NOT"
    },
    "2010": {
      "op": "DUP3"
    },
    "2011": {
      "op": "MLOAD"
    },
    "2012": {
      "op": "AND"
    },
    "2013": {
      "op": "DUP2"
    },
    "2014": {
      "op": "DUP5"
    },
    "2015": {
      "op": "MLOAD"
    },
    "2016": {
      "op": "AND"
    },
    "2017": {
      "op": "DUP1"
    },
    "2018": {
      "op": "DUP3"
    },
    "2019": {
      "op": "OR"
    },
    "2020": {
      "op": "DUP6"
    },
    "2021": {
      "op": "MSTORE"
    },
    "2022": {
      "op": "POP"
    },
    "2023": {
      "op": "POP"
    },
    "2024": {
      "op": "POP"
    },
    "2025": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "POP",
      "path": "14"
    },
    "2026": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "POP",
      "path": "14"
    },
    "2027": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "POP",
      "path": "14"
    },
    "2028": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2029": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "POP",
      "path": "14"
    },
    "2030": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "ADD",
      "path": "14"
    },
    "2031": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2032": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "POP",
      "path": "14"
    },
    "2033": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "POP",
      "path": "14"
    },
    "2034": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2036": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2038": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2039": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2040": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2041": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "SUB",
      "path": "14"
    },
    "2042": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2043": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2044": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "GAS",
      "path": "14"
    },
    "2045": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "DELEGATECALL",
      "path": "14"
    },
    "2046": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2047": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "POP",
      "path": "14"
    },
    "2048": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "POP",
      "path": "14"
    },
    "2049": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3403,
        3477
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2050": {
      "op": "DUP1"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2053": {
      "op": "DUP2"
    },
    "2054": {
      "op": "EQ"
    },
    "2055": {
      "op": "PUSH2",
      "value": "0x82C"
    },
    "2058": {
      "op": "JUMPI"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2061": {
      "op": "MLOAD"
    },
    "2062": {
      "op": "SWAP2"
    },
    "2063": {
      "op": "POP"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2066": {
      "op": "NOT"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2069": {
      "op": "RETURNDATASIZE"
    },
    "2070": {
      "op": "ADD"
    },
    "2071": {
      "op": "AND"
    },
    "2072": {
      "op": "DUP3"
    },
    "2073": {
      "op": "ADD"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2076": {
      "op": "MSTORE"
    },
    "2077": {
      "op": "RETURNDATASIZE"
    },
    "2078": {
      "op": "DUP3"
    },
    "2079": {
      "op": "MSTORE"
    },
    "2080": {
      "op": "RETURNDATASIZE"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2085": {
      "op": "DUP5"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "op": "RETURNDATACOPY"
    },
    "2088": {
      "op": "PUSH2",
      "value": "0x831"
    },
    "2091": {
      "op": "JUMP"
    },
    "2092": {
      "op": "JUMPDEST"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2095": {
      "op": "SWAP2"
    },
    "2096": {
      "op": "POP"
    },
    "2097": {
      "op": "JUMPDEST"
    },
    "2098": {
      "op": "POP"
    },
    "2099": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3381,
        3477
      ],
      "op": "POP",
      "path": "14"
    },
    "2100": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3381,
        3477
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2101": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3381,
        3477
      ],
      "op": "POP",
      "path": "14"
    },
    "2102": {
      "branch": 42,
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3495,
        3506
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 28
    },
    "2103": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3487,
        3507
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x83F"
    },
    "2106": {
      "branch": 42,
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3487,
        3507
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2109": {
      "op": "DUP1"
    },
    "2110": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3487,
        3507
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2111": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3487,
        3507
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2112": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3303,
        3514
      ],
      "op": "POP",
      "path": "14"
    },
    "2113": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3303,
        3514
      ],
      "op": "POP",
      "path": "14"
    },
    "2114": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3303,
        3514
      ],
      "op": "POP",
      "path": "14"
    },
    "2115": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "jump": "o",
      "offset": [
        3303,
        3514
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2116": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3602,
        3784
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2117": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3673
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2119": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3673
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2120": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2122": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2123": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2130": {
      "op": "SHL"
    },
    "2131": {
      "op": "SUB"
    },
    "2132": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3673
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2133": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3673
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2134": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3673
      ],
      "op": "AND",
      "path": "14"
    },
    "2135": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "2137": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2138": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2139": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "ADD",
      "path": "14"
    },
    "2140": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2141": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2142": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2143": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2144": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2145": {
      "op": "DUP1"
    },
    "2146": {
      "op": "DUP6"
    },
    "2147": {
      "op": "SUB"
    },
    "2148": {
      "op": "SWAP1"
    },
    "2149": {
      "op": "SWAP2"
    },
    "2150": {
      "op": "ADD"
    },
    "2151": {
      "op": "DUP2"
    },
    "2152": {
      "op": "MSTORE"
    },
    "2153": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "2155": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2156": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2157": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "ADD",
      "path": "14"
    },
    "2158": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2159": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2160": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3687,
        3746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2162": {
      "op": "DUP4"
    },
    "2163": {
      "op": "ADD"
    },
    "2164": {
      "op": "DUP1"
    },
    "2165": {
      "op": "MLOAD"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2172": {
      "op": "SHL"
    },
    "2173": {
      "op": "SUB"
    },
    "2174": {
      "op": "AND"
    },
    "2175": {
      "op": "PUSH4",
      "value": "0x746E6683"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2182": {
      "op": "SHL"
    },
    "2183": {
      "op": "OR"
    },
    "2184": {
      "op": "DUP2"
    },
    "2185": {
      "op": "MSTORE"
    },
    "2186": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2187": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2188": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2189": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2190": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3646,
        3662
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2192": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3646,
        3662
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2193": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3673
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2194": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3673
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2195": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2196": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2197": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2198": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2199": {
      "op": "DUP4"
    },
    "2200": {
      "op": "JUMPDEST"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2203": {
      "op": "DUP4"
    },
    "2204": {
      "op": "LT"
    },
    "2205": {
      "op": "PUSH2",
      "value": "0x8B7"
    },
    "2208": {
      "op": "JUMPI"
    },
    "2209": {
      "op": "DUP1"
    },
    "2210": {
      "op": "MLOAD"
    },
    "2211": {
      "op": "DUP3"
    },
    "2212": {
      "op": "MSTORE"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2215": {
      "op": "NOT"
    },
    "2216": {
      "op": "SWAP1"
    },
    "2217": {
      "op": "SWAP3"
    },
    "2218": {
      "op": "ADD"
    },
    "2219": {
      "op": "SWAP2"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2222": {
      "op": "SWAP2"
    },
    "2223": {
      "op": "DUP3"
    },
    "2224": {
      "op": "ADD"
    },
    "2225": {
      "op": "SWAP2"
    },
    "2226": {
      "op": "ADD"
    },
    "2227": {
      "op": "PUSH2",
      "value": "0x898"
    },
    "2230": {
      "op": "JUMP"
    },
    "2231": {
      "op": "JUMPDEST"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2234": {
      "op": "DUP4"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2237": {
      "op": "SUB"
    },
    "2238": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2241": {
      "op": "EXP"
    },
    "2242": {
      "op": "SUB"
    },
    "2243": {
      "op": "DUP1"
    },
    "2244": {
      "op": "NOT"
    },
    "2245": {
      "op": "DUP3"
    },
    "2246": {
      "op": "MLOAD"
    },
    "2247": {
      "op": "AND"
    },
    "2248": {
      "op": "DUP2"
    },
    "2249": {
      "op": "DUP5"
    },
    "2250": {
      "op": "MLOAD"
    },
    "2251": {
      "op": "AND"
    },
    "2252": {
      "op": "DUP1"
    },
    "2253": {
      "op": "DUP3"
    },
    "2254": {
      "op": "OR"
    },
    "2255": {
      "op": "DUP6"
    },
    "2256": {
      "op": "MSTORE"
    },
    "2257": {
      "op": "POP"
    },
    "2258": {
      "op": "POP"
    },
    "2259": {
      "op": "POP"
    },
    "2260": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "POP",
      "path": "14"
    },
    "2261": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "POP",
      "path": "14"
    },
    "2262": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "POP",
      "path": "14"
    },
    "2263": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2264": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "POP",
      "path": "14"
    },
    "2265": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "ADD",
      "path": "14"
    },
    "2266": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2267": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "POP",
      "path": "14"
    },
    "2268": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "POP",
      "path": "14"
    },
    "2269": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2271": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2273": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2274": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2275": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2276": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "SUB",
      "path": "14"
    },
    "2277": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2278": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2279": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "GAS",
      "path": "14"
    },
    "2280": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "DELEGATECALL",
      "path": "14"
    },
    "2281": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2282": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "POP",
      "path": "14"
    },
    "2283": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "POP",
      "path": "14"
    },
    "2284": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3667,
        3747
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2285": {
      "op": "DUP1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2288": {
      "op": "DUP2"
    },
    "2289": {
      "op": "EQ"
    },
    "2290": {
      "op": "PUSH2",
      "value": "0x917"
    },
    "2293": {
      "op": "JUMPI"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2296": {
      "op": "MLOAD"
    },
    "2297": {
      "op": "SWAP2"
    },
    "2298": {
      "op": "POP"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2301": {
      "op": "NOT"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2304": {
      "op": "RETURNDATASIZE"
    },
    "2305": {
      "op": "ADD"
    },
    "2306": {
      "op": "AND"
    },
    "2307": {
      "op": "DUP3"
    },
    "2308": {
      "op": "ADD"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2311": {
      "op": "MSTORE"
    },
    "2312": {
      "op": "RETURNDATASIZE"
    },
    "2313": {
      "op": "DUP3"
    },
    "2314": {
      "op": "MSTORE"
    },
    "2315": {
      "op": "RETURNDATASIZE"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2320": {
      "op": "DUP5"
    },
    "2321": {
      "op": "ADD"
    },
    "2322": {
      "op": "RETURNDATACOPY"
    },
    "2323": {
      "op": "PUSH2",
      "value": "0x91C"
    },
    "2326": {
      "op": "JUMP"
    },
    "2327": {
      "op": "JUMPDEST"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2330": {
      "op": "SWAP2"
    },
    "2331": {
      "op": "POP"
    },
    "2332": {
      "op": "JUMPDEST"
    },
    "2333": {
      "op": "POP"
    },
    "2334": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3645,
        3747
      ],
      "op": "POP",
      "path": "14"
    },
    "2335": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3645,
        3747
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2336": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3645,
        3747
      ],
      "op": "POP",
      "path": "14"
    },
    "2337": {
      "branch": 43,
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3765,
        3776
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 29
    },
    "2338": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3757,
        3777
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x71C"
    },
    "2341": {
      "branch": 43,
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3757,
        3777
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2344": {
      "op": "DUP1"
    },
    "2345": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3757,
        3764
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2346": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3532,
        3791
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2347": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3614,
        3628
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2349": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3614,
        3628
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2350": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3668,
        3712
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x93A"
    },
    "2353": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3684,
        3691
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2354": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3693,
        3702
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2355": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3614,
        3628
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2356": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3614,
        3628
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2357": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3614,
        3628
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2358": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3668,
        3683
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9B1"
    },
    "2361": {
      "fn": "Upgradeable.delegateGet",
      "jump": "i",
      "offset": [
        3668,
        3712
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2362": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3668,
        3712
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2363": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3755,
        3775
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2364": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3755,
        3775
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "2365": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3731,
        3785
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2366": {
      "op": "POP"
    },
    "2367": {
      "op": "POP"
    },
    "2368": {
      "op": "POP"
    },
    "2369": {
      "op": "POP"
    },
    "2370": {
      "fn": "Upgradeable.delegateGet",
      "jump": "o",
      "offset": [
        3731,
        3785
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2371": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1907,
        2090
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2378": {
      "op": "SHL"
    },
    "2379": {
      "op": "SUB"
    },
    "2380": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1980,
        2002
      ],
      "op": "DUP2",
      "path": "21",
      "statement": 30
    },
    "2381": {
      "branch": 45,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1980,
        2002
      ],
      "op": "AND",
      "path": "21"
    },
    "2382": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1972,
        2003
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x956"
    },
    "2385": {
      "branch": 45,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1972,
        2003
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2388": {
      "op": "DUP1"
    },
    "2389": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1972,
        2003
      ],
      "op": "REVERT",
      "path": "21"
    },
    "2390": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1972,
        2003
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2391": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 31,
      "value": "0x0"
    },
    "2393": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2394": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2395": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2397": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2404": {
      "op": "SHL"
    },
    "2405": {
      "op": "SUB"
    },
    "2406": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2407": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "DUP6",
      "path": "21"
    },
    "2408": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "AND",
      "path": "21"
    },
    "2409": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "2410": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "2411": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "AND",
      "path": "21"
    },
    "2412": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2413": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2446": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2447": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "LOG3",
      "path": "21"
    },
    "2448": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2072
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 32,
      "value": "0x0"
    },
    "2450": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2451": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2458": {
      "op": "SHL"
    },
    "2459": {
      "op": "SUB"
    },
    "2460": {
      "op": "NOT"
    },
    "2461": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "AND",
      "path": "21"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2468": {
      "op": "SHL"
    },
    "2469": {
      "op": "SUB"
    },
    "2470": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "2471": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2472": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "2473": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "AND",
      "path": "21"
    },
    "2474": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2475": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2476": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2477": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "OR",
      "path": "21"
    },
    "2478": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2479": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2480": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        1907,
        2090
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2481": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2527,
        3426
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2482": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2808,
        2812
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2484": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2802,
        2813
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2485": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2826,
        2858
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2486": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2826,
        2858
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2487": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2826,
        2858
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2488": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2874,
        2899
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2489": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2874,
        2899
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2490": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2871,
        2873
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9C4"
    },
    "2493": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2871,
        2873
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2494": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2951,
        2961
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2495": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2944,
        2948
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2497": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2929,
        2942
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2498": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2925,
        2949
      ],
      "op": "ADD",
      "path": "15"
    },
    "2499": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2918,
        2962
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2500": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2871,
        2873
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2501": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3015,
        3016
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2503": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2995,
        3013
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2504": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2992,
        3017
      ],
      "op": "GT",
      "path": "15"
    },
    "2505": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2989,
        2991
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2506": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2989,
        2991
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9D4"
    },
    "2509": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2989,
        2991
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2510": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3069,
        3079
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2511": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3062,
        3066
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "2513": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3047,
        3060
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2514": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3043,
        3067
      ],
      "op": "ADD",
      "path": "15"
    },
    "2515": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3036,
        3080
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2516": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2989,
        2991
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2517": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3203,
        3204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2519": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3200,
        3201
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2520": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3178,
        3196
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2521": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3172,
        3176
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2523": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3168,
        3197
      ],
      "op": "MUL",
      "path": "15"
    },
    "2524": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3162,
        3166
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2526": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3158,
        3198
      ],
      "op": "ADD",
      "path": "15"
    },
    "2527": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3143,
        3156
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2528": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3134,
        3141
      ],
      "op": "DUP10",
      "path": "15"
    },
    "2529": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3127,
        3132
      ],
      "op": "GAS",
      "path": "15"
    },
    "2530": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3114,
        3205
      ],
      "op": "DELEGATECALL",
      "path": "15"
    },
    "2531": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3222,
        3293
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2532": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3222,
        3293
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2533": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3222,
        3293
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9F2"
    },
    "2536": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3222,
        3293
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2537": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3375,
        3391
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2538": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3370,
        3373
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2540": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3355,
        3368
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2541": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3340,
        3392
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "2542": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3107,
        3410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9F7"
    },
    "2545": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3107,
        3410
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2546": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3222,
        3293
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2547": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3273,
        3274
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2549": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3258,
        3271
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2550": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3251,
        3275
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2551": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3107,
        3410
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2552": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3107,
        3410
      ],
      "op": "POP",
      "path": "15"
    },
    "2553": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "2554": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "2555": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "POP",
      "path": "15"
    },
    "2556": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "POP",
      "path": "15"
    },
    "2557": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "POP",
      "path": "15"
    },
    "2558": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "POP",
      "path": "15"
    },
    "2559": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "POP",
      "path": "15"
    },
    "2560": {
      "fn": "Upgradeable.delegateGetData",
      "jump": "o",
      "offset": [
        2771,
        3420
      ],
      "op": "JUMP",
      "path": "15"
    }
  },
  "sha1": "19aa38da034655ff1692f2af6c852fbd45d72889",
  "source": "pragma solidity ^0.6.1;\n\n\nimport \"./Upgradeable.sol\";\nimport \"zeppelin/utils/Address.sol\";\n\n\n/**\n* @notice ERC897 - ERC DelegateProxy\n*/\ninterface ERCProxy {\n    function proxyType() external pure returns (uint256);\n    function implementation() external view returns (address);\n}\n\n\n/**\n* @notice Proxying requests to other contracts.\n* Client should use ABI of real contract and address of this contract\n*/\ncontract Dispatcher is Upgradeable, ERCProxy {\n    using Address for address;\n\n    event Upgraded(address indexed from, address indexed to, address owner);\n    event RolledBack(address indexed from, address indexed to, address owner);\n\n    /**\n    * @dev Set upgrading status before and after operations\n    */\n    modifier upgrading()\n    {\n        isUpgrade = UPGRADE_TRUE;\n        _;\n        isUpgrade = UPGRADE_FALSE;\n    }\n\n    /**\n    * @param _target Target contract address\n    */\n    constructor(address _target) public upgrading {\n        require(_target.isContract());\n        // Checks that target contract inherits Dispatcher state\n        verifyState(_target);\n        // `verifyState` must work with its contract\n        verifyUpgradeableState(_target, _target);\n        target = _target;\n        finishUpgrade();\n        emit Upgraded(address(0), _target, msg.sender);\n    }\n\n    //------------------------ERC897------------------------\n    /**\n     * @notice ERC897, whether it is a forwarding (1) or an upgradeable (2) proxy\n     */\n    function proxyType() external pure override returns (uint256) {\n        return 2;\n    }\n\n    /**\n     * @notice ERC897, gets the address of the implementation where every call will be delegated\n     */\n    function implementation() external view override returns (address) {\n        return target;\n    }\n    //------------------------------------------------------------\n\n    /**\n    * @notice Verify new contract storage and upgrade target\n    * @param _target New target contract address\n    */\n    function upgrade(address _target) public onlyOwner upgrading {\n        require(_target.isContract());\n        // Checks that target contract has \"correct\" (as much as possible) state layout\n        verifyState(_target);\n        //`verifyState` must work with its contract\n        verifyUpgradeableState(_target, _target);\n        if (target.isContract()) {\n            verifyUpgradeableState(target, _target);\n        }\n        previousTarget = target;\n        target = _target;\n        finishUpgrade();\n        emit Upgraded(previousTarget, _target, msg.sender);\n    }\n\n    /**\n    * @notice Rollback to previous target\n    * @dev Test storage carefully before upgrade again after rollback\n    */\n    function rollback() public onlyOwner upgrading {\n        require(previousTarget.isContract());\n        emit RolledBack(target, previousTarget, msg.sender);\n        // should be always true because layout previousTarget -> target was already checked\n        // but `verifyState` is not 100% accurate so check again\n        verifyState(previousTarget);\n        if (target.isContract()) {\n            verifyUpgradeableState(previousTarget, target);\n        }\n        target = previousTarget;\n        previousTarget = address(0);\n        finishUpgrade();\n    }\n\n    /**\n    * @dev Call verifyState method for Upgradeable contract\n    */\n    function verifyUpgradeableState(address _from, address _to) private {\n        (bool callSuccess,) = _from.delegatecall(abi.encodeWithSelector(this.verifyState.selector, _to));\n        require(callSuccess);\n    }\n\n    /**\n    * @dev Call finishUpgrade method from the Upgradeable contract\n    */\n    function finishUpgrade() private {\n        (bool callSuccess,) = target.delegatecall(abi.encodeWithSelector(this.finishUpgrade.selector, target));\n        require(callSuccess);\n    }\n\n    function verifyState(address _testTarget) public override onlyWhileUpgrading {\n        //checks equivalence accessing state through new contract and current storage\n        require(address(uint160(delegateGet(_testTarget, this.owner.selector))) == owner());\n        require(address(uint160(delegateGet(_testTarget, this.target.selector))) == target);\n        require(address(uint160(delegateGet(_testTarget, this.previousTarget.selector))) == previousTarget);\n        require(uint8(delegateGet(_testTarget, this.isUpgrade.selector)) == isUpgrade);\n    }\n\n    /**\n    * @dev Override function using empty code because no reason to call this function in Dispatcher\n    */\n    function finishUpgrade(address) public override {}\n\n    /**\n    * @dev Fallback function send all requests to the target contract\n    */\n    fallback() external payable {\n        assert(target.isContract());\n        // execute requested function from target contract using storage of the dispatcher\n        (bool callSuccess,) = target.delegatecall(msg.data);\n        if (callSuccess) {\n            // copy result of the request to the return data\n            // we can use the second return value from `delegatecall` (bytes memory)\n            // but it will consume a little more gas\n            assembly {\n                returndatacopy(0x0, 0x0, returndatasize())\n                return(0x0, returndatasize())\n            }\n        } else {\n            revert();\n        }\n    }\n\n}\n",
  "sourceMap": "408:4841:14:-:0;;;901:397;5:9:-1;2:2;;;27:1;24;17:12;2:2;901:397:14;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;901:397:14;516:6:21;:19;;-1:-1:-1;;;;;;516:19:21;525:10;516:19;;;;550:40;;-1:-1:-1;;;;;583:6:21;;;;;516;550:40;;516:6;;550:40;1384:1:15;758:24:14;;-1:-1:-1;;;;758:24:14;-1:-1:-1;;;758:24:14;;;965:20:::1;-1:-1:-1::0;;;;;965:18:14;::::1;;;::::0;;::::1;;;:20:::0;::::1;:::i;:::-;957:29;;12:1:-1;9::::0;2:12:::1;957:29:14;1061:20;1073:7:::0;-1:-1:-1;;;;;1061:11:14::1;:20:::0;:::i:1;:::-;1144:40;1167:7:::0;;-1:-1:-1;;;;;1144:22:14::1;:40:::0;:::i:1;:::-;1194:6;:16:::0;;-1:-1:-1;;;;;;1194:16:14::1;-1:-1:-1::0;;;;;1194:16:14;::::1;;::::0;;1220:15:::1;:13;:15::i;:::-;1250:41;::::0;;1280:10:::1;1250:41:::0;;;;-1:-1:-1;;;;;1250:41:14;::::1;::::0;1267:1:::1;::::0;1250:41:::1;::::0;;;;::::1;::::0;;::::1;-1:-1:-1::0;803:9:14;:25;;-1:-1:-1;;;;803:25:14;-1:-1:-1;;;803:25:14;;;408:4841;;685:610:26;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;1272:15:26;;;1245:42;1237:51;685:610;-1:-1:-1;;;;685:610:26:o;3790:553:14:-;1384:1:15;1586:9;;-1:-1:-1;;;1586:9:15;;:25;:9;:25;1578:34;;12:1:-1;9;2:12;1578:34:15;4038:7:14::1;-1:-1:-1::0;;;;;4038:5:14::1;:7:::0;:::i:1;:::-;-1:-1:-1::0;;;;;3971:74:14::1;3987:45;3999:11:::0;-1:-1:-1;;;;;;;;3987:11:14::1;:45:::0;:::i:1;:::-;-1:-1:-1::0;;;;;3971:74:14::1;;3963:83;;12:1:-1;9::::0;2:12:::1;3963:83:14;4132:6;::::0;-1:-1:-1;;;;;4132:6:14::1;4080:46;4092:11:::0;-1:-1:-1;;;;;;;;4080:11:14::1;:46:::0;:::i:1;:::-;-1:-1:-1::0;;;;;4064:74:14::1;;4056:83;;12:1:-1;9::::0;2:12:::1;4056:83:14;4233:14;::::0;-1:-1:-1;;;;;4233:14:14::1;4173:54;4185:11:::0;-1:-1:-1;;;;;;;;4173:11:14::1;:54:::0;:::i:1;:::-;-1:-1:-1::0;;;;;4157:90:14::1;;4149:99;;12:1:-1;9::::0;2:12:::1;4149:99:14;4326:9;::::0;-1:-1:-1;;;4326:9:14;::::1;;;4272:49;4284:11:::0;-1:-1:-1;;;4272:11:14::1;:49::i;:::-;4266:69;;;4258:78;;12:1:-1;9::::0;2:12:::1;4258:78:14;3790:553:::0;:::o;3303:211::-;3422:54;;;-1:-1:-1;;;;;3422:54:14;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3422:54:14;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;3403:74:14;;;;3382:16;;3403:18;;;;3422:54;3403:74;;;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3403:74:14;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;3381:96:14;;;3495:11;3487:20;;12:1:-1;9;2:12;3487:20:14;3303:211;;;:::o;3602:182::-;3667:6;;3687:59;;;-1:-1:-1;;;;;3667:6:14;;;3687:59;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3687:59:14;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;3667:80:14;;;;3646:16;;3667:6;;:80;;;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3667:80:14;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;3645:102:14;;;3765:11;3757:20;;12:1:-1;9;2:12;660:77:21;698:7;724:6;-1:-1:-1;;;;;724:6:21;660:77;:::o;3532:259:15:-;3614:14;;3668:44;3684:7;3693:9;3614:14;;;-1:-1:-1;;;;;3668:15:15;:44;:::i;:::-;3755:20;;3731:54;-1:-1:-1;;;;3731:54:15:o;2527:899::-;2808:4;2802:11;2826:32;;;2874:25;;2871:2;;2951:10;2944:4;2929:13;2925:24;2918:44;2871:2;3015:1;2995:18;2992:25;2989:2;;;3069:10;3062:4;3047:13;3043:24;3036:44;2989:2;3203:1;3200;3178:18;3172:4;3168:29;3162:4;3158:40;3143:13;3134:7;3127:5;3114:91;3222:71;;;;3375:16;3370:3;3355:13;3340:52;3107:303;;3222:71;3273:1;3258:13;3251:24;3107:303;;2771:649;;;;;;;:::o;408:4841:14:-;;;;;;;",
  "sourcePath": "../../nucypher/blockchain/eth/sol/source/contracts/proxy/Dispatcher.sol",
  "type": "contract"
}