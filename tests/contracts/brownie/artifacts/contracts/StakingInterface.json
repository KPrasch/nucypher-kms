{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract NuCypherToken",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract StakingEscrow",
          "name": "_escrow",
          "type": "address"
        },
        {
          "internalType": "contract PolicyManager",
          "name": "_policyManager",
          "type": "address"
        },
        {
          "internalType": "contract WorkLock",
          "name": "_workLock",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositedETH",
          "type": "uint256"
        }
      ],
      "name": "Bid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "BidCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimedTokens",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "CompensationWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "periods",
          "type": "uint16"
        }
      ],
      "name": "DepositedAsStaker",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "periods",
          "type": "uint16"
        }
      ],
      "name": "Divided",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "periods",
          "type": "uint16"
        }
      ],
      "name": "Locked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "MinFeeRateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "PolicyFeeWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "periods",
          "type": "uint16"
        }
      ],
      "name": "Prolonged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "lockUntilPeriod",
          "type": "uint16"
        }
      ],
      "name": "ReStakeLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "reStake",
          "type": "bool"
        }
      ],
      "name": "ReStakeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refundETH",
          "type": "uint256"
        }
      ],
      "name": "Refund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "windDown",
          "type": "bool"
        }
      ],
      "name": "WindDownSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "WithdrawnAsStaker",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "worker",
          "type": "address"
        }
      ],
      "name": "WorkerBonded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "bid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_worker",
          "type": "address"
        }
      ],
      "name": "bondWorker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_periods",
          "type": "uint16"
        }
      ],
      "name": "depositAsStaker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newValue",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_periods",
          "type": "uint16"
        }
      ],
      "name": "divideStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "escrow",
      "outputs": [
        {
          "internalType": "contract StakingEscrow",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_periods",
          "type": "uint16"
        }
      ],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_lockReStakeUntilPeriod",
          "type": "uint16"
        }
      ],
      "name": "lockReStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policyManager",
      "outputs": [
        {
          "internalType": "contract PolicyManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_periods",
          "type": "uint16"
        }
      ],
      "name": "prolongStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minFeeRate",
          "type": "uint256"
        }
      ],
      "name": "setMinFeeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_reStake",
          "type": "bool"
        }
      ],
      "name": "setReStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_windDown",
          "type": "bool"
        }
      ],
      "name": "setWindDown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingInterfaceAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract NuCypherToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdrawAsStaker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawCompensation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawPolicyFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "workLock",
      "outputs": [
        {
          "internalType": "contract WorkLock",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "18": "../../nucypher/blockchain/eth/sol/source/contracts/staking_contracts/StakingInterface.sol"
  },
  "ast": {
    "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/staking_contracts/StakingInterface.sol",
    "exportedSymbols": {
      "BaseStakingInterface": [
        14750
      ],
      "StakingInterface": [
        15271
      ]
    },
    "id": 15272,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14629,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:18"
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/staking_contracts/AbstractStakingContract.sol",
        "file": "nucypher/staking_contracts/AbstractStakingContract.sol",
        "id": 14630,
        "nodeType": "ImportDirective",
        "scope": 15272,
        "sourceUnit": 14326,
        "src": "26:64:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/NuCypherToken.sol",
        "file": "nucypher/NuCypherToken.sol",
        "id": 14631,
        "nodeType": "ImportDirective",
        "scope": 15272,
        "sourceUnit": 1640,
        "src": "91:36:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/StakingEscrow.sol",
        "file": "nucypher/StakingEscrow.sol",
        "id": 14632,
        "nodeType": "ImportDirective",
        "scope": 15272,
        "sourceUnit": 8773,
        "src": "128:36:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/PolicyManager.sol",
        "file": "nucypher/PolicyManager.sol",
        "id": 14633,
        "nodeType": "ImportDirective",
        "scope": 15272,
        "sourceUnit": 4117,
        "src": "165:36:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/WorkLock.sol",
        "file": "nucypher/WorkLock.sol",
        "id": 14634,
        "nodeType": "ImportDirective",
        "scope": 15272,
        "sourceUnit": 10499,
        "src": "202:31:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14635,
          "nodeType": "StructuredDocumentation",
          "src": "236:38:18",
          "text": "@notice Base StakingInterface"
        },
        "fullyImplemented": true,
        "id": 14750,
        "linearizedBaseContracts": [
          14750
        ],
        "name": "BaseStakingInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "9d83a8dc",
            "id": 14637,
            "mutability": "immutable",
            "name": "stakingInterfaceAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14750,
            "src": "312:48:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14636,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "312:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 14639,
            "mutability": "immutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14750,
            "src": "366:36:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NuCypherToken_$1625",
              "typeString": "contract NuCypherToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 14638,
              "name": "NuCypherToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1625,
              "src": "366:13:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                "typeString": "contract NuCypherToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e2fdcc17",
            "id": 14641,
            "mutability": "immutable",
            "name": "escrow",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14750,
            "src": "408:37:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingEscrow_$8772",
              "typeString": "contract StakingEscrow"
            },
            "typeName": {
              "contractScope": null,
              "id": 14640,
              "name": "StakingEscrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8772,
              "src": "408:13:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                "typeString": "contract StakingEscrow"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ab3dbf3b",
            "id": 14643,
            "mutability": "immutable",
            "name": "policyManager",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14750,
            "src": "451:44:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PolicyManager_$4116",
              "typeString": "contract PolicyManager"
            },
            "typeName": {
              "contractScope": null,
              "id": 14642,
              "name": "PolicyManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4116,
              "src": "451:13:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PolicyManager_$4116",
                "typeString": "contract PolicyManager"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1c7fd532",
            "id": 14645,
            "mutability": "immutable",
            "name": "workLock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14750,
            "src": "501:34:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WorkLock_$10498",
              "typeString": "contract WorkLock"
            },
            "typeName": {
              "contractScope": null,
              "id": 14644,
              "name": "WorkLock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10498,
              "src": "501:8:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WorkLock_$10498",
                "typeString": "contract WorkLock"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14717,
              "nodeType": "Block",
              "src": "943:455:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 14674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 14668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 14662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 14658,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14648,
                                    "src": "961:6:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                                      "typeString": "contract NuCypherToken"
                                    }
                                  },
                                  "id": 14659,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalSupply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 15631,
                                  "src": "961:18:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 14660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "961:20:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 14661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "984:1:18",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "961:24:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 14667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 14663,
                                    "name": "_escrow",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14650,
                                    "src": "1001:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                                      "typeString": "contract StakingEscrow"
                                    }
                                  },
                                  "id": 14664,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "secondsPerPeriod",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 603,
                                  "src": "1001:24:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint32_$",
                                    "typeString": "function () view external returns (uint32)"
                                  }
                                },
                                "id": 14665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1001:26:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 14666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1030:1:18",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1001:30:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "961:70:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 14673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 14669,
                                  "name": "_policyManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14652,
                                  "src": "1047:14:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PolicyManager_$4116",
                                    "typeString": "contract PolicyManager"
                                  }
                                },
                                "id": 14670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "secondsPerPeriod",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1847,
                                "src": "1047:31:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint32_$",
                                  "typeString": "function () view external returns (uint32)"
                                }
                              },
                              "id": 14671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1047:33:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 14672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1083:1:18",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1047:37:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "961:123:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 14689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 14683,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 14677,
                                      "name": "_workLock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14654,
                                      "src": "1162:9:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_WorkLock_$10498",
                                        "typeString": "contract WorkLock"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_WorkLock_$10498",
                                        "typeString": "contract WorkLock"
                                      }
                                    ],
                                    "id": 14676,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1154:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 14675,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1154:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 14678,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1154:18:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 14681,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1184:1:18",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 14680,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1176:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 14679,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1176:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 14682,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1176:10:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "1154:32:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 14688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 14684,
                                      "name": "_workLock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14654,
                                      "src": "1190:9:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_WorkLock_$10498",
                                        "typeString": "contract WorkLock"
                                      }
                                    },
                                    "id": 14685,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "boostingRefund",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8878,
                                    "src": "1190:24:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 14686,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1190:26:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 14687,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1219:1:18",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1190:30:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1154:66:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 14690,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1153:68:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "961:260:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "953:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:269:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14693,
                  "nodeType": "ExpressionStatement",
                  "src": "953:269:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14694,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14639,
                      "src": "1232:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                        "typeString": "contract NuCypherToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 14695,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14648,
                      "src": "1240:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                        "typeString": "contract NuCypherToken"
                      }
                    },
                    "src": "1232:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                      "typeString": "contract NuCypherToken"
                    }
                  },
                  "id": 14697,
                  "nodeType": "ExpressionStatement",
                  "src": "1232:14:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14698,
                      "name": "escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14641,
                      "src": "1256:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                        "typeString": "contract StakingEscrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 14699,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14650,
                      "src": "1265:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                        "typeString": "contract StakingEscrow"
                      }
                    },
                    "src": "1256:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                      "typeString": "contract StakingEscrow"
                    }
                  },
                  "id": 14701,
                  "nodeType": "ExpressionStatement",
                  "src": "1256:16:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14702,
                      "name": "policyManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14643,
                      "src": "1282:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyManager_$4116",
                        "typeString": "contract PolicyManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 14703,
                      "name": "_policyManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14652,
                      "src": "1298:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyManager_$4116",
                        "typeString": "contract PolicyManager"
                      }
                    },
                    "src": "1282:30:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyManager_$4116",
                      "typeString": "contract PolicyManager"
                    }
                  },
                  "id": 14705,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:30:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14706,
                      "name": "workLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14645,
                      "src": "1322:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WorkLock_$10498",
                        "typeString": "contract WorkLock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 14707,
                      "name": "_workLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14654,
                      "src": "1333:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WorkLock_$10498",
                        "typeString": "contract WorkLock"
                      }
                    },
                    "src": "1322:20:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WorkLock_$10498",
                      "typeString": "contract WorkLock"
                    }
                  },
                  "id": 14709,
                  "nodeType": "ExpressionStatement",
                  "src": "1322:20:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14710,
                      "name": "stakingInterfaceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14637,
                      "src": "1352:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 14713,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "1386:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BaseStakingInterface_$14750",
                            "typeString": "contract BaseStakingInterface"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BaseStakingInterface_$14750",
                            "typeString": "contract BaseStakingInterface"
                          }
                        ],
                        "id": 14712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1378:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 14711,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1378:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 14714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1378:13:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1352:39:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14716,
                  "nodeType": "ExpressionStatement",
                  "src": "1352:39:18"
                }
              ]
            },
            "documentation": {
              "id": 14646,
              "nodeType": "StructuredDocumentation",
              "src": "542:232:18",
              "text": "@notice Constructor sets addresses of the contracts\n@param _token Token contract\n@param _escrow Escrow contract\n@param _policyManager PolicyManager contract\n@param _workLock WorkLock contract"
            },
            "id": 14718,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14648,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14718,
                  "src": "800:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                    "typeString": "contract NuCypherToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 14647,
                    "name": "NuCypherToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1625,
                    "src": "800:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                      "typeString": "contract NuCypherToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14650,
                  "mutability": "mutable",
                  "name": "_escrow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14718,
                  "src": "830:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                    "typeString": "contract StakingEscrow"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 14649,
                    "name": "StakingEscrow",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8772,
                    "src": "830:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                      "typeString": "contract StakingEscrow"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14652,
                  "mutability": "mutable",
                  "name": "_policyManager",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14718,
                  "src": "861:28:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyManager_$4116",
                    "typeString": "contract PolicyManager"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 14651,
                    "name": "PolicyManager",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4116,
                    "src": "861:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyManager_$4116",
                      "typeString": "contract PolicyManager"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14654,
                  "mutability": "mutable",
                  "name": "_workLock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14718,
                  "src": "899:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WorkLock_$10498",
                    "typeString": "contract WorkLock"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 14653,
                    "name": "WorkLock",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10498,
                    "src": "899:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WorkLock_$10498",
                      "typeString": "contract WorkLock"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "790:133:18"
            },
            "returnParameters": {
              "id": 14656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:0:18"
            },
            "scope": 14750,
            "src": "779:619:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14731,
              "nodeType": "Block",
              "src": "1501:77:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 14722,
                          "name": "stakingInterfaceAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14637,
                          "src": "1519:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 14725,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1554:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BaseStakingInterface_$14750",
                                "typeString": "contract BaseStakingInterface"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BaseStakingInterface_$14750",
                                "typeString": "contract BaseStakingInterface"
                              }
                            ],
                            "id": 14724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1546:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14723,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1546:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 14726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1546:13:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1519:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1511:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1511:49:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14729,
                  "nodeType": "ExpressionStatement",
                  "src": "1511:49:18"
                },
                {
                  "id": 14730,
                  "nodeType": "PlaceholderStatement",
                  "src": "1570:1:18"
                }
              ]
            },
            "documentation": {
              "id": 14719,
              "nodeType": "StructuredDocumentation",
              "src": "1404:60:18",
              "text": "@dev Checks executing through delegate call"
            },
            "id": 14732,
            "name": "onlyDelegateCall",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 14720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1494:2:18"
            },
            "src": "1469:109:18",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14748,
              "nodeType": "Block",
              "src": "1683:68:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 14738,
                              "name": "workLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14645,
                              "src": "1709:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WorkLock_$10498",
                                "typeString": "contract WorkLock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_WorkLock_$10498",
                                "typeString": "contract WorkLock"
                              }
                            ],
                            "id": 14737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1701:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14736,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1701:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 14739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1701:17:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 14742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1730:1:18",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1722:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14740,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1722:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 14743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1722:10:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1701:31:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1693:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1693:40:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14746,
                  "nodeType": "ExpressionStatement",
                  "src": "1693:40:18"
                },
                {
                  "id": 14747,
                  "nodeType": "PlaceholderStatement",
                  "src": "1743:1:18"
                }
              ]
            },
            "documentation": {
              "id": 14733,
              "nodeType": "StructuredDocumentation",
              "src": "1584:67:18",
              "text": "@dev Checks the existence of the worklock contract"
            },
            "id": 14749,
            "name": "workLockSet",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 14734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1676:2:18"
            },
            "src": "1656:95:18",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 15272,
        "src": "275:1479:18"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14752,
              "name": "BaseStakingInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14750,
              "src": "1998:20:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseStakingInterface_$14750",
                "typeString": "contract BaseStakingInterface"
              }
            },
            "id": 14753,
            "nodeType": "InheritanceSpecifier",
            "src": "1998:20:18"
          }
        ],
        "contractDependencies": [
          14750
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 14751,
          "nodeType": "StructuredDocumentation",
          "src": "1757:211:18",
          "text": "@notice Interface for accessing main contracts from a staking contract\n@dev All methods must be stateless because this code will be executed by delegatecall call, use immutable fields.\n@dev |v1.4.2|"
        },
        "fullyImplemented": true,
        "id": 15271,
        "linearizedBaseContracts": [
          15271,
          14750
        ],
        "name": "StakingInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 14761,
            "name": "DepositedAsStaker",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14755,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14761,
                  "src": "2050:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2050:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14757,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14761,
                  "src": "2074:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2074:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14759,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "periods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14761,
                  "src": "2089:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 14758,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2089:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2049:55:18"
            },
            "src": "2026:79:18"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14767,
            "name": "WithdrawnAsStaker",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14763,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14767,
                  "src": "2134:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14765,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14767,
                  "src": "2158:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2133:39:18"
            },
            "src": "2110:63:18"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14775,
            "name": "Locked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14769,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14775,
                  "src": "2191:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2191:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14771,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14775,
                  "src": "2215:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2215:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14773,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "periods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14775,
                  "src": "2230:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 14772,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2230:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2190:55:18"
            },
            "src": "2178:68:18"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14785,
            "name": "Divided",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14777,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14785,
                  "src": "2265:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14776,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2265:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14779,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14785,
                  "src": "2289:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2289:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14781,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14785,
                  "src": "2304:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2304:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14783,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "periods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14785,
                  "src": "2322:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 14782,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2264:73:18"
            },
            "src": "2251:87:18"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14789,
            "name": "Minted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14787,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14789,
                  "src": "2356:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2356:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2355:24:18"
            },
            "src": "2343:37:18"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14795,
            "name": "PolicyFeeWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14791,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14795,
                  "src": "2410:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2410:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14793,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14795,
                  "src": "2434:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2409:39:18"
            },
            "src": "2385:64:18"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14801,
            "name": "MinFeeRateSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14797,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14801,
                  "src": "2474:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2474:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14799,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14801,
                  "src": "2498:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2498:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2473:39:18"
            },
            "src": "2454:59:18"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14807,
            "name": "ReStakeSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14803,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14807,
                  "src": "2535:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2535:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14805,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reStake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14807,
                  "src": "2559:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14804,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2559:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2534:38:18"
            },
            "src": "2518:55:18"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14813,
            "name": "ReStakeLocked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14809,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14813,
                  "src": "2598:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2598:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14811,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lockUntilPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14813,
                  "src": "2622:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 14810,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2622:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2597:48:18"
            },
            "src": "2578:68:18"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14819,
            "name": "WorkerBonded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14815,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14819,
                  "src": "2670:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2670:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14817,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "worker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14819,
                  "src": "2694:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2694:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2669:40:18"
            },
            "src": "2651:59:18"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14827,
            "name": "Prolonged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14821,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14827,
                  "src": "2731:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14820,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2731:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14823,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14827,
                  "src": "2755:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2755:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14825,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "periods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14827,
                  "src": "2770:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 14824,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2770:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2730:55:18"
            },
            "src": "2715:71:18"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14833,
            "name": "WindDownSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14829,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14833,
                  "src": "2809:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2809:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14831,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "windDown",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14833,
                  "src": "2833:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14830,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2833:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2808:39:18"
            },
            "src": "2791:57:18"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14839,
            "name": "Bid",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14835,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14839,
                  "src": "2863:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2863:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14837,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "depositedETH",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14839,
                  "src": "2887:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14836,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2887:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2862:46:18"
            },
            "src": "2853:56:18"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14845,
            "name": "Claimed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14841,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14845,
                  "src": "2928:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2928:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14843,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimedTokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14845,
                  "src": "2952:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2952:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2927:47:18"
            },
            "src": "2914:61:18"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14851,
            "name": "Refund",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14847,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14851,
                  "src": "2993:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14846,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2993:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14849,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "refundETH",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14851,
                  "src": "3017:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3017:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2992:43:18"
            },
            "src": "2980:56:18"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14855,
            "name": "BidCanceled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14853,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14855,
                  "src": "3059:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3059:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3058:24:18"
            },
            "src": "3041:42:18"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14859,
            "name": "CompensationWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14857,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14859,
                  "src": "3116:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14856,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3116:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3115:24:18"
            },
            "src": "3088:52:18"
          },
          {
            "body": {
              "id": 14877,
              "nodeType": "Block",
              "src": "3612:7:18",
              "statements": []
            },
            "documentation": {
              "id": 14860,
              "nodeType": "StructuredDocumentation",
              "src": "3146:232:18",
              "text": "@notice Constructor sets addresses of the contracts\n@param _token Token contract\n@param _escrow Escrow contract\n@param _policyManager PolicyManager contract\n@param _workLock WorkLock contract"
            },
            "id": 14878,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 14871,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14862,
                    "src": "3564:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                      "typeString": "contract NuCypherToken"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 14872,
                    "name": "_escrow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14864,
                    "src": "3572:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                      "typeString": "contract StakingEscrow"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 14873,
                    "name": "_policyManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14866,
                    "src": "3581:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyManager_$4116",
                      "typeString": "contract PolicyManager"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 14874,
                    "name": "_workLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14868,
                    "src": "3597:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WorkLock_$10498",
                      "typeString": "contract WorkLock"
                    }
                  }
                ],
                "id": 14875,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14870,
                  "name": "BaseStakingInterface",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14750,
                  "src": "3543:20:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BaseStakingInterface_$14750_$",
                    "typeString": "type(contract BaseStakingInterface)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3543:64:18"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14862,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14878,
                  "src": "3404:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                    "typeString": "contract NuCypherToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 14861,
                    "name": "NuCypherToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1625,
                    "src": "3404:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                      "typeString": "contract NuCypherToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14864,
                  "mutability": "mutable",
                  "name": "_escrow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14878,
                  "src": "3434:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                    "typeString": "contract StakingEscrow"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 14863,
                    "name": "StakingEscrow",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8772,
                    "src": "3434:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                      "typeString": "contract StakingEscrow"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14866,
                  "mutability": "mutable",
                  "name": "_policyManager",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14878,
                  "src": "3465:28:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyManager_$4116",
                    "typeString": "contract PolicyManager"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 14865,
                    "name": "PolicyManager",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4116,
                    "src": "3465:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyManager_$4116",
                      "typeString": "contract PolicyManager"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14868,
                  "mutability": "mutable",
                  "name": "_workLock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14878,
                  "src": "3503:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WorkLock_$10498",
                    "typeString": "contract WorkLock"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 14867,
                    "name": "WorkLock",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10498,
                    "src": "3503:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WorkLock_$10498",
                      "typeString": "contract WorkLock"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3394:133:18"
            },
            "returnParameters": {
              "id": 14876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3612:0:18"
            },
            "scope": 15271,
            "src": "3383:236:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14898,
              "nodeType": "Block",
              "src": "3785:91:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14889,
                        "name": "_worker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14881,
                        "src": "3813:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14886,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14641,
                        "src": "3795:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                          "typeString": "contract StakingEscrow"
                        }
                      },
                      "id": 14888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "bondWorker",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5381,
                      "src": "3795:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3795:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14891,
                  "nodeType": "ExpressionStatement",
                  "src": "3795:26:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 14893,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3849:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3849:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14895,
                        "name": "_worker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14881,
                        "src": "3861:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14892,
                      "name": "WorkerBonded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14819,
                      "src": "3836:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 14896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3836:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14897,
                  "nodeType": "EmitStatement",
                  "src": "3831:38:18"
                }
              ]
            },
            "documentation": {
              "id": 14879,
              "nodeType": "StructuredDocumentation",
              "src": "3625:94:18",
              "text": "@notice Bond worker in the staking escrow\n@param _worker Worker address"
            },
            "functionSelector": "dad60676",
            "id": 14899,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 14884,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14883,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "3768:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3768:16:18"
              }
            ],
            "name": "bondWorker",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14881,
                  "mutability": "mutable",
                  "name": "_worker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14899,
                  "src": "3744:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3744:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3743:17:18"
            },
            "returnParameters": {
              "id": 14885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3785:0:18"
            },
            "scope": 15271,
            "src": "3724:152:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14919,
              "nodeType": "Block",
              "src": "4058:91:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14910,
                        "name": "_reStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14902,
                        "src": "4086:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14907,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14641,
                        "src": "4068:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                          "typeString": "contract StakingEscrow"
                        }
                      },
                      "id": 14909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setReStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5430,
                      "src": "4068:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 14911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4068:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14912,
                  "nodeType": "ExpressionStatement",
                  "src": "4068:27:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 14914,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4121:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4121:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14916,
                        "name": "_reStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14902,
                        "src": "4133:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14913,
                      "name": "ReStakeSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14807,
                      "src": "4110:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 14917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4110:32:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14918,
                  "nodeType": "EmitStatement",
                  "src": "4105:37:18"
                }
              ]
            },
            "documentation": {
              "id": 14900,
              "nodeType": "StructuredDocumentation",
              "src": "3882:112:18",
              "text": "@notice Set `reStake` parameter in the staking escrow\n@param _reStake Value for parameter"
            },
            "functionSelector": "03a94485",
            "id": 14920,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 14905,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14904,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "4041:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4041:16:18"
              }
            ],
            "name": "setReStake",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14902,
                  "mutability": "mutable",
                  "name": "_reStake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14920,
                  "src": "4019:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14901,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4019:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4018:15:18"
            },
            "returnParameters": {
              "id": 14906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4058:0:18"
            },
            "scope": 15271,
            "src": "3999:150:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14940,
              "nodeType": "Block",
              "src": "4392:125:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14931,
                        "name": "_lockReStakeUntilPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14923,
                        "src": "4421:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14928,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14641,
                        "src": "4402:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                          "typeString": "contract StakingEscrow"
                        }
                      },
                      "id": 14930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lockReStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5464,
                      "src": "4402:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16) external"
                      }
                    },
                    "id": 14932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4402:43:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14933,
                  "nodeType": "ExpressionStatement",
                  "src": "4402:43:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 14935,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4474:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4474:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14937,
                        "name": "_lockReStakeUntilPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14923,
                        "src": "4486:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 14934,
                      "name": "ReStakeLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14813,
                      "src": "4460:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint16)"
                      }
                    },
                    "id": 14938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4460:50:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14939,
                  "nodeType": "EmitStatement",
                  "src": "4455:55:18"
                }
              ]
            },
            "documentation": {
              "id": 14921,
              "nodeType": "StructuredDocumentation",
              "src": "4155:155:18",
              "text": "@notice Lock `reStake` parameter in the staking escrow\n@param _lockReStakeUntilPeriod Can't change `reStake` value until this period"
            },
            "functionSelector": "ee53c8fd",
            "id": 14941,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 14926,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14925,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "4375:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4375:16:18"
              }
            ],
            "name": "lockReStake",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14923,
                  "mutability": "mutable",
                  "name": "_lockReStakeUntilPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14941,
                  "src": "4336:30:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 14922,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "4336:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4335:32:18"
            },
            "returnParameters": {
              "id": 14927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4392:0:18"
            },
            "scope": 15271,
            "src": "4315:202:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14987,
              "nodeType": "Block",
              "src": "4793:218:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 14956,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4835:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingInterface_$15271",
                                    "typeString": "contract StakingInterface"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingInterface_$15271",
                                    "typeString": "contract StakingInterface"
                                  }
                                ],
                                "id": 14955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4827:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14954,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4827:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 14957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4827:13:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 14952,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14639,
                              "src": "4811:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                                "typeString": "contract NuCypherToken"
                              }
                            },
                            "id": 14953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15645,
                            "src": "4811:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 14958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4811:30:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 14959,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14944,
                          "src": "4845:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4811:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14951,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4803:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4803:49:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14962,
                  "nodeType": "ExpressionStatement",
                  "src": "4803:49:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 14968,
                            "name": "escrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14641,
                            "src": "4884:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                              "typeString": "contract StakingEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                              "typeString": "contract StakingEscrow"
                            }
                          ],
                          "id": 14967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4876:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14966,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4876:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 14969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4876:15:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14970,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14944,
                        "src": "4893:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14963,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14639,
                        "src": "4862:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 14965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15720,
                      "src": "4862:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 14971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4862:38:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14972,
                  "nodeType": "ExpressionStatement",
                  "src": "4862:38:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14976,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14944,
                        "src": "4925:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14977,
                        "name": "_periods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14946,
                        "src": "4933:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14973,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14641,
                        "src": "4910:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                          "typeString": "contract StakingEscrow"
                        }
                      },
                      "id": 14975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6088,
                      "src": "4910:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint16_$returns$__$",
                        "typeString": "function (uint256,uint16) external"
                      }
                    },
                    "id": 14978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4910:32:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14979,
                  "nodeType": "ExpressionStatement",
                  "src": "4910:32:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 14981,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4975:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4975:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14983,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14944,
                        "src": "4987:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14984,
                        "name": "_periods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14946,
                        "src": "4995:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 14980,
                      "name": "DepositedAsStaker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14761,
                      "src": "4957:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,uint16)"
                      }
                    },
                    "id": 14985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4957:47:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14986,
                  "nodeType": "EmitStatement",
                  "src": "4952:52:18"
                }
              ]
            },
            "documentation": {
              "id": 14942,
              "nodeType": "StructuredDocumentation",
              "src": "4523:183:18",
              "text": "@notice Deposit tokens to the staking escrow\n@param _value Amount of token to deposit\n@param _periods Amount of periods during which tokens will be locked"
            },
            "functionSelector": "6294163e",
            "id": 14988,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 14949,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14948,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "4776:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4776:16:18"
              }
            ],
            "name": "depositAsStaker",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14944,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14988,
                  "src": "4736:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4736:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14946,
                  "mutability": "mutable",
                  "name": "_periods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14988,
                  "src": "4752:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 14945,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "4752:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4735:33:18"
            },
            "returnParameters": {
              "id": 14950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4793:0:18"
            },
            "scope": 15271,
            "src": "4711:300:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15008,
              "nodeType": "Block",
              "src": "5244:92:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14999,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14991,
                        "src": "5270:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14996,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14641,
                        "src": "5254:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                          "typeString": "contract StakingEscrow"
                        }
                      },
                      "id": 14998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6776,
                      "src": "5254:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 15000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5254:23:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15001,
                  "nodeType": "ExpressionStatement",
                  "src": "5254:23:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15003,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5310:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5310:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15005,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14991,
                        "src": "5322:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15002,
                      "name": "WithdrawnAsStaker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14767,
                      "src": "5292:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5292:37:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15007,
                  "nodeType": "EmitStatement",
                  "src": "5287:42:18"
                }
              ]
            },
            "documentation": {
              "id": 14989,
              "nodeType": "StructuredDocumentation",
              "src": "5017:156:18",
              "text": "@notice Withdraw available amount of tokens from the staking escrow to the staking contract\n@param _value Amount of token to withdraw"
            },
            "functionSelector": "9d223d15",
            "id": 15009,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 14994,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14993,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "5227:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5227:16:18"
              }
            ],
            "name": "withdrawAsStaker",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14991,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15009,
                  "src": "5204:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5204:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5203:16:18"
            },
            "returnParameters": {
              "id": 14995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5244:0:18"
            },
            "scope": 15271,
            "src": "5178:158:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15033,
              "nodeType": "Block",
              "src": "5628:97:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15022,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15012,
                        "src": "5650:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15023,
                        "name": "_periods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15014,
                        "src": "5658:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15019,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14641,
                        "src": "5638:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                          "typeString": "contract StakingEscrow"
                        }
                      },
                      "id": 15021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6229,
                      "src": "5638:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint16_$returns$__$",
                        "typeString": "function (uint256,uint16) external"
                      }
                    },
                    "id": 15024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5638:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15025,
                  "nodeType": "ExpressionStatement",
                  "src": "5638:29:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15027,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5689:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5689:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15029,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15012,
                        "src": "5701:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15030,
                        "name": "_periods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15014,
                        "src": "5709:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 15026,
                      "name": "Locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14775,
                      "src": "5682:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,uint16)"
                      }
                    },
                    "id": 15031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5682:36:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15032,
                  "nodeType": "EmitStatement",
                  "src": "5677:41:18"
                }
              ]
            },
            "documentation": {
              "id": 15010,
              "nodeType": "StructuredDocumentation",
              "src": "5342:210:18",
              "text": "@notice Lock some tokens or increase lock in the staking escrow\n@param _value Amount of tokens which should lock\n@param _periods Amount of periods during which tokens will be locked"
            },
            "functionSelector": "86f86dde",
            "id": 15034,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15017,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15016,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "5611:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5611:16:18"
              }
            ],
            "name": "lock",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15012,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15034,
                  "src": "5571:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5571:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15014,
                  "mutability": "mutable",
                  "name": "_periods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15034,
                  "src": "5587:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 15013,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "5587:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5570:33:18"
            },
            "returnParameters": {
              "id": 15018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5628:0:18"
            },
            "scope": 15271,
            "src": "5557:168:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15062,
              "nodeType": "Block",
              "src": "6061:127:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15049,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15037,
                        "src": "6090:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15050,
                        "name": "_newValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15039,
                        "src": "6098:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15051,
                        "name": "_periods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15041,
                        "src": "6109:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15046,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14641,
                        "src": "6071:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                          "typeString": "contract StakingEscrow"
                        }
                      },
                      "id": 15048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "divideStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6581,
                      "src": "6071:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint16_$returns$__$",
                        "typeString": "function (uint256,uint256,uint16) external"
                      }
                    },
                    "id": 15052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6071:47:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15053,
                  "nodeType": "ExpressionStatement",
                  "src": "6071:47:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15055,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6141:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6141:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15057,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15037,
                        "src": "6153:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15058,
                        "name": "_newValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15039,
                        "src": "6161:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15059,
                        "name": "_periods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15041,
                        "src": "6172:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 15054,
                      "name": "Divided",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14785,
                      "src": "6133:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint16)"
                      }
                    },
                    "id": 15060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6133:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15061,
                  "nodeType": "EmitStatement",
                  "src": "6128:53:18"
                }
              ]
            },
            "documentation": {
              "id": 15035,
              "nodeType": "StructuredDocumentation",
              "src": "5731:186:18",
              "text": "@notice Divide stake into two parts\n@param _index Index of stake\n@param _newValue New stake value\n@param _periods Amount of periods for extending stake"
            },
            "functionSelector": "d122b794",
            "id": 15063,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15044,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15043,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "6040:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6040:16:18"
              }
            ],
            "name": "divideStake",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15037,
                  "mutability": "mutable",
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15063,
                  "src": "5952:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5952:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15039,
                  "mutability": "mutable",
                  "name": "_newValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15063,
                  "src": "5976:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5976:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15041,
                  "mutability": "mutable",
                  "name": "_periods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15063,
                  "src": "6003:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 15040,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "6003:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5942:82:18"
            },
            "returnParameters": {
              "id": 15045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6061:0:18"
            },
            "scope": 15271,
            "src": "5922:266:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15079,
              "nodeType": "Block",
              "src": "6297:63:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15069,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14641,
                        "src": "6307:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                          "typeString": "contract StakingEscrow"
                        }
                      },
                      "id": 15071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7022,
                      "src": "6307:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 15072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6307:13:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15073,
                  "nodeType": "ExpressionStatement",
                  "src": "6307:13:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15075,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6342:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6342:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 15074,
                      "name": "Minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14789,
                      "src": "6335:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6335:18:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15078,
                  "nodeType": "EmitStatement",
                  "src": "6330:23:18"
                }
              ]
            },
            "documentation": {
              "id": 15064,
              "nodeType": "StructuredDocumentation",
              "src": "6194:58:18",
              "text": "@notice Mint tokens in the staking escrow"
            },
            "functionSelector": "1249c58b",
            "id": 15080,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15067,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15066,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "6280:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6280:16:18"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6270:2:18"
            },
            "returnParameters": {
              "id": 15068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6297:0:18"
            },
            "scope": 15271,
            "src": "6257:103:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15098,
              "nodeType": "Block",
              "src": "6527:109:18",
              "statements": [
                {
                  "assignments": [
                    15087
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15087,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15098,
                      "src": "6537:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15086,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6537:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15091,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15088,
                        "name": "policyManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14643,
                        "src": "6553:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyManager_$4116",
                          "typeString": "contract PolicyManager"
                        }
                      },
                      "id": 15089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2635,
                      "src": "6553:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 15090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6553:24:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6537:40:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15093,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6611:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6611:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15095,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15087,
                        "src": "6623:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15092,
                      "name": "PolicyFeeWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14795,
                      "src": "6592:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6592:37:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15097,
                  "nodeType": "EmitStatement",
                  "src": "6587:42:18"
                }
              ]
            },
            "documentation": {
              "id": 15081,
              "nodeType": "StructuredDocumentation",
              "src": "6366:103:18",
              "text": "@notice Withdraw available policy fees from the policy manager to the staking contract"
            },
            "functionSelector": "4e62ef1e",
            "id": 15099,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15084,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15083,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "6510:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6510:16:18"
              }
            ],
            "name": "withdrawPolicyFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6500:2:18"
            },
            "returnParameters": {
              "id": 15085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6527:0:18"
            },
            "scope": 15271,
            "src": "6474:162:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15119,
              "nodeType": "Block",
              "src": "6818:110:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15110,
                        "name": "_minFeeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15102,
                        "src": "6856:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15107,
                        "name": "policyManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14643,
                        "src": "6828:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyManager_$4116",
                          "typeString": "contract PolicyManager"
                        }
                      },
                      "id": 15109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setMinFeeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2034,
                      "src": "6828:27:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 15111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6828:40:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15112,
                  "nodeType": "ExpressionStatement",
                  "src": "6828:40:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15114,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6897:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6897:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15116,
                        "name": "_minFeeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15102,
                        "src": "6909:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15113,
                      "name": "MinFeeRateSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14801,
                      "src": "6883:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6883:38:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15118,
                  "nodeType": "EmitStatement",
                  "src": "6878:43:18"
                }
              ]
            },
            "documentation": {
              "id": 15100,
              "nodeType": "StructuredDocumentation",
              "src": "6642:103:18",
              "text": "@notice Set the minimum fee that the staker will accept in the policy manager contract"
            },
            "functionSelector": "8c316b90",
            "id": 15120,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15105,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15104,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "6801:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6801:16:18"
              }
            ],
            "name": "setMinFeeRate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15102,
                  "mutability": "mutable",
                  "name": "_minFeeRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15120,
                  "src": "6773:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6773:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6772:21:18"
            },
            "returnParameters": {
              "id": 15106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6818:0:18"
            },
            "scope": 15271,
            "src": "6750:178:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15144,
              "nodeType": "Block",
              "src": "7175:108:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15133,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15123,
                        "src": "7205:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15134,
                        "name": "_periods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15125,
                        "src": "7213:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15130,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14641,
                        "src": "7185:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                          "typeString": "contract StakingEscrow"
                        }
                      },
                      "id": 15132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prolongStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6694,
                      "src": "7185:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint16_$returns$__$",
                        "typeString": "function (uint256,uint16) external"
                      }
                    },
                    "id": 15135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7185:37:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15136,
                  "nodeType": "ExpressionStatement",
                  "src": "7185:37:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15138,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7247:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7247:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15140,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15123,
                        "src": "7259:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15141,
                        "name": "_periods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15125,
                        "src": "7267:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 15137,
                      "name": "Prolonged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14827,
                      "src": "7237:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,uint16)"
                      }
                    },
                    "id": 15142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7237:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15143,
                  "nodeType": "EmitStatement",
                  "src": "7232:44:18"
                }
              ]
            },
            "documentation": {
              "id": 15121,
              "nodeType": "StructuredDocumentation",
              "src": "6935:156:18",
              "text": "@notice Prolong active sub stake\n@param _index Index of the sub stake\n@param _periods Amount of periods for extending sub stake"
            },
            "functionSelector": "b89f66ed",
            "id": 15145,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15128,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15127,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "7158:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7158:16:18"
              }
            ],
            "name": "prolongStake",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15123,
                  "mutability": "mutable",
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15145,
                  "src": "7118:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7118:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15125,
                  "mutability": "mutable",
                  "name": "_periods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15145,
                  "src": "7134:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 15124,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "7134:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7117:33:18"
            },
            "returnParameters": {
              "id": 15129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7175:0:18"
            },
            "scope": 15271,
            "src": "7096:187:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15165,
              "nodeType": "Block",
              "src": "7469:95:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15156,
                        "name": "_windDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15148,
                        "src": "7498:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15153,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14641,
                        "src": "7479:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                          "typeString": "contract StakingEscrow"
                        }
                      },
                      "id": 15155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setWindDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5606,
                      "src": "7479:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 15157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7479:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15158,
                  "nodeType": "ExpressionStatement",
                  "src": "7479:29:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15160,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7535:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7535:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15162,
                        "name": "_windDown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15148,
                        "src": "7547:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15159,
                      "name": "WindDownSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14833,
                      "src": "7523:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 15163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7523:34:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15164,
                  "nodeType": "EmitStatement",
                  "src": "7518:39:18"
                }
              ]
            },
            "documentation": {
              "id": 15146,
              "nodeType": "StructuredDocumentation",
              "src": "7289:114:18",
              "text": "@notice Set `windDown` parameter in the staking escrow\n@param _windDown Value for parameter"
            },
            "functionSelector": "9d6f2a09",
            "id": 15166,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15151,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15150,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "7452:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7452:16:18"
              }
            ],
            "name": "setWindDown",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15148,
                  "mutability": "mutable",
                  "name": "_windDown",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15166,
                  "src": "7429:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15147,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7429:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7428:16:18"
            },
            "returnParameters": {
              "id": 15152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7469:0:18"
            },
            "scope": 15271,
            "src": "7408:156:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15189,
              "nodeType": "Block",
              "src": "7707:84:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15176,
                          "name": "workLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14645,
                          "src": "7717:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WorkLock_$10498",
                            "typeString": "contract WorkLock"
                          }
                        },
                        "id": 15178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9589,
                        "src": "7717:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 15180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 15179,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15169,
                          "src": "7737:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "7717:27:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 15181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7717:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15182,
                  "nodeType": "ExpressionStatement",
                  "src": "7717:29:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15184,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7765:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7765:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15186,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15169,
                        "src": "7777:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15183,
                      "name": "Bid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14839,
                      "src": "7761:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7761:23:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15188,
                  "nodeType": "EmitStatement",
                  "src": "7756:28:18"
                }
              ]
            },
            "documentation": {
              "id": 15167,
              "nodeType": "StructuredDocumentation",
              "src": "7570:59:18",
              "text": "@notice Bid for tokens by transferring ETH"
            },
            "functionSelector": "454a2ab3",
            "id": 15190,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15172,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15171,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "7678:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7678:16:18"
              },
              {
                "arguments": null,
                "id": 15174,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15173,
                  "name": "workLockSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14749,
                  "src": "7695:11:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7695:11:18"
              }
            ],
            "name": "bid",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15169,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15190,
                  "src": "7647:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7647:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7646:16:18"
            },
            "returnParameters": {
              "id": 15175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7707:0:18"
            },
            "scope": 15271,
            "src": "7634:157:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15208,
              "nodeType": "Block",
              "src": "7919:75:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15198,
                        "name": "workLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14645,
                        "src": "7929:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WorkLock_$10498",
                          "typeString": "contract WorkLock"
                        }
                      },
                      "id": 15200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cancelBid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9702,
                      "src": "7929:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 15201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7929:20:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15202,
                  "nodeType": "ExpressionStatement",
                  "src": "7929:20:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15204,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7976:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7976:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 15203,
                      "name": "BidCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14855,
                      "src": "7964:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7964:23:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15207,
                  "nodeType": "EmitStatement",
                  "src": "7959:28:18"
                }
              ]
            },
            "documentation": {
              "id": 15191,
              "nodeType": "StructuredDocumentation",
              "src": "7797:60:18",
              "text": "@notice Cancel bid and refund deposited ETH"
            },
            "functionSelector": "9435c887",
            "id": 15209,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15194,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15193,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "7890:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7890:16:18"
              },
              {
                "arguments": null,
                "id": 15196,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15195,
                  "name": "workLockSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14749,
                  "src": "7907:11:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7907:11:18"
              }
            ],
            "name": "cancelBid",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7880:2:18"
            },
            "returnParameters": {
              "id": 15197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7919:0:18"
            },
            "scope": 15271,
            "src": "7862:132:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15227,
              "nodeType": "Block",
              "src": "8138:96:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15217,
                        "name": "workLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14645,
                        "src": "8148:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WorkLock_$10498",
                          "typeString": "contract WorkLock"
                        }
                      },
                      "id": 15219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawCompensation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10122,
                      "src": "8148:29:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 15220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8148:31:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15221,
                  "nodeType": "ExpressionStatement",
                  "src": "8148:31:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15223,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8216:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8216:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 15222,
                      "name": "CompensationWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14859,
                      "src": "8194:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8194:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15226,
                  "nodeType": "EmitStatement",
                  "src": "8189:38:18"
                }
              ]
            },
            "documentation": {
              "id": 15210,
              "nodeType": "StructuredDocumentation",
              "src": "8000:65:18",
              "text": "@notice Withdraw compensation after force refund"
            },
            "functionSelector": "87a15dc9",
            "id": 15228,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15213,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15212,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "8109:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8109:16:18"
              },
              {
                "arguments": null,
                "id": 15215,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15214,
                  "name": "workLockSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14749,
                  "src": "8126:11:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8126:11:18"
              }
            ],
            "name": "withdrawCompensation",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8099:2:18"
            },
            "returnParameters": {
              "id": 15216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8138:0:18"
            },
            "scope": 15271,
            "src": "8070:164:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15248,
              "nodeType": "Block",
              "src": "8405:106:18",
              "statements": [
                {
                  "assignments": [
                    15237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15237,
                      "mutability": "mutable",
                      "name": "claimedTokens",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15248,
                      "src": "8415:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15236,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8415:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15241,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15238,
                        "name": "workLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14645,
                        "src": "8439:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WorkLock_$10498",
                          "typeString": "contract WorkLock"
                        }
                      },
                      "id": 15239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10340,
                      "src": "8439:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 15240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8439:16:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8415:40:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15243,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8478:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8478:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15245,
                        "name": "claimedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15237,
                        "src": "8490:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15242,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14845,
                      "src": "8470:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8470:34:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15247,
                  "nodeType": "EmitStatement",
                  "src": "8465:39:18"
                }
              ]
            },
            "documentation": {
              "id": 15229,
              "nodeType": "StructuredDocumentation",
              "src": "8240:107:18",
              "text": "@notice Claimed tokens will be deposited and locked as stake in the StakingEscrow contract"
            },
            "functionSelector": "4e71d92d",
            "id": 15249,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15232,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15231,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "8376:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8376:16:18"
              },
              {
                "arguments": null,
                "id": 15234,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15233,
                  "name": "workLockSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14749,
                  "src": "8393:11:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8393:11:18"
              }
            ],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8366:2:18"
            },
            "returnParameters": {
              "id": 15235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8405:0:18"
            },
            "scope": 15271,
            "src": "8352:159:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15269,
              "nodeType": "Block",
              "src": "8634:98:18",
              "statements": [
                {
                  "assignments": [
                    15258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15258,
                      "mutability": "mutable",
                      "name": "refundETH",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15269,
                      "src": "8644:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15257,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8644:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15262,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15259,
                        "name": "workLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14645,
                        "src": "8664:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WorkLock_$10498",
                          "typeString": "contract WorkLock"
                        }
                      },
                      "id": 15260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "refund",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10497,
                      "src": "8664:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 15261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8664:17:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8644:37:18"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15264,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8703:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8703:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15266,
                        "name": "refundETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15258,
                        "src": "8715:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15263,
                      "name": "Refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14851,
                      "src": "8696:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8696:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15268,
                  "nodeType": "EmitStatement",
                  "src": "8691:34:18"
                }
              ]
            },
            "documentation": {
              "id": 15250,
              "nodeType": "StructuredDocumentation",
              "src": "8517:58:18",
              "text": "@notice Refund ETH for the completed work"
            },
            "functionSelector": "590e1ae3",
            "id": 15270,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15253,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15252,
                  "name": "onlyDelegateCall",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14732,
                  "src": "8605:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8605:16:18"
              },
              {
                "arguments": null,
                "id": 15255,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15254,
                  "name": "workLockSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14749,
                  "src": "8622:11:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8622:11:18"
              }
            ],
            "name": "refund",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8595:2:18"
            },
            "returnParameters": {
              "id": 15256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8634:0:18"
            },
            "scope": 15271,
            "src": "8580:152:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 15272,
        "src": "1969:6766:18"
      }
    ],
    "src": "0:8736:18"
  },
  "bytecode": "6101206040523480156200001257600080fd5b5060405162001b5f38038062001b5f833981810160405260808110156200003857600080fd5b50805160208083015160408085015160609095015181516318160ddd60e01b81529151949592949293909286928692869286926000926001600160a01b038816926318160ddd926004808201939291829003018186803b1580156200009c57600080fd5b505afa158015620000b1573d6000803e3d6000fd5b505050506040513d6020811015620000c857600080fd5b50511180156200014557506000836001600160a01b031663407f80016040518163ffffffff1660e01b815260040160206040518083038186803b1580156200010f57600080fd5b505afa15801562000124573d6000803e3d6000fd5b505050506040513d60208110156200013b57600080fd5b505163ffffffff16115b8015620001bf57506000826001600160a01b031663407f80016040518163ffffffff1660e01b815260040160206040518083038186803b1580156200018957600080fd5b505afa1580156200019e573d6000803e3d6000fd5b505050506040513d6020811015620001b557600080fd5b505163ffffffff16115b80156200024557506001600160a01b03811615806200024557506000816001600160a01b0316635bf997f56040518163ffffffff1660e01b815260040160206040518083038186803b1580156200021557600080fd5b505afa1580156200022a573d6000803e3d6000fd5b505050506040513d60208110156200024157600080fd5b5051115b6200024f57600080fd5b606084811b6001600160601b031990811660a05284821b811660c05283821b811660e05282821b1661010052309081901b60805297506001600160a01b039384169650918316945082169250166117c16200039e6000398061060952806106635280610696528061087352806108a852806109a052806109d55280610e415280610e745280611037528061106a52508061077b5280610f4a528061130d52508061049752806105695280610b9c5280610c625280610d665280611140528061124d5280611390528061149b528061157d528061164f52806116cb525080610aed5280610b6d52806117695250806104415280610533528061062d5280610743528061083d528061096a5280610a975280610d075280610e0b5280610f145280611001528061110a52806111f752806112e9528061133152806114355280611547528061167352506117c16000f3fe6080604052600436106101355760003560e01c80639435c887116100ab578063b89f66ed1161006f578063b89f66ed14610346578063d122b7941461037a578063dad60676146103b4578063e2fdcc17146103e7578063ee53c8fd146103fc578063fc0c546a1461042a57610135565b80639435c887146102b15780639d223d15146102c65780639d6f2a09146102f05780639d83a8dc1461031c578063ab3dbf3b1461033157610135565b80634e71d92d116100fd5780634e71d92d146101e0578063590e1ae3146101f55780636294163e1461020a57806386f86dde1461023e57806387a15dc9146102725780638c316b901461028757610135565b806303a944851461013a5780631249c58b146101685780631c7fd5321461017d578063454a2ab3146101ae5780634e62ef1e146101cb575b600080fd5b34801561014657600080fd5b506101666004803603602081101561015d57600080fd5b5035151561043f565b005b34801561017457600080fd5b50610166610531565b34801561018957600080fd5b50610192610607565b604080516001600160a01b039092168252519081900360200190f35b610166600480360360208110156101c457600080fd5b503561062b565b3480156101d757600080fd5b50610166610741565b3480156101ec57600080fd5b5061016661083b565b34801561020157600080fd5b50610166610968565b34801561021657600080fd5b506101666004803603604081101561022d57600080fd5b508035906020013561ffff16610a95565b34801561024a57600080fd5b506101666004803603604081101561026157600080fd5b508035906020013561ffff16610d05565b34801561027e57600080fd5b50610166610e09565b34801561029357600080fd5b50610166600480360360208110156102aa57600080fd5b5035610f12565b3480156102bd57600080fd5b50610166610fff565b3480156102d257600080fd5b50610166600480360360208110156102e957600080fd5b5035611108565b3480156102fc57600080fd5b506101666004803603602081101561031357600080fd5b503515156111f5565b34801561032857600080fd5b506101926112e7565b34801561033d57600080fd5b5061019261130b565b34801561035257600080fd5b506101666004803603604081101561036957600080fd5b508035906020013561ffff1661132f565b34801561038657600080fd5b506101666004803603606081101561039d57600080fd5b508035906020810135906040013561ffff16611433565b3480156103c057600080fd5b50610166600480360360208110156103d757600080fd5b50356001600160a01b0316611545565b3480156103f357600080fd5b5061019261164d565b34801561040857600080fd5b506101666004803603602081101561041f57600080fd5b503561ffff16611671565b34801561043657600080fd5b50610192611767565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561047557600080fd5b604080516303a9448560e01b8152821515600482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916303a9448591602480830192600092919082900301818387803b1580156104de57600080fd5b505af11580156104f2573d6000803e3d6000fd5b505060408051841515815290513393507fcb9d7989e6d845ab7f3f16f57405fb85976d320aa7c3ba2705eddd52ca09154e92509081900360200190a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561056757600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105c257600080fd5b505af11580156105d6573d6000803e3d6000fd5b50506040513392507f90ddedd5a25821bba11fbb98de02ec1f75c1be90ae147d6450ce873e7b78b5d89150600090a2565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561066157600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661069457600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631998aeef826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156106ef57600080fd5b505af1158015610703573d6000803e3d6000fd5b50506040805185815290513394507fe684a55f31b79eca403df938249029212a5925ec6be8012e099b45bc1019e5d29350908190036020019150a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561077757600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156107d457600080fd5b505af11580156107e8573d6000803e3d6000fd5b505050506040513d60208110156107fe57600080fd5b505160408051828152905191925033917f3e0af9db9c08380520dc2592809e7281d3aedc8e7441b84c84bdbe00d093dcf19181900360200190a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561087157600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108a457600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e71d92d6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561090157600080fd5b505af1158015610915573d6000803e3d6000fd5b505050506040513d602081101561092b57600080fd5b505160408051828152905191925033917fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9181900360200190a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561099e57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109d157600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663590e1ae36040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610a2e57600080fd5b505af1158015610a42573d6000803e3d6000fd5b505050506040513d6020811015610a5857600080fd5b505160408051828152905191925033917fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d9181900360200190a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316301415610acb57600080fd5b604080516370a0823160e01b8152306004820152905183916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916370a0823191602480820192602092909190829003018186803b158015610b3457600080fd5b505afa158015610b48573d6000803e3d6000fd5b505050506040513d6020811015610b5e57600080fd5b50511015610b6b57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610c0b57600080fd5b505af1158015610c1f573d6000803e3d6000fd5b505050506040513d6020811015610c3557600080fd5b50506040805163422b01d360e11b81526004810184905261ffff8316602482015290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163845603a691604480830192600092919082900301818387803b158015610ca957600080fd5b505af1158015610cbd573d6000803e3d6000fd5b50506040805185815261ffff8516602082015281513394507f2d910f75638edaf008109cddd638334ee8d6a0020e6209243439c8a7a7d493e093509081900390910190a25050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316301415610d3b57600080fd5b6040805163437c36ef60e11b81526004810184905261ffff8316602482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916386f86dde91604480830192600092919082900301818387803b158015610dad57600080fd5b505af1158015610dc1573d6000803e3d6000fd5b50506040805185815261ffff8516602082015281513394507fb36863dcb8392eea9c1856b7c12e6cdedd4be7ac64a067e71a2e62cb20d69cf293509081900390910190a25050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316301415610e3f57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e7257600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166387a15dc96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ecd57600080fd5b505af1158015610ee1573d6000803e3d6000fd5b50506040513392507f1f3c545731eadf66e84bfa3f22265530ac6cde1c211e7a25da70139a06bc39a69150600090a2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316301415610f4857600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638c316b90826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610fae57600080fd5b505af1158015610fc2573d6000803e3d6000fd5b50506040805184815290513393507f6b9024cc1bf5710f290be788dca9886db7a3d9be0df0855bfa991dbf26a256bc92509081900360200190a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561103557600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661106857600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639435c8876040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156110c357600080fd5b505af11580156110d7573d6000803e3d6000fd5b50506040513392507f7791542f9106a010f289aa1d108168b87d4e2d3d37ed4ecb762391da5e18a45d9150600090a2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561113e57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156111a457600080fd5b505af11580156111b8573d6000803e3d6000fd5b50506040805184815290513393507fe260c3ea1a7da044fdb8e612a54b70847532f00018c3f751beccd55032f6206492509081900360200190a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561122b57600080fd5b60408051639d6f2a0960e01b8152821515600482015290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691639d6f2a0991602480830192600092919082900301818387803b15801561129457600080fd5b505af11580156112a8573d6000803e3d6000fd5b505060408051841515815290513393507f8e551784567ec4bbce5943250eaacd5afe82aef7a9b1dab3f899881f4eae93f092509081900360200190a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561136557600080fd5b6040805163b89f66ed60e01b81526004810184905261ffff8316602482015290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163b89f66ed91604480830192600092919082900301818387803b1580156113d757600080fd5b505af11580156113eb573d6000803e3d6000fd5b50506040805185815261ffff8516602082015281513394507f62ebcca315263ef68e5cb3f45df2ea126cbc4cf1ed95c878aef0505930e9a10893509081900390910190a25050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561146957600080fd5b60408051633448ade560e21b8152600481018590526024810184905261ffff8316604482015290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163d122b79491606480830192600092919082900301818387803b1580156114e257600080fd5b505af11580156114f6573d6000803e3d6000fd5b5050604080518681526020810186905261ffff85168183015290513393507f16f152833a208a80f3b8d50ef0e41c0631c4361ef7d1c4c2404e2672b626342f92509081900360600190a2505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561157b57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663dad60676826040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b1580156115f357600080fd5b505af1158015611607573d6000803e3d6000fd5b5050604080516001600160a01b038516815290513393507f722575ebffe226471b2f7e52a5dccd7afeb6d3403005cf1e42ec2fc473dd613792509081900360200190a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163014156116a757600080fd5b6040805163ee53c8fd60e01b815261ffff8316600482015290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163ee53c8fd91602480830192600092919082900301818387803b15801561171257600080fd5b505af1158015611726573d6000803e3d6000fd5b50506040805161ffff8516815290513393507f290a5b657c05aec4c02fb52b21644f6470bb4c6d37831f2295c247452a20748992509081900360200190a250565b7f00000000000000000000000000000000000000000000000000000000000000008156fea26469706673582212206215903a0aa0cc5f60ae65c4b0eba26df3ad01871d1f4d9af8096622b125fd6764736f6c63430006070033",
  "bytecodeSha1": "beee03093e7230ddda6c5465dbbc94b96ee080c9",
  "compiler": {
    "evm_version": "berlin",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.7"
  },
  "contractName": "StakingInterface",
  "coverageMap": {
    "branches": {
      "18": {
        "StakingInterface.depositAsStaker": {
          "33": [
            4811,
            4851,
            true
          ]
        },
        "StakingInterface.lockReStake": {
          "34": [
            1519,
            1559,
            true
          ]
        }
      }
    },
    "statements": {
      "18": {
        "StakingInterface.bid": {
          "4": [
            7717,
            7746
          ],
          "5": [
            7756,
            7784
          ]
        },
        "StakingInterface.bondWorker": {
          "29": [
            3795,
            3821
          ],
          "30": [
            3831,
            3869
          ]
        },
        "StakingInterface.cancelBid": {
          "19": [
            7929,
            7949
          ],
          "20": [
            7959,
            7987
          ]
        },
        "StakingInterface.claim": {
          "7": [
            8465,
            8504
          ]
        },
        "StakingInterface.depositAsStaker": {
          "9": [
            4803,
            4852
          ],
          "10": [
            4862,
            4900
          ],
          "11": [
            4910,
            4942
          ],
          "12": [
            4952,
            5004
          ]
        },
        "StakingInterface.divideStake": {
          "27": [
            6071,
            6118
          ],
          "28": [
            6128,
            6181
          ]
        },
        "StakingInterface.lock": {
          "13": [
            5638,
            5667
          ],
          "14": [
            5677,
            5718
          ]
        },
        "StakingInterface.lockReStake": {
          "31": [
            4402,
            4445
          ],
          "32": [
            4455,
            4510
          ]
        },
        "StakingInterface.mint": {
          "2": [
            6307,
            6320
          ],
          "3": [
            6330,
            6353
          ]
        },
        "StakingInterface.prolongStake": {
          "25": [
            7185,
            7222
          ],
          "26": [
            7232,
            7276
          ]
        },
        "StakingInterface.refund": {
          "8": [
            8691,
            8725
          ]
        },
        "StakingInterface.setMinFeeRate": {
          "17": [
            6828,
            6868
          ],
          "18": [
            6878,
            6921
          ]
        },
        "StakingInterface.setReStake": {
          "0": [
            4068,
            4095
          ],
          "1": [
            4105,
            4142
          ]
        },
        "StakingInterface.setWindDown": {
          "23": [
            7479,
            7508
          ],
          "24": [
            7518,
            7557
          ]
        },
        "StakingInterface.withdrawAsStaker": {
          "21": [
            5254,
            5277
          ],
          "22": [
            5287,
            5329
          ]
        },
        "StakingInterface.withdrawCompensation": {
          "15": [
            8148,
            8179
          ],
          "16": [
            8189,
            8227
          ]
        },
        "StakingInterface.withdrawPolicyFee": {
          "6": [
            6587,
            6629
          ]
        }
      }
    }
  },
  "dependencies": [
    "BaseStakingInterface"
  ],
  "deployedBytecode": "6080604052600436106101355760003560e01c80639435c887116100ab578063b89f66ed1161006f578063b89f66ed14610346578063d122b7941461037a578063dad60676146103b4578063e2fdcc17146103e7578063ee53c8fd146103fc578063fc0c546a1461042a57610135565b80639435c887146102b15780639d223d15146102c65780639d6f2a09146102f05780639d83a8dc1461031c578063ab3dbf3b1461033157610135565b80634e71d92d116100fd5780634e71d92d146101e0578063590e1ae3146101f55780636294163e1461020a57806386f86dde1461023e57806387a15dc9146102725780638c316b901461028757610135565b806303a944851461013a5780631249c58b146101685780631c7fd5321461017d578063454a2ab3146101ae5780634e62ef1e146101cb575b600080fd5b34801561014657600080fd5b506101666004803603602081101561015d57600080fd5b5035151561043f565b005b34801561017457600080fd5b50610166610531565b34801561018957600080fd5b50610192610607565b604080516001600160a01b039092168252519081900360200190f35b610166600480360360208110156101c457600080fd5b503561062b565b3480156101d757600080fd5b50610166610741565b3480156101ec57600080fd5b5061016661083b565b34801561020157600080fd5b50610166610968565b34801561021657600080fd5b506101666004803603604081101561022d57600080fd5b508035906020013561ffff16610a95565b34801561024a57600080fd5b506101666004803603604081101561026157600080fd5b508035906020013561ffff16610d05565b34801561027e57600080fd5b50610166610e09565b34801561029357600080fd5b50610166600480360360208110156102aa57600080fd5b5035610f12565b3480156102bd57600080fd5b50610166610fff565b3480156102d257600080fd5b50610166600480360360208110156102e957600080fd5b5035611108565b3480156102fc57600080fd5b506101666004803603602081101561031357600080fd5b503515156111f5565b34801561032857600080fd5b506101926112e7565b34801561033d57600080fd5b5061019261130b565b34801561035257600080fd5b506101666004803603604081101561036957600080fd5b508035906020013561ffff1661132f565b34801561038657600080fd5b506101666004803603606081101561039d57600080fd5b508035906020810135906040013561ffff16611433565b3480156103c057600080fd5b50610166600480360360208110156103d757600080fd5b50356001600160a01b0316611545565b3480156103f357600080fd5b5061019261164d565b34801561040857600080fd5b506101666004803603602081101561041f57600080fd5b503561ffff16611671565b34801561043657600080fd5b50610192611767565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561047557600080fd5b604080516303a9448560e01b8152821515600482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916303a9448591602480830192600092919082900301818387803b1580156104de57600080fd5b505af11580156104f2573d6000803e3d6000fd5b505060408051841515815290513393507fcb9d7989e6d845ab7f3f16f57405fb85976d320aa7c3ba2705eddd52ca09154e92509081900360200190a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561056757600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105c257600080fd5b505af11580156105d6573d6000803e3d6000fd5b50506040513392507f90ddedd5a25821bba11fbb98de02ec1f75c1be90ae147d6450ce873e7b78b5d89150600090a2565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561066157600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661069457600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631998aeef826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156106ef57600080fd5b505af1158015610703573d6000803e3d6000fd5b50506040805185815290513394507fe684a55f31b79eca403df938249029212a5925ec6be8012e099b45bc1019e5d29350908190036020019150a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561077757600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156107d457600080fd5b505af11580156107e8573d6000803e3d6000fd5b505050506040513d60208110156107fe57600080fd5b505160408051828152905191925033917f3e0af9db9c08380520dc2592809e7281d3aedc8e7441b84c84bdbe00d093dcf19181900360200190a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561087157600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108a457600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e71d92d6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561090157600080fd5b505af1158015610915573d6000803e3d6000fd5b505050506040513d602081101561092b57600080fd5b505160408051828152905191925033917fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9181900360200190a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561099e57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109d157600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663590e1ae36040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610a2e57600080fd5b505af1158015610a42573d6000803e3d6000fd5b505050506040513d6020811015610a5857600080fd5b505160408051828152905191925033917fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d9181900360200190a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316301415610acb57600080fd5b604080516370a0823160e01b8152306004820152905183916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916370a0823191602480820192602092909190829003018186803b158015610b3457600080fd5b505afa158015610b48573d6000803e3d6000fd5b505050506040513d6020811015610b5e57600080fd5b50511015610b6b57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610c0b57600080fd5b505af1158015610c1f573d6000803e3d6000fd5b505050506040513d6020811015610c3557600080fd5b50506040805163422b01d360e11b81526004810184905261ffff8316602482015290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163845603a691604480830192600092919082900301818387803b158015610ca957600080fd5b505af1158015610cbd573d6000803e3d6000fd5b50506040805185815261ffff8516602082015281513394507f2d910f75638edaf008109cddd638334ee8d6a0020e6209243439c8a7a7d493e093509081900390910190a25050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316301415610d3b57600080fd5b6040805163437c36ef60e11b81526004810184905261ffff8316602482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916386f86dde91604480830192600092919082900301818387803b158015610dad57600080fd5b505af1158015610dc1573d6000803e3d6000fd5b50506040805185815261ffff8516602082015281513394507fb36863dcb8392eea9c1856b7c12e6cdedd4be7ac64a067e71a2e62cb20d69cf293509081900390910190a25050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316301415610e3f57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e7257600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166387a15dc96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ecd57600080fd5b505af1158015610ee1573d6000803e3d6000fd5b50506040513392507f1f3c545731eadf66e84bfa3f22265530ac6cde1c211e7a25da70139a06bc39a69150600090a2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316301415610f4857600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638c316b90826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610fae57600080fd5b505af1158015610fc2573d6000803e3d6000fd5b50506040805184815290513393507f6b9024cc1bf5710f290be788dca9886db7a3d9be0df0855bfa991dbf26a256bc92509081900360200190a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561103557600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661106857600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639435c8876040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156110c357600080fd5b505af11580156110d7573d6000803e3d6000fd5b50506040513392507f7791542f9106a010f289aa1d108168b87d4e2d3d37ed4ecb762391da5e18a45d9150600090a2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561113e57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156111a457600080fd5b505af11580156111b8573d6000803e3d6000fd5b50506040805184815290513393507fe260c3ea1a7da044fdb8e612a54b70847532f00018c3f751beccd55032f6206492509081900360200190a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561122b57600080fd5b60408051639d6f2a0960e01b8152821515600482015290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691639d6f2a0991602480830192600092919082900301818387803b15801561129457600080fd5b505af11580156112a8573d6000803e3d6000fd5b505060408051841515815290513393507f8e551784567ec4bbce5943250eaacd5afe82aef7a9b1dab3f899881f4eae93f092509081900360200190a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561136557600080fd5b6040805163b89f66ed60e01b81526004810184905261ffff8316602482015290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163b89f66ed91604480830192600092919082900301818387803b1580156113d757600080fd5b505af11580156113eb573d6000803e3d6000fd5b50506040805185815261ffff8516602082015281513394507f62ebcca315263ef68e5cb3f45df2ea126cbc4cf1ed95c878aef0505930e9a10893509081900390910190a25050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561146957600080fd5b60408051633448ade560e21b8152600481018590526024810184905261ffff8316604482015290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163d122b79491606480830192600092919082900301818387803b1580156114e257600080fd5b505af11580156114f6573d6000803e3d6000fd5b5050604080518681526020810186905261ffff85168183015290513393507f16f152833a208a80f3b8d50ef0e41c0631c4361ef7d1c4c2404e2672b626342f92509081900360600190a2505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561157b57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663dad60676826040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b1580156115f357600080fd5b505af1158015611607573d6000803e3d6000fd5b5050604080516001600160a01b038516815290513393507f722575ebffe226471b2f7e52a5dccd7afeb6d3403005cf1e42ec2fc473dd613792509081900360200190a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163014156116a757600080fd5b6040805163ee53c8fd60e01b815261ffff8316600482015290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163ee53c8fd91602480830192600092919082900301818387803b15801561171257600080fd5b505af1158015611726573d6000803e3d6000fd5b50506040805161ffff8516815290513393507f290a5b657c05aec4c02fb52b21644f6470bb4c6d37831f2295c247452a20748992509081900360200190a250565b7f00000000000000000000000000000000000000000000000000000000000000008156fea26469706673582212206215903a0aa0cc5f60ae65c4b0eba26df3ad01871d1f4d9af8096622b125fd6764736f6c63430006070033",
  "deployedSourceMap": "1969:6766:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;3999:150:18;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3999:150:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3999:150:18;;;;:::i;:::-;;6257:103;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6257:103:18;;;:::i;501:34::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;501:34:18;;;:::i;:::-;;;;-1:-1:-1;;;;;501:34:18;;;;;;;;;;;;;;7634:157;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;7634:157:18;;:::i;6474:162::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6474:162:18;;;:::i;8352:159::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;8352:159:18;;;:::i;8580:152::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;8580:152:18;;;:::i;4711:300::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4711:300:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4711:300:18;;;;;;;;;:::i;5557:168::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;5557:168:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5557:168:18;;;;;;;;;:::i;8070:164::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;8070:164:18;;;:::i;6750:178::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6750:178:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6750:178:18;;:::i;7862:132::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;7862:132:18;;;:::i;5178:158::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;5178:158:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5178:158:18;;:::i;7408:156::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;7408:156:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;7408:156:18;;;;:::i;312:48::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;312:48:18;;;:::i;451:44::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;451:44:18;;;:::i;7096:187::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;7096:187:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;7096:187:18;;;;;;;;;:::i;5922:266::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;5922:266:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5922:266:18;;;;;;;;;;;;;;:::i;3724:152::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3724:152:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3724:152:18;-1:-1:-1;;;;;3724:152:18;;:::i;408:37::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;408:37:18;;;:::i;4315:202::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4315:202:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4315:202:18;;;;:::i;366:36::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;366:36:18;;;:::i;3999:150::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;4068:27:::1;::::0;;-1:-1:-1;;;4068:27:18;;;::::1;;;::::0;::::1;::::0;;;-1:-1:-1;;;;;4068:6:18::1;:17;::::0;::::1;::::0;:27;;;;;-1:-1:-1;;4068:27:18;;;;;;;-1:-1:-1;4068:17:18;:27;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;4068:27:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;-1:-1:::0;;4110:32:18::1;::::0;;;::::1;;::::0;;;;4121:10:::1;::::0;-1:-1:-1;4110:32:18::1;::::0;-1:-1:-1;4110:32:18;;;;::::1;::::0;;::::1;3999:150:::0;:::o;6257:103::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;6307:6:::1;-1:-1:-1::0;;;;;6307:11:18::1;;:13;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;6307:13:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;-1:-1:::0;;6335:18:18::1;::::0;6342:10:::1;::::0;-1:-1:-1;6335:18:18::1;::::0;-1:-1:-1;6335:18:18;;::::1;6257:103::o:0;501:34::-;;;:::o;7634:157::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;1709:8:::1;-1:-1:-1::0;;;;;1701:31:18::1;1693:40;;12:1:-1;9::::0;2:12:::1;1693:40:18;7717:8:::2;-1:-1:-1::0;;;;;7717:12:18::2;;7737:6;7717:29;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;7717:29:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;-1:-1:::0;;7761:23:18::2;::::0;;;;;;;7765:10:::2;::::0;-1:-1:-1;7761:23:18::2;::::0;-1:-1:-1;7761:23:18;;;;::::2;::::0;;-1:-1:-1;7761:23:18::2;7634:157:::0;:::o;6474:162::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;6537:13:::1;6553;-1:-1:-1::0;;;;;6553:22:18::1;;:24;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;6553:24:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;6553:24:18;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;6553:24:18;6592:37:::1;::::0;;;;;;;6553:24;;-1:-1:-1;6611:10:18::1;::::0;6592:37:::1;::::0;;;;6553:24:::1;6592:37:::0;;::::1;1570:1;6474:162::o:0;8352:159::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;1709:8:::1;-1:-1:-1::0;;;;;1701:31:18::1;1693:40;;12:1:-1;9::::0;2:12:::1;1693:40:18;8415:21:::2;8439:8;-1:-1:-1::0;;;;;8439:14:18::2;;:16;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;8439:16:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;8439:16:18;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;8439:16:18;8470:34:::2;::::0;;;;;;;8439:16;;-1:-1:-1;8478:10:18::2;::::0;8470:34:::2;::::0;;;;8439:16:::2;8470:34:::0;;::::2;1743:1;8352:159::o:0;8580:152::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;1709:8:::1;-1:-1:-1::0;;;;;1701:31:18::1;1693:40;;12:1:-1;9::::0;2:12:::1;1693:40:18;8644:17:::2;8664:8;-1:-1:-1::0;;;;;8664:15:18::2;;:17;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;8664:17:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;8664:17:18;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;8664:17:18;8696:29:::2;::::0;;;;;;;8664:17;;-1:-1:-1;8703:10:18::2;::::0;8696:29:::2;::::0;;;;8664:17:::2;8696:29:::0;;::::2;1743:1;8580:152::o:0;4711:300::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;4811:30:::1;::::0;;-1:-1:-1;;;4811:30:18;;4835:4:::1;4811:30;::::0;::::1;::::0;;;4845:6;;-1:-1:-1;;;;;4811:5:18::1;:15;::::0;::::1;::::0;:30;;;;;::::1;::::0;;;;;;;;;:15;:30;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;4811:30:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;4811:30:18;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;4811:30:18;:40:::1;;4803:49;;12:1:-1;9::::0;2:12:::1;4803:49:18;4862:5;-1:-1:-1::0;;;;;4862:13:18::1;;4884:6;4893;4862:38;;;;;;;;;;;;;-1:-1:-1::0;;;;;4862:38:18::1;-1:-1:-1::0;;;;;4862:38:18::1;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;4862:38:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;4862:38:18;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;;4910:32:18::1;::::0;;-1:-1:-1;;;4910:32:18;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;;;;;4910:6:18::1;:14;::::0;::::1;::::0;:32;;;;;-1:-1:-1;;4910:32:18;;;;;;;-1:-1:-1;4910:14:18;:32;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;4910:32:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;-1:-1:::0;;4957:47:18::1;::::0;;;;;::::1;::::0;::::1;;::::0;::::1;::::0;;;4975:10:::1;::::0;-1:-1:-1;4957:47:18::1;::::0;-1:-1:-1;4957:47:18;;;;;;;;::::1;4711:300:::0;;:::o;5557:168::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;5638:29:::1;::::0;;-1:-1:-1;;;5638:29:18;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;;;;;5638:6:18::1;:11;::::0;::::1;::::0;:29;;;;;-1:-1:-1;;5638:29:18;;;;;;;-1:-1:-1;5638:11:18;:29;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;5638:29:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;-1:-1:::0;;5682:36:18::1;::::0;;;;;::::1;::::0;::::1;;::::0;::::1;::::0;;;5689:10:::1;::::0;-1:-1:-1;5682:36:18::1;::::0;-1:-1:-1;5682:36:18;;;;;;;;::::1;5557:168:::0;;:::o;8070:164::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;1709:8:::1;-1:-1:-1::0;;;;;1701:31:18::1;1693:40;;12:1:-1;9::::0;2:12:::1;1693:40:18;8148:8:::2;-1:-1:-1::0;;;;;8148:29:18::2;;:31;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;8148:31:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;-1:-1:::0;;8194:33:18::2;::::0;8216:10:::2;::::0;-1:-1:-1;8194:33:18::2;::::0;-1:-1:-1;8194:33:18;;::::2;8070:164::o:0;6750:178::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;6828:13:::1;-1:-1:-1::0;;;;;6828:27:18::1;;6856:11;6828:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;6828:40:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;-1:-1:::0;;6883:38:18::1;::::0;;;;;;;6897:10:::1;::::0;-1:-1:-1;6883:38:18::1;::::0;-1:-1:-1;6883:38:18;;;;::::1;::::0;;::::1;6750:178:::0;:::o;7862:132::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;1709:8:::1;-1:-1:-1::0;;;;;1701:31:18::1;1693:40;;12:1:-1;9::::0;2:12:::1;1693:40:18;7929:8:::2;-1:-1:-1::0;;;;;7929:18:18::2;;:20;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;7929:20:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;-1:-1:::0;;7964:23:18::2;::::0;7976:10:::2;::::0;-1:-1:-1;7964:23:18::2;::::0;-1:-1:-1;7964:23:18;;::::2;7862:132::o:0;5178:158::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;5254:6:::1;-1:-1:-1::0;;;;;5254:15:18::1;;5270:6;5254:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;5254:23:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;-1:-1:::0;;5292:37:18::1;::::0;;;;;;;5310:10:::1;::::0;-1:-1:-1;5292:37:18::1;::::0;-1:-1:-1;5292:37:18;;;;::::1;::::0;;::::1;5178:158:::0;:::o;7408:156::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;7479:29:::1;::::0;;-1:-1:-1;;;7479:29:18;;;::::1;;;::::0;::::1;::::0;;;-1:-1:-1;;;;;7479:6:18::1;:18;::::0;::::1;::::0;:29;;;;;-1:-1:-1;;7479:29:18;;;;;;;-1:-1:-1;7479:18:18;:29;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;7479:29:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;-1:-1:::0;;7523:34:18::1;::::0;;;::::1;;::::0;;;;7535:10:::1;::::0;-1:-1:-1;7523:34:18::1;::::0;-1:-1:-1;7523:34:18;;;;::::1;::::0;;::::1;7408:156:::0;:::o;312:48::-;;;:::o;451:44::-;;;:::o;7096:187::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;7185:37:::1;::::0;;-1:-1:-1;;;7185:37:18;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;;;;;7185:6:18::1;:19;::::0;::::1;::::0;:37;;;;;-1:-1:-1;;7185:37:18;;;;;;;-1:-1:-1;7185:19:18;:37;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;7185:37:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;-1:-1:::0;;7237:39:18::1;::::0;;;;;::::1;::::0;::::1;;::::0;::::1;::::0;;;7247:10:::1;::::0;-1:-1:-1;7237:39:18::1;::::0;-1:-1:-1;7237:39:18;;;;;;;;::::1;7096:187:::0;;:::o;5922:266::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;6071:47:::1;::::0;;-1:-1:-1;;;6071:47:18;;::::1;::::0;::::1;::::0;;;;;;;;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;;;;;6071:6:18::1;:18;::::0;::::1;::::0;:47;;;;;-1:-1:-1;;6071:47:18;;;;;;;-1:-1:-1;6071:18:18;:47;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;6071:47:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;-1:-1:::0;;6133:48:18::1;::::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;6141:10:::1;::::0;-1:-1:-1;6133:48:18::1;::::0;-1:-1:-1;6133:48:18;;;;;;;::::1;5922:266:::0;;;:::o;3724:152::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;3795:6:::1;-1:-1:-1::0;;;;;3795:17:18::1;;3813:7;3795:26;;;;;;;;;;;;;-1:-1:-1::0;;;;;3795:26:18::1;-1:-1:-1::0;;;;;3795:26:18::1;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3795:26:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;-1:-1:::0;;3836:33:18::1;::::0;;-1:-1:-1;;;;;3836:33:18;::::1;::::0;;;;3849:10:::1;::::0;-1:-1:-1;3836:33:18::1;::::0;-1:-1:-1;3836:33:18;;;;::::1;::::0;;::::1;3724:152:::0;:::o;408:37::-;;;:::o;4315:202::-;1519:23;-1:-1:-1;;;;;1519:40:18;1554:4;1519:40;;1511:49;;12:1:-1;9;2:12;1511:49:18;4402:43:::1;::::0;;-1:-1:-1;;;4402:43:18;;::::1;::::0;::::1;;::::0;::::1;::::0;;;-1:-1:-1;;;;;4402:6:18::1;:18;::::0;::::1;::::0;:43;;;;;-1:-1:-1;;4402:43:18;;;;;;;-1:-1:-1;4402:18:18;:43;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;4402:43:18;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;-1:-1:::0;;4460:50:18::1;::::0;;::::1;::::0;::::1;::::0;;;;4474:10:::1;::::0;-1:-1:-1;4460:50:18::1;::::0;-1:-1:-1;4460:50:18;;;;::::1;::::0;;::::1;4315:202:::0;:::o;366:36::-;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "All methods must be stateless because this code will be executed by delegatecall call, use immutable fields.|v1.4.2|",
    "methods": {
      "bid(uint256)": {
        "notice": "Bid for tokens by transferring ETH"
      },
      "bondWorker(address)": {
        "notice": "Bond worker in the staking escrow",
        "params": {
          "_worker": "Worker address"
        }
      },
      "cancelBid()": {
        "notice": "Cancel bid and refund deposited ETH"
      },
      "claim()": {
        "notice": "Claimed tokens will be deposited and locked as stake in the StakingEscrow contract"
      },
      "constructor": {
        "params": {
          "_escrow": "Escrow contract",
          "_policyManager": "PolicyManager contract",
          "_token": "Token contract",
          "_workLock": "WorkLock contract"
        }
      },
      "depositAsStaker(uint256,uint16)": {
        "notice": "Deposit tokens to the staking escrow",
        "params": {
          "_periods": "Amount of periods during which tokens will be locked",
          "_value": "Amount of token to deposit"
        }
      },
      "divideStake(uint256,uint256,uint16)": {
        "notice": "Divide stake into two parts",
        "params": {
          "_index": "Index of stake",
          "_newValue": "New stake value",
          "_periods": "Amount of periods for extending stake"
        }
      },
      "lock(uint256,uint16)": {
        "notice": "Lock some tokens or increase lock in the staking escrow",
        "params": {
          "_periods": "Amount of periods during which tokens will be locked",
          "_value": "Amount of tokens which should lock"
        }
      },
      "lockReStake(uint16)": {
        "notice": "Lock `reStake` parameter in the staking escrow",
        "params": {
          "_lockReStakeUntilPeriod": "Can't change `reStake` value until this period"
        }
      },
      "mint()": {
        "notice": "Mint tokens in the staking escrow"
      },
      "prolongStake(uint256,uint16)": {
        "notice": "Prolong active sub stake",
        "params": {
          "_index": "Index of the sub stake",
          "_periods": "Amount of periods for extending sub stake"
        }
      },
      "refund()": {
        "notice": "Refund ETH for the completed work"
      },
      "setMinFeeRate(uint256)": {
        "notice": "Set the minimum fee that the staker will accept in the policy manager contract"
      },
      "setReStake(bool)": {
        "notice": "Set `reStake` parameter in the staking escrow",
        "params": {
          "_reStake": "Value for parameter"
        }
      },
      "setWindDown(bool)": {
        "notice": "Set `windDown` parameter in the staking escrow",
        "params": {
          "_windDown": "Value for parameter"
        }
      },
      "withdrawAsStaker(uint256)": {
        "notice": "Withdraw available amount of tokens from the staking escrow to the staking contract",
        "params": {
          "_value": "Amount of token to withdraw"
        }
      },
      "withdrawCompensation()": {
        "notice": "Withdraw compensation after force refund"
      },
      "withdrawPolicyFee()": {
        "notice": "Withdraw available policy fees from the policy manager to the staking contract"
      }
    },
    "notice": "Interface for accessing main contracts from a staking contract"
  },
  "offset": [
    1969,
    8735
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9435C887 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB89F66ED GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB89F66ED EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xD122B794 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0xDAD60676 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xE2FDCC17 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0xEE53C8FD EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x42A JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x9435C887 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x9D223D15 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x9D6F2A09 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x9D83A8DC EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xAB3DBF3B EQ PUSH2 0x331 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x4E71D92D GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x590E1AE3 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x6294163E EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x86F86DDE EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x87A15DC9 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x8C316B90 EQ PUSH2 0x287 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x3A94485 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x1C7FD532 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x454A2AB3 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x4E62EF1E EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x43F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH2 0x531 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x62B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH2 0x741 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH2 0x83B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH2 0x968 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0xA95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0xD05 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH2 0xE09 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xF12 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH2 0xFFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1108 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x11F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x12E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x130B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x132F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x1433 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1545 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x164D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x1671 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x1767 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x3A94485 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0x3A94485 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 ISZERO ISZERO DUP2 MSTORE SWAP1 MLOAD CALLER SWAP4 POP PUSH32 0xCB9D7989E6D845AB7F3F16F57405FB85976D320AA7C3BA2705EDDD52CA09154E SWAP3 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1249C58B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP PUSH32 0x90DDEDD5A25821BBA11FBB98DE02EC1F75C1BE90AE147D6450CE873E7B78B5D8 SWAP2 POP PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1998AEEF DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x703 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP5 POP PUSH32 0xE684A55F31B79ECA403DF938249029212A5925EC6BE8012E099B45BC1019E5D2 SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP2 POP LOG2 POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x777 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3CCFD60B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP CALLER SWAP2 PUSH32 0x3E0AF9DB9C08380520DC2592809E7281D3AEDC8E7441B84C84BDBE00D093DCF1 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4E71D92D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x915 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x92B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP CALLER SWAP2 PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x99E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x590E1AE3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA42 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP CALLER SWAP2 PUSH32 0xBB28353E4598C3B9199101A66E0989549B659A59A54D2C27FBB183F1932C8E6D SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0xB6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC1F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x422B01D3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH2 0xFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0x845603A6 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD CALLER SWAP5 POP PUSH32 0x2D910F75638EDAF008109CDDD638334EE8D6A0020E6209243439C8A7A7D493E0 SWAP4 POP SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0xD3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x437C36EF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH2 0xFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0x86F86DDE SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD CALLER SWAP5 POP PUSH32 0xB36863DCB8392EEA9C1856B7C12E6CDEDD4BE7AC64A067E71A2E62CB20D69CF2 SWAP4 POP SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0xE3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x87A15DC9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP PUSH32 0x1F3C545731EADF66E84BFA3F22265530AC6CDE1C211E7A25DA70139A06BC39A6 SWAP2 POP PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0xF48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8C316B90 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP4 POP PUSH32 0x6B9024CC1BF5710F290BE788DCA9886DB7A3D9BE0DF0855BFA991DBF26A256BC SWAP3 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x1035 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1068 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9435C887 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP PUSH32 0x7791542F9106A010F289AA1D108168B87D4E2D3D37ED4ECB762391DA5E18A45D SWAP2 POP PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x113E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2E1A7D4D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP4 POP PUSH32 0xE260C3EA1A7DA044FDB8E612A54B70847532F00018C3F751BECCD55032F62064 SWAP3 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x122B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x9D6F2A09 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0x9D6F2A09 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 ISZERO ISZERO DUP2 MSTORE SWAP1 MLOAD CALLER SWAP4 POP PUSH32 0x8E551784567EC4BBCE5943250EAACD5AFE82AEF7A9B1DAB3F899881F4EAE93F0 SWAP3 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x1365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xB89F66ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH2 0xFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0xB89F66ED SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD CALLER SWAP5 POP PUSH32 0x62EBCCA315263EF68E5CB3F45DF2EA126CBC4CF1ED95C878AEF0505930E9A108 SWAP4 POP SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x1469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x3448ADE5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH2 0xFFFF DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0xD122B794 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH2 0xFFFF DUP6 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD CALLER SWAP4 POP PUSH32 0x16F152833A208A80F3B8D50EF0E41C0631C4361EF7D1C4C2404E2672B626342F SWAP3 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x157B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDAD60676 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1607 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE SWAP1 MLOAD CALLER SWAP4 POP PUSH32 0x722575EBFFE226471B2F7E52A5DCCD7AFEB6D3403005CF1E42EC2FC473DD6137 SWAP3 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x16A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xEE53C8FD PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0xEE53C8FD SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1726 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF DUP6 AND DUP2 MSTORE SWAP1 MLOAD CALLER SWAP4 POP PUSH32 0x290A5B657C05AEC4C02FB52B21644F6470BB4C6D37831F2295C247452A207489 SWAP3 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x15903A EXP LOG0 0xCC 0x5F PUSH1 0xAE PUSH6 0xC4B0EBA26DF3 0xAD ADD DUP8 SAR 0x1F 0x4D SWAP11 0xF8 MULMOD PUSH7 0x22B125FD676473 PUSH16 0x6C634300060700330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "8": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "LT",
      "path": "18"
    },
    "9": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x135"
    },
    "12": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "13": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "16": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "SHR",
      "path": "18"
    },
    "19": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "20": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x9435C887"
    },
    "25": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "GT",
      "path": "18"
    },
    "26": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAB"
    },
    "29": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "30": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "31": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB89F66ED"
    },
    "36": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "GT",
      "path": "18"
    },
    "37": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "41": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "42": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB89F66ED"
    },
    "47": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "48": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x346"
    },
    "51": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "52": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "53": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xD122B794"
    },
    "58": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "59": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x37A"
    },
    "62": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "63": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "64": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDAD60676"
    },
    "69": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "70": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B4"
    },
    "73": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "74": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "75": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE2FDCC17"
    },
    "80": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "81": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3E7"
    },
    "84": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "85": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "86": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xEE53C8FD"
    },
    "91": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "92": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3FC"
    },
    "95": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "96": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "97": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFC0C546A"
    },
    "102": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "103": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42A"
    },
    "106": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "107": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x135"
    },
    "110": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMP",
      "path": "18"
    },
    "111": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "112": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "113": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x9435C887"
    },
    "118": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "119": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2B1"
    },
    "122": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "123": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "124": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x9D223D15"
    },
    "129": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "130": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C6"
    },
    "133": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "134": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "135": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x9D6F2A09"
    },
    "140": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "141": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F0"
    },
    "144": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "145": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "146": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x9D83A8DC"
    },
    "151": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "152": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x31C"
    },
    "155": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "156": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "157": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xAB3DBF3B"
    },
    "162": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "163": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x331"
    },
    "166": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "167": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x135"
    },
    "170": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMP",
      "path": "18"
    },
    "171": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "172": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "173": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4E71D92D"
    },
    "178": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "GT",
      "path": "18"
    },
    "179": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFD"
    },
    "182": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "183": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "184": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4E71D92D"
    },
    "189": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "190": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E0"
    },
    "193": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "194": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "195": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x590E1AE3"
    },
    "200": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "201": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F5"
    },
    "204": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "205": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "206": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6294163E"
    },
    "211": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "212": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20A"
    },
    "215": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "216": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "217": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x86F86DDE"
    },
    "222": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "223": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x23E"
    },
    "226": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "227": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "228": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x87A15DC9"
    },
    "233": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "234": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x272"
    },
    "237": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "238": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "239": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8C316B90"
    },
    "244": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "245": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "248": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "249": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x135"
    },
    "252": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMP",
      "path": "18"
    },
    "253": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "254": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "255": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3A94485"
    },
    "260": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "261": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13A"
    },
    "264": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "265": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "266": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1249C58B"
    },
    "271": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "272": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x168"
    },
    "275": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "276": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "277": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1C7FD532"
    },
    "282": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "283": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x17D"
    },
    "286": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "287": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "288": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x454A2AB3"
    },
    "293": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "294": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1AE"
    },
    "297": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "298": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "DUP1",
      "path": "18"
    },
    "299": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4E62EF1E"
    },
    "304": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "EQ",
      "path": "18"
    },
    "305": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CB"
    },
    "308": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "309": {
      "fn": null,
      "offset": [
        1969,
        8735
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "312": {
      "op": "DUP1"
    },
    "313": {
      "first_revert": true,
      "op": "REVERT"
    },
    "314": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "315": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "316": {
      "op": "DUP1"
    },
    "317": {
      "op": "ISZERO"
    },
    "318": {
      "op": "PUSH2",
      "value": "0x146"
    },
    "321": {
      "op": "JUMPI"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "324": {
      "op": "DUP1"
    },
    "325": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "REVERT",
      "path": "18"
    },
    "326": {
      "op": "JUMPDEST"
    },
    "327": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "POP",
      "path": "18"
    },
    "328": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "331": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "333": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "DUP1",
      "path": "18"
    },
    "334": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "335": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "SUB",
      "path": "18"
    },
    "336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "338": {
      "op": "DUP2"
    },
    "339": {
      "op": "LT"
    },
    "340": {
      "op": "ISZERO"
    },
    "341": {
      "op": "PUSH2",
      "value": "0x15D"
    },
    "344": {
      "op": "JUMPI"
    },
    "345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "347": {
      "op": "DUP1"
    },
    "348": {
      "op": "REVERT"
    },
    "349": {
      "op": "JUMPDEST"
    },
    "350": {
      "op": "POP"
    },
    "351": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "352": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "353": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "354": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x43F"
    },
    "357": {
      "fn": "StakingInterface.setReStake",
      "jump": "i",
      "offset": [
        3999,
        4149
      ],
      "op": "JUMP",
      "path": "18"
    },
    "358": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "359": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "STOP",
      "path": "18"
    },
    "360": {
      "fn": "StakingInterface.mint",
      "offset": [
        6257,
        6360
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "361": {
      "fn": "StakingInterface.mint",
      "offset": [
        6257,
        6360
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "362": {
      "op": "DUP1"
    },
    "363": {
      "op": "ISZERO"
    },
    "364": {
      "op": "PUSH2",
      "value": "0x174"
    },
    "367": {
      "op": "JUMPI"
    },
    "368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "370": {
      "op": "DUP1"
    },
    "371": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.mint",
      "offset": [
        6257,
        6360
      ],
      "op": "REVERT",
      "path": "18"
    },
    "372": {
      "op": "JUMPDEST"
    },
    "373": {
      "fn": "StakingInterface.mint",
      "offset": [
        6257,
        6360
      ],
      "op": "POP",
      "path": "18"
    },
    "374": {
      "fn": "StakingInterface.mint",
      "offset": [
        6257,
        6360
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "377": {
      "fn": "StakingInterface.mint",
      "offset": [
        6257,
        6360
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x531"
    },
    "380": {
      "fn": "StakingInterface.mint",
      "jump": "i",
      "offset": [
        6257,
        6360
      ],
      "op": "JUMP",
      "path": "18"
    },
    "381": {
      "offset": [
        501,
        535
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "382": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "383": {
      "op": "DUP1"
    },
    "384": {
      "op": "ISZERO"
    },
    "385": {
      "op": "PUSH2",
      "value": "0x189"
    },
    "388": {
      "op": "JUMPI"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "391": {
      "op": "DUP1"
    },
    "392": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "REVERT",
      "path": "18"
    },
    "393": {
      "op": "JUMPDEST"
    },
    "394": {
      "offset": [
        501,
        535
      ],
      "op": "POP",
      "path": "18"
    },
    "395": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x192"
    },
    "398": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x607"
    },
    "401": {
      "fn": "StakingInterface.mint",
      "jump": "i",
      "offset": [
        501,
        535
      ],
      "op": "JUMP",
      "path": "18"
    },
    "402": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "403": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "405": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "DUP1",
      "path": "18"
    },
    "406": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "413": {
      "op": "SHL"
    },
    "414": {
      "op": "SUB"
    },
    "415": {
      "offset": [
        501,
        535
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "416": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "417": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "AND",
      "path": "18"
    },
    "418": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "DUP3",
      "path": "18"
    },
    "419": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "420": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "421": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "422": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "DUP2",
      "path": "18"
    },
    "423": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "424": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "SUB",
      "path": "18"
    },
    "425": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "427": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "ADD",
      "path": "18"
    },
    "428": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "429": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "RETURN",
      "path": "18"
    },
    "430": {
      "fn": "StakingInterface.bid",
      "offset": [
        7634,
        7791
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "431": {
      "fn": "StakingInterface.bid",
      "offset": [
        7634,
        7791
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "434": {
      "fn": "StakingInterface.bid",
      "offset": [
        7634,
        7791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "436": {
      "fn": "StakingInterface.bid",
      "offset": [
        7634,
        7791
      ],
      "op": "DUP1",
      "path": "18"
    },
    "437": {
      "fn": "StakingInterface.bid",
      "offset": [
        7634,
        7791
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "438": {
      "fn": "StakingInterface.bid",
      "offset": [
        7634,
        7791
      ],
      "op": "SUB",
      "path": "18"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "441": {
      "op": "DUP2"
    },
    "442": {
      "op": "LT"
    },
    "443": {
      "op": "ISZERO"
    },
    "444": {
      "op": "PUSH2",
      "value": "0x1C4"
    },
    "447": {
      "op": "JUMPI"
    },
    "448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "450": {
      "op": "DUP1"
    },
    "451": {
      "op": "REVERT"
    },
    "452": {
      "op": "JUMPDEST"
    },
    "453": {
      "op": "POP"
    },
    "454": {
      "fn": "StakingInterface.bid",
      "offset": [
        7634,
        7791
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "455": {
      "fn": "StakingInterface.bid",
      "offset": [
        7634,
        7791
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x62B"
    },
    "458": {
      "fn": "StakingInterface.bid",
      "jump": "i",
      "offset": [
        7634,
        7791
      ],
      "op": "JUMP",
      "path": "18"
    },
    "459": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6474,
        6636
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "460": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6474,
        6636
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "461": {
      "op": "DUP1"
    },
    "462": {
      "op": "ISZERO"
    },
    "463": {
      "op": "PUSH2",
      "value": "0x1D7"
    },
    "466": {
      "op": "JUMPI"
    },
    "467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "469": {
      "op": "DUP1"
    },
    "470": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6474,
        6636
      ],
      "op": "REVERT",
      "path": "18"
    },
    "471": {
      "op": "JUMPDEST"
    },
    "472": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6474,
        6636
      ],
      "op": "POP",
      "path": "18"
    },
    "473": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6474,
        6636
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "476": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6474,
        6636
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x741"
    },
    "479": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "jump": "i",
      "offset": [
        6474,
        6636
      ],
      "op": "JUMP",
      "path": "18"
    },
    "480": {
      "fn": "StakingInterface.claim",
      "offset": [
        8352,
        8511
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "481": {
      "fn": "StakingInterface.claim",
      "offset": [
        8352,
        8511
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "482": {
      "op": "DUP1"
    },
    "483": {
      "op": "ISZERO"
    },
    "484": {
      "op": "PUSH2",
      "value": "0x1EC"
    },
    "487": {
      "op": "JUMPI"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "490": {
      "op": "DUP1"
    },
    "491": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.claim",
      "offset": [
        8352,
        8511
      ],
      "op": "REVERT",
      "path": "18"
    },
    "492": {
      "op": "JUMPDEST"
    },
    "493": {
      "fn": "StakingInterface.claim",
      "offset": [
        8352,
        8511
      ],
      "op": "POP",
      "path": "18"
    },
    "494": {
      "fn": "StakingInterface.claim",
      "offset": [
        8352,
        8511
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "497": {
      "fn": "StakingInterface.claim",
      "offset": [
        8352,
        8511
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x83B"
    },
    "500": {
      "fn": "StakingInterface.claim",
      "jump": "i",
      "offset": [
        8352,
        8511
      ],
      "op": "JUMP",
      "path": "18"
    },
    "501": {
      "fn": "StakingInterface.refund",
      "offset": [
        8580,
        8732
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "502": {
      "fn": "StakingInterface.refund",
      "offset": [
        8580,
        8732
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "503": {
      "op": "DUP1"
    },
    "504": {
      "op": "ISZERO"
    },
    "505": {
      "op": "PUSH2",
      "value": "0x201"
    },
    "508": {
      "op": "JUMPI"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "511": {
      "op": "DUP1"
    },
    "512": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.refund",
      "offset": [
        8580,
        8732
      ],
      "op": "REVERT",
      "path": "18"
    },
    "513": {
      "op": "JUMPDEST"
    },
    "514": {
      "fn": "StakingInterface.refund",
      "offset": [
        8580,
        8732
      ],
      "op": "POP",
      "path": "18"
    },
    "515": {
      "fn": "StakingInterface.refund",
      "offset": [
        8580,
        8732
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "518": {
      "fn": "StakingInterface.refund",
      "offset": [
        8580,
        8732
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x968"
    },
    "521": {
      "fn": "StakingInterface.refund",
      "jump": "i",
      "offset": [
        8580,
        8732
      ],
      "op": "JUMP",
      "path": "18"
    },
    "522": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "523": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "524": {
      "op": "DUP1"
    },
    "525": {
      "op": "ISZERO"
    },
    "526": {
      "op": "PUSH2",
      "value": "0x216"
    },
    "529": {
      "op": "JUMPI"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "532": {
      "op": "DUP1"
    },
    "533": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "REVERT",
      "path": "18"
    },
    "534": {
      "op": "JUMPDEST"
    },
    "535": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "POP",
      "path": "18"
    },
    "536": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "539": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "541": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "DUP1",
      "path": "18"
    },
    "542": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "543": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "SUB",
      "path": "18"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "546": {
      "op": "DUP2"
    },
    "547": {
      "op": "LT"
    },
    "548": {
      "op": "ISZERO"
    },
    "549": {
      "op": "PUSH2",
      "value": "0x22D"
    },
    "552": {
      "op": "JUMPI"
    },
    "553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "555": {
      "op": "DUP1"
    },
    "556": {
      "op": "REVERT"
    },
    "557": {
      "op": "JUMPDEST"
    },
    "558": {
      "op": "POP"
    },
    "559": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "DUP1",
      "path": "18"
    },
    "560": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "561": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "562": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "564": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "ADD",
      "path": "18"
    },
    "565": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "566": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "569": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "AND",
      "path": "18"
    },
    "570": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA95"
    },
    "573": {
      "fn": "StakingInterface.depositAsStaker",
      "jump": "i",
      "offset": [
        4711,
        5011
      ],
      "op": "JUMP",
      "path": "18"
    },
    "574": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "575": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "576": {
      "op": "DUP1"
    },
    "577": {
      "op": "ISZERO"
    },
    "578": {
      "op": "PUSH2",
      "value": "0x24A"
    },
    "581": {
      "op": "JUMPI"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "584": {
      "op": "DUP1"
    },
    "585": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "REVERT",
      "path": "18"
    },
    "586": {
      "op": "JUMPDEST"
    },
    "587": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "POP",
      "path": "18"
    },
    "588": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "591": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "593": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "DUP1",
      "path": "18"
    },
    "594": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "595": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "SUB",
      "path": "18"
    },
    "596": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "598": {
      "op": "DUP2"
    },
    "599": {
      "op": "LT"
    },
    "600": {
      "op": "ISZERO"
    },
    "601": {
      "op": "PUSH2",
      "value": "0x261"
    },
    "604": {
      "op": "JUMPI"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "607": {
      "op": "DUP1"
    },
    "608": {
      "op": "REVERT"
    },
    "609": {
      "op": "JUMPDEST"
    },
    "610": {
      "op": "POP"
    },
    "611": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "DUP1",
      "path": "18"
    },
    "612": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "613": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "614": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "616": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "ADD",
      "path": "18"
    },
    "617": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "618": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "621": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "AND",
      "path": "18"
    },
    "622": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD05"
    },
    "625": {
      "fn": "StakingInterface.lock",
      "jump": "i",
      "offset": [
        5557,
        5725
      ],
      "op": "JUMP",
      "path": "18"
    },
    "626": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8070,
        8234
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "627": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8070,
        8234
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "628": {
      "op": "DUP1"
    },
    "629": {
      "op": "ISZERO"
    },
    "630": {
      "op": "PUSH2",
      "value": "0x27E"
    },
    "633": {
      "op": "JUMPI"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "636": {
      "op": "DUP1"
    },
    "637": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8070,
        8234
      ],
      "op": "REVERT",
      "path": "18"
    },
    "638": {
      "op": "JUMPDEST"
    },
    "639": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8070,
        8234
      ],
      "op": "POP",
      "path": "18"
    },
    "640": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8070,
        8234
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "643": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8070,
        8234
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE09"
    },
    "646": {
      "fn": "StakingInterface.withdrawCompensation",
      "jump": "i",
      "offset": [
        8070,
        8234
      ],
      "op": "JUMP",
      "path": "18"
    },
    "647": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6750,
        6928
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "648": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6750,
        6928
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "649": {
      "op": "DUP1"
    },
    "650": {
      "op": "ISZERO"
    },
    "651": {
      "op": "PUSH2",
      "value": "0x293"
    },
    "654": {
      "op": "JUMPI"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "657": {
      "op": "DUP1"
    },
    "658": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6750,
        6928
      ],
      "op": "REVERT",
      "path": "18"
    },
    "659": {
      "op": "JUMPDEST"
    },
    "660": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6750,
        6928
      ],
      "op": "POP",
      "path": "18"
    },
    "661": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6750,
        6928
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "664": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6750,
        6928
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "666": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6750,
        6928
      ],
      "op": "DUP1",
      "path": "18"
    },
    "667": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6750,
        6928
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "668": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6750,
        6928
      ],
      "op": "SUB",
      "path": "18"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "671": {
      "op": "DUP2"
    },
    "672": {
      "op": "LT"
    },
    "673": {
      "op": "ISZERO"
    },
    "674": {
      "op": "PUSH2",
      "value": "0x2AA"
    },
    "677": {
      "op": "JUMPI"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "680": {
      "op": "DUP1"
    },
    "681": {
      "op": "REVERT"
    },
    "682": {
      "op": "JUMPDEST"
    },
    "683": {
      "op": "POP"
    },
    "684": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6750,
        6928
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "685": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6750,
        6928
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF12"
    },
    "688": {
      "fn": "StakingInterface.setMinFeeRate",
      "jump": "i",
      "offset": [
        6750,
        6928
      ],
      "op": "JUMP",
      "path": "18"
    },
    "689": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7862,
        7994
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "690": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7862,
        7994
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "691": {
      "op": "DUP1"
    },
    "692": {
      "op": "ISZERO"
    },
    "693": {
      "op": "PUSH2",
      "value": "0x2BD"
    },
    "696": {
      "op": "JUMPI"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "699": {
      "op": "DUP1"
    },
    "700": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7862,
        7994
      ],
      "op": "REVERT",
      "path": "18"
    },
    "701": {
      "op": "JUMPDEST"
    },
    "702": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7862,
        7994
      ],
      "op": "POP",
      "path": "18"
    },
    "703": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7862,
        7994
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "706": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7862,
        7994
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFF"
    },
    "709": {
      "fn": "StakingInterface.cancelBid",
      "jump": "i",
      "offset": [
        7862,
        7994
      ],
      "op": "JUMP",
      "path": "18"
    },
    "710": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5178,
        5336
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "711": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5178,
        5336
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "712": {
      "op": "DUP1"
    },
    "713": {
      "op": "ISZERO"
    },
    "714": {
      "op": "PUSH2",
      "value": "0x2D2"
    },
    "717": {
      "op": "JUMPI"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "720": {
      "op": "DUP1"
    },
    "721": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5178,
        5336
      ],
      "op": "REVERT",
      "path": "18"
    },
    "722": {
      "op": "JUMPDEST"
    },
    "723": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5178,
        5336
      ],
      "op": "POP",
      "path": "18"
    },
    "724": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5178,
        5336
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "727": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5178,
        5336
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "729": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5178,
        5336
      ],
      "op": "DUP1",
      "path": "18"
    },
    "730": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5178,
        5336
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "731": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5178,
        5336
      ],
      "op": "SUB",
      "path": "18"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "734": {
      "op": "DUP2"
    },
    "735": {
      "op": "LT"
    },
    "736": {
      "op": "ISZERO"
    },
    "737": {
      "op": "PUSH2",
      "value": "0x2E9"
    },
    "740": {
      "op": "JUMPI"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "743": {
      "op": "DUP1"
    },
    "744": {
      "op": "REVERT"
    },
    "745": {
      "op": "JUMPDEST"
    },
    "746": {
      "op": "POP"
    },
    "747": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5178,
        5336
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "748": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5178,
        5336
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1108"
    },
    "751": {
      "fn": "StakingInterface.withdrawAsStaker",
      "jump": "i",
      "offset": [
        5178,
        5336
      ],
      "op": "JUMP",
      "path": "18"
    },
    "752": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7408,
        7564
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "753": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7408,
        7564
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "754": {
      "op": "DUP1"
    },
    "755": {
      "op": "ISZERO"
    },
    "756": {
      "op": "PUSH2",
      "value": "0x2FC"
    },
    "759": {
      "op": "JUMPI"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "762": {
      "op": "DUP1"
    },
    "763": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7408,
        7564
      ],
      "op": "REVERT",
      "path": "18"
    },
    "764": {
      "op": "JUMPDEST"
    },
    "765": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7408,
        7564
      ],
      "op": "POP",
      "path": "18"
    },
    "766": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7408,
        7564
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "769": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7408,
        7564
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "771": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7408,
        7564
      ],
      "op": "DUP1",
      "path": "18"
    },
    "772": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7408,
        7564
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "773": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7408,
        7564
      ],
      "op": "SUB",
      "path": "18"
    },
    "774": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "776": {
      "op": "DUP2"
    },
    "777": {
      "op": "LT"
    },
    "778": {
      "op": "ISZERO"
    },
    "779": {
      "op": "PUSH2",
      "value": "0x313"
    },
    "782": {
      "op": "JUMPI"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "785": {
      "op": "DUP1"
    },
    "786": {
      "op": "REVERT"
    },
    "787": {
      "op": "JUMPDEST"
    },
    "788": {
      "op": "POP"
    },
    "789": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7408,
        7564
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "790": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7408,
        7564
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "791": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7408,
        7564
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "792": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7408,
        7564
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11F5"
    },
    "795": {
      "fn": "StakingInterface.setWindDown",
      "jump": "i",
      "offset": [
        7408,
        7564
      ],
      "op": "JUMP",
      "path": "18"
    },
    "796": {
      "offset": [
        312,
        360
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "797": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        312,
        360
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "798": {
      "op": "DUP1"
    },
    "799": {
      "op": "ISZERO"
    },
    "800": {
      "op": "PUSH2",
      "value": "0x328"
    },
    "803": {
      "op": "JUMPI"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "806": {
      "op": "DUP1"
    },
    "807": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.setWindDown",
      "offset": [
        312,
        360
      ],
      "op": "REVERT",
      "path": "18"
    },
    "808": {
      "op": "JUMPDEST"
    },
    "809": {
      "offset": [
        312,
        360
      ],
      "op": "POP",
      "path": "18"
    },
    "810": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        312,
        360
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x192"
    },
    "813": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        312,
        360
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x12E7"
    },
    "816": {
      "fn": "StakingInterface.setWindDown",
      "jump": "i",
      "offset": [
        312,
        360
      ],
      "op": "JUMP",
      "path": "18"
    },
    "817": {
      "offset": [
        451,
        495
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "818": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        451,
        495
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "819": {
      "op": "DUP1"
    },
    "820": {
      "op": "ISZERO"
    },
    "821": {
      "op": "PUSH2",
      "value": "0x33D"
    },
    "824": {
      "op": "JUMPI"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "827": {
      "op": "DUP1"
    },
    "828": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.setWindDown",
      "offset": [
        451,
        495
      ],
      "op": "REVERT",
      "path": "18"
    },
    "829": {
      "op": "JUMPDEST"
    },
    "830": {
      "offset": [
        451,
        495
      ],
      "op": "POP",
      "path": "18"
    },
    "831": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        451,
        495
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x192"
    },
    "834": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        451,
        495
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x130B"
    },
    "837": {
      "fn": "StakingInterface.setWindDown",
      "jump": "i",
      "offset": [
        451,
        495
      ],
      "op": "JUMP",
      "path": "18"
    },
    "838": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "839": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "840": {
      "op": "DUP1"
    },
    "841": {
      "op": "ISZERO"
    },
    "842": {
      "op": "PUSH2",
      "value": "0x352"
    },
    "845": {
      "op": "JUMPI"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "848": {
      "op": "DUP1"
    },
    "849": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "REVERT",
      "path": "18"
    },
    "850": {
      "op": "JUMPDEST"
    },
    "851": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "POP",
      "path": "18"
    },
    "852": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "855": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "857": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "DUP1",
      "path": "18"
    },
    "858": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "859": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "SUB",
      "path": "18"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "862": {
      "op": "DUP2"
    },
    "863": {
      "op": "LT"
    },
    "864": {
      "op": "ISZERO"
    },
    "865": {
      "op": "PUSH2",
      "value": "0x369"
    },
    "868": {
      "op": "JUMPI"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "871": {
      "op": "DUP1"
    },
    "872": {
      "op": "REVERT"
    },
    "873": {
      "op": "JUMPDEST"
    },
    "874": {
      "op": "POP"
    },
    "875": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "DUP1",
      "path": "18"
    },
    "876": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "877": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "878": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "880": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "ADD",
      "path": "18"
    },
    "881": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "882": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "885": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "AND",
      "path": "18"
    },
    "886": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x132F"
    },
    "889": {
      "fn": "StakingInterface.prolongStake",
      "jump": "i",
      "offset": [
        7096,
        7283
      ],
      "op": "JUMP",
      "path": "18"
    },
    "890": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "891": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "892": {
      "op": "DUP1"
    },
    "893": {
      "op": "ISZERO"
    },
    "894": {
      "op": "PUSH2",
      "value": "0x386"
    },
    "897": {
      "op": "JUMPI"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "900": {
      "op": "DUP1"
    },
    "901": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "REVERT",
      "path": "18"
    },
    "902": {
      "op": "JUMPDEST"
    },
    "903": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "POP",
      "path": "18"
    },
    "904": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "907": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "909": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "DUP1",
      "path": "18"
    },
    "910": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "911": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "SUB",
      "path": "18"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "914": {
      "op": "DUP2"
    },
    "915": {
      "op": "LT"
    },
    "916": {
      "op": "ISZERO"
    },
    "917": {
      "op": "PUSH2",
      "value": "0x39D"
    },
    "920": {
      "op": "JUMPI"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "923": {
      "op": "DUP1"
    },
    "924": {
      "op": "REVERT"
    },
    "925": {
      "op": "JUMPDEST"
    },
    "926": {
      "op": "POP"
    },
    "927": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "DUP1",
      "path": "18"
    },
    "928": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "929": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "930": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "932": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "DUP2",
      "path": "18"
    },
    "933": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "ADD",
      "path": "18"
    },
    "934": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "935": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "936": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "938": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "ADD",
      "path": "18"
    },
    "939": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "940": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "943": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "AND",
      "path": "18"
    },
    "944": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1433"
    },
    "947": {
      "fn": "StakingInterface.divideStake",
      "jump": "i",
      "offset": [
        5922,
        6188
      ],
      "op": "JUMP",
      "path": "18"
    },
    "948": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3724,
        3876
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "949": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3724,
        3876
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "950": {
      "op": "DUP1"
    },
    "951": {
      "op": "ISZERO"
    },
    "952": {
      "op": "PUSH2",
      "value": "0x3C0"
    },
    "955": {
      "op": "JUMPI"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "958": {
      "op": "DUP1"
    },
    "959": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3724,
        3876
      ],
      "op": "REVERT",
      "path": "18"
    },
    "960": {
      "op": "JUMPDEST"
    },
    "961": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3724,
        3876
      ],
      "op": "POP",
      "path": "18"
    },
    "962": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3724,
        3876
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "965": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3724,
        3876
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "967": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3724,
        3876
      ],
      "op": "DUP1",
      "path": "18"
    },
    "968": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3724,
        3876
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "969": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3724,
        3876
      ],
      "op": "SUB",
      "path": "18"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "972": {
      "op": "DUP2"
    },
    "973": {
      "op": "LT"
    },
    "974": {
      "op": "ISZERO"
    },
    "975": {
      "op": "PUSH2",
      "value": "0x3D7"
    },
    "978": {
      "op": "JUMPI"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "981": {
      "op": "DUP1"
    },
    "982": {
      "op": "REVERT"
    },
    "983": {
      "op": "JUMPDEST"
    },
    "984": {
      "op": "POP"
    },
    "985": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3724,
        3876
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "992": {
      "op": "SHL"
    },
    "993": {
      "op": "SUB"
    },
    "994": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3724,
        3876
      ],
      "op": "AND",
      "path": "18"
    },
    "995": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3724,
        3876
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1545"
    },
    "998": {
      "fn": "StakingInterface.bondWorker",
      "jump": "i",
      "offset": [
        3724,
        3876
      ],
      "op": "JUMP",
      "path": "18"
    },
    "999": {
      "offset": [
        408,
        445
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1000": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        408,
        445
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1001": {
      "op": "DUP1"
    },
    "1002": {
      "op": "ISZERO"
    },
    "1003": {
      "op": "PUSH2",
      "value": "0x3F3"
    },
    "1006": {
      "op": "JUMPI"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1009": {
      "op": "DUP1"
    },
    "1010": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.bondWorker",
      "offset": [
        408,
        445
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1011": {
      "op": "JUMPDEST"
    },
    "1012": {
      "offset": [
        408,
        445
      ],
      "op": "POP",
      "path": "18"
    },
    "1013": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        408,
        445
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x192"
    },
    "1016": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        408,
        445
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x164D"
    },
    "1019": {
      "fn": "StakingInterface.bondWorker",
      "jump": "i",
      "offset": [
        408,
        445
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1020": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4315,
        4517
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1021": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4315,
        4517
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1022": {
      "op": "DUP1"
    },
    "1023": {
      "op": "ISZERO"
    },
    "1024": {
      "op": "PUSH2",
      "value": "0x408"
    },
    "1027": {
      "op": "JUMPI"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1030": {
      "op": "DUP1"
    },
    "1031": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4315,
        4517
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1032": {
      "op": "JUMPDEST"
    },
    "1033": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4315,
        4517
      ],
      "op": "POP",
      "path": "18"
    },
    "1034": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4315,
        4517
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x166"
    },
    "1037": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4315,
        4517
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1039": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4315,
        4517
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1040": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4315,
        4517
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1041": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4315,
        4517
      ],
      "op": "SUB",
      "path": "18"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1044": {
      "op": "DUP2"
    },
    "1045": {
      "op": "LT"
    },
    "1046": {
      "op": "ISZERO"
    },
    "1047": {
      "op": "PUSH2",
      "value": "0x41F"
    },
    "1050": {
      "op": "JUMPI"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1053": {
      "op": "DUP1"
    },
    "1054": {
      "op": "REVERT"
    },
    "1055": {
      "op": "JUMPDEST"
    },
    "1056": {
      "op": "POP"
    },
    "1057": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4315,
        4517
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "1058": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4315,
        4517
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "1061": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4315,
        4517
      ],
      "op": "AND",
      "path": "18"
    },
    "1062": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4315,
        4517
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1671"
    },
    "1065": {
      "fn": "StakingInterface.lockReStake",
      "jump": "i",
      "offset": [
        4315,
        4517
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1066": {
      "offset": [
        366,
        402
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1067": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        366,
        402
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1068": {
      "op": "DUP1"
    },
    "1069": {
      "op": "ISZERO"
    },
    "1070": {
      "op": "PUSH2",
      "value": "0x436"
    },
    "1073": {
      "op": "JUMPI"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1076": {
      "op": "DUP1"
    },
    "1077": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "StakingInterface.lockReStake",
      "offset": [
        366,
        402
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1078": {
      "op": "JUMPDEST"
    },
    "1079": {
      "offset": [
        366,
        402
      ],
      "op": "POP",
      "path": "18"
    },
    "1080": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        366,
        402
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x192"
    },
    "1083": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        366,
        402
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1767"
    },
    "1086": {
      "fn": "StakingInterface.lockReStake",
      "jump": "i",
      "offset": [
        366,
        402
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1087": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1088": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1127": {
      "op": "SHL"
    },
    "1128": {
      "op": "SUB"
    },
    "1129": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "1130": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "1131": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "1132": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1133": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x475"
    },
    "1136": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1139": {
      "op": "DUP1"
    },
    "1140": {
      "op": "REVERT"
    },
    "1141": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1142": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 0,
      "value": "0x40"
    },
    "1144": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1145": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1146": {
      "op": "PUSH4",
      "value": "0x3A94485"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1153": {
      "op": "SHL"
    },
    "1154": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1155": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1156": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1157": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1158": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1159": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1161": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1162": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "ADD",
      "path": "18"
    },
    "1163": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1164": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1165": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1172": {
      "op": "SHL"
    },
    "1173": {
      "op": "SUB"
    },
    "1174": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4074
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1207": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4085
      ],
      "op": "AND",
      "path": "18"
    },
    "1208": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4085
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1209": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4085
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3A94485"
    },
    "1214": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4085
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1215": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "1217": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1218": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1219": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "ADD",
      "path": "18"
    },
    "1220": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1223": {
      "op": "SWAP3"
    },
    "1224": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1225": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1226": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1227": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1228": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "SUB",
      "path": "18"
    },
    "1229": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "ADD",
      "path": "18"
    },
    "1230": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1231": {
      "op": "DUP4"
    },
    "1232": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4085
      ],
      "op": "DUP8",
      "path": "18"
    },
    "1233": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1234": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "1235": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1236": {
      "op": "DUP1"
    },
    "1237": {
      "op": "ISZERO"
    },
    "1238": {
      "op": "PUSH2",
      "value": "0x4DE"
    },
    "1241": {
      "op": "JUMPI"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1244": {
      "op": "DUP1"
    },
    "1245": {
      "op": "REVERT"
    },
    "1246": {
      "op": "JUMPDEST"
    },
    "1247": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "POP",
      "path": "18"
    },
    "1248": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "GAS",
      "path": "18"
    },
    "1249": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "CALL",
      "path": "18"
    },
    "1250": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4068,
        4095
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1251": {
      "op": "DUP1"
    },
    "1252": {
      "op": "ISZERO"
    },
    "1253": {
      "op": "PUSH2",
      "value": "0x4F2"
    },
    "1256": {
      "op": "JUMPI"
    },
    "1257": {
      "op": "RETURNDATASIZE"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1260": {
      "op": "DUP1"
    },
    "1261": {
      "op": "RETURNDATACOPY"
    },
    "1262": {
      "op": "RETURNDATASIZE"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1265": {
      "op": "REVERT"
    },
    "1266": {
      "op": "JUMPDEST"
    },
    "1267": {
      "op": "POP"
    },
    "1268": {
      "op": "POP"
    },
    "1269": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 1,
      "value": "0x40"
    },
    "1271": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1272": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1273": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1274": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1275": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1276": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1277": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1278": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1279": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1280": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4121,
        4131
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1281": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4121,
        4131
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1282": {
      "op": "POP"
    },
    "1283": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xCB9D7989E6D845AB7F3F16F57405FB85976D320AA7C3BA2705EDDD52CA09154E"
    },
    "1316": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1317": {
      "op": "POP"
    },
    "1318": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1319": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1320": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1321": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "SUB",
      "path": "18"
    },
    "1322": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1324": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "ADD",
      "path": "18"
    },
    "1325": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1326": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        4110,
        4142
      ],
      "op": "LOG2",
      "path": "18"
    },
    "1327": {
      "fn": "StakingInterface.setReStake",
      "offset": [
        3999,
        4149
      ],
      "op": "POP",
      "path": "18"
    },
    "1328": {
      "fn": "StakingInterface.setReStake",
      "jump": "o",
      "offset": [
        3999,
        4149
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1329": {
      "fn": "StakingInterface.mint",
      "offset": [
        6257,
        6360
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1330": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1369": {
      "op": "SHL"
    },
    "1370": {
      "op": "SUB"
    },
    "1371": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "1372": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "1373": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "1374": {
      "fn": "StakingInterface.mint",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1375": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x567"
    },
    "1378": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1381": {
      "op": "DUP1"
    },
    "1382": {
      "op": "REVERT"
    },
    "1383": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1384": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6313
      ],
      "op": "PUSH32",
      "path": "18",
      "statement": 2,
      "value": "0x0"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1423": {
      "op": "SHL"
    },
    "1424": {
      "op": "SUB"
    },
    "1425": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6318
      ],
      "op": "AND",
      "path": "18"
    },
    "1426": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6318
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1249C58B"
    },
    "1431": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1433": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1434": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1435": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "1440": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "AND",
      "path": "18"
    },
    "1441": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "1443": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "SHL",
      "path": "18"
    },
    "1444": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1445": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1446": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1448": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "ADD",
      "path": "18"
    },
    "1449": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1451": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1453": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1454": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1455": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1456": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "SUB",
      "path": "18"
    },
    "1457": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1458": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1460": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "DUP8",
      "path": "18"
    },
    "1461": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1462": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "1463": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1464": {
      "op": "DUP1"
    },
    "1465": {
      "op": "ISZERO"
    },
    "1466": {
      "op": "PUSH2",
      "value": "0x5C2"
    },
    "1469": {
      "op": "JUMPI"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1472": {
      "op": "DUP1"
    },
    "1473": {
      "op": "REVERT"
    },
    "1474": {
      "op": "JUMPDEST"
    },
    "1475": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "POP",
      "path": "18"
    },
    "1476": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "GAS",
      "path": "18"
    },
    "1477": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "CALL",
      "path": "18"
    },
    "1478": {
      "fn": "StakingInterface.mint",
      "offset": [
        6307,
        6320
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1479": {
      "op": "DUP1"
    },
    "1480": {
      "op": "ISZERO"
    },
    "1481": {
      "op": "PUSH2",
      "value": "0x5D6"
    },
    "1484": {
      "op": "JUMPI"
    },
    "1485": {
      "op": "RETURNDATASIZE"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1488": {
      "op": "DUP1"
    },
    "1489": {
      "op": "RETURNDATACOPY"
    },
    "1490": {
      "op": "RETURNDATASIZE"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1493": {
      "op": "REVERT"
    },
    "1494": {
      "op": "JUMPDEST"
    },
    "1495": {
      "op": "POP"
    },
    "1496": {
      "op": "POP"
    },
    "1497": {
      "fn": "StakingInterface.mint",
      "offset": [
        6335,
        6353
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 3,
      "value": "0x40"
    },
    "1499": {
      "fn": "StakingInterface.mint",
      "offset": [
        6335,
        6353
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1500": {
      "fn": "StakingInterface.mint",
      "offset": [
        6342,
        6352
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1501": {
      "fn": "StakingInterface.mint",
      "offset": [
        6342,
        6352
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1502": {
      "op": "POP"
    },
    "1503": {
      "fn": "StakingInterface.mint",
      "offset": [
        6335,
        6353
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x90DDEDD5A25821BBA11FBB98DE02EC1F75C1BE90AE147D6450CE873E7B78B5D8"
    },
    "1536": {
      "fn": "StakingInterface.mint",
      "offset": [
        6335,
        6353
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1537": {
      "op": "POP"
    },
    "1538": {
      "fn": "StakingInterface.mint",
      "offset": [
        6335,
        6353
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1540": {
      "fn": "StakingInterface.mint",
      "offset": [
        6335,
        6353
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1541": {
      "fn": "StakingInterface.mint",
      "offset": [
        6335,
        6353
      ],
      "op": "LOG2",
      "path": "18"
    },
    "1542": {
      "fn": "StakingInterface.mint",
      "jump": "o",
      "offset": [
        6257,
        6360
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1543": {
      "offset": [
        501,
        535
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1544": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1577": {
      "fn": "StakingInterface.mint",
      "offset": [
        501,
        535
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1578": {
      "fn": "StakingInterface.mint",
      "jump": "o",
      "offset": [
        501,
        535
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1579": {
      "fn": "StakingInterface.bid",
      "offset": [
        7634,
        7791
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1580": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1619": {
      "op": "SHL"
    },
    "1620": {
      "op": "SUB"
    },
    "1621": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "1622": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "1623": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "1624": {
      "fn": "StakingInterface.bid",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1625": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x661"
    },
    "1628": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1631": {
      "op": "DUP1"
    },
    "1632": {
      "op": "REVERT"
    },
    "1633": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1634": {
      "offset": [
        1709,
        1717
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1673": {
      "op": "SHL"
    },
    "1674": {
      "op": "SUB"
    },
    "1675": {
      "offset": [
        1701,
        1732
      ],
      "op": "AND",
      "path": "18"
    },
    "1676": {
      "offset": [
        1693,
        1733
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x694"
    },
    "1679": {
      "offset": [
        1693,
        1733
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1682": {
      "op": "DUP1"
    },
    "1683": {
      "op": "REVERT"
    },
    "1684": {
      "offset": [
        1693,
        1733
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1685": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7725
      ],
      "op": "PUSH32",
      "path": "18",
      "statement": 4,
      "value": "0x0"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1724": {
      "op": "SHL"
    },
    "1725": {
      "op": "SUB"
    },
    "1726": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7729
      ],
      "op": "AND",
      "path": "18"
    },
    "1727": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7729
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1998AEEF"
    },
    "1732": {
      "fn": "StakingInterface.bid",
      "offset": [
        7737,
        7743
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1733": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1735": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1736": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1737": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "1742": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "AND",
      "path": "18"
    },
    "1743": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "1745": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "SHL",
      "path": "18"
    },
    "1746": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1747": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1748": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1750": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "ADD",
      "path": "18"
    },
    "1751": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1753": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1755": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1756": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1757": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1758": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "SUB",
      "path": "18"
    },
    "1759": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1760": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "DUP6",
      "path": "18"
    },
    "1761": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1762": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1763": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "1764": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1765": {
      "op": "DUP1"
    },
    "1766": {
      "op": "ISZERO"
    },
    "1767": {
      "op": "PUSH2",
      "value": "0x6EF"
    },
    "1770": {
      "op": "JUMPI"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1773": {
      "op": "DUP1"
    },
    "1774": {
      "op": "REVERT"
    },
    "1775": {
      "op": "JUMPDEST"
    },
    "1776": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "POP",
      "path": "18"
    },
    "1777": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "GAS",
      "path": "18"
    },
    "1778": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "CALL",
      "path": "18"
    },
    "1779": {
      "fn": "StakingInterface.bid",
      "offset": [
        7717,
        7746
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1780": {
      "op": "DUP1"
    },
    "1781": {
      "op": "ISZERO"
    },
    "1782": {
      "op": "PUSH2",
      "value": "0x703"
    },
    "1785": {
      "op": "JUMPI"
    },
    "1786": {
      "op": "RETURNDATASIZE"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1789": {
      "op": "DUP1"
    },
    "1790": {
      "op": "RETURNDATACOPY"
    },
    "1791": {
      "op": "RETURNDATASIZE"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1794": {
      "op": "REVERT"
    },
    "1795": {
      "op": "JUMPDEST"
    },
    "1796": {
      "op": "POP"
    },
    "1797": {
      "op": "POP"
    },
    "1798": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 5,
      "value": "0x40"
    },
    "1800": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1801": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1802": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "DUP6",
      "path": "18"
    },
    "1803": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1804": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1805": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1806": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1807": {
      "fn": "StakingInterface.bid",
      "offset": [
        7765,
        7775
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1808": {
      "fn": "StakingInterface.bid",
      "offset": [
        7765,
        7775
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "1809": {
      "op": "POP"
    },
    "1810": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xE684A55F31B79ECA403DF938249029212A5925EC6BE8012E099B45BC1019E5D2"
    },
    "1843": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1844": {
      "op": "POP"
    },
    "1845": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1846": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1847": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1848": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "SUB",
      "path": "18"
    },
    "1849": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1851": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "ADD",
      "path": "18"
    },
    "1852": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1853": {
      "op": "POP"
    },
    "1854": {
      "fn": "StakingInterface.bid",
      "offset": [
        7761,
        7784
      ],
      "op": "LOG2",
      "path": "18"
    },
    "1855": {
      "fn": "StakingInterface.bid",
      "offset": [
        7634,
        7791
      ],
      "op": "POP",
      "path": "18"
    },
    "1856": {
      "fn": "StakingInterface.bid",
      "jump": "o",
      "offset": [
        7634,
        7791
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1857": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6474,
        6636
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1858": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1897": {
      "op": "SHL"
    },
    "1898": {
      "op": "SUB"
    },
    "1899": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "1900": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "1901": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "1902": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1903": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x777"
    },
    "1906": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1909": {
      "op": "DUP1"
    },
    "1910": {
      "op": "REVERT"
    },
    "1911": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1912": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6537,
        6550
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1914": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6566
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1953": {
      "op": "SHL"
    },
    "1954": {
      "op": "SUB"
    },
    "1955": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6575
      ],
      "op": "AND",
      "path": "18"
    },
    "1956": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6575
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3CCFD60B"
    },
    "1961": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1963": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1964": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1965": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "1970": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "AND",
      "path": "18"
    },
    "1971": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "1973": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "SHL",
      "path": "18"
    },
    "1974": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1975": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1976": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1978": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "ADD",
      "path": "18"
    },
    "1979": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1981": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1983": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1984": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1985": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1986": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "SUB",
      "path": "18"
    },
    "1987": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1988": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1990": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "DUP8",
      "path": "18"
    },
    "1991": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1992": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "1993": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1994": {
      "op": "DUP1"
    },
    "1995": {
      "op": "ISZERO"
    },
    "1996": {
      "op": "PUSH2",
      "value": "0x7D4"
    },
    "1999": {
      "op": "JUMPI"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2002": {
      "op": "DUP1"
    },
    "2003": {
      "op": "REVERT"
    },
    "2004": {
      "op": "JUMPDEST"
    },
    "2005": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "POP",
      "path": "18"
    },
    "2006": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "GAS",
      "path": "18"
    },
    "2007": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "CALL",
      "path": "18"
    },
    "2008": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2009": {
      "op": "DUP1"
    },
    "2010": {
      "op": "ISZERO"
    },
    "2011": {
      "op": "PUSH2",
      "value": "0x7E8"
    },
    "2014": {
      "op": "JUMPI"
    },
    "2015": {
      "op": "RETURNDATASIZE"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2018": {
      "op": "DUP1"
    },
    "2019": {
      "op": "RETURNDATACOPY"
    },
    "2020": {
      "op": "RETURNDATASIZE"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2023": {
      "op": "REVERT"
    },
    "2024": {
      "op": "JUMPDEST"
    },
    "2025": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "POP",
      "path": "18"
    },
    "2026": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "POP",
      "path": "18"
    },
    "2027": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "POP",
      "path": "18"
    },
    "2028": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "POP",
      "path": "18"
    },
    "2029": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2031": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2032": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2035": {
      "op": "DUP2"
    },
    "2036": {
      "op": "LT"
    },
    "2037": {
      "op": "ISZERO"
    },
    "2038": {
      "op": "PUSH2",
      "value": "0x7FE"
    },
    "2041": {
      "op": "JUMPI"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2044": {
      "op": "DUP1"
    },
    "2045": {
      "op": "REVERT"
    },
    "2046": {
      "op": "JUMPDEST"
    },
    "2047": {
      "op": "POP"
    },
    "2048": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2049": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6592,
        6629
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 6,
      "value": "0x40"
    },
    "2051": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6592,
        6629
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2052": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6592,
        6629
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2053": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6592,
        6629
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2054": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6592,
        6629
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2055": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6592,
        6629
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2056": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6592,
        6629
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2057": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6592,
        6629
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2058": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2059": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2060": {
      "op": "POP"
    },
    "2061": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6611,
        6621
      ],
      "op": "CALLER",
      "path": "18"
    },
    "2062": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6611,
        6621
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2063": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6592,
        6629
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x3E0AF9DB9C08380520DC2592809E7281D3AEDC8E7441B84C84BDBE00D093DCF1"
    },
    "2096": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6592,
        6629
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2097": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6592,
        6629
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2098": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6592,
        6629
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2099": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6592,
        6629
      ],
      "op": "SUB",
      "path": "18"
    },
    "2100": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6553,
        6577
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2102": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6592,
        6629
      ],
      "op": "ADD",
      "path": "18"
    },
    "2103": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6592,
        6629
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2104": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        6592,
        6629
      ],
      "op": "LOG2",
      "path": "18"
    },
    "2105": {
      "offset": [
        1570,
        1571
      ],
      "op": "POP",
      "path": "18"
    },
    "2106": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "jump": "o",
      "offset": [
        6474,
        6636
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2107": {
      "fn": "StakingInterface.claim",
      "offset": [
        8352,
        8511
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2108": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2147": {
      "op": "SHL"
    },
    "2148": {
      "op": "SUB"
    },
    "2149": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "2150": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "2151": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "2152": {
      "fn": "StakingInterface.claim",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2153": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x871"
    },
    "2156": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2159": {
      "op": "DUP1"
    },
    "2160": {
      "op": "REVERT"
    },
    "2161": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2162": {
      "offset": [
        1709,
        1717
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2201": {
      "op": "SHL"
    },
    "2202": {
      "op": "SUB"
    },
    "2203": {
      "offset": [
        1701,
        1732
      ],
      "op": "AND",
      "path": "18"
    },
    "2204": {
      "offset": [
        1693,
        1733
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8A4"
    },
    "2207": {
      "offset": [
        1693,
        1733
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2210": {
      "op": "DUP1"
    },
    "2211": {
      "op": "REVERT"
    },
    "2212": {
      "offset": [
        1693,
        1733
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2213": {
      "fn": "StakingInterface.claim",
      "offset": [
        8415,
        8436
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2215": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8447
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2254": {
      "op": "SHL"
    },
    "2255": {
      "op": "SUB"
    },
    "2256": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8453
      ],
      "op": "AND",
      "path": "18"
    },
    "2257": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8453
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4E71D92D"
    },
    "2262": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2264": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2265": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2266": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "2271": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "AND",
      "path": "18"
    },
    "2272": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "2274": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "SHL",
      "path": "18"
    },
    "2275": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2276": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2277": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2279": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "ADD",
      "path": "18"
    },
    "2280": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2282": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2284": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2285": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2286": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2287": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "SUB",
      "path": "18"
    },
    "2288": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2289": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2291": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2292": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2293": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "2294": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2295": {
      "op": "DUP1"
    },
    "2296": {
      "op": "ISZERO"
    },
    "2297": {
      "op": "PUSH2",
      "value": "0x901"
    },
    "2300": {
      "op": "JUMPI"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2303": {
      "op": "DUP1"
    },
    "2304": {
      "op": "REVERT"
    },
    "2305": {
      "op": "JUMPDEST"
    },
    "2306": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "POP",
      "path": "18"
    },
    "2307": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "GAS",
      "path": "18"
    },
    "2308": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "CALL",
      "path": "18"
    },
    "2309": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2310": {
      "op": "DUP1"
    },
    "2311": {
      "op": "ISZERO"
    },
    "2312": {
      "op": "PUSH2",
      "value": "0x915"
    },
    "2315": {
      "op": "JUMPI"
    },
    "2316": {
      "op": "RETURNDATASIZE"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2319": {
      "op": "DUP1"
    },
    "2320": {
      "op": "RETURNDATACOPY"
    },
    "2321": {
      "op": "RETURNDATASIZE"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2324": {
      "op": "REVERT"
    },
    "2325": {
      "op": "JUMPDEST"
    },
    "2326": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "POP",
      "path": "18"
    },
    "2327": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "POP",
      "path": "18"
    },
    "2328": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "POP",
      "path": "18"
    },
    "2329": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "POP",
      "path": "18"
    },
    "2330": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2332": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2333": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2336": {
      "op": "DUP2"
    },
    "2337": {
      "op": "LT"
    },
    "2338": {
      "op": "ISZERO"
    },
    "2339": {
      "op": "PUSH2",
      "value": "0x92B"
    },
    "2342": {
      "op": "JUMPI"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2345": {
      "op": "DUP1"
    },
    "2346": {
      "op": "REVERT"
    },
    "2347": {
      "op": "JUMPDEST"
    },
    "2348": {
      "op": "POP"
    },
    "2349": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2350": {
      "fn": "StakingInterface.claim",
      "offset": [
        8470,
        8504
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 7,
      "value": "0x40"
    },
    "2352": {
      "fn": "StakingInterface.claim",
      "offset": [
        8470,
        8504
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2353": {
      "fn": "StakingInterface.claim",
      "offset": [
        8470,
        8504
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2354": {
      "fn": "StakingInterface.claim",
      "offset": [
        8470,
        8504
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2355": {
      "fn": "StakingInterface.claim",
      "offset": [
        8470,
        8504
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2356": {
      "fn": "StakingInterface.claim",
      "offset": [
        8470,
        8504
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2357": {
      "fn": "StakingInterface.claim",
      "offset": [
        8470,
        8504
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2358": {
      "fn": "StakingInterface.claim",
      "offset": [
        8470,
        8504
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2359": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2360": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2361": {
      "op": "POP"
    },
    "2362": {
      "fn": "StakingInterface.claim",
      "offset": [
        8478,
        8488
      ],
      "op": "CALLER",
      "path": "18"
    },
    "2363": {
      "fn": "StakingInterface.claim",
      "offset": [
        8478,
        8488
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2364": {
      "fn": "StakingInterface.claim",
      "offset": [
        8470,
        8504
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A"
    },
    "2397": {
      "fn": "StakingInterface.claim",
      "offset": [
        8470,
        8504
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2398": {
      "fn": "StakingInterface.claim",
      "offset": [
        8470,
        8504
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2399": {
      "fn": "StakingInterface.claim",
      "offset": [
        8470,
        8504
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2400": {
      "fn": "StakingInterface.claim",
      "offset": [
        8470,
        8504
      ],
      "op": "SUB",
      "path": "18"
    },
    "2401": {
      "fn": "StakingInterface.claim",
      "offset": [
        8439,
        8455
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2403": {
      "fn": "StakingInterface.claim",
      "offset": [
        8470,
        8504
      ],
      "op": "ADD",
      "path": "18"
    },
    "2404": {
      "fn": "StakingInterface.claim",
      "offset": [
        8470,
        8504
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2405": {
      "fn": "StakingInterface.claim",
      "offset": [
        8470,
        8504
      ],
      "op": "LOG2",
      "path": "18"
    },
    "2406": {
      "offset": [
        1743,
        1744
      ],
      "op": "POP",
      "path": "18"
    },
    "2407": {
      "fn": "StakingInterface.claim",
      "jump": "o",
      "offset": [
        8352,
        8511
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2408": {
      "fn": "StakingInterface.refund",
      "offset": [
        8580,
        8732
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2409": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2448": {
      "op": "SHL"
    },
    "2449": {
      "op": "SUB"
    },
    "2450": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "2451": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "2452": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "2453": {
      "fn": "StakingInterface.refund",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2454": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x99E"
    },
    "2457": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2460": {
      "op": "DUP1"
    },
    "2461": {
      "op": "REVERT"
    },
    "2462": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2463": {
      "offset": [
        1709,
        1717
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2502": {
      "op": "SHL"
    },
    "2503": {
      "op": "SUB"
    },
    "2504": {
      "offset": [
        1701,
        1732
      ],
      "op": "AND",
      "path": "18"
    },
    "2505": {
      "offset": [
        1693,
        1733
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9D1"
    },
    "2508": {
      "offset": [
        1693,
        1733
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2511": {
      "op": "DUP1"
    },
    "2512": {
      "op": "REVERT"
    },
    "2513": {
      "offset": [
        1693,
        1733
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2514": {
      "fn": "StakingInterface.refund",
      "offset": [
        8644,
        8661
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2516": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8672
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2555": {
      "op": "SHL"
    },
    "2556": {
      "op": "SUB"
    },
    "2557": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8679
      ],
      "op": "AND",
      "path": "18"
    },
    "2558": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8679
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x590E1AE3"
    },
    "2563": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2565": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2566": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2567": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "2572": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "AND",
      "path": "18"
    },
    "2573": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "2575": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "SHL",
      "path": "18"
    },
    "2576": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2577": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2578": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2580": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "ADD",
      "path": "18"
    },
    "2581": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2583": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2585": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2586": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2587": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2588": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "SUB",
      "path": "18"
    },
    "2589": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2590": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2592": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2593": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2594": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "2595": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2596": {
      "op": "DUP1"
    },
    "2597": {
      "op": "ISZERO"
    },
    "2598": {
      "op": "PUSH2",
      "value": "0xA2E"
    },
    "2601": {
      "op": "JUMPI"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2604": {
      "op": "DUP1"
    },
    "2605": {
      "op": "REVERT"
    },
    "2606": {
      "op": "JUMPDEST"
    },
    "2607": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "POP",
      "path": "18"
    },
    "2608": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "GAS",
      "path": "18"
    },
    "2609": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "CALL",
      "path": "18"
    },
    "2610": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2611": {
      "op": "DUP1"
    },
    "2612": {
      "op": "ISZERO"
    },
    "2613": {
      "op": "PUSH2",
      "value": "0xA42"
    },
    "2616": {
      "op": "JUMPI"
    },
    "2617": {
      "op": "RETURNDATASIZE"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2620": {
      "op": "DUP1"
    },
    "2621": {
      "op": "RETURNDATACOPY"
    },
    "2622": {
      "op": "RETURNDATASIZE"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2625": {
      "op": "REVERT"
    },
    "2626": {
      "op": "JUMPDEST"
    },
    "2627": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "POP",
      "path": "18"
    },
    "2628": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "POP",
      "path": "18"
    },
    "2629": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "POP",
      "path": "18"
    },
    "2630": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "POP",
      "path": "18"
    },
    "2631": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2633": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2634": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2637": {
      "op": "DUP2"
    },
    "2638": {
      "op": "LT"
    },
    "2639": {
      "op": "ISZERO"
    },
    "2640": {
      "op": "PUSH2",
      "value": "0xA58"
    },
    "2643": {
      "op": "JUMPI"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2646": {
      "op": "DUP1"
    },
    "2647": {
      "op": "REVERT"
    },
    "2648": {
      "op": "JUMPDEST"
    },
    "2649": {
      "op": "POP"
    },
    "2650": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2651": {
      "fn": "StakingInterface.refund",
      "offset": [
        8696,
        8725
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 8,
      "value": "0x40"
    },
    "2653": {
      "fn": "StakingInterface.refund",
      "offset": [
        8696,
        8725
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2654": {
      "fn": "StakingInterface.refund",
      "offset": [
        8696,
        8725
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2655": {
      "fn": "StakingInterface.refund",
      "offset": [
        8696,
        8725
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2656": {
      "fn": "StakingInterface.refund",
      "offset": [
        8696,
        8725
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2657": {
      "fn": "StakingInterface.refund",
      "offset": [
        8696,
        8725
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2658": {
      "fn": "StakingInterface.refund",
      "offset": [
        8696,
        8725
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2659": {
      "fn": "StakingInterface.refund",
      "offset": [
        8696,
        8725
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2660": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2661": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2662": {
      "op": "POP"
    },
    "2663": {
      "fn": "StakingInterface.refund",
      "offset": [
        8703,
        8713
      ],
      "op": "CALLER",
      "path": "18"
    },
    "2664": {
      "fn": "StakingInterface.refund",
      "offset": [
        8703,
        8713
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2665": {
      "fn": "StakingInterface.refund",
      "offset": [
        8696,
        8725
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xBB28353E4598C3B9199101A66E0989549B659A59A54D2C27FBB183F1932C8E6D"
    },
    "2698": {
      "fn": "StakingInterface.refund",
      "offset": [
        8696,
        8725
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2699": {
      "fn": "StakingInterface.refund",
      "offset": [
        8696,
        8725
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2700": {
      "fn": "StakingInterface.refund",
      "offset": [
        8696,
        8725
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2701": {
      "fn": "StakingInterface.refund",
      "offset": [
        8696,
        8725
      ],
      "op": "SUB",
      "path": "18"
    },
    "2702": {
      "fn": "StakingInterface.refund",
      "offset": [
        8664,
        8681
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2704": {
      "fn": "StakingInterface.refund",
      "offset": [
        8696,
        8725
      ],
      "op": "ADD",
      "path": "18"
    },
    "2705": {
      "fn": "StakingInterface.refund",
      "offset": [
        8696,
        8725
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2706": {
      "fn": "StakingInterface.refund",
      "offset": [
        8696,
        8725
      ],
      "op": "LOG2",
      "path": "18"
    },
    "2707": {
      "offset": [
        1743,
        1744
      ],
      "op": "POP",
      "path": "18"
    },
    "2708": {
      "fn": "StakingInterface.refund",
      "jump": "o",
      "offset": [
        8580,
        8732
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2709": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2710": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2749": {
      "op": "SHL"
    },
    "2750": {
      "op": "SUB"
    },
    "2751": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "2752": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "2753": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "2754": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2755": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xACB"
    },
    "2758": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2761": {
      "op": "DUP1"
    },
    "2762": {
      "op": "REVERT"
    },
    "2763": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2764": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 9,
      "value": "0x40"
    },
    "2766": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2767": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2768": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2775": {
      "op": "SHL"
    },
    "2776": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2777": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2778": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4835,
        4839
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "2779": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2781": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2782": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "ADD",
      "path": "18"
    },
    "2783": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2784": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2785": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2786": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4845,
        4851
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2787": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4845,
        4851
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2794": {
      "op": "SHL"
    },
    "2795": {
      "op": "SUB"
    },
    "2796": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4816
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "2829": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4826
      ],
      "op": "AND",
      "path": "18"
    },
    "2830": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4826
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2831": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4826
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70A08231"
    },
    "2836": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4826
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2837": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "2839": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2840": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2841": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "ADD",
      "path": "18"
    },
    "2842": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2843": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2845": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2846": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2847": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2848": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2849": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2850": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2851": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "SUB",
      "path": "18"
    },
    "2852": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "ADD",
      "path": "18"
    },
    "2853": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2854": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4826
      ],
      "op": "DUP7",
      "path": "18"
    },
    "2855": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2856": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "2857": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2858": {
      "op": "DUP1"
    },
    "2859": {
      "op": "ISZERO"
    },
    "2860": {
      "op": "PUSH2",
      "value": "0xB34"
    },
    "2863": {
      "op": "JUMPI"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2866": {
      "op": "DUP1"
    },
    "2867": {
      "op": "REVERT"
    },
    "2868": {
      "op": "JUMPDEST"
    },
    "2869": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "POP",
      "path": "18"
    },
    "2870": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "GAS",
      "path": "18"
    },
    "2871": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "2872": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2873": {
      "op": "DUP1"
    },
    "2874": {
      "op": "ISZERO"
    },
    "2875": {
      "op": "PUSH2",
      "value": "0xB48"
    },
    "2878": {
      "op": "JUMPI"
    },
    "2879": {
      "op": "RETURNDATASIZE"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2882": {
      "op": "DUP1"
    },
    "2883": {
      "op": "RETURNDATACOPY"
    },
    "2884": {
      "op": "RETURNDATASIZE"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2887": {
      "op": "REVERT"
    },
    "2888": {
      "op": "JUMPDEST"
    },
    "2889": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "POP",
      "path": "18"
    },
    "2890": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "POP",
      "path": "18"
    },
    "2891": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "POP",
      "path": "18"
    },
    "2892": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "POP",
      "path": "18"
    },
    "2893": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2895": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2896": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2899": {
      "op": "DUP2"
    },
    "2900": {
      "op": "LT"
    },
    "2901": {
      "op": "ISZERO"
    },
    "2902": {
      "op": "PUSH2",
      "value": "0xB5E"
    },
    "2905": {
      "op": "JUMPI"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2908": {
      "op": "DUP1"
    },
    "2909": {
      "op": "REVERT"
    },
    "2910": {
      "op": "JUMPDEST"
    },
    "2911": {
      "op": "POP"
    },
    "2912": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4841
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2913": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4851
      ],
      "op": "LT",
      "path": "18"
    },
    "2914": {
      "branch": 33,
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4811,
        4851
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2915": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4803,
        4852
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB6B"
    },
    "2918": {
      "branch": 33,
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4803,
        4852
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2921": {
      "op": "DUP1"
    },
    "2922": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4803,
        4852
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2923": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4803,
        4852
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2924": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4867
      ],
      "op": "PUSH32",
      "path": "18",
      "statement": 10,
      "value": "0x0"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2963": {
      "op": "SHL"
    },
    "2964": {
      "op": "SUB"
    },
    "2965": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4875
      ],
      "op": "AND",
      "path": "18"
    },
    "2966": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4875
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95EA7B3"
    },
    "2971": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4884,
        4890
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "3004": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4893,
        4899
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3005": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3007": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3008": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3009": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "3014": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "AND",
      "path": "18"
    },
    "3015": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "3017": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "SHL",
      "path": "18"
    },
    "3018": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3019": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3020": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3022": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "ADD",
      "path": "18"
    },
    "3023": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3024": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3031": {
      "op": "SHL"
    },
    "3032": {
      "op": "SUB"
    },
    "3033": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "AND",
      "path": "18"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3040": {
      "op": "SHL"
    },
    "3041": {
      "op": "SUB"
    },
    "3042": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "AND",
      "path": "18"
    },
    "3043": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3044": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3045": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3047": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "ADD",
      "path": "18"
    },
    "3048": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3049": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3050": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3051": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3053": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "ADD",
      "path": "18"
    },
    "3054": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3055": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "POP",
      "path": "18"
    },
    "3056": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "POP",
      "path": "18"
    },
    "3057": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "POP",
      "path": "18"
    },
    "3058": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3060": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3062": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3063": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3064": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3065": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "SUB",
      "path": "18"
    },
    "3066": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3067": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3069": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3070": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3071": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "3072": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3073": {
      "op": "DUP1"
    },
    "3074": {
      "op": "ISZERO"
    },
    "3075": {
      "op": "PUSH2",
      "value": "0xC0B"
    },
    "3078": {
      "op": "JUMPI"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3081": {
      "op": "DUP1"
    },
    "3082": {
      "op": "REVERT"
    },
    "3083": {
      "op": "JUMPDEST"
    },
    "3084": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "POP",
      "path": "18"
    },
    "3085": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "GAS",
      "path": "18"
    },
    "3086": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "CALL",
      "path": "18"
    },
    "3087": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3088": {
      "op": "DUP1"
    },
    "3089": {
      "op": "ISZERO"
    },
    "3090": {
      "op": "PUSH2",
      "value": "0xC1F"
    },
    "3093": {
      "op": "JUMPI"
    },
    "3094": {
      "op": "RETURNDATASIZE"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3097": {
      "op": "DUP1"
    },
    "3098": {
      "op": "RETURNDATACOPY"
    },
    "3099": {
      "op": "RETURNDATASIZE"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3102": {
      "op": "REVERT"
    },
    "3103": {
      "op": "JUMPDEST"
    },
    "3104": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "POP",
      "path": "18"
    },
    "3105": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "POP",
      "path": "18"
    },
    "3106": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "POP",
      "path": "18"
    },
    "3107": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "POP",
      "path": "18"
    },
    "3108": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3110": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3111": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4862,
        4900
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3114": {
      "op": "DUP2"
    },
    "3115": {
      "op": "LT"
    },
    "3116": {
      "op": "ISZERO"
    },
    "3117": {
      "op": "PUSH2",
      "value": "0xC35"
    },
    "3120": {
      "op": "JUMPI"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3123": {
      "op": "DUP1"
    },
    "3124": {
      "op": "REVERT"
    },
    "3125": {
      "op": "JUMPDEST"
    },
    "3126": {
      "op": "POP"
    },
    "3127": {
      "op": "POP"
    },
    "3128": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 11,
      "value": "0x40"
    },
    "3130": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3131": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3132": {
      "op": "PUSH4",
      "value": "0x422B01D3"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3139": {
      "op": "SHL"
    },
    "3140": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3141": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3142": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3144": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3145": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "ADD",
      "path": "18"
    },
    "3146": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3147": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3148": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3149": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "3152": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3153": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "AND",
      "path": "18"
    },
    "3154": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "3156": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3157": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "ADD",
      "path": "18"
    },
    "3158": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3159": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3160": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3167": {
      "op": "SHL"
    },
    "3168": {
      "op": "SUB"
    },
    "3169": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4916
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "3202": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4924
      ],
      "op": "AND",
      "path": "18"
    },
    "3203": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4924
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3204": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4924
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x845603A6"
    },
    "3209": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4924
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3210": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "3212": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3213": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3214": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "ADD",
      "path": "18"
    },
    "3215": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3218": {
      "op": "SWAP3"
    },
    "3219": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3220": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3221": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3222": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3223": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "SUB",
      "path": "18"
    },
    "3224": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "ADD",
      "path": "18"
    },
    "3225": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3226": {
      "op": "DUP4"
    },
    "3227": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4924
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3228": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3229": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "3230": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3231": {
      "op": "DUP1"
    },
    "3232": {
      "op": "ISZERO"
    },
    "3233": {
      "op": "PUSH2",
      "value": "0xCA9"
    },
    "3236": {
      "op": "JUMPI"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3239": {
      "op": "DUP1"
    },
    "3240": {
      "op": "REVERT"
    },
    "3241": {
      "op": "JUMPDEST"
    },
    "3242": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "POP",
      "path": "18"
    },
    "3243": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "GAS",
      "path": "18"
    },
    "3244": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "CALL",
      "path": "18"
    },
    "3245": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4910,
        4942
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3246": {
      "op": "DUP1"
    },
    "3247": {
      "op": "ISZERO"
    },
    "3248": {
      "op": "PUSH2",
      "value": "0xCBD"
    },
    "3251": {
      "op": "JUMPI"
    },
    "3252": {
      "op": "RETURNDATASIZE"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3255": {
      "op": "DUP1"
    },
    "3256": {
      "op": "RETURNDATACOPY"
    },
    "3257": {
      "op": "RETURNDATASIZE"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3260": {
      "op": "REVERT"
    },
    "3261": {
      "op": "JUMPDEST"
    },
    "3262": {
      "op": "POP"
    },
    "3263": {
      "op": "POP"
    },
    "3264": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 12,
      "value": "0x40"
    },
    "3266": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3267": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3268": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3269": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3270": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3271": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "3274": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3275": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "AND",
      "path": "18"
    },
    "3276": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3278": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3279": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "ADD",
      "path": "18"
    },
    "3280": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3281": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3282": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3283": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4975,
        4985
      ],
      "op": "CALLER",
      "path": "18"
    },
    "3284": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4975,
        4985
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3285": {
      "op": "POP"
    },
    "3286": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x2D910F75638EDAF008109CDDD638334EE8D6A0020E6209243439C8A7A7D493E0"
    },
    "3319": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3320": {
      "op": "POP"
    },
    "3321": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3322": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3323": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3324": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "SUB",
      "path": "18"
    },
    "3325": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3326": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3327": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "ADD",
      "path": "18"
    },
    "3328": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3329": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4957,
        5004
      ],
      "op": "LOG2",
      "path": "18"
    },
    "3330": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "POP",
      "path": "18"
    },
    "3331": {
      "fn": "StakingInterface.depositAsStaker",
      "offset": [
        4711,
        5011
      ],
      "op": "POP",
      "path": "18"
    },
    "3332": {
      "fn": "StakingInterface.depositAsStaker",
      "jump": "o",
      "offset": [
        4711,
        5011
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3333": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3334": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3373": {
      "op": "SHL"
    },
    "3374": {
      "op": "SUB"
    },
    "3375": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "3376": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "3377": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "3378": {
      "fn": "StakingInterface.lock",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3379": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD3B"
    },
    "3382": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3385": {
      "op": "DUP1"
    },
    "3386": {
      "op": "REVERT"
    },
    "3387": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3388": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 13,
      "value": "0x40"
    },
    "3390": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3391": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3392": {
      "op": "PUSH4",
      "value": "0x437C36EF"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3399": {
      "op": "SHL"
    },
    "3400": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3401": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3402": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3404": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3405": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "ADD",
      "path": "18"
    },
    "3406": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3407": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3408": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3409": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "3412": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3413": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "AND",
      "path": "18"
    },
    "3414": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "3416": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3417": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "ADD",
      "path": "18"
    },
    "3418": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3419": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3420": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3427": {
      "op": "SHL"
    },
    "3428": {
      "op": "SUB"
    },
    "3429": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5644
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "3462": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5649
      ],
      "op": "AND",
      "path": "18"
    },
    "3463": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5649
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3464": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5649
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x86F86DDE"
    },
    "3469": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5649
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3470": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "3472": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3473": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3474": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "ADD",
      "path": "18"
    },
    "3475": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3478": {
      "op": "SWAP3"
    },
    "3479": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3480": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3481": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3482": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3483": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "SUB",
      "path": "18"
    },
    "3484": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "ADD",
      "path": "18"
    },
    "3485": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3486": {
      "op": "DUP4"
    },
    "3487": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5649
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3488": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3489": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "3490": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3491": {
      "op": "DUP1"
    },
    "3492": {
      "op": "ISZERO"
    },
    "3493": {
      "op": "PUSH2",
      "value": "0xDAD"
    },
    "3496": {
      "op": "JUMPI"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3499": {
      "op": "DUP1"
    },
    "3500": {
      "op": "REVERT"
    },
    "3501": {
      "op": "JUMPDEST"
    },
    "3502": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "POP",
      "path": "18"
    },
    "3503": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "GAS",
      "path": "18"
    },
    "3504": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "CALL",
      "path": "18"
    },
    "3505": {
      "fn": "StakingInterface.lock",
      "offset": [
        5638,
        5667
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3506": {
      "op": "DUP1"
    },
    "3507": {
      "op": "ISZERO"
    },
    "3508": {
      "op": "PUSH2",
      "value": "0xDC1"
    },
    "3511": {
      "op": "JUMPI"
    },
    "3512": {
      "op": "RETURNDATASIZE"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3515": {
      "op": "DUP1"
    },
    "3516": {
      "op": "RETURNDATACOPY"
    },
    "3517": {
      "op": "RETURNDATASIZE"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3520": {
      "op": "REVERT"
    },
    "3521": {
      "op": "JUMPDEST"
    },
    "3522": {
      "op": "POP"
    },
    "3523": {
      "op": "POP"
    },
    "3524": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 14,
      "value": "0x40"
    },
    "3526": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3527": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3528": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3529": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3530": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3531": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "3534": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3535": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "AND",
      "path": "18"
    },
    "3536": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3538": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3539": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "ADD",
      "path": "18"
    },
    "3540": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3541": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3542": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3543": {
      "fn": "StakingInterface.lock",
      "offset": [
        5689,
        5699
      ],
      "op": "CALLER",
      "path": "18"
    },
    "3544": {
      "fn": "StakingInterface.lock",
      "offset": [
        5689,
        5699
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3545": {
      "op": "POP"
    },
    "3546": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xB36863DCB8392EEA9C1856B7C12E6CDEDD4BE7AC64A067E71A2E62CB20D69CF2"
    },
    "3579": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3580": {
      "op": "POP"
    },
    "3581": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3582": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3583": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3584": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "SUB",
      "path": "18"
    },
    "3585": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3586": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3587": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "ADD",
      "path": "18"
    },
    "3588": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3589": {
      "fn": "StakingInterface.lock",
      "offset": [
        5682,
        5718
      ],
      "op": "LOG2",
      "path": "18"
    },
    "3590": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "POP",
      "path": "18"
    },
    "3591": {
      "fn": "StakingInterface.lock",
      "offset": [
        5557,
        5725
      ],
      "op": "POP",
      "path": "18"
    },
    "3592": {
      "fn": "StakingInterface.lock",
      "jump": "o",
      "offset": [
        5557,
        5725
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3593": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8070,
        8234
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3594": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3633": {
      "op": "SHL"
    },
    "3634": {
      "op": "SUB"
    },
    "3635": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "3636": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "3637": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "3638": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3639": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE3F"
    },
    "3642": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3645": {
      "op": "DUP1"
    },
    "3646": {
      "op": "REVERT"
    },
    "3647": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3648": {
      "offset": [
        1709,
        1717
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3687": {
      "op": "SHL"
    },
    "3688": {
      "op": "SUB"
    },
    "3689": {
      "offset": [
        1701,
        1732
      ],
      "op": "AND",
      "path": "18"
    },
    "3690": {
      "offset": [
        1693,
        1733
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE72"
    },
    "3693": {
      "offset": [
        1693,
        1733
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3696": {
      "op": "DUP1"
    },
    "3697": {
      "op": "REVERT"
    },
    "3698": {
      "offset": [
        1693,
        1733
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3699": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8156
      ],
      "op": "PUSH32",
      "path": "18",
      "statement": 15,
      "value": "0x0"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3738": {
      "op": "SHL"
    },
    "3739": {
      "op": "SUB"
    },
    "3740": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8177
      ],
      "op": "AND",
      "path": "18"
    },
    "3741": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8177
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x87A15DC9"
    },
    "3746": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3748": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3749": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3750": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "3755": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "AND",
      "path": "18"
    },
    "3756": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "3758": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "SHL",
      "path": "18"
    },
    "3759": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3760": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3761": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3763": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "ADD",
      "path": "18"
    },
    "3764": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3766": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3768": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3769": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3770": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3771": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "SUB",
      "path": "18"
    },
    "3772": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3773": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3775": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3776": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3777": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "3778": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3779": {
      "op": "DUP1"
    },
    "3780": {
      "op": "ISZERO"
    },
    "3781": {
      "op": "PUSH2",
      "value": "0xECD"
    },
    "3784": {
      "op": "JUMPI"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3787": {
      "op": "DUP1"
    },
    "3788": {
      "op": "REVERT"
    },
    "3789": {
      "op": "JUMPDEST"
    },
    "3790": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "POP",
      "path": "18"
    },
    "3791": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "GAS",
      "path": "18"
    },
    "3792": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "CALL",
      "path": "18"
    },
    "3793": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8148,
        8179
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3794": {
      "op": "DUP1"
    },
    "3795": {
      "op": "ISZERO"
    },
    "3796": {
      "op": "PUSH2",
      "value": "0xEE1"
    },
    "3799": {
      "op": "JUMPI"
    },
    "3800": {
      "op": "RETURNDATASIZE"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3803": {
      "op": "DUP1"
    },
    "3804": {
      "op": "RETURNDATACOPY"
    },
    "3805": {
      "op": "RETURNDATASIZE"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3808": {
      "op": "REVERT"
    },
    "3809": {
      "op": "JUMPDEST"
    },
    "3810": {
      "op": "POP"
    },
    "3811": {
      "op": "POP"
    },
    "3812": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8194,
        8227
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 16,
      "value": "0x40"
    },
    "3814": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8194,
        8227
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3815": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8216,
        8226
      ],
      "op": "CALLER",
      "path": "18"
    },
    "3816": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8216,
        8226
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3817": {
      "op": "POP"
    },
    "3818": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8194,
        8227
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x1F3C545731EADF66E84BFA3F22265530AC6CDE1C211E7A25DA70139A06BC39A6"
    },
    "3851": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8194,
        8227
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3852": {
      "op": "POP"
    },
    "3853": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8194,
        8227
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3855": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8194,
        8227
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3856": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        8194,
        8227
      ],
      "op": "LOG2",
      "path": "18"
    },
    "3857": {
      "fn": "StakingInterface.withdrawCompensation",
      "jump": "o",
      "offset": [
        8070,
        8234
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3858": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6750,
        6928
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3859": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3898": {
      "op": "SHL"
    },
    "3899": {
      "op": "SUB"
    },
    "3900": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "3901": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "3902": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "3903": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3904": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF48"
    },
    "3907": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3910": {
      "op": "DUP1"
    },
    "3911": {
      "op": "REVERT"
    },
    "3912": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3913": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6841
      ],
      "op": "PUSH32",
      "path": "18",
      "statement": 17,
      "value": "0x0"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3952": {
      "op": "SHL"
    },
    "3953": {
      "op": "SUB"
    },
    "3954": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6855
      ],
      "op": "AND",
      "path": "18"
    },
    "3955": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6855
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8C316B90"
    },
    "3960": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6856,
        6867
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3961": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3963": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3964": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3965": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "3970": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "AND",
      "path": "18"
    },
    "3971": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "3973": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "SHL",
      "path": "18"
    },
    "3974": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3975": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3976": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3978": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "ADD",
      "path": "18"
    },
    "3979": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3980": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3981": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3982": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3983": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3985": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "ADD",
      "path": "18"
    },
    "3986": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3987": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "POP",
      "path": "18"
    },
    "3988": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "POP",
      "path": "18"
    },
    "3989": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3991": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3993": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3994": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3995": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3996": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "SUB",
      "path": "18"
    },
    "3997": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3998": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4000": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "DUP8",
      "path": "18"
    },
    "4001": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4002": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "4003": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4004": {
      "op": "DUP1"
    },
    "4005": {
      "op": "ISZERO"
    },
    "4006": {
      "op": "PUSH2",
      "value": "0xFAE"
    },
    "4009": {
      "op": "JUMPI"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4012": {
      "op": "DUP1"
    },
    "4013": {
      "op": "REVERT"
    },
    "4014": {
      "op": "JUMPDEST"
    },
    "4015": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "POP",
      "path": "18"
    },
    "4016": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "GAS",
      "path": "18"
    },
    "4017": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "CALL",
      "path": "18"
    },
    "4018": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6828,
        6868
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4019": {
      "op": "DUP1"
    },
    "4020": {
      "op": "ISZERO"
    },
    "4021": {
      "op": "PUSH2",
      "value": "0xFC2"
    },
    "4024": {
      "op": "JUMPI"
    },
    "4025": {
      "op": "RETURNDATASIZE"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4028": {
      "op": "DUP1"
    },
    "4029": {
      "op": "RETURNDATACOPY"
    },
    "4030": {
      "op": "RETURNDATASIZE"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4033": {
      "op": "REVERT"
    },
    "4034": {
      "op": "JUMPDEST"
    },
    "4035": {
      "op": "POP"
    },
    "4036": {
      "op": "POP"
    },
    "4037": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 18,
      "value": "0x40"
    },
    "4039": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4040": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4041": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4042": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4043": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4044": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4045": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4046": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6897,
        6907
      ],
      "op": "CALLER",
      "path": "18"
    },
    "4047": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6897,
        6907
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4048": {
      "op": "POP"
    },
    "4049": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x6B9024CC1BF5710F290BE788DCA9886DB7A3D9BE0DF0855BFA991DBF26A256BC"
    },
    "4082": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4083": {
      "op": "POP"
    },
    "4084": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4085": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4086": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4087": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "SUB",
      "path": "18"
    },
    "4088": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4090": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "ADD",
      "path": "18"
    },
    "4091": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4092": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6883,
        6921
      ],
      "op": "LOG2",
      "path": "18"
    },
    "4093": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        6750,
        6928
      ],
      "op": "POP",
      "path": "18"
    },
    "4094": {
      "fn": "StakingInterface.setMinFeeRate",
      "jump": "o",
      "offset": [
        6750,
        6928
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4095": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7862,
        7994
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4096": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4135": {
      "op": "SHL"
    },
    "4136": {
      "op": "SUB"
    },
    "4137": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "4138": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "4139": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "4140": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4141": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1035"
    },
    "4144": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4147": {
      "op": "DUP1"
    },
    "4148": {
      "op": "REVERT"
    },
    "4149": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4150": {
      "offset": [
        1709,
        1717
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "4183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4189": {
      "op": "SHL"
    },
    "4190": {
      "op": "SUB"
    },
    "4191": {
      "offset": [
        1701,
        1732
      ],
      "op": "AND",
      "path": "18"
    },
    "4192": {
      "offset": [
        1693,
        1733
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1068"
    },
    "4195": {
      "offset": [
        1693,
        1733
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4198": {
      "op": "DUP1"
    },
    "4199": {
      "op": "REVERT"
    },
    "4200": {
      "offset": [
        1693,
        1733
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4201": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7937
      ],
      "op": "PUSH32",
      "path": "18",
      "statement": 19,
      "value": "0x0"
    },
    "4234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4240": {
      "op": "SHL"
    },
    "4241": {
      "op": "SUB"
    },
    "4242": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7947
      ],
      "op": "AND",
      "path": "18"
    },
    "4243": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7947
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x9435C887"
    },
    "4248": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4250": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4251": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4252": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "4257": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "AND",
      "path": "18"
    },
    "4258": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "4260": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "SHL",
      "path": "18"
    },
    "4261": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4262": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4263": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4265": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "ADD",
      "path": "18"
    },
    "4266": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4268": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4270": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4271": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4272": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4273": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "SUB",
      "path": "18"
    },
    "4274": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4275": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4277": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "DUP8",
      "path": "18"
    },
    "4278": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4279": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "4280": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4281": {
      "op": "DUP1"
    },
    "4282": {
      "op": "ISZERO"
    },
    "4283": {
      "op": "PUSH2",
      "value": "0x10C3"
    },
    "4286": {
      "op": "JUMPI"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4289": {
      "op": "DUP1"
    },
    "4290": {
      "op": "REVERT"
    },
    "4291": {
      "op": "JUMPDEST"
    },
    "4292": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "POP",
      "path": "18"
    },
    "4293": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "GAS",
      "path": "18"
    },
    "4294": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "CALL",
      "path": "18"
    },
    "4295": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7929,
        7949
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4296": {
      "op": "DUP1"
    },
    "4297": {
      "op": "ISZERO"
    },
    "4298": {
      "op": "PUSH2",
      "value": "0x10D7"
    },
    "4301": {
      "op": "JUMPI"
    },
    "4302": {
      "op": "RETURNDATASIZE"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4305": {
      "op": "DUP1"
    },
    "4306": {
      "op": "RETURNDATACOPY"
    },
    "4307": {
      "op": "RETURNDATASIZE"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4310": {
      "op": "REVERT"
    },
    "4311": {
      "op": "JUMPDEST"
    },
    "4312": {
      "op": "POP"
    },
    "4313": {
      "op": "POP"
    },
    "4314": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7964,
        7987
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 20,
      "value": "0x40"
    },
    "4316": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7964,
        7987
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4317": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7976,
        7986
      ],
      "op": "CALLER",
      "path": "18"
    },
    "4318": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7976,
        7986
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4319": {
      "op": "POP"
    },
    "4320": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7964,
        7987
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x7791542F9106A010F289AA1D108168B87D4E2D3D37ED4ECB762391DA5E18A45D"
    },
    "4353": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7964,
        7987
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4354": {
      "op": "POP"
    },
    "4355": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7964,
        7987
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4357": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7964,
        7987
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4358": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        7964,
        7987
      ],
      "op": "LOG2",
      "path": "18"
    },
    "4359": {
      "fn": "StakingInterface.cancelBid",
      "jump": "o",
      "offset": [
        7862,
        7994
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4360": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5178,
        5336
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4361": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4400": {
      "op": "SHL"
    },
    "4401": {
      "op": "SUB"
    },
    "4402": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "4403": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "4404": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "4405": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4406": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x113E"
    },
    "4409": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4412": {
      "op": "DUP1"
    },
    "4413": {
      "op": "REVERT"
    },
    "4414": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4415": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5260
      ],
      "op": "PUSH32",
      "path": "18",
      "statement": 21,
      "value": "0x0"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4454": {
      "op": "SHL"
    },
    "4455": {
      "op": "SUB"
    },
    "4456": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5269
      ],
      "op": "AND",
      "path": "18"
    },
    "4457": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5269
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2E1A7D4D"
    },
    "4462": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5270,
        5276
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4463": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4465": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4466": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4467": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "4472": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "AND",
      "path": "18"
    },
    "4473": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "4475": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "SHL",
      "path": "18"
    },
    "4476": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4477": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4478": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4480": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "ADD",
      "path": "18"
    },
    "4481": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4482": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4483": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4484": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4485": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4487": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "ADD",
      "path": "18"
    },
    "4488": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4489": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "POP",
      "path": "18"
    },
    "4490": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "POP",
      "path": "18"
    },
    "4491": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4493": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4495": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4496": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4497": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4498": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "SUB",
      "path": "18"
    },
    "4499": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4500": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4502": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "DUP8",
      "path": "18"
    },
    "4503": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4504": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "4505": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4506": {
      "op": "DUP1"
    },
    "4507": {
      "op": "ISZERO"
    },
    "4508": {
      "op": "PUSH2",
      "value": "0x11A4"
    },
    "4511": {
      "op": "JUMPI"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4514": {
      "op": "DUP1"
    },
    "4515": {
      "op": "REVERT"
    },
    "4516": {
      "op": "JUMPDEST"
    },
    "4517": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "POP",
      "path": "18"
    },
    "4518": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "GAS",
      "path": "18"
    },
    "4519": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "CALL",
      "path": "18"
    },
    "4520": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5254,
        5277
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4521": {
      "op": "DUP1"
    },
    "4522": {
      "op": "ISZERO"
    },
    "4523": {
      "op": "PUSH2",
      "value": "0x11B8"
    },
    "4526": {
      "op": "JUMPI"
    },
    "4527": {
      "op": "RETURNDATASIZE"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4530": {
      "op": "DUP1"
    },
    "4531": {
      "op": "RETURNDATACOPY"
    },
    "4532": {
      "op": "RETURNDATASIZE"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4535": {
      "op": "REVERT"
    },
    "4536": {
      "op": "JUMPDEST"
    },
    "4537": {
      "op": "POP"
    },
    "4538": {
      "op": "POP"
    },
    "4539": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 22,
      "value": "0x40"
    },
    "4541": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4542": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4543": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4544": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4545": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4546": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4547": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4548": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5310,
        5320
      ],
      "op": "CALLER",
      "path": "18"
    },
    "4549": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5310,
        5320
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4550": {
      "op": "POP"
    },
    "4551": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xE260C3EA1A7DA044FDB8E612A54B70847532F00018C3F751BECCD55032F62064"
    },
    "4584": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4585": {
      "op": "POP"
    },
    "4586": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4587": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4588": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4589": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "SUB",
      "path": "18"
    },
    "4590": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4592": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "ADD",
      "path": "18"
    },
    "4593": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4594": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5292,
        5329
      ],
      "op": "LOG2",
      "path": "18"
    },
    "4595": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        5178,
        5336
      ],
      "op": "POP",
      "path": "18"
    },
    "4596": {
      "fn": "StakingInterface.withdrawAsStaker",
      "jump": "o",
      "offset": [
        5178,
        5336
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4597": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7408,
        7564
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4598": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4637": {
      "op": "SHL"
    },
    "4638": {
      "op": "SUB"
    },
    "4639": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "4640": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "4641": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "4642": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4643": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x122B"
    },
    "4646": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4649": {
      "op": "DUP1"
    },
    "4650": {
      "op": "REVERT"
    },
    "4651": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4652": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 23,
      "value": "0x40"
    },
    "4654": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4655": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4656": {
      "op": "PUSH4",
      "value": "0x9D6F2A09"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4663": {
      "op": "SHL"
    },
    "4664": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4665": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4666": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4667": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4668": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4669": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4671": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4672": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "ADD",
      "path": "18"
    },
    "4673": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4674": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4675": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4682": {
      "op": "SHL"
    },
    "4683": {
      "op": "SUB"
    },
    "4684": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7485
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "4717": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7497
      ],
      "op": "AND",
      "path": "18"
    },
    "4718": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7497
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4719": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7497
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x9D6F2A09"
    },
    "4724": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7497
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4725": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "4727": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4728": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4729": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "ADD",
      "path": "18"
    },
    "4730": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4733": {
      "op": "SWAP3"
    },
    "4734": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4735": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4736": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4737": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4738": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "SUB",
      "path": "18"
    },
    "4739": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "ADD",
      "path": "18"
    },
    "4740": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4741": {
      "op": "DUP4"
    },
    "4742": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7497
      ],
      "op": "DUP8",
      "path": "18"
    },
    "4743": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4744": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "4745": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4746": {
      "op": "DUP1"
    },
    "4747": {
      "op": "ISZERO"
    },
    "4748": {
      "op": "PUSH2",
      "value": "0x1294"
    },
    "4751": {
      "op": "JUMPI"
    },
    "4752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4754": {
      "op": "DUP1"
    },
    "4755": {
      "op": "REVERT"
    },
    "4756": {
      "op": "JUMPDEST"
    },
    "4757": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "POP",
      "path": "18"
    },
    "4758": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "GAS",
      "path": "18"
    },
    "4759": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "CALL",
      "path": "18"
    },
    "4760": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7479,
        7508
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4761": {
      "op": "DUP1"
    },
    "4762": {
      "op": "ISZERO"
    },
    "4763": {
      "op": "PUSH2",
      "value": "0x12A8"
    },
    "4766": {
      "op": "JUMPI"
    },
    "4767": {
      "op": "RETURNDATASIZE"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4770": {
      "op": "DUP1"
    },
    "4771": {
      "op": "RETURNDATACOPY"
    },
    "4772": {
      "op": "RETURNDATASIZE"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4775": {
      "op": "REVERT"
    },
    "4776": {
      "op": "JUMPDEST"
    },
    "4777": {
      "op": "POP"
    },
    "4778": {
      "op": "POP"
    },
    "4779": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 24,
      "value": "0x40"
    },
    "4781": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4782": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4783": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4784": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4785": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4786": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4787": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4788": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4789": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4790": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7535,
        7545
      ],
      "op": "CALLER",
      "path": "18"
    },
    "4791": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7535,
        7545
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4792": {
      "op": "POP"
    },
    "4793": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x8E551784567EC4BBCE5943250EAACD5AFE82AEF7A9B1DAB3F899881F4EAE93F0"
    },
    "4826": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4827": {
      "op": "POP"
    },
    "4828": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4829": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4830": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4831": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "SUB",
      "path": "18"
    },
    "4832": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4834": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "ADD",
      "path": "18"
    },
    "4835": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4836": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7523,
        7557
      ],
      "op": "LOG2",
      "path": "18"
    },
    "4837": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        7408,
        7564
      ],
      "op": "POP",
      "path": "18"
    },
    "4838": {
      "fn": "StakingInterface.setWindDown",
      "jump": "o",
      "offset": [
        7408,
        7564
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4839": {
      "offset": [
        312,
        360
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4840": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        312,
        360
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "4873": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        312,
        360
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4874": {
      "fn": "StakingInterface.setWindDown",
      "jump": "o",
      "offset": [
        312,
        360
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4875": {
      "offset": [
        451,
        495
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4876": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        451,
        495
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "4909": {
      "fn": "StakingInterface.setWindDown",
      "offset": [
        451,
        495
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4910": {
      "fn": "StakingInterface.setWindDown",
      "jump": "o",
      "offset": [
        451,
        495
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4911": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4912": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4951": {
      "op": "SHL"
    },
    "4952": {
      "op": "SUB"
    },
    "4953": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "4954": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "4955": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "4956": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4957": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1365"
    },
    "4960": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4963": {
      "op": "DUP1"
    },
    "4964": {
      "op": "REVERT"
    },
    "4965": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4966": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 25,
      "value": "0x40"
    },
    "4968": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4969": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4970": {
      "op": "PUSH4",
      "value": "0xB89F66ED"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4977": {
      "op": "SHL"
    },
    "4978": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4979": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4980": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4982": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4983": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "ADD",
      "path": "18"
    },
    "4984": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4985": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4986": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4987": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "4990": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4991": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "AND",
      "path": "18"
    },
    "4992": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "4994": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4995": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "ADD",
      "path": "18"
    },
    "4996": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4997": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4998": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5005": {
      "op": "SHL"
    },
    "5006": {
      "op": "SUB"
    },
    "5007": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7191
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "5040": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7204
      ],
      "op": "AND",
      "path": "18"
    },
    "5041": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7204
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5042": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7204
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB89F66ED"
    },
    "5047": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7204
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5048": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "5050": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5051": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5052": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "ADD",
      "path": "18"
    },
    "5053": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5056": {
      "op": "SWAP3"
    },
    "5057": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5058": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5059": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5060": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5061": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "SUB",
      "path": "18"
    },
    "5062": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "ADD",
      "path": "18"
    },
    "5063": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5064": {
      "op": "DUP4"
    },
    "5065": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7204
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5066": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5067": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "5068": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5069": {
      "op": "DUP1"
    },
    "5070": {
      "op": "ISZERO"
    },
    "5071": {
      "op": "PUSH2",
      "value": "0x13D7"
    },
    "5074": {
      "op": "JUMPI"
    },
    "5075": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5077": {
      "op": "DUP1"
    },
    "5078": {
      "op": "REVERT"
    },
    "5079": {
      "op": "JUMPDEST"
    },
    "5080": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "POP",
      "path": "18"
    },
    "5081": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "GAS",
      "path": "18"
    },
    "5082": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "CALL",
      "path": "18"
    },
    "5083": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7185,
        7222
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5084": {
      "op": "DUP1"
    },
    "5085": {
      "op": "ISZERO"
    },
    "5086": {
      "op": "PUSH2",
      "value": "0x13EB"
    },
    "5089": {
      "op": "JUMPI"
    },
    "5090": {
      "op": "RETURNDATASIZE"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5093": {
      "op": "DUP1"
    },
    "5094": {
      "op": "RETURNDATACOPY"
    },
    "5095": {
      "op": "RETURNDATASIZE"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5098": {
      "op": "REVERT"
    },
    "5099": {
      "op": "JUMPDEST"
    },
    "5100": {
      "op": "POP"
    },
    "5101": {
      "op": "POP"
    },
    "5102": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 26,
      "value": "0x40"
    },
    "5104": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5105": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5106": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5107": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5108": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5109": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "5112": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5113": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "AND",
      "path": "18"
    },
    "5114": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5116": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5117": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "ADD",
      "path": "18"
    },
    "5118": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5119": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5120": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5121": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7247,
        7257
      ],
      "op": "CALLER",
      "path": "18"
    },
    "5122": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7247,
        7257
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "5123": {
      "op": "POP"
    },
    "5124": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x62EBCCA315263EF68E5CB3F45DF2EA126CBC4CF1ED95C878AEF0505930E9A108"
    },
    "5157": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5158": {
      "op": "POP"
    },
    "5159": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5160": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5161": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5162": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "SUB",
      "path": "18"
    },
    "5163": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5164": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5165": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "ADD",
      "path": "18"
    },
    "5166": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5167": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7237,
        7276
      ],
      "op": "LOG2",
      "path": "18"
    },
    "5168": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "POP",
      "path": "18"
    },
    "5169": {
      "fn": "StakingInterface.prolongStake",
      "offset": [
        7096,
        7283
      ],
      "op": "POP",
      "path": "18"
    },
    "5170": {
      "fn": "StakingInterface.prolongStake",
      "jump": "o",
      "offset": [
        7096,
        7283
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5171": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5172": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "5205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5211": {
      "op": "SHL"
    },
    "5212": {
      "op": "SUB"
    },
    "5213": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "5214": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "5215": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "5216": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5217": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1469"
    },
    "5220": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5223": {
      "op": "DUP1"
    },
    "5224": {
      "op": "REVERT"
    },
    "5225": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5226": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 27,
      "value": "0x40"
    },
    "5228": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5229": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5230": {
      "op": "PUSH4",
      "value": "0x3448ADE5"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5237": {
      "op": "SHL"
    },
    "5238": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5239": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5240": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5242": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5243": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "ADD",
      "path": "18"
    },
    "5244": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5245": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5246": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5247": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "5249": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5250": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "ADD",
      "path": "18"
    },
    "5251": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5252": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5253": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5254": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "5257": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5258": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "AND",
      "path": "18"
    },
    "5259": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "5261": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5262": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "ADD",
      "path": "18"
    },
    "5263": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5264": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5265": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5272": {
      "op": "SHL"
    },
    "5273": {
      "op": "SUB"
    },
    "5274": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6077
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "5307": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6089
      ],
      "op": "AND",
      "path": "18"
    },
    "5308": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6089
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5309": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6089
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xD122B794"
    },
    "5314": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6089
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5315": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "5317": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5318": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5319": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "ADD",
      "path": "18"
    },
    "5320": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5323": {
      "op": "SWAP3"
    },
    "5324": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5325": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5326": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5327": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5328": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "SUB",
      "path": "18"
    },
    "5329": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "ADD",
      "path": "18"
    },
    "5330": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5331": {
      "op": "DUP4"
    },
    "5332": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6089
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5333": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5334": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "5335": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5336": {
      "op": "DUP1"
    },
    "5337": {
      "op": "ISZERO"
    },
    "5338": {
      "op": "PUSH2",
      "value": "0x14E2"
    },
    "5341": {
      "op": "JUMPI"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5344": {
      "op": "DUP1"
    },
    "5345": {
      "op": "REVERT"
    },
    "5346": {
      "op": "JUMPDEST"
    },
    "5347": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "POP",
      "path": "18"
    },
    "5348": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "GAS",
      "path": "18"
    },
    "5349": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "CALL",
      "path": "18"
    },
    "5350": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6071,
        6118
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5351": {
      "op": "DUP1"
    },
    "5352": {
      "op": "ISZERO"
    },
    "5353": {
      "op": "PUSH2",
      "value": "0x14F6"
    },
    "5356": {
      "op": "JUMPI"
    },
    "5357": {
      "op": "RETURNDATASIZE"
    },
    "5358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5360": {
      "op": "DUP1"
    },
    "5361": {
      "op": "RETURNDATACOPY"
    },
    "5362": {
      "op": "RETURNDATASIZE"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5365": {
      "op": "REVERT"
    },
    "5366": {
      "op": "JUMPDEST"
    },
    "5367": {
      "op": "POP"
    },
    "5368": {
      "op": "POP"
    },
    "5369": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 28,
      "value": "0x40"
    },
    "5371": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5372": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5373": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "DUP7",
      "path": "18"
    },
    "5374": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5375": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5376": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5378": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5379": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "ADD",
      "path": "18"
    },
    "5380": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "DUP7",
      "path": "18"
    },
    "5381": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5382": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5383": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "5386": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5387": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "AND",
      "path": "18"
    },
    "5388": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5389": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5390": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "ADD",
      "path": "18"
    },
    "5391": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5392": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5393": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5394": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6141,
        6151
      ],
      "op": "CALLER",
      "path": "18"
    },
    "5395": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6141,
        6151
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5396": {
      "op": "POP"
    },
    "5397": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x16F152833A208A80F3B8D50EF0E41C0631C4361EF7D1C4C2404E2672B626342F"
    },
    "5430": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5431": {
      "op": "POP"
    },
    "5432": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5433": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5434": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5435": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "SUB",
      "path": "18"
    },
    "5436": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "5438": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "ADD",
      "path": "18"
    },
    "5439": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5440": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        6133,
        6181
      ],
      "op": "LOG2",
      "path": "18"
    },
    "5441": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "POP",
      "path": "18"
    },
    "5442": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "POP",
      "path": "18"
    },
    "5443": {
      "fn": "StakingInterface.divideStake",
      "offset": [
        5922,
        6188
      ],
      "op": "POP",
      "path": "18"
    },
    "5444": {
      "fn": "StakingInterface.divideStake",
      "jump": "o",
      "offset": [
        5922,
        6188
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5445": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3724,
        3876
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5446": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5485": {
      "op": "SHL"
    },
    "5486": {
      "op": "SUB"
    },
    "5487": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "5488": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "5489": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "5490": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5491": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x157B"
    },
    "5494": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5497": {
      "op": "DUP1"
    },
    "5498": {
      "op": "REVERT"
    },
    "5499": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5500": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3801
      ],
      "op": "PUSH32",
      "path": "18",
      "statement": 29,
      "value": "0x0"
    },
    "5533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5539": {
      "op": "SHL"
    },
    "5540": {
      "op": "SUB"
    },
    "5541": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3812
      ],
      "op": "AND",
      "path": "18"
    },
    "5542": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3812
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDAD60676"
    },
    "5547": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3813,
        3820
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5548": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5550": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5551": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5552": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "5557": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "AND",
      "path": "18"
    },
    "5558": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "5560": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "SHL",
      "path": "18"
    },
    "5561": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5562": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5563": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5565": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "ADD",
      "path": "18"
    },
    "5566": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5567": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5574": {
      "op": "SHL"
    },
    "5575": {
      "op": "SUB"
    },
    "5576": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "AND",
      "path": "18"
    },
    "5577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5583": {
      "op": "SHL"
    },
    "5584": {
      "op": "SUB"
    },
    "5585": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "AND",
      "path": "18"
    },
    "5586": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5587": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5588": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5590": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "ADD",
      "path": "18"
    },
    "5591": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5592": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "POP",
      "path": "18"
    },
    "5593": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "POP",
      "path": "18"
    },
    "5594": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5596": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5598": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5599": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5600": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5601": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "SUB",
      "path": "18"
    },
    "5602": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5603": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5605": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5606": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5607": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "5608": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5609": {
      "op": "DUP1"
    },
    "5610": {
      "op": "ISZERO"
    },
    "5611": {
      "op": "PUSH2",
      "value": "0x15F3"
    },
    "5614": {
      "op": "JUMPI"
    },
    "5615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5617": {
      "op": "DUP1"
    },
    "5618": {
      "op": "REVERT"
    },
    "5619": {
      "op": "JUMPDEST"
    },
    "5620": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "POP",
      "path": "18"
    },
    "5621": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "GAS",
      "path": "18"
    },
    "5622": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "CALL",
      "path": "18"
    },
    "5623": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3795,
        3821
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5624": {
      "op": "DUP1"
    },
    "5625": {
      "op": "ISZERO"
    },
    "5626": {
      "op": "PUSH2",
      "value": "0x1607"
    },
    "5629": {
      "op": "JUMPI"
    },
    "5630": {
      "op": "RETURNDATASIZE"
    },
    "5631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5633": {
      "op": "DUP1"
    },
    "5634": {
      "op": "RETURNDATACOPY"
    },
    "5635": {
      "op": "RETURNDATASIZE"
    },
    "5636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5638": {
      "op": "REVERT"
    },
    "5639": {
      "op": "JUMPDEST"
    },
    "5640": {
      "op": "POP"
    },
    "5641": {
      "op": "POP"
    },
    "5642": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 30,
      "value": "0x40"
    },
    "5644": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5645": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5652": {
      "op": "SHL"
    },
    "5653": {
      "op": "SUB"
    },
    "5654": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5655": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "AND",
      "path": "18"
    },
    "5656": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5657": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5658": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5659": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5660": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3849,
        3859
      ],
      "op": "CALLER",
      "path": "18"
    },
    "5661": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3849,
        3859
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5662": {
      "op": "POP"
    },
    "5663": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x722575EBFFE226471B2F7E52A5DCCD7AFEB6D3403005CF1E42EC2FC473DD6137"
    },
    "5696": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5697": {
      "op": "POP"
    },
    "5698": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5699": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5700": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5701": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "SUB",
      "path": "18"
    },
    "5702": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5704": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "ADD",
      "path": "18"
    },
    "5705": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5706": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3836,
        3869
      ],
      "op": "LOG2",
      "path": "18"
    },
    "5707": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        3724,
        3876
      ],
      "op": "POP",
      "path": "18"
    },
    "5708": {
      "fn": "StakingInterface.bondWorker",
      "jump": "o",
      "offset": [
        3724,
        3876
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5709": {
      "offset": [
        408,
        445
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5710": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        408,
        445
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "5743": {
      "fn": "StakingInterface.bondWorker",
      "offset": [
        408,
        445
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5744": {
      "fn": "StakingInterface.bondWorker",
      "jump": "o",
      "offset": [
        408,
        445
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5745": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4315,
        4517
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5746": {
      "offset": [
        1519,
        1542
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "5779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5785": {
      "op": "SHL"
    },
    "5786": {
      "op": "SUB"
    },
    "5787": {
      "offset": [
        1519,
        1559
      ],
      "op": "AND",
      "path": "18"
    },
    "5788": {
      "offset": [
        1554,
        1558
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "5789": {
      "offset": [
        1519,
        1559
      ],
      "op": "EQ",
      "path": "18"
    },
    "5790": {
      "branch": 34,
      "fn": "StakingInterface.lockReStake",
      "offset": [
        1519,
        1559
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5791": {
      "offset": [
        1511,
        1560
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16A7"
    },
    "5794": {
      "branch": 34,
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5797": {
      "op": "DUP1"
    },
    "5798": {
      "op": "REVERT"
    },
    "5799": {
      "offset": [
        1511,
        1560
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5800": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 31,
      "value": "0x40"
    },
    "5802": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5803": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5804": {
      "op": "PUSH4",
      "value": "0xEE53C8FD"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5811": {
      "op": "SHL"
    },
    "5812": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5813": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5814": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "5817": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5818": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "AND",
      "path": "18"
    },
    "5819": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5821": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5822": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "ADD",
      "path": "18"
    },
    "5823": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5824": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5825": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5832": {
      "op": "SHL"
    },
    "5833": {
      "op": "SUB"
    },
    "5834": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4408
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "5867": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4420
      ],
      "op": "AND",
      "path": "18"
    },
    "5868": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4420
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5869": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4420
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xEE53C8FD"
    },
    "5874": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4420
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5875": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "5877": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5878": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5879": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "ADD",
      "path": "18"
    },
    "5880": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5883": {
      "op": "SWAP3"
    },
    "5884": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5885": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5886": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5887": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5888": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "SUB",
      "path": "18"
    },
    "5889": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "ADD",
      "path": "18"
    },
    "5890": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5891": {
      "op": "DUP4"
    },
    "5892": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4420
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5893": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5894": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "5895": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5896": {
      "op": "DUP1"
    },
    "5897": {
      "op": "ISZERO"
    },
    "5898": {
      "op": "PUSH2",
      "value": "0x1712"
    },
    "5901": {
      "op": "JUMPI"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5904": {
      "op": "DUP1"
    },
    "5905": {
      "op": "REVERT"
    },
    "5906": {
      "op": "JUMPDEST"
    },
    "5907": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "POP",
      "path": "18"
    },
    "5908": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "GAS",
      "path": "18"
    },
    "5909": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "CALL",
      "path": "18"
    },
    "5910": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4402,
        4445
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5911": {
      "op": "DUP1"
    },
    "5912": {
      "op": "ISZERO"
    },
    "5913": {
      "op": "PUSH2",
      "value": "0x1726"
    },
    "5916": {
      "op": "JUMPI"
    },
    "5917": {
      "op": "RETURNDATASIZE"
    },
    "5918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5920": {
      "op": "DUP1"
    },
    "5921": {
      "op": "RETURNDATACOPY"
    },
    "5922": {
      "op": "RETURNDATASIZE"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5925": {
      "op": "REVERT"
    },
    "5926": {
      "op": "JUMPDEST"
    },
    "5927": {
      "op": "POP"
    },
    "5928": {
      "op": "POP"
    },
    "5929": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 32,
      "value": "0x40"
    },
    "5931": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5932": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5933": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "5936": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5937": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "AND",
      "path": "18"
    },
    "5938": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5939": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5940": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5941": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5942": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4474,
        4484
      ],
      "op": "CALLER",
      "path": "18"
    },
    "5943": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4474,
        4484
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5944": {
      "op": "POP"
    },
    "5945": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x290A5B657C05AEC4C02FB52B21644F6470BB4C6D37831F2295C247452A207489"
    },
    "5978": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5979": {
      "op": "POP"
    },
    "5980": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5981": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5982": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5983": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "SUB",
      "path": "18"
    },
    "5984": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5986": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "ADD",
      "path": "18"
    },
    "5987": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5988": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4460,
        4510
      ],
      "op": "LOG2",
      "path": "18"
    },
    "5989": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        4315,
        4517
      ],
      "op": "POP",
      "path": "18"
    },
    "5990": {
      "fn": "StakingInterface.lockReStake",
      "jump": "o",
      "offset": [
        4315,
        4517
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5991": {
      "offset": [
        366,
        402
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5992": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        366,
        402
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "6025": {
      "fn": "StakingInterface.lockReStake",
      "offset": [
        366,
        402
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6026": {
      "fn": "StakingInterface.lockReStake",
      "jump": "o",
      "offset": [
        366,
        402
      ],
      "op": "JUMP",
      "path": "18"
    }
  },
  "sha1": "1bb88e311f8d39e2f3c36968ba3390761f2e82f2",
  "source": "pragma solidity ^0.6.5;\n\n\nimport \"nucypher/staking_contracts/AbstractStakingContract.sol\";\nimport \"nucypher/NuCypherToken.sol\";\nimport \"nucypher/StakingEscrow.sol\";\nimport \"nucypher/PolicyManager.sol\";\nimport \"nucypher/WorkLock.sol\";\n\n\n/**\n* @notice Base StakingInterface\n*/\ncontract BaseStakingInterface {\n\n    address public immutable stakingInterfaceAddress;\n    NuCypherToken public immutable token;\n    StakingEscrow public immutable escrow;\n    PolicyManager public immutable policyManager;\n    WorkLock public immutable workLock;\n\n    /**\n    * @notice Constructor sets addresses of the contracts\n    * @param _token Token contract\n    * @param _escrow Escrow contract\n    * @param _policyManager PolicyManager contract\n    * @param _workLock WorkLock contract\n    */\n    constructor(\n        NuCypherToken _token,\n        StakingEscrow _escrow,\n        PolicyManager _policyManager,\n        WorkLock _workLock\n    )\n        public\n    {\n        require(_token.totalSupply() > 0 &&\n            _escrow.secondsPerPeriod() > 0 &&\n            _policyManager.secondsPerPeriod() > 0 &&\n            // in case there is no worklock contract\n            (address(_workLock) == address(0) || _workLock.boostingRefund() > 0));\n        token = _token;\n        escrow = _escrow;\n        policyManager = _policyManager;\n        workLock = _workLock;\n        stakingInterfaceAddress = address(this);\n    }\n\n    /**\n    * @dev Checks executing through delegate call\n    */\n    modifier onlyDelegateCall()\n    {\n        require(stakingInterfaceAddress != address(this));\n        _;\n    }\n\n    /**\n    * @dev Checks the existence of the worklock contract\n    */\n    modifier workLockSet()\n    {\n        require(address(workLock) != address(0));\n        _;\n    }\n\n}\n\n\n/**\n* @notice Interface for accessing main contracts from a staking contract\n* @dev All methods must be stateless because this code will be executed by delegatecall call, use immutable fields.\n* @dev |v1.4.2|\n*/\ncontract StakingInterface is BaseStakingInterface {\n\n    event DepositedAsStaker(address indexed sender, uint256 value, uint16 periods);\n    event WithdrawnAsStaker(address indexed sender, uint256 value);\n    event Locked(address indexed sender, uint256 value, uint16 periods);\n    event Divided(address indexed sender, uint256 index, uint256 newValue, uint16 periods);\n    event Minted(address indexed sender);\n    event PolicyFeeWithdrawn(address indexed sender, uint256 value);\n    event MinFeeRateSet(address indexed sender, uint256 value);\n    event ReStakeSet(address indexed sender, bool reStake);\n    event ReStakeLocked(address indexed sender, uint16 lockUntilPeriod);\n    event WorkerBonded(address indexed sender, address worker);\n    event Prolonged(address indexed sender, uint256 index, uint16 periods);\n    event WindDownSet(address indexed sender, bool windDown);\n    event Bid(address indexed sender, uint256 depositedETH);\n    event Claimed(address indexed sender, uint256 claimedTokens);\n    event Refund(address indexed sender, uint256 refundETH);\n    event BidCanceled(address indexed sender);\n    event CompensationWithdrawn(address indexed sender);\n\n    /**\n    * @notice Constructor sets addresses of the contracts\n    * @param _token Token contract\n    * @param _escrow Escrow contract\n    * @param _policyManager PolicyManager contract\n    * @param _workLock WorkLock contract\n    */\n    constructor(\n        NuCypherToken _token,\n        StakingEscrow _escrow,\n        PolicyManager _policyManager,\n        WorkLock _workLock\n    )\n        public BaseStakingInterface(_token, _escrow, _policyManager, _workLock)\n    {\n    }\n\n    /**\n    * @notice Bond worker in the staking escrow\n    * @param _worker Worker address\n    */\n    function bondWorker(address _worker) public onlyDelegateCall {\n        escrow.bondWorker(_worker);\n        emit WorkerBonded(msg.sender, _worker);\n    }\n\n    /**\n    * @notice Set `reStake` parameter in the staking escrow\n    * @param _reStake Value for parameter\n    */\n    function setReStake(bool _reStake) public onlyDelegateCall {\n        escrow.setReStake(_reStake);\n        emit ReStakeSet(msg.sender, _reStake);\n    }\n\n    /**\n    * @notice Lock `reStake` parameter in the staking escrow\n    * @param _lockReStakeUntilPeriod Can't change `reStake` value until this period\n    */\n    function lockReStake(uint16 _lockReStakeUntilPeriod) public onlyDelegateCall {\n        escrow.lockReStake(_lockReStakeUntilPeriod);\n        emit ReStakeLocked(msg.sender, _lockReStakeUntilPeriod);\n    }\n\n    /**\n    * @notice Deposit tokens to the staking escrow\n    * @param _value Amount of token to deposit\n    * @param _periods Amount of periods during which tokens will be locked\n    */\n    function depositAsStaker(uint256 _value, uint16 _periods) public onlyDelegateCall {\n        require(token.balanceOf(address(this)) >= _value);\n        token.approve(address(escrow), _value);\n        escrow.deposit(_value, _periods);\n        emit DepositedAsStaker(msg.sender, _value, _periods);\n    }\n\n    /**\n    * @notice Withdraw available amount of tokens from the staking escrow to the staking contract\n    * @param _value Amount of token to withdraw\n    */\n    function withdrawAsStaker(uint256 _value) public onlyDelegateCall {\n        escrow.withdraw(_value);\n        emit WithdrawnAsStaker(msg.sender, _value);\n    }\n\n    /**\n    * @notice Lock some tokens or increase lock in the staking escrow\n    * @param _value Amount of tokens which should lock\n    * @param _periods Amount of periods during which tokens will be locked\n    */\n    function lock(uint256 _value, uint16 _periods) public onlyDelegateCall {\n        escrow.lock(_value, _periods);\n        emit Locked(msg.sender, _value, _periods);\n    }\n\n    /**\n    * @notice Divide stake into two parts\n    * @param _index Index of stake\n    * @param _newValue New stake value\n    * @param _periods Amount of periods for extending stake\n    */\n    function divideStake(\n        uint256 _index,\n        uint256 _newValue,\n        uint16 _periods\n    )\n        public onlyDelegateCall\n    {\n        escrow.divideStake(_index, _newValue, _periods);\n        emit Divided(msg.sender, _index, _newValue, _periods);\n    }\n\n    /**\n    * @notice Mint tokens in the staking escrow\n    */\n    function mint() public onlyDelegateCall {\n        escrow.mint();\n        emit Minted(msg.sender);\n    }\n\n    /**\n    * @notice Withdraw available policy fees from the policy manager to the staking contract\n    */\n    function withdrawPolicyFee() public onlyDelegateCall {\n        uint256 value = policyManager.withdraw();\n        emit PolicyFeeWithdrawn(msg.sender, value);\n    }\n\n    /**\n    * @notice Set the minimum fee that the staker will accept in the policy manager contract\n    */\n    function setMinFeeRate(uint256 _minFeeRate) public onlyDelegateCall {\n        policyManager.setMinFeeRate(_minFeeRate);\n        emit MinFeeRateSet(msg.sender, _minFeeRate);\n    }\n\n\n    /**\n    * @notice Prolong active sub stake\n    * @param _index Index of the sub stake\n    * @param _periods Amount of periods for extending sub stake\n    */\n    function prolongStake(uint256 _index, uint16 _periods) public onlyDelegateCall {\n        escrow.prolongStake(_index, _periods);\n        emit Prolonged(msg.sender, _index, _periods);\n    }\n\n    /**\n    * @notice Set `windDown` parameter in the staking escrow\n    * @param _windDown Value for parameter\n    */\n    function setWindDown(bool _windDown) public onlyDelegateCall {\n        escrow.setWindDown(_windDown);\n        emit WindDownSet(msg.sender, _windDown);\n    }\n\n    /**\n    * @notice Bid for tokens by transferring ETH\n    */\n    function bid(uint256 _value) public payable onlyDelegateCall workLockSet {\n        workLock.bid{value: _value}();\n        emit Bid(msg.sender, _value);\n    }\n\n    /**\n    * @notice Cancel bid and refund deposited ETH\n    */\n    function cancelBid() public onlyDelegateCall workLockSet {\n        workLock.cancelBid();\n        emit BidCanceled(msg.sender);\n    }\n\n    /**\n    * @notice Withdraw compensation after force refund\n    */\n    function withdrawCompensation() public onlyDelegateCall workLockSet {\n        workLock.withdrawCompensation();\n        emit CompensationWithdrawn(msg.sender);\n    }\n\n    /**\n    * @notice Claimed tokens will be deposited and locked as stake in the StakingEscrow contract\n    */\n    function claim() public onlyDelegateCall workLockSet {\n        uint256 claimedTokens = workLock.claim();\n        emit Claimed(msg.sender, claimedTokens);\n    }\n\n    /**\n    * @notice Refund ETH for the completed work\n    */\n    function refund() public onlyDelegateCall workLockSet {\n        uint256 refundETH = workLock.refund();\n        emit Refund(msg.sender, refundETH);\n    }\n\n}\n",
  "sourceMap": "1969:6766:18:-:0;;;3383:236;5:9:-1;2:2;;;27:1;24;17:12;2:2;3383:236:18;;;;;;;;;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;3383:236:18;;;;;;;;;;;;;;;;;961:20;;-1:-1:-1;;;961:20:18;;;;3383:236;;;;;;;;;;;;;;;;984:1;;-1:-1:-1;;;;;961:18:18;;;;;:20;;;;;3383:236;961:20;;;;;;:18;:20;;;2:2:-1;;;;27:1;24;17:12;2:2;961:20:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;961:20:18;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;961:20:18;:24;:70;;;;;1030:1;1001:7;-1:-1:-1;;;;;1001:24:18;;:26;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1001:26:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1001:26:18;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1001:26:18;:30;;;961:70;:123;;;;;1083:1;1047:14;-1:-1:-1;;;;;1047:31:18;;:33;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1047:33:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1047:33:18;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1047:33:18;:37;;;961:123;:260;;;;-1:-1:-1;;;;;;1154:32:18;;;;:66;;;1219:1;1190:9;-1:-1:-1;;;;;1190:24:18;;:26;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1190:26:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1190:26:18;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1190:26:18;:30;1154:66;953:269;;12:1:-1;9;2:12;953:269:18;1232:14;;;;-1:-1:-1;;;;;;1232:14:18;;;;;1256:16;;;;;;;1282:30;;;;;;;1322:20;;;;;;1386:4;1352:39;;;;;;1386:4;-1:-1:-1;;;;;;1969:6766:18;;;;-1:-1:-1;1969:6766:18;;;;-1:-1:-1;1969:6766:18;;;-1:-1:-1;1969:6766:18;;;;;;;;;;;;",
  "sourcePath": "../../nucypher/blockchain/eth/sol/source/contracts/staking_contracts/StakingInterface.sol",
  "type": "contract"
}