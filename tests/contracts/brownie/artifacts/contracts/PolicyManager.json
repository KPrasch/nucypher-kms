{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract StakingEscrow",
          "name": "_escrow",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes16",
          "name": "policyId",
          "type": "bytes16"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "node",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ArrangementRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "min",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "defaultValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        }
      ],
      "name": "FeeRateRangeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "node",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "MinFeeRateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "node",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "period",
          "type": "uint16"
        }
      ],
      "name": "NodeBrokenState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes16",
          "name": "policyId",
          "type": "bytes16"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "startTimestamp",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "endTimestamp",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numberOfNodes",
          "type": "uint256"
        }
      ],
      "name": "PolicyCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes16",
          "name": "policyId",
          "type": "bytes16"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "PolicyRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes16",
          "name": "policyId",
          "type": "bytes16"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "node",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RefundForArrangement",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes16",
          "name": "policyId",
          "type": "bytes16"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RefundForPolicy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "testTarget",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "StateVerified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "UpgradeFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "node",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_FEE_DELTA",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        },
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        }
      ],
      "name": "calculateRefundValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refundValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        }
      ],
      "name": "calculateRefundValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refundValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        },
        {
          "internalType": "address",
          "name": "_policyOwner",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_endTimestamp",
          "type": "uint64"
        },
        {
          "internalType": "address[]",
          "name": "_nodes",
          "type": "address[]"
        }
      ],
      "name": "createPolicy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "escrow",
      "outputs": [
        {
          "internalType": "contract StakingEscrow",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRateRange",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "min",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "defaultValue",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "max",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "finishUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getArrangementInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "node",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfDowntimePeriods",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "lastRefundedPeriod",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        }
      ],
      "name": "getArrangementsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentPeriod",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        }
      ],
      "name": "getMinFeeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_period",
          "type": "uint16"
        }
      ],
      "name": "getNodeFeeDelta",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        }
      ],
      "name": "getPolicyOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        },
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        }
      ],
      "name": "getRevocationHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isUpgrade",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nodes",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "fee",
          "type": "uint128"
        },
        {
          "internalType": "uint16",
          "name": "previousFeePeriod",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "feeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minFeeRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "",
          "type": "bytes16"
        }
      ],
      "name": "policies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "disabled",
          "type": "bool"
        },
        {
          "internalType": "address payable",
          "name": "sponsor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "feeRate",
          "type": "uint128"
        },
        {
          "internalType": "uint64",
          "name": "startTimestamp",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "endTimestamp",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "reservedSlot1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reservedSlot2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reservedSlot3",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reservedSlot4",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reservedSlot5",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "previousTarget",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        },
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        }
      ],
      "name": "refund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refundValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_period",
          "type": "uint16"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        },
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "revoke",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refundValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        },
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        }
      ],
      "name": "revokeArrangement",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refundValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        }
      ],
      "name": "revokePolicy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refundValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondsPerPeriod",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_period",
          "type": "uint16"
        }
      ],
      "name": "setDefaultFeeDelta",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_min",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_default",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_max",
          "type": "uint128"
        }
      ],
      "name": "setFeeRateRange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minFeeRate",
          "type": "uint256"
        }
      ],
      "name": "setMinFeeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_period",
          "type": "uint16"
        }
      ],
      "name": "updateFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_testTarget",
          "type": "address"
        }
      ],
      "name": "verifyState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "../../nucypher/blockchain/eth/sol/source/contracts/lib/SignatureVerifier.sol",
    "15": "../../nucypher/blockchain/eth/sol/source/contracts/proxy/Upgradeable.sol",
    "20": "../../nucypher/blockchain/eth/sol/source/zeppelin/math/SafeMath.sol",
    "21": "../../nucypher/blockchain/eth/sol/source/zeppelin/ownership/Ownable.sol",
    "25": "../../nucypher/blockchain/eth/sol/source/zeppelin/token/ERC20/SafeERC20.sol",
    "26": "../../nucypher/blockchain/eth/sol/source/zeppelin/utils/Address.sol",
    "5": "../../nucypher/blockchain/eth/sol/source/contracts/PolicyManager.sol",
    "8": "../../nucypher/blockchain/eth/sol/source/contracts/lib/AdditionalMath.sol"
  },
  "ast": {
    "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/PolicyManager.sol",
    "exportedSymbols": {
      "PolicyManager": [
        4116
      ]
    },
    "id": 4117,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1641,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/zeppelin/token/ERC20/SafeERC20.sol",
        "file": "zeppelin/token/ERC20/SafeERC20.sol",
        "id": 1642,
        "nodeType": "ImportDirective",
        "scope": 4117,
        "sourceUnit": 16304,
        "src": "26:44:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/zeppelin/math/SafeMath.sol",
        "file": "zeppelin/math/SafeMath.sol",
        "id": 1643,
        "nodeType": "ImportDirective",
        "scope": 4117,
        "sourceUnit": 15479,
        "src": "71:36:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/zeppelin/math/Math.sol",
        "file": "zeppelin/math/Math.sol",
        "id": 1644,
        "nodeType": "ImportDirective",
        "scope": 4117,
        "sourceUnit": 15345,
        "src": "108:32:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/zeppelin/utils/Address.sol",
        "file": "zeppelin/utils/Address.sol",
        "id": 1645,
        "nodeType": "ImportDirective",
        "scope": 4117,
        "sourceUnit": 16368,
        "src": "141:36:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/lib/AdditionalMath.sol",
        "file": "nucypher/lib/AdditionalMath.sol",
        "id": 1646,
        "nodeType": "ImportDirective",
        "scope": 4117,
        "sourceUnit": 10778,
        "src": "178:41:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/lib/SignatureVerifier.sol",
        "file": "nucypher/lib/SignatureVerifier.sol",
        "id": 1647,
        "nodeType": "ImportDirective",
        "scope": 4117,
        "sourceUnit": 12382,
        "src": "220:44:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/StakingEscrow.sol",
        "file": "nucypher/StakingEscrow.sol",
        "id": 1648,
        "nodeType": "ImportDirective",
        "scope": 4117,
        "sourceUnit": 8773,
        "src": "265:36:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/NuCypherToken.sol",
        "file": "nucypher/NuCypherToken.sol",
        "id": 1649,
        "nodeType": "ImportDirective",
        "scope": 4117,
        "sourceUnit": 1640,
        "src": "302:36:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/proxy/Upgradeable.sol",
        "file": "nucypher/proxy/Upgradeable.sol",
        "id": 1650,
        "nodeType": "ImportDirective",
        "scope": 4117,
        "sourceUnit": 14147,
        "src": "339:40:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1652,
              "name": "Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14146,
              "src": "521:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Upgradeable_$14146",
                "typeString": "contract Upgradeable"
              }
            },
            "id": 1653,
            "nodeType": "InheritanceSpecifier",
            "src": "521:11:5"
          }
        ],
        "contractDependencies": [
          14146,
          15599
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1651,
          "nodeType": "StructuredDocumentation",
          "src": "382:112:5",
          "text": "@title PolicyManager\n@notice Contract holds policy data and locks accrued policy fees\n@dev |v6.1.1|"
        },
        "fullyImplemented": true,
        "id": 4116,
        "linearizedBaseContracts": [
          4116,
          14146,
          15599
        ],
        "name": "PolicyManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1656,
            "libraryName": {
              "contractScope": null,
              "id": 1654,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16303,
              "src": "545:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$16303",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "539:34:5",
            "typeName": {
              "contractScope": null,
              "id": 1655,
              "name": "NuCypherToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1625,
              "src": "559:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                "typeString": "contract NuCypherToken"
              }
            }
          },
          {
            "id": 1659,
            "libraryName": {
              "contractScope": null,
              "id": 1657,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15478,
              "src": "584:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$15478",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "578:27:5",
            "typeName": {
              "id": 1658,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "597:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1662,
            "libraryName": {
              "contractScope": null,
              "id": 1660,
              "name": "AdditionalMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10777,
              "src": "616:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdditionalMath_$10777",
                "typeString": "library AdditionalMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "610:33:5",
            "typeName": {
              "id": 1661,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "635:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1665,
            "libraryName": {
              "contractScope": null,
              "id": 1663,
              "name": "AdditionalMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10777,
              "src": "654:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdditionalMath_$10777",
                "typeString": "library AdditionalMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "648:32:5",
            "typeName": {
              "id": 1664,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "673:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "id": 1668,
            "libraryName": {
              "contractScope": null,
              "id": 1666,
              "name": "AdditionalMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10777,
              "src": "691:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdditionalMath_$10777",
                "typeString": "library AdditionalMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "685:32:5",
            "typeName": {
              "id": 1667,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "710:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            }
          },
          {
            "id": 1671,
            "libraryName": {
              "contractScope": null,
              "id": 1669,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16367,
              "src": "728:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$16367",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "722:34:5",
            "typeName": {
              "id": 1670,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "740:15:5",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1687,
            "name": "PolicyCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1673,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1687,
                  "src": "791:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 1672,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1675,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sponsor",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1687,
                  "src": "825:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1677,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1687,
                  "src": "858:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "858:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1679,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1687,
                  "src": "889:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1681,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startTimestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1687,
                  "src": "914:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1680,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "914:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1683,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endTimestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1687,
                  "src": "945:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1682,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "945:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1685,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "numberOfNodes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1687,
                  "src": "974:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "781:220:5"
            },
            "src": "762:240:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1697,
            "name": "ArrangementRevoked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1689,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1697,
                  "src": "1041:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 1688,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1041:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1691,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1697,
                  "src": "1075:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1693,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1697,
                  "src": "1107:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1695,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1697,
                  "src": "1137:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1694,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1137:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1031:125:5"
            },
            "src": "1007:150:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1707,
            "name": "RefundForArrangement",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1699,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1707,
                  "src": "1198:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 1698,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1701,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1707,
                  "src": "1232:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1232:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1703,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1707,
                  "src": "1264:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1264:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1705,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1707,
                  "src": "1294:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1294:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1188:125:5"
            },
            "src": "1162:152:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1715,
            "name": "PolicyRevoked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1709,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1715,
                  "src": "1339:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 1708,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1339:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1711,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1715,
                  "src": "1365:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1365:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1713,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1715,
                  "src": "1389:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1338:65:5"
            },
            "src": "1319:85:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1723,
            "name": "RefundForPolicy",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1717,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1723,
                  "src": "1431:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 1716,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1719,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1723,
                  "src": "1457:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1457:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1721,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1723,
                  "src": "1481:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1430:65:5"
            },
            "src": "1409:87:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1729,
            "name": "NodeBrokenState",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1725,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1729,
                  "src": "1523:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1727,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "period",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1729,
                  "src": "1545:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1726,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1545:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1522:37:5"
            },
            "src": "1501:59:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1735,
            "name": "MinFeeRateSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1731,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1735,
                  "src": "1585:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1585:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1733,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1735,
                  "src": "1607:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1607:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1584:37:5"
            },
            "src": "1565:57:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1745,
            "name": "FeeRateRangeSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1737,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1745,
                  "src": "1686:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1739,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "min",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1745,
                  "src": "1710:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1741,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "defaultValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1745,
                  "src": "1723:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1743,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "max",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1745,
                  "src": "1745:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1745:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1685:72:5"
            },
            "src": "1664:94:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1753,
            "name": "Withdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1747,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1753,
                  "src": "1779:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1779:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1749,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1753,
                  "src": "1801:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1801:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1751,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1753,
                  "src": "1828:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1778:64:5"
            },
            "src": "1763:80:5"
          },
          {
            "canonicalName": "PolicyManager.ArrangementInfo",
            "id": 1760,
            "members": [
              {
                "constant": false,
                "id": 1755,
                "mutability": "mutable",
                "name": "node",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1760,
                "src": "1882:12:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1754,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1882:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1757,
                "mutability": "mutable",
                "name": "indexOfDowntimePeriods",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1760,
                "src": "1904:30:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1756,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1904:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1759,
                "mutability": "mutable",
                "name": "lastRefundedPeriod",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1760,
                "src": "1944:25:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 1758,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1944:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ArrangementInfo",
            "nodeType": "StructDefinition",
            "scope": 4116,
            "src": "1849:127:5",
            "visibility": "public"
          },
          {
            "canonicalName": "PolicyManager.Policy",
            "id": 1786,
            "members": [
              {
                "constant": false,
                "id": 1762,
                "mutability": "mutable",
                "name": "disabled",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1786,
                "src": "2006:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1761,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2006:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1764,
                "mutability": "mutable",
                "name": "sponsor",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1786,
                "src": "2029:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 1763,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2029:15:5",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1766,
                "mutability": "mutable",
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1786,
                "src": "2062:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1765,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2062:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1768,
                "mutability": "mutable",
                "name": "feeRate",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1786,
                "src": "2086:15:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 1767,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "2086:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1770,
                "mutability": "mutable",
                "name": "startTimestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1786,
                "src": "2111:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 1769,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "2111:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1772,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1786,
                "src": "2142:19:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 1771,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "2142:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1774,
                "mutability": "mutable",
                "name": "reservedSlot1",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1786,
                "src": "2172:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1773,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2172:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1776,
                "mutability": "mutable",
                "name": "reservedSlot2",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1786,
                "src": "2203:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1775,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2203:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1778,
                "mutability": "mutable",
                "name": "reservedSlot3",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1786,
                "src": "2234:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1777,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2234:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1780,
                "mutability": "mutable",
                "name": "reservedSlot4",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1786,
                "src": "2265:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1779,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2265:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1782,
                "mutability": "mutable",
                "name": "reservedSlot5",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1786,
                "src": "2296:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1781,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2296:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1785,
                "mutability": "mutable",
                "name": "arrangements",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1786,
                "src": "2328:30:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$1760_storage_$dyn_storage_ptr",
                  "typeString": "struct PolicyManager.ArrangementInfo[]"
                },
                "typeName": {
                  "baseType": {
                    "contractScope": null,
                    "id": 1783,
                    "name": "ArrangementInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1760,
                    "src": "2328:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                      "typeString": "struct PolicyManager.ArrangementInfo"
                    }
                  },
                  "id": 1784,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "2328:17:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$1760_storage_$dyn_storage_ptr",
                    "typeString": "struct PolicyManager.ArrangementInfo[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Policy",
            "nodeType": "StructDefinition",
            "scope": 4116,
            "src": "1982:383:5",
            "visibility": "public"
          },
          {
            "canonicalName": "PolicyManager.NodeInfo",
            "id": 1799,
            "members": [
              {
                "constant": false,
                "id": 1788,
                "mutability": "mutable",
                "name": "fee",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1799,
                "src": "2397:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 1787,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "2397:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1790,
                "mutability": "mutable",
                "name": "previousFeePeriod",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1799,
                "src": "2418:24:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 1789,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2418:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1792,
                "mutability": "mutable",
                "name": "feeRate",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1799,
                "src": "2452:15:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1791,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2452:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1794,
                "mutability": "mutable",
                "name": "minFeeRate",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1799,
                "src": "2477:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1793,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2477:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1798,
                "mutability": "mutable",
                "name": "feeDelta",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1799,
                "src": "2505:35:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                  "typeString": "mapping(uint16 => int256)"
                },
                "typeName": {
                  "id": 1797,
                  "keyType": {
                    "id": 1795,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2514:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2505:26:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                    "typeString": "mapping(uint16 => int256)"
                  },
                  "valueType": {
                    "id": 1796,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2524:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "NodeInfo",
            "nodeType": "StructDefinition",
            "scope": 4116,
            "src": "2371:176:5",
            "visibility": "public"
          },
          {
            "canonicalName": "PolicyManager.Range",
            "id": 1806,
            "members": [
              {
                "constant": false,
                "id": 1801,
                "mutability": "mutable",
                "name": "min",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1806,
                "src": "2576:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 1800,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "2576:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1803,
                "mutability": "mutable",
                "name": "defaultValue",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1806,
                "src": "2597:20:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 1802,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "2597:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1805,
                "mutability": "mutable",
                "name": "max",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1806,
                "src": "2627:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 1804,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "2627:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Range",
            "nodeType": "StructDefinition",
            "scope": 4116,
            "src": "2553:92:5",
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1812,
            "mutability": "constant",
            "name": "RESERVED_POLICY_ID",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4116,
            "src": "2651:57:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes16",
              "typeString": "bytes16"
            },
            "typeName": {
              "id": 1807,
              "name": "bytes16",
              "nodeType": "ElementaryTypeName",
              "src": "2651:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes16",
                "typeString": "bytes16"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "30",
                  "id": 1810,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2706:1:5",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 1809,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2698:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes16_$",
                  "typeString": "type(bytes16)"
                },
                "typeName": {
                  "id": 1808,
                  "name": "bytes16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2698:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  }
                }
              },
              "id": 1811,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2698:10:5",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes16",
                "typeString": "bytes16"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1818,
            "mutability": "constant",
            "name": "RESERVED_NODE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4116,
            "src": "2714:52:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1813,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2714:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "30",
                  "id": 1816,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2764:1:5",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 1815,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2756:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 1814,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2756:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  }
                }
              },
              "id": 1817,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2756:10:5",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1829,
            "mutability": "constant",
            "name": "MAX_BALANCE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4116,
            "src": "2772:63:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1819,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2772:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "id": 1827,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2828:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2820:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint128_$",
                        "typeString": "type(uint128)"
                      },
                      "typeName": {
                        "id": 1822,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2820:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2820:10:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "-",
                  "rightExpression": {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 1826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2833:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "src": "2820:14:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                ],
                "id": 1821,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2812:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_uint256_$",
                  "typeString": "type(uint256)"
                },
                "typeName": {
                  "id": 1820,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2812:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  }
                }
              },
              "id": 1828,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2812:23:5",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "4b8fed4f",
            "id": 1843,
            "mutability": "constant",
            "name": "DEFAULT_FEE_DELTA",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4116,
            "src": "2886:72:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 1830,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "2886:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 1841,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2945:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2937:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1833,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2937:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2937:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2950:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2937:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1839,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2936:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": ">>",
                  "rightExpression": {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 1840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2956:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "src": "2936:21:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "id": 1832,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2929:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_int256_$",
                  "typeString": "type(int256)"
                },
                "typeName": {
                  "id": 1831,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2929:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  }
                }
              },
              "id": 1842,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2929:29:5",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e2fdcc17",
            "id": 1845,
            "mutability": "immutable",
            "name": "escrow",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4116,
            "src": "2965:37:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingEscrow_$8772",
              "typeString": "contract StakingEscrow"
            },
            "typeName": {
              "contractScope": null,
              "id": 1844,
              "name": "StakingEscrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8772,
              "src": "2965:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                "typeString": "contract StakingEscrow"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "407f8001",
            "id": 1847,
            "mutability": "immutable",
            "name": "secondsPerPeriod",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4116,
            "src": "3008:40:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 1846,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "3008:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "713c0e57",
            "id": 1851,
            "mutability": "mutable",
            "name": "policies",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4116,
            "src": "3055:43:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$1786_storage_$",
              "typeString": "mapping(bytes16 => struct PolicyManager.Policy)"
            },
            "typeName": {
              "id": 1850,
              "keyType": {
                "id": 1848,
                "name": "bytes16",
                "nodeType": "ElementaryTypeName",
                "src": "3064:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes16",
                  "typeString": "bytes16"
                }
              },
              "nodeType": "Mapping",
              "src": "3055:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$1786_storage_$",
                "typeString": "mapping(bytes16 => struct PolicyManager.Policy)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1849,
                "name": "Policy",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1786,
                "src": "3075:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                  "typeString": "struct PolicyManager.Policy"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "189a5a17",
            "id": 1855,
            "mutability": "mutable",
            "name": "nodes",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4116,
            "src": "3104:42:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$1799_storage_$",
              "typeString": "mapping(address => struct PolicyManager.NodeInfo)"
            },
            "typeName": {
              "id": 1854,
              "keyType": {
                "id": 1852,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3113:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3104:29:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$1799_storage_$",
                "typeString": "mapping(address => struct PolicyManager.NodeInfo)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1853,
                "name": "NodeInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1799,
                "src": "3124:8:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                  "typeString": "struct PolicyManager.NodeInfo"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "65af62c3",
            "id": 1857,
            "mutability": "mutable",
            "name": "feeRateRange",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4116,
            "src": "3152:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Range_$1806_storage",
              "typeString": "struct PolicyManager.Range"
            },
            "typeName": {
              "contractScope": null,
              "id": 1856,
              "name": "Range",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1806,
              "src": "3152:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Range_$1806_storage_ptr",
                "typeString": "struct PolicyManager.Range"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1883,
              "nodeType": "Block",
              "src": "3340:300:5",
              "statements": [
                {
                  "assignments": [
                    1864
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1864,
                      "mutability": "mutable",
                      "name": "localSecondsPerPeriod",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1883,
                      "src": "3456:28:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1863,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3456:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1868,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1865,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1860,
                        "src": "3487:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                          "typeString": "contract StakingEscrow"
                        }
                      },
                      "id": 1866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "secondsPerPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 603,
                      "src": "3487:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint32_$",
                        "typeString": "function () view external returns (uint32)"
                      }
                    },
                    "id": 1867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3487:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3456:57:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 1872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1870,
                          "name": "localSecondsPerPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1864,
                          "src": "3531:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3555:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3531:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3523:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3523:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1874,
                  "nodeType": "ExpressionStatement",
                  "src": "3523:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1875,
                      "name": "secondsPerPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1847,
                      "src": "3567:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1876,
                      "name": "localSecondsPerPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1864,
                      "src": "3586:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3567:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1878,
                  "nodeType": "ExpressionStatement",
                  "src": "3567:40:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1879,
                      "name": "escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1845,
                      "src": "3617:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                        "typeString": "contract StakingEscrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1880,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1860,
                      "src": "3626:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                        "typeString": "contract StakingEscrow"
                      }
                    },
                    "src": "3617:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                      "typeString": "contract StakingEscrow"
                    }
                  },
                  "id": 1882,
                  "nodeType": "ExpressionStatement",
                  "src": "3617:16:5"
                }
              ]
            },
            "documentation": {
              "id": 1858,
              "nodeType": "StructuredDocumentation",
              "src": "3184:109:5",
              "text": "@notice Constructor sets address of the escrow contract\n@param _escrow Escrow contract"
            },
            "id": 1884,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1860,
                  "mutability": "mutable",
                  "name": "_escrow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1884,
                  "src": "3310:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                    "typeString": "contract StakingEscrow"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1859,
                    "name": "StakingEscrow",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8772,
                    "src": "3310:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                      "typeString": "contract StakingEscrow"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3309:23:5"
            },
            "returnParameters": {
              "id": 1862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3340:0:5"
            },
            "scope": 4116,
            "src": "3298:342:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1898,
              "nodeType": "Block",
              "src": "3755:66:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1888,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3773:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3773:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1892,
                              "name": "escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1845,
                              "src": "3795:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                                "typeString": "contract StakingEscrow"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                                "typeString": "contract StakingEscrow"
                              }
                            ],
                            "id": 1891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3787:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1890,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3787:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3787:15:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3773:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1887,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3765:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3765:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1896,
                  "nodeType": "ExpressionStatement",
                  "src": "3765:38:5"
                },
                {
                  "id": 1897,
                  "nodeType": "PlaceholderStatement",
                  "src": "3813:1:5"
                }
              ]
            },
            "documentation": {
              "id": 1885,
              "nodeType": "StructuredDocumentation",
              "src": "3646:70:5",
              "text": "@dev Checks that sender is the StakingEscrow contract"
            },
            "id": 1899,
            "name": "onlyEscrowContract",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 1886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3748:2:5"
            },
            "src": "3721:100:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1913,
              "nodeType": "Block",
              "src": "3938:66:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1907,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3962:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3962:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1909,
                          "name": "secondsPerPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1847,
                          "src": "3980:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "3962:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3955:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint16_$",
                        "typeString": "type(uint16)"
                      },
                      "typeName": {
                        "id": 1905,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "3955:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3955:42:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 1904,
                  "id": 1912,
                  "nodeType": "Return",
                  "src": "3948:49:5"
                }
              ]
            },
            "documentation": {
              "id": 1900,
              "nodeType": "StructuredDocumentation",
              "src": "3827:49:5",
              "text": "@return Number of current period"
            },
            "functionSelector": "086146d2",
            "id": 1914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentPeriod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3906:2:5"
            },
            "returnParameters": {
              "id": 1904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1903,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1914,
                  "src": "3930:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1902,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3930:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3929:8:5"
            },
            "scope": 4116,
            "src": "3881:123:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1948,
              "nodeType": "Block",
              "src": "4200:185:5",
              "statements": [
                {
                  "assignments": [
                    1925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1925,
                      "mutability": "mutable",
                      "name": "nodeInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1948,
                      "src": "4210:25:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1924,
                        "name": "NodeInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1799,
                        "src": "4210:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1929,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1926,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1855,
                      "src": "4238:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$1799_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 1928,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1927,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1917,
                      "src": "4244:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4238:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$1799_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4210:40:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1931,
                              "name": "nodeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1925,
                              "src": "4268:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                "typeString": "struct PolicyManager.NodeInfo storage pointer"
                              }
                            },
                            "id": 1932,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "previousFeePeriod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1790,
                            "src": "4268:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4298:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4268:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1935,
                            "name": "_period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1919,
                            "src": "4303:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1936,
                              "name": "getCurrentPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1914,
                              "src": "4313:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
                                "typeString": "function () view returns (uint16)"
                              }
                            },
                            "id": 1937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4313:18:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "4303:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4268:63:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1930,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4260:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4260:72:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1941,
                  "nodeType": "ExpressionStatement",
                  "src": "4260:72:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1942,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1925,
                        "src": "4342:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 1944,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "previousFeePeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1790,
                      "src": "4342:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1945,
                      "name": "_period",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1919,
                      "src": "4371:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "4342:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1947,
                  "nodeType": "ExpressionStatement",
                  "src": "4342:36:5"
                }
              ]
            },
            "documentation": {
              "id": 1915,
              "nodeType": "StructuredDocumentation",
              "src": "4010:108:5",
              "text": "@notice Register a node\n@param _node Node address\n@param _period Initial period"
            },
            "functionSelector": "72be8d8d",
            "id": 1949,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1922,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1921,
                  "name": "onlyEscrowContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1899,
                  "src": "4181:18:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4181:18:5"
              }
            ],
            "name": "register",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1917,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1949,
                  "src": "4141:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4141:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1919,
                  "mutability": "mutable",
                  "name": "_period",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1949,
                  "src": "4156:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1918,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "4156:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4140:31:5"
            },
            "returnParameters": {
              "id": 1923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4200:0:5"
            },
            "scope": 4116,
            "src": "4123:262:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1987,
              "nodeType": "Block",
              "src": "4699:178:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 1964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1962,
                            "name": "_min",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1952,
                            "src": "4717:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1963,
                            "name": "_default",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1954,
                            "src": "4725:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "4717:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 1967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1965,
                            "name": "_default",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1954,
                            "src": "4737:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1966,
                            "name": "_max",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1956,
                            "src": "4749:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "4737:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4717:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1961,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4709:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4709:45:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1970,
                  "nodeType": "ExpressionStatement",
                  "src": "4709:45:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1971,
                      "name": "feeRateRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1857,
                      "src": "4764:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Range_$1806_storage",
                        "typeString": "struct PolicyManager.Range storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1973,
                          "name": "_min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1952,
                          "src": "4785:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1974,
                          "name": "_default",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1954,
                          "src": "4791:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1975,
                          "name": "_max",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1956,
                          "src": "4801:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 1972,
                        "name": "Range",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1806,
                        "src": "4779:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Range_$1806_storage_ptr_$",
                          "typeString": "type(struct PolicyManager.Range storage pointer)"
                        }
                      },
                      "id": 1976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4779:27:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Range_$1806_memory_ptr",
                        "typeString": "struct PolicyManager.Range memory"
                      }
                    },
                    "src": "4764:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Range_$1806_storage",
                      "typeString": "struct PolicyManager.Range storage ref"
                    }
                  },
                  "id": 1978,
                  "nodeType": "ExpressionStatement",
                  "src": "4764:42:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1980,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4837:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4837:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1982,
                        "name": "_min",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1952,
                        "src": "4849:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1983,
                        "name": "_default",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1954,
                        "src": "4855:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1984,
                        "name": "_max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1956,
                        "src": "4865:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 1979,
                      "name": "FeeRateRangeSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1745,
                      "src": "4821:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4821:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1986,
                  "nodeType": "EmitStatement",
                  "src": "4816:54:5"
                }
              ]
            },
            "documentation": {
              "id": 1950,
              "nodeType": "StructuredDocumentation",
              "src": "4391:118:5",
              "text": "@notice Set minimum, default & maximum fee rate for all stakers and all policies ('global fee range')"
            },
            "functionSelector": "631722f2",
            "id": 1988,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1959,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1958,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15526,
                  "src": "4689:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4689:9:5"
              }
            ],
            "name": "setFeeRateRange",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1952,
                  "mutability": "mutable",
                  "name": "_min",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1988,
                  "src": "4634:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1951,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4634:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1954,
                  "mutability": "mutable",
                  "name": "_default",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1988,
                  "src": "4648:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1953,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4648:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1956,
                  "mutability": "mutable",
                  "name": "_max",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1988,
                  "src": "4666:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1955,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4666:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4633:46:5"
            },
            "returnParameters": {
              "id": 1960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4699:0:5"
            },
            "scope": 4116,
            "src": "4609:268:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2033,
              "nodeType": "Block",
              "src": "5119:414:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1995,
                            "name": "_minFeeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1991,
                            "src": "5137:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1996,
                              "name": "feeRateRange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1857,
                              "src": "5152:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Range_$1806_storage",
                                "typeString": "struct PolicyManager.Range storage ref"
                              }
                            },
                            "id": 1997,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "min",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1801,
                            "src": "5152:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "5137:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1999,
                            "name": "_minFeeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1991,
                            "src": "5184:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2000,
                              "name": "feeRateRange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1857,
                              "src": "5199:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Range_$1806_storage",
                                "typeString": "struct PolicyManager.Range storage ref"
                              }
                            },
                            "id": 2001,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1805,
                            "src": "5199:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "5184:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5137:78:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865207374616b65722773206d696e206665652072617465206d7573742066616c6c2077697468696e2074686520676c6f62616c206665652072616e6765",
                        "id": 2004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5229:65:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30a01091999c299dcf5ec5b0dc4c61fb2d8265f8586a3ecb4392357e9cfeaa2c",
                          "typeString": "literal_string \"The staker's min fee rate must fall within the global fee range\""
                        },
                        "value": "The staker's min fee rate must fall within the global fee range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30a01091999c299dcf5ec5b0dc4c61fb2d8265f8586a3ecb4392357e9cfeaa2c",
                          "typeString": "literal_string \"The staker's min fee rate must fall within the global fee range\""
                        }
                      ],
                      "id": 1994,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5129:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5129:166:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2006,
                  "nodeType": "ExpressionStatement",
                  "src": "5129:166:5"
                },
                {
                  "assignments": [
                    2008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2008,
                      "mutability": "mutable",
                      "name": "nodeInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2033,
                      "src": "5305:25:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2007,
                        "name": "NodeInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1799,
                        "src": "5305:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2013,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2009,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1855,
                      "src": "5333:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$1799_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 2012,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2010,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5339:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5339:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5333:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$1799_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5305:45:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2014,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2008,
                        "src": "5364:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 2015,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "minFeeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1794,
                      "src": "5364:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2016,
                      "name": "_minFeeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "5387:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5364:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2020,
                  "nodeType": "IfStatement",
                  "src": "5360:71:5",
                  "trueBody": {
                    "id": 2019,
                    "nodeType": "Block",
                    "src": "5400:31:5",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 1993,
                        "id": 2018,
                        "nodeType": "Return",
                        "src": "5414:7:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2021,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2008,
                        "src": "5440:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 2023,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "minFeeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1794,
                      "src": "5440:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2024,
                      "name": "_minFeeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "5462:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5440:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2026,
                  "nodeType": "ExpressionStatement",
                  "src": "5440:33:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2028,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5502:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5502:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2030,
                        "name": "_minFeeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "5514:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2027,
                      "name": "MinFeeRateSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1735,
                      "src": "5488:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5488:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2032,
                  "nodeType": "EmitStatement",
                  "src": "5483:43:5"
                }
              ]
            },
            "documentation": {
              "id": 1989,
              "nodeType": "StructuredDocumentation",
              "src": "4883:178:5",
              "text": "@notice Set the minimum acceptable fee rate (set by staker for their associated worker)\n@dev Input value must fall within `feeRateRange` (global fee range)"
            },
            "functionSelector": "8c316b90",
            "id": 2034,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMinFeeRate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1991,
                  "mutability": "mutable",
                  "name": "_minFeeRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2034,
                  "src": "5089:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5089:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5088:21:5"
            },
            "returnParameters": {
              "id": 1993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5119:0:5"
            },
            "scope": 4116,
            "src": "5066:467:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2067,
              "nodeType": "Block",
              "src": "5731:412:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2042,
                            "name": "_nodeInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2037,
                            "src": "5885:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                            }
                          },
                          "id": 2043,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minFeeRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1794,
                          "src": "5885:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5909:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5885:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2046,
                            "name": "_nodeInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2037,
                            "src": "5926:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                            }
                          },
                          "id": 2047,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minFeeRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1794,
                          "src": "5926:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2048,
                            "name": "feeRateRange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1857,
                            "src": "5949:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Range_$1806_storage",
                              "typeString": "struct PolicyManager.Range storage ref"
                            }
                          },
                          "id": 2049,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "min",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1801,
                          "src": "5949:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "5926:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5885:80:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2052,
                          "name": "_nodeInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2037,
                          "src": "5981:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                            "typeString": "struct PolicyManager.NodeInfo storage pointer"
                          }
                        },
                        "id": 2053,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "minFeeRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1794,
                        "src": "5981:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2054,
                          "name": "feeRateRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1857,
                          "src": "6004:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Range_$1806_storage",
                            "typeString": "struct PolicyManager.Range storage ref"
                          }
                        },
                        "id": 2055,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1805,
                        "src": "6004:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "5981:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5885:135:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2065,
                    "nodeType": "Block",
                    "src": "6085:52:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2062,
                            "name": "_nodeInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2037,
                            "src": "6106:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                            }
                          },
                          "id": 2063,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minFeeRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1794,
                          "src": "6106:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2041,
                        "id": 2064,
                        "nodeType": "Return",
                        "src": "6099:27:5"
                      }
                    ]
                  },
                  "id": 2066,
                  "nodeType": "IfStatement",
                  "src": "5881:256:5",
                  "trueBody": {
                    "id": 2061,
                    "nodeType": "Block",
                    "src": "6022:57:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2058,
                            "name": "feeRateRange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1857,
                            "src": "6043:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Range_$1806_storage",
                              "typeString": "struct PolicyManager.Range storage ref"
                            }
                          },
                          "id": 2059,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "defaultValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1803,
                          "src": "6043:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "functionReturnParameters": 2041,
                        "id": 2060,
                        "nodeType": "Return",
                        "src": "6036:32:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2035,
              "nodeType": "StructuredDocumentation",
              "src": "5539:104:5",
              "text": "@notice Get the minimum acceptable fee rate (set by staker for their associated worker)"
            },
            "id": 2068,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMinFeeRate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2037,
                  "mutability": "mutable",
                  "name": "_nodeInfo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2068,
                  "src": "5671:26:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                    "typeString": "struct PolicyManager.NodeInfo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2036,
                    "name": "NodeInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1799,
                    "src": "5671:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                      "typeString": "struct PolicyManager.NodeInfo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5670:28:5"
            },
            "returnParameters": {
              "id": 2041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2040,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2068,
                  "src": "5722:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5722:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5721:9:5"
            },
            "scope": 4116,
            "src": "5648:495:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2086,
              "nodeType": "Block",
              "src": "6326:97:5",
              "statements": [
                {
                  "assignments": [
                    2077
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2077,
                      "mutability": "mutable",
                      "name": "nodeInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2086,
                      "src": "6336:25:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2076,
                        "name": "NodeInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1799,
                        "src": "6336:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2081,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2078,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1855,
                      "src": "6364:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$1799_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 2080,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2079,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2071,
                      "src": "6370:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6364:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$1799_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6336:40:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2083,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2077,
                        "src": "6407:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      ],
                      "id": 2082,
                      "name": "getMinFeeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2068,
                        2087
                      ],
                      "referencedDeclaration": 2068,
                      "src": "6393:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_NodeInfo_$1799_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct PolicyManager.NodeInfo storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6393:23:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2075,
                  "id": 2085,
                  "nodeType": "Return",
                  "src": "6386:30:5"
                }
              ]
            },
            "documentation": {
              "id": 2069,
              "nodeType": "StructuredDocumentation",
              "src": "6149:104:5",
              "text": "@notice Get the minimum acceptable fee rate (set by staker for their associated worker)"
            },
            "functionSelector": "889ddd1a",
            "id": 2087,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMinFeeRate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2071,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2087,
                  "src": "6281:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2070,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6281:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6280:15:5"
            },
            "returnParameters": {
              "id": 2075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2074,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2087,
                  "src": "6317:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2073,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6317:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6316:9:5"
            },
            "scope": 4116,
            "src": "6258:165:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2424,
              "nodeType": "Block",
              "src": "6921:2659:5",
              "statements": [
                {
                  "assignments": [
                    2101
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2101,
                      "mutability": "mutable",
                      "name": "policy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2424,
                      "src": "6931:21:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2100,
                        "name": "Policy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1786,
                        "src": "6931:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2105,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2102,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1851,
                      "src": "6955:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$1786_storage_$",
                        "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                      }
                    },
                    "id": 2104,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2103,
                      "name": "_policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2090,
                      "src": "6964:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6955:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$1786_storage",
                      "typeString": "struct PolicyManager.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6931:43:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bytes16",
                                  "typeString": "bytes16"
                                },
                                "id": 2109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2107,
                                  "name": "_policyId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2090,
                                  "src": "7005:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes16",
                                    "typeString": "bytes16"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2108,
                                  "name": "RESERVED_POLICY_ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1812,
                                  "src": "7018:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes16",
                                    "typeString": "bytes16"
                                  }
                                },
                                "src": "7005:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 2113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2110,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2101,
                                    "src": "7052:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 2111,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "feeRate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1768,
                                  "src": "7052:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 2112,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7070:1:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7052:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "7005:66:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 2117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "7087:16:5",
                              "subExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2115,
                                  "name": "policy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2101,
                                  "src": "7088:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                    "typeString": "struct PolicyManager.Policy storage pointer"
                                  }
                                },
                                "id": 2116,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "disabled",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1762,
                                "src": "7088:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "7005:98:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2119,
                              "name": "_endTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2094,
                              "src": "7119:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2120,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7135:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7135:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7119:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7005:145:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2124,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7166:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7166:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7178:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7166:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7005:174:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6984:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6984:205:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2130,
                  "nodeType": "ExpressionStatement",
                  "src": "6984:205:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2134,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7215:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PolicyManager_$4116",
                                  "typeString": "contract PolicyManager"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PolicyManager_$4116",
                                  "typeString": "contract PolicyManager"
                                }
                              ],
                              "id": 2133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7207:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2132,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7207:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7207:13:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7207:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2137,
                          "name": "MAX_BALANCE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1829,
                          "src": "7232:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7207:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7199:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7199:45:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2140,
                  "nodeType": "ExpressionStatement",
                  "src": "7199:45:5"
                },
                {
                  "assignments": [
                    2142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2142,
                      "mutability": "mutable",
                      "name": "currentPeriod",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2424,
                      "src": "7254:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2141,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "7254:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2145,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2143,
                      "name": "getCurrentPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1914,
                      "src": "7277:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
                        "typeString": "function () view returns (uint16)"
                      }
                    },
                    "id": 2144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7277:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7254:41:5"
                },
                {
                  "assignments": [
                    2147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2147,
                      "mutability": "mutable",
                      "name": "endPeriod",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2424,
                      "src": "7305:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2146,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "7305:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2156,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 2155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 2152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2150,
                            "name": "_endTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2094,
                            "src": "7331:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2151,
                            "name": "secondsPerPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1847,
                            "src": "7347:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "7331:32:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 2149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7324:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint16_$",
                          "typeString": "type(uint16)"
                        },
                        "typeName": {
                          "id": 2148,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "7324:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7324:40:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7367:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7324:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7305:63:5"
                },
                {
                  "assignments": [
                    2158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2158,
                      "mutability": "mutable",
                      "name": "numberOfPeriods",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2424,
                      "src": "7378:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2157,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7378:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2162,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 2161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2159,
                      "name": "endPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2147,
                      "src": "7404:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2160,
                      "name": "currentPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2142,
                      "src": "7416:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "7404:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7378:51:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2163,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2101,
                        "src": "7440:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 2165,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sponsor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1764,
                      "src": "7440:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2166,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7457:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7457:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7440:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2169,
                  "nodeType": "ExpressionStatement",
                  "src": "7440:27:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2170,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2101,
                        "src": "7477:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 2172,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1770,
                      "src": "7477:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2175,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7508:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7508:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7501:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 2173,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "7501:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7501:23:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "7477:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2179,
                  "nodeType": "ExpressionStatement",
                  "src": "7477:47:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2180,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2101,
                        "src": "7534:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 2182,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1772,
                      "src": "7534:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2183,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2094,
                      "src": "7556:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "7534:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2185,
                  "nodeType": "ExpressionStatement",
                  "src": "7534:35:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2186,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2101,
                        "src": "7579:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 2188,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "feeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1768,
                      "src": "7579:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2194,
                                  "name": "_nodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2097,
                                  "src": "7618:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 2195,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "7618:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2191,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7604:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "7604:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15406,
                              "src": "7604:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7604:28:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2197,
                            "name": "numberOfPeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2158,
                            "src": "7635:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7604:46:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7596:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint128_$",
                          "typeString": "type(uint128)"
                        },
                        "typeName": {
                          "id": 2189,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "7596:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7596:55:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "7579:72:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 2201,
                  "nodeType": "ExpressionStatement",
                  "src": "7579:72:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 2206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2203,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2101,
                              "src": "7669:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 2204,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "feeRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1768,
                            "src": "7669:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7686:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7669:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2207,
                                  "name": "policy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2101,
                                  "src": "7691:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                    "typeString": "struct PolicyManager.Policy storage pointer"
                                  }
                                },
                                "id": 2208,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "feeRate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1768,
                                "src": "7691:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 2209,
                                "name": "numberOfPeriods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2158,
                                "src": "7708:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7691:32:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2211,
                                "name": "_nodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2097,
                                "src": "7726:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 2212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7726:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7691:48:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2214,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7744:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7744:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7691:62:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7669:84:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7661:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7661:93:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2219,
                  "nodeType": "ExpressionStatement",
                  "src": "7661:93:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2220,
                        "name": "_policyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2092,
                        "src": "7768:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2221,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7784:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7784:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "7768:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2224,
                        "name": "_policyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2092,
                        "src": "7798:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7822:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7814:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2225,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7814:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7814:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "7798:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7768:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2238,
                  "nodeType": "IfStatement",
                  "src": "7764:114:5",
                  "trueBody": {
                    "id": 2237,
                    "nodeType": "Block",
                    "src": "7826:52:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2231,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2101,
                              "src": "7840:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 2233,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1766,
                            "src": "7840:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2234,
                            "name": "_policyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2092,
                            "src": "7855:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7840:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2236,
                        "nodeType": "ExpressionStatement",
                        "src": "7840:27:5"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 2398,
                    "nodeType": "Block",
                    "src": "7932:1365:5",
                    "statements": [
                      {
                        "assignments": [
                          2251
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2251,
                            "mutability": "mutable",
                            "name": "node",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2398,
                            "src": "7946:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2250,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7946:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2255,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2252,
                            "name": "_nodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2097,
                            "src": "7961:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 2254,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2253,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2240,
                            "src": "7968:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7961:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7946:24:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2257,
                                "name": "node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2251,
                                "src": "7992:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 2258,
                                "name": "RESERVED_NODE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1818,
                                "src": "8000:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7992:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2256,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7984:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7984:30:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2261,
                        "nodeType": "ExpressionStatement",
                        "src": "7984:30:5"
                      },
                      {
                        "assignments": [
                          2263
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2263,
                            "mutability": "mutable",
                            "name": "nodeInfo",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2398,
                            "src": "8028:25:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                              "typeString": "struct PolicyManager.NodeInfo"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 2262,
                              "name": "NodeInfo",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1799,
                              "src": "8028:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                "typeString": "struct PolicyManager.NodeInfo"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2267,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2264,
                            "name": "nodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1855,
                            "src": "8056:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$1799_storage_$",
                              "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                            }
                          },
                          "id": 2266,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2265,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2251,
                            "src": "8062:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8056:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$1799_storage",
                            "typeString": "struct PolicyManager.NodeInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8028:39:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "id": 2272,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2269,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2263,
                                      "src": "8089:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2270,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "previousFeePeriod",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1790,
                                    "src": "8089:26:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 2271,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8119:1:5",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "8089:31:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "id": 2276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2273,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2263,
                                      "src": "8140:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2274,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "previousFeePeriod",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1790,
                                    "src": "8140:26:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 2275,
                                    "name": "currentPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2142,
                                    "src": "8169:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "src": "8140:42:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "8089:93:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2278,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2101,
                                    "src": "8202:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 2279,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "feeRate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1768,
                                  "src": "8202:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2281,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2263,
                                      "src": "8234:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    ],
                                    "id": 2280,
                                    "name": "getMinFeeRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      2068,
                                      2087
                                    ],
                                    "referencedDeclaration": 2068,
                                    "src": "8220:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_NodeInfo_$1799_storage_ptr_$returns$_t_uint256_$",
                                      "typeString": "function (struct PolicyManager.NodeInfo storage pointer) view returns (uint256)"
                                    }
                                  },
                                  "id": 2282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8220:23:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8202:41:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8089:154:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2268,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8081:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8081:163:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2286,
                        "nodeType": "ExpressionStatement",
                        "src": "8081:163:5"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 2292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2287,
                                "name": "nodeInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2263,
                                "src": "8310:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 2288,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1798,
                              "src": "8310:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                "typeString": "mapping(uint16 => int256)"
                              }
                            },
                            "id": 2290,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2289,
                              "name": "currentPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2142,
                              "src": "8328:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8310:32:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2291,
                            "name": "DEFAULT_FEE_DELTA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1843,
                            "src": "8346:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "8310:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2318,
                          "nodeType": "Block",
                          "src": "8461:189:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2306,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2263,
                                      "src": "8577:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2309,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1798,
                                    "src": "8577:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 2310,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2308,
                                    "name": "currentPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2142,
                                    "src": "8595:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8577:32:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2313,
                                        "name": "policy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2101,
                                        "src": "8620:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                          "typeString": "struct PolicyManager.Policy storage pointer"
                                        }
                                      },
                                      "id": 2314,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "feeRate",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1768,
                                      "src": "8620:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    ],
                                    "id": 2312,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8613:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_int256_$",
                                      "typeString": "type(int256)"
                                    },
                                    "typeName": {
                                      "id": 2311,
                                      "name": "int256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8613:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 2315,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8613:22:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "8577:58:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 2317,
                              "nodeType": "ExpressionStatement",
                              "src": "8577:58:5"
                            }
                          ]
                        },
                        "id": 2319,
                        "nodeType": "IfStatement",
                        "src": "8306:344:5",
                        "trueBody": {
                          "id": 2305,
                          "nodeType": "Block",
                          "src": "8365:90:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2293,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2263,
                                      "src": "8383:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2296,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1798,
                                    "src": "8383:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 2297,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2295,
                                    "name": "currentPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2142,
                                    "src": "8401:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8383:32:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2300,
                                        "name": "policy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2101,
                                        "src": "8425:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                          "typeString": "struct PolicyManager.Policy storage pointer"
                                        }
                                      },
                                      "id": 2301,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "feeRate",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1768,
                                      "src": "8425:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    ],
                                    "id": 2299,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8418:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_int256_$",
                                      "typeString": "type(int256)"
                                    },
                                    "typeName": {
                                      "id": 2298,
                                      "name": "int256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8418:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 2302,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8418:22:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "8383:57:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 2304,
                              "nodeType": "ExpressionStatement",
                              "src": "8383:57:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 2325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2320,
                                "name": "nodeInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2263,
                                "src": "8667:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 2321,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1798,
                              "src": "8667:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                "typeString": "mapping(uint16 => int256)"
                              }
                            },
                            "id": 2323,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2322,
                              "name": "endPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2147,
                              "src": "8685:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8667:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2324,
                            "name": "DEFAULT_FEE_DELTA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1843,
                            "src": "8699:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "8667:49:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2352,
                          "nodeType": "Block",
                          "src": "8811:87:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2340,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2263,
                                      "src": "8829:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2343,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1798,
                                    "src": "8829:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 2344,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2342,
                                    "name": "endPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2147,
                                    "src": "8847:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8829:28:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2347,
                                        "name": "policy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2101,
                                        "src": "8868:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                          "typeString": "struct PolicyManager.Policy storage pointer"
                                        }
                                      },
                                      "id": 2348,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "feeRate",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1768,
                                      "src": "8868:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    ],
                                    "id": 2346,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8861:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_int256_$",
                                      "typeString": "type(int256)"
                                    },
                                    "typeName": {
                                      "id": 2345,
                                      "name": "int256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8861:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 2349,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8861:22:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "8829:54:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 2351,
                              "nodeType": "ExpressionStatement",
                              "src": "8829:54:5"
                            }
                          ]
                        },
                        "id": 2353,
                        "nodeType": "IfStatement",
                        "src": "8663:235:5",
                        "trueBody": {
                          "id": 2339,
                          "nodeType": "Block",
                          "src": "8718:87:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2326,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2263,
                                      "src": "8736:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2329,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1798,
                                    "src": "8736:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 2330,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2328,
                                    "name": "endPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2147,
                                    "src": "8754:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8736:28:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2336,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "-",
                                  "prefix": true,
                                  "src": "8767:23:5",
                                  "subExpression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 2333,
                                          "name": "policy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2101,
                                          "src": "8775:6:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                            "typeString": "struct PolicyManager.Policy storage pointer"
                                          }
                                        },
                                        "id": 2334,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "feeRate",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1768,
                                        "src": "8775:14:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      ],
                                      "id": 2332,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8768:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_int256_$",
                                        "typeString": "type(int256)"
                                      },
                                      "typeName": {
                                        "id": 2331,
                                        "name": "int256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8768:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 2335,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8768:22:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "8736:54:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 2338,
                              "nodeType": "ExpressionStatement",
                              "src": "8736:54:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 2359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2354,
                                "name": "nodeInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2263,
                                "src": "8963:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 2355,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1798,
                              "src": "8963:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                "typeString": "mapping(uint16 => int256)"
                              }
                            },
                            "id": 2357,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2356,
                              "name": "currentPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2142,
                              "src": "8981:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8963:32:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8999:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8963:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2369,
                        "nodeType": "IfStatement",
                        "src": "8959:128:5",
                        "trueBody": {
                          "id": 2368,
                          "nodeType": "Block",
                          "src": "9002:85:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2360,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2263,
                                      "src": "9020:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2363,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1798,
                                    "src": "9020:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 2364,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2362,
                                    "name": "currentPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2142,
                                    "src": "9038:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9020:32:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2365,
                                  "name": "DEFAULT_FEE_DELTA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1843,
                                  "src": "9055:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "9020:52:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 2367,
                              "nodeType": "ExpressionStatement",
                              "src": "9020:52:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 2375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2370,
                                "name": "nodeInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2263,
                                "src": "9104:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 2371,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1798,
                              "src": "9104:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                "typeString": "mapping(uint16 => int256)"
                              }
                            },
                            "id": 2373,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2372,
                              "name": "endPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2147,
                              "src": "9122:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9104:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9136:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9104:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2385,
                        "nodeType": "IfStatement",
                        "src": "9100:120:5",
                        "trueBody": {
                          "id": 2384,
                          "nodeType": "Block",
                          "src": "9139:81:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2376,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2263,
                                      "src": "9157:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2379,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1798,
                                    "src": "9157:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 2380,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2378,
                                    "name": "endPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2147,
                                    "src": "9175:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9157:28:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2381,
                                  "name": "DEFAULT_FEE_DELTA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1843,
                                  "src": "9188:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "9157:48:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 2383,
                              "nodeType": "ExpressionStatement",
                              "src": "9157:48:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2392,
                                  "name": "node",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2251,
                                  "src": "9274:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 2393,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9280:1:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 2394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9283:1:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2391,
                                "name": "ArrangementInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1760,
                                "src": "9258:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_ArrangementInfo_$1760_storage_ptr_$",
                                  "typeString": "type(struct PolicyManager.ArrangementInfo storage pointer)"
                                }
                              },
                              "id": 2395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9258:27:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$1760_memory_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$1760_memory_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2386,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2101,
                                "src": "9233:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                  "typeString": "struct PolicyManager.Policy storage pointer"
                                }
                              },
                              "id": 2389,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arrangements",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1785,
                              "src": "9233:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$1760_storage_$dyn_storage",
                                "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                              }
                            },
                            "id": 2390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "9233:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_ArrangementInfo_$1760_storage_$returns$__$",
                              "typeString": "function (struct PolicyManager.ArrangementInfo storage ref)"
                            }
                          },
                          "id": 2396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9233:53:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2397,
                        "nodeType": "ExpressionStatement",
                        "src": "9233:53:5"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2243,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2240,
                      "src": "7908:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2244,
                        "name": "_nodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2097,
                        "src": "7912:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 2245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7912:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7908:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2399,
                  "initializationExpression": {
                    "assignments": [
                      2240
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2240,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2399,
                        "src": "7893:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2239,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7893:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2242,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7905:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7893:13:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7927:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2247,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2240,
                        "src": "7927:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2249,
                    "nodeType": "ExpressionStatement",
                    "src": "7927:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "7888:1409:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2401,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2090,
                        "src": "9339:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2402,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9362:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9362:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2404,
                            "name": "_policyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2092,
                            "src": "9386:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9410:1:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9402:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2405,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9402:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9402:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "9386:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "argumentTypes": null,
                          "id": 2412,
                          "name": "_policyOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2092,
                          "src": "9428:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "9386:54:5",
                        "trueExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2410,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9415:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9415:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2414,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2101,
                          "src": "9454:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 2415,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feeRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1768,
                        "src": "9454:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2416,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2101,
                          "src": "9482:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 2417,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1770,
                        "src": "9482:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2418,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2101,
                          "src": "9517:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 2419,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "endTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1772,
                        "src": "9517:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2420,
                          "name": "_nodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2097,
                          "src": "9550:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        "id": 2421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9550:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2400,
                      "name": "PolicyCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1687,
                      "src": "9312:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes16_$_t_address_$_t_address_$_t_uint256_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes16,address,address,uint256,uint64,uint64,uint256)"
                      }
                    },
                    "id": 2422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9312:261:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2423,
                  "nodeType": "EmitStatement",
                  "src": "9307:266:5"
                }
              ]
            },
            "documentation": {
              "id": 2088,
              "nodeType": "StructuredDocumentation",
              "src": "6429:308:5",
              "text": "@notice Create policy\n@dev Generate policy id before creation\n@param _policyId Policy id\n@param _policyOwner Policy owner. Zero address means sender is owner\n@param _endTimestamp End timestamp of the policy in seconds\n@param _nodes Nodes that will handle policy"
            },
            "functionSelector": "81e742a1",
            "id": 2425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPolicy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2090,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2425,
                  "src": "6773:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 2089,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "6773:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2092,
                  "mutability": "mutable",
                  "name": "_policyOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2425,
                  "src": "6800:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6800:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2094,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2425,
                  "src": "6830:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2093,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6830:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2097,
                  "mutability": "mutable",
                  "name": "_nodes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2425,
                  "src": "6860:25:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2095,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6860:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2096,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6860:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6763:128:5"
            },
            "returnParameters": {
              "id": 2099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6921:0:5"
            },
            "scope": 4116,
            "src": "6742:2838:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2452,
              "nodeType": "Block",
              "src": "9705:135:5",
              "statements": [
                {
                  "assignments": [
                    2434
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2434,
                      "mutability": "mutable",
                      "name": "policy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2452,
                      "src": "9715:21:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2433,
                        "name": "Policy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1786,
                        "src": "9715:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2438,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2435,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1851,
                      "src": "9739:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$1786_storage_$",
                        "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                      }
                    },
                    "id": 2437,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2436,
                      "name": "_policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2428,
                      "src": "9748:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9739:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$1786_storage",
                      "typeString": "struct PolicyManager.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9715:43:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2439,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2434,
                          "src": "9775:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 2440,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1766,
                        "src": "9775:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9799:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9791:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2441,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9791:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9791:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "9775:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2448,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2434,
                        "src": "9821:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 2449,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1766,
                      "src": "9821:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9775:58:5",
                    "trueExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2446,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2434,
                        "src": "9804:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 2447,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sponsor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1764,
                      "src": "9804:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2432,
                  "id": 2451,
                  "nodeType": "Return",
                  "src": "9768:65:5"
                }
              ]
            },
            "documentation": {
              "id": 2426,
              "nodeType": "StructuredDocumentation",
              "src": "9586:41:5",
              "text": "@notice Get policy owner"
            },
            "functionSelector": "58cf15fb",
            "id": 2453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPolicyOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2428,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2453,
                  "src": "9656:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 2427,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "9656:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9655:19:5"
            },
            "returnParameters": {
              "id": 2432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2431,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2453,
                  "src": "9696:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9696:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9695:9:5"
            },
            "scope": 4116,
            "src": "9632:208:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2485,
              "nodeType": "Block",
              "src": "10177:162:5",
              "statements": [
                {
                  "assignments": [
                    2464
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2464,
                      "mutability": "mutable",
                      "name": "node",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2485,
                      "src": "10187:21:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2463,
                        "name": "NodeInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1799,
                        "src": "10187:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2468,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2465,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1855,
                      "src": "10211:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$1799_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 2467,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2466,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2456,
                      "src": "10217:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10211:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$1799_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10187:36:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 2474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2469,
                          "name": "node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2464,
                          "src": "10237:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                            "typeString": "struct PolicyManager.NodeInfo storage pointer"
                          }
                        },
                        "id": 2470,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feeDelta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1798,
                        "src": "10237:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                          "typeString": "mapping(uint16 => int256)"
                        }
                      },
                      "id": 2472,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2471,
                        "name": "_period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2458,
                        "src": "10251:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10237:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10263:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10237:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2484,
                  "nodeType": "IfStatement",
                  "src": "10233:100:5",
                  "trueBody": {
                    "id": 2483,
                    "nodeType": "Block",
                    "src": "10266:67:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2475,
                                "name": "node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2464,
                                "src": "10280:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 2478,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1798,
                              "src": "10280:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                "typeString": "mapping(uint16 => int256)"
                              }
                            },
                            "id": 2479,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2477,
                              "name": "_period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2458,
                              "src": "10294:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10280:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2480,
                            "name": "DEFAULT_FEE_DELTA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1843,
                            "src": "10305:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "10280:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 2482,
                        "nodeType": "ExpressionStatement",
                        "src": "10280:42:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2454,
              "nodeType": "StructuredDocumentation",
              "src": "9846:239:5",
              "text": "@notice Set default `feeDelta` value for specified period\n@dev This method increases gas cost for node in trade of decreasing cost for policy sponsor\n@param _node Node address\n@param _period Period to set"
            },
            "functionSelector": "b438c4cd",
            "id": 2486,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2461,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2460,
                  "name": "onlyEscrowContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1899,
                  "src": "10158:18:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10158:18:5"
              }
            ],
            "name": "setDefaultFeeDelta",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2456,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2486,
                  "src": "10118:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10118:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2458,
                  "mutability": "mutable",
                  "name": "_period",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2486,
                  "src": "10133:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2457,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "10133:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10117:31:5"
            },
            "returnParameters": {
              "id": 2462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10177:0:5"
            },
            "scope": 4116,
            "src": "10090:249:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2622,
              "nodeType": "Block",
              "src": "10538:959:5",
              "statements": [
                {
                  "assignments": [
                    2497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2497,
                      "mutability": "mutable",
                      "name": "node",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2622,
                      "src": "10548:21:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2496,
                        "name": "NodeInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1799,
                        "src": "10548:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2501,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2498,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1855,
                      "src": "10572:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$1799_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 2500,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2499,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2489,
                      "src": "10578:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10572:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$1799_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10548:36:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "id": 2505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2502,
                          "name": "node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2497,
                          "src": "10598:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                            "typeString": "struct PolicyManager.NodeInfo storage pointer"
                          }
                        },
                        "id": 2503,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "previousFeePeriod",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1790,
                        "src": "10598:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10624:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "10598:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "id": 2509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2506,
                        "name": "_period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "10629:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2507,
                          "name": "node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2497,
                          "src": "10640:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                            "typeString": "struct PolicyManager.NodeInfo storage pointer"
                          }
                        },
                        "id": 2508,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "previousFeePeriod",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1790,
                        "src": "10640:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "src": "10629:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10598:64:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2513,
                  "nodeType": "IfStatement",
                  "src": "10594:101:5",
                  "trueBody": {
                    "id": 2512,
                    "nodeType": "Block",
                    "src": "10664:31:5",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 2495,
                        "id": 2511,
                        "nodeType": "Return",
                        "src": "10678:7:5"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 2604,
                    "nodeType": "Block",
                    "src": "10767:639:5",
                    "statements": [
                      {
                        "assignments": [
                          2528
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2528,
                            "mutability": "mutable",
                            "name": "delta",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2604,
                            "src": "10781:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 2527,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10781:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2533,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2529,
                              "name": "node",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2497,
                              "src": "10796:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                "typeString": "struct PolicyManager.NodeInfo storage pointer"
                              }
                            },
                            "id": 2530,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "feeDelta",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1798,
                            "src": "10796:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                              "typeString": "mapping(uint16 => int256)"
                            }
                          },
                          "id": 2532,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2531,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2515,
                            "src": "10810:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10796:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10781:31:5"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 2536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2534,
                            "name": "delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2528,
                            "src": "10830:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2535,
                            "name": "DEFAULT_FEE_DELTA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1843,
                            "src": "10839:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "10830:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2547,
                        "nodeType": "IfStatement",
                        "src": "10826:141:5",
                        "trueBody": {
                          "id": 2546,
                          "nodeType": "Block",
                          "src": "10858:109:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2543,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2537,
                                      "name": "node",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2497,
                                      "src": "10906:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2540,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1798,
                                    "src": "10906:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 2541,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2539,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2515,
                                    "src": "10920:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10906:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 2542,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10925:1:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "10906:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 2544,
                              "nodeType": "ExpressionStatement",
                              "src": "10906:20:5"
                            },
                            {
                              "id": 2545,
                              "nodeType": "Continue",
                              "src": "10944:8:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 2550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2548,
                              "name": "delta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2528,
                              "src": "11013:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11021:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11013:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2554,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "-",
                                  "prefix": true,
                                  "src": "11034:6:5",
                                  "subExpression": {
                                    "argumentTypes": null,
                                    "id": 2553,
                                    "name": "delta",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2528,
                                    "src": "11035:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 2552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11026:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 2551,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11026:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11026:15:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2556,
                                "name": "node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2497,
                                "src": "11044:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 2557,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1792,
                              "src": "11044:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11026:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11013:43:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2602,
                          "nodeType": "Block",
                          "src": "11251:145:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2584,
                                    "name": "node",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2497,
                                    "src": "11269:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                      "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                    }
                                  },
                                  "id": 2586,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "feeRate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1792,
                                  "src": "11269:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2590,
                                      "name": "delta",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2528,
                                      "src": "11307:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2587,
                                        "name": "node",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2497,
                                        "src": "11284:4:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                        }
                                      },
                                      "id": 2588,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "feeRate",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1792,
                                      "src": "11284:12:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2589,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "addSigned",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10594,
                                    "src": "11284:22:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_int256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,int256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2591,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11284:29:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11269:44:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2593,
                              "nodeType": "ExpressionStatement",
                              "src": "11269:44:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2594,
                                      "name": "node",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2497,
                                      "src": "11361:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2597,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1798,
                                    "src": "11361:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 2598,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2596,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2515,
                                    "src": "11375:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11361:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 2599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11380:1:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "11361:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 2601,
                              "nodeType": "ExpressionStatement",
                              "src": "11361:20:5"
                            }
                          ]
                        },
                        "id": 2603,
                        "nodeType": "IfStatement",
                        "src": "11009:387:5",
                        "trueBody": {
                          "id": 2583,
                          "nodeType": "Block",
                          "src": "11058:187:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2570,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2560,
                                      "name": "node",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2497,
                                      "src": "11076:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2563,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1798,
                                    "src": "11076:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 2564,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2562,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2515,
                                    "src": "11090:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11076:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2567,
                                        "name": "node",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2497,
                                        "src": "11103:4:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                        }
                                      },
                                      "id": 2568,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "feeRate",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1792,
                                      "src": "11103:12:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 2566,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "11096:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_int256_$",
                                      "typeString": "type(int256)"
                                    },
                                    "typeName": {
                                      "id": 2565,
                                      "name": "int256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11096:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 2569,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11096:20:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "11076:40:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 2571,
                              "nodeType": "ExpressionStatement",
                              "src": "11076:40:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2572,
                                    "name": "node",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2497,
                                    "src": "11134:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                      "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                    }
                                  },
                                  "id": 2574,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "feeRate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1792,
                                  "src": "11134:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 2575,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11149:1:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "11134:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2577,
                              "nodeType": "ExpressionStatement",
                              "src": "11134:16:5"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2579,
                                    "name": "_node",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2489,
                                    "src": "11189:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2580,
                                    "name": "_period",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2491,
                                    "src": "11196:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  ],
                                  "id": 2578,
                                  "name": "NodeBrokenState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1729,
                                  "src": "11173:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint16_$returns$__$",
                                    "typeString": "function (address,uint16)"
                                  }
                                },
                                "id": 2581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11173:31:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2582,
                              "nodeType": "EmitStatement",
                              "src": "11168:36:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 2523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2521,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2515,
                      "src": "10748:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2522,
                      "name": "_period",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2491,
                      "src": "10753:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "10748:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2605,
                  "initializationExpression": {
                    "assignments": [
                      2515
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2515,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2605,
                        "src": "10709:8:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 2514,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "10709:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2520,
                    "initialValue": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "id": 2519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2516,
                          "name": "node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2497,
                          "src": "10720:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                            "typeString": "struct PolicyManager.NodeInfo storage pointer"
                          }
                        },
                        "id": 2517,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "previousFeePeriod",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1790,
                        "src": "10720:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 2518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10745:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "10720:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10709:37:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10762:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2524,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2515,
                        "src": "10762:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 2526,
                    "nodeType": "ExpressionStatement",
                    "src": "10762:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "10704:702:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2606,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2497,
                        "src": "11415:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 2608,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "previousFeePeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1790,
                      "src": "11415:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2609,
                      "name": "_period",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2491,
                      "src": "11440:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "11415:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 2611,
                  "nodeType": "ExpressionStatement",
                  "src": "11415:32:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2612,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2497,
                        "src": "11457:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 2614,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1788,
                      "src": "11457:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2617,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2497,
                            "src": "11477:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                            }
                          },
                          "id": 2618,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1792,
                          "src": "11477:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11469:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint128_$",
                          "typeString": "type(uint128)"
                        },
                        "typeName": {
                          "id": 2615,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "11469:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11469:21:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "11457:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 2621,
                  "nodeType": "ExpressionStatement",
                  "src": "11457:33:5"
                }
              ]
            },
            "documentation": {
              "id": 2487,
              "nodeType": "StructuredDocumentation",
              "src": "10345:110:5",
              "text": "@notice Update node fee\n@param _node Node address\n@param _period Processed period"
            },
            "functionSelector": "3ea2391f",
            "id": 2623,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2494,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2493,
                  "name": "onlyEscrowContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1899,
                  "src": "10519:18:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10519:18:5"
              }
            ],
            "name": "updateFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2489,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2623,
                  "src": "10479:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10479:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2491,
                  "mutability": "mutable",
                  "name": "_period",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2623,
                  "src": "10494:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2490,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "10494:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10478:31:5"
            },
            "returnParameters": {
              "id": 2495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10538:0:5"
            },
            "scope": 4116,
            "src": "10460:1037:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2634,
              "nodeType": "Block",
              "src": "11600:44:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2630,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11626:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11626:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2629,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2683,
                      "src": "11617:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$_t_uint256_$",
                        "typeString": "function (address payable) returns (uint256)"
                      }
                    },
                    "id": 2632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11617:20:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2628,
                  "id": 2633,
                  "nodeType": "Return",
                  "src": "11610:27:5"
                }
              ]
            },
            "documentation": {
              "id": 2624,
              "nodeType": "StructuredDocumentation",
              "src": "11503:45:5",
              "text": "@notice Withdraw fee by node"
            },
            "functionSelector": "3ccfd60b",
            "id": 2635,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11570:2:5"
            },
            "returnParameters": {
              "id": 2628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2627,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2635,
                  "src": "11591:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2626,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11591:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11590:9:5"
            },
            "scope": 4116,
            "src": "11553:91:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2682,
              "nodeType": "Block",
              "src": "11816:247:5",
              "statements": [
                {
                  "assignments": [
                    2644
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2644,
                      "mutability": "mutable",
                      "name": "node",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2682,
                      "src": "11826:21:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2643,
                        "name": "NodeInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1799,
                        "src": "11826:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2649,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2645,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1855,
                      "src": "11850:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$1799_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 2648,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2646,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11856:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11856:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11850:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$1799_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11826:41:5"
                },
                {
                  "assignments": [
                    2651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2651,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2682,
                      "src": "11877:11:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2650,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11877:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2654,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2652,
                      "name": "node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2644,
                      "src": "11891:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                      }
                    },
                    "id": 2653,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "fee",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1788,
                    "src": "11891:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11877:22:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2656,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2651,
                          "src": "11917:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11924:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11917:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2655,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11909:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11909:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2660,
                  "nodeType": "ExpressionStatement",
                  "src": "11909:17:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2661,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2644,
                        "src": "11936:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 2663,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1788,
                      "src": "11936:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11947:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11936:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 2666,
                  "nodeType": "ExpressionStatement",
                  "src": "11936:12:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2670,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2651,
                        "src": "11979:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2667,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2638,
                        "src": "11958:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16366,
                      "src": "11958:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 2671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11958:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2672,
                  "nodeType": "ExpressionStatement",
                  "src": "11958:25:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2674,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12008:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "12008:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2676,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2638,
                        "src": "12020:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2677,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2651,
                        "src": "12032:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2673,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1753,
                      "src": "11998:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11998:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2679,
                  "nodeType": "EmitStatement",
                  "src": "11993:43:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2680,
                    "name": "fee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2651,
                    "src": "12053:3:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2642,
                  "id": 2681,
                  "nodeType": "Return",
                  "src": "12046:10:5"
                }
              ]
            },
            "documentation": {
              "id": 2636,
              "nodeType": "StructuredDocumentation",
              "src": "11650:90:5",
              "text": "@notice Withdraw fee by node\n@param _recipient Recipient of the fee"
            },
            "functionSelector": "51cff8d9",
            "id": 2683,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2638,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2683,
                  "src": "11763:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2637,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11763:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11762:28:5"
            },
            "returnParameters": {
              "id": 2642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2641,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2683,
                  "src": "11807:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11807:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11806:9:5"
            },
            "scope": 4116,
            "src": "11745:318:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2867,
              "nodeType": "Block",
              "src": "12398:1941:5",
              "statements": [
                {
                  "assignments": [
                    2698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2698,
                      "mutability": "mutable",
                      "name": "policyStartPeriod",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2867,
                      "src": "12408:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2697,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "12408:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2706,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 2704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2701,
                            "name": "_policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2686,
                            "src": "12442:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                              "typeString": "struct PolicyManager.Policy storage pointer"
                            }
                          },
                          "id": 2702,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1770,
                          "src": "12442:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2703,
                          "name": "secondsPerPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1847,
                          "src": "12467:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "12442:41:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 2700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "12435:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint16_$",
                        "typeString": "type(uint16)"
                      },
                      "typeName": {
                        "id": 2699,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "12435:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 2705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12435:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12408:76:5"
                },
                {
                  "assignments": [
                    2708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2708,
                      "mutability": "mutable",
                      "name": "maxPeriod",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2867,
                      "src": "12494:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2707,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "12494:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2721,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2711,
                          "name": "getCurrentPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1914,
                          "src": "12534:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
                            "typeString": "function () view returns (uint16)"
                          }
                        },
                        "id": 2712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12534:18:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 2718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2715,
                                "name": "_policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2686,
                                "src": "12561:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                  "typeString": "struct PolicyManager.Policy storage pointer"
                                }
                              },
                              "id": 2716,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1772,
                              "src": "12561:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 2717,
                              "name": "secondsPerPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1847,
                              "src": "12584:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "12561:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          ],
                          "id": 2714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12554:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint16_$",
                            "typeString": "type(uint16)"
                          },
                          "typeName": {
                            "id": 2713,
                            "name": "uint16",
                            "nodeType": "ElementaryTypeName",
                            "src": "12554:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12554:47:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2709,
                        "name": "AdditionalMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10777,
                        "src": "12513:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AdditionalMath_$10777_$",
                          "typeString": "type(library AdditionalMath)"
                        }
                      },
                      "id": 2710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min16",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10539,
                      "src": "12513:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint16_$returns$_t_uint16_$",
                        "typeString": "function (uint16,uint16) pure returns (uint16)"
                      }
                    },
                    "id": 2720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12513:89:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12494:108:5"
                },
                {
                  "assignments": [
                    2723
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2723,
                      "mutability": "mutable",
                      "name": "minPeriod",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2867,
                      "src": "12612:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2722,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "12612:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2730,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2726,
                        "name": "policyStartPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2698,
                        "src": "12652:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2727,
                          "name": "_arrangement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2688,
                          "src": "12671:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                            "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                          }
                        },
                        "id": 2728,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRefundedPeriod",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1759,
                        "src": "12671:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2724,
                        "name": "AdditionalMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10777,
                        "src": "12631:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AdditionalMath_$10777_$",
                          "typeString": "type(library AdditionalMath)"
                        }
                      },
                      "id": 2725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "max16",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10522,
                      "src": "12631:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint16_$returns$_t_uint16_$",
                        "typeString": "function (uint16,uint16) pure returns (uint16)"
                      }
                    },
                    "id": 2729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12631:72:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12612:91:5"
                },
                {
                  "assignments": [
                    2732
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2732,
                      "mutability": "mutable",
                      "name": "downtimePeriods",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2867,
                      "src": "12713:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2731,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "12713:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2734,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 2733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12738:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12713:26:5"
                },
                {
                  "assignments": [
                    2736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2736,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2867,
                      "src": "12749:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2735,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12749:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2742,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2739,
                          "name": "_arrangement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2688,
                          "src": "12795:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                            "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                          }
                        },
                        "id": 2740,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "node",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1755,
                        "src": "12795:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2737,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1845,
                        "src": "12766:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                          "typeString": "contract StakingEscrow"
                        }
                      },
                      "id": 2738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPastDowntimeLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8145,
                      "src": "12766:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12766:47:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12749:64:5"
                },
                {
                  "assignments": [
                    2744
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2744,
                      "mutability": "mutable",
                      "name": "initialIndexOfDowntimePeriods",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2867,
                      "src": "12823:37:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2743,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12823:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2745,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12823:37:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 2749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2746,
                        "name": "_arrangement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2688,
                        "src": "12874:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                          "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                        }
                      },
                      "id": 2747,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastRefundedPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1759,
                      "src": "12874:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12909:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12874:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2765,
                    "nodeType": "Block",
                    "src": "13043:92:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2760,
                            "name": "initialIndexOfDowntimePeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2744,
                            "src": "13057:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2761,
                              "name": "_arrangement",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2688,
                              "src": "13089:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                              }
                            },
                            "id": 2762,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "indexOfDowntimePeriods",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1757,
                            "src": "13089:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13057:67:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2764,
                        "nodeType": "ExpressionStatement",
                        "src": "13057:67:5"
                      }
                    ]
                  },
                  "id": 2766,
                  "nodeType": "IfStatement",
                  "src": "12870:265:5",
                  "trueBody": {
                    "id": 2759,
                    "nodeType": "Block",
                    "src": "12912:125:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2750,
                            "name": "initialIndexOfDowntimePeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2744,
                            "src": "12926:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2753,
                                  "name": "_arrangement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2688,
                                  "src": "12989:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                    "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                  }
                                },
                                "id": 2754,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "node",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1755,
                                "src": "12989:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 2755,
                                "name": "policyStartPeriod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2698,
                                "src": "13008:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2751,
                                "name": "escrow",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1845,
                                "src": "12958:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                                  "typeString": "contract StakingEscrow"
                                }
                              },
                              "id": 2752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "findIndexOfPastDowntime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5203,
                              "src": "12958:30:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_uint16_$returns$_t_uint256_$",
                                "typeString": "function (address,uint16) view external returns (uint256)"
                              }
                            },
                            "id": 2756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12958:68:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12926:100:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2758,
                        "nodeType": "ExpressionStatement",
                        "src": "12926:100:5"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 2823,
                    "nodeType": "Block",
                    "src": "13299:528:5",
                    "statements": [
                      {
                        "assignments": [
                          2778,
                          2780
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2778,
                            "mutability": "mutable",
                            "name": "startPeriod",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2823,
                            "src": "13314:18:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "typeName": {
                              "id": 2777,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "13314:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2780,
                            "mutability": "mutable",
                            "name": "endPeriod",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2823,
                            "src": "13334:16:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "typeName": {
                              "id": 2779,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "13334:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2787,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2783,
                                "name": "_arrangement",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2688,
                                "src": "13393:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                  "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                }
                              },
                              "id": 2784,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "node",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1755,
                              "src": "13393:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2785,
                              "name": "indexOfDowntimePeriods",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2693,
                              "src": "13412:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2781,
                              "name": "escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1845,
                              "src": "13370:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                                "typeString": "contract StakingEscrow"
                              }
                            },
                            "id": 2782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPastDowntime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8177,
                            "src": "13370:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint16_$_t_uint16_$",
                              "typeString": "function (address,uint256) view external returns (uint16,uint16)"
                            }
                          },
                          "id": 2786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13370:65:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint16_$_t_uint16_$",
                            "typeString": "tuple(uint16,uint16)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13313:122:5"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 2790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2788,
                            "name": "startPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2778,
                            "src": "13453:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2789,
                            "name": "maxPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2708,
                            "src": "13467:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "13453:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 2795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2793,
                              "name": "endPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2780,
                              "src": "13526:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 2794,
                              "name": "minPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2723,
                              "src": "13538:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "src": "13526:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": null,
                          "id": 2798,
                          "nodeType": "IfStatement",
                          "src": "13522:68:5",
                          "trueBody": {
                            "id": 2797,
                            "nodeType": "Block",
                            "src": "13549:41:5",
                            "statements": [
                              {
                                "id": 2796,
                                "nodeType": "Continue",
                                "src": "13567:8:5"
                              }
                            ]
                          }
                        },
                        "id": 2799,
                        "nodeType": "IfStatement",
                        "src": "13449:141:5",
                        "trueBody": {
                          "id": 2792,
                          "nodeType": "Block",
                          "src": "13478:38:5",
                          "statements": [
                            {
                              "id": 2791,
                              "nodeType": "Break",
                              "src": "13496:5:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2800,
                            "name": "downtimePeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2732,
                            "src": "13603:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 2814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2809,
                                      "name": "minPeriod",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2723,
                                      "src": "13709:9:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 2810,
                                      "name": "startPeriod",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2778,
                                      "src": "13720:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      },
                                      {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2807,
                                      "name": "AdditionalMath",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10777,
                                      "src": "13688:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_AdditionalMath_$10777_$",
                                        "typeString": "type(library AdditionalMath)"
                                      }
                                    },
                                    "id": 2808,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "max16",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10522,
                                    "src": "13688:20:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint16_$returns$_t_uint16_$",
                                      "typeString": "function (uint16,uint16) pure returns (uint16)"
                                    }
                                  },
                                  "id": 2811,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13688:44:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2803,
                                      "name": "maxPeriod",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2708,
                                      "src": "13643:9:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 2804,
                                      "name": "endPeriod",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2780,
                                      "src": "13654:9:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      },
                                      {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2801,
                                      "name": "AdditionalMath",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10777,
                                      "src": "13622:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_AdditionalMath_$10777_$",
                                        "typeString": "type(library AdditionalMath)"
                                      }
                                    },
                                    "id": 2802,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "min16",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10539,
                                    "src": "13622:20:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint16_$returns$_t_uint16_$",
                                      "typeString": "function (uint16,uint16) pure returns (uint16)"
                                    }
                                  },
                                  "id": 2805,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13622:42:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "id": 2806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub16",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10708,
                                "src": "13622:65:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint16_$returns$_t_uint16_$bound_to$_t_uint16_$",
                                  "typeString": "function (uint16,uint16) pure returns (uint16)"
                                }
                              },
                              "id": 2812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13622:111:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13736:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "13622:115:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "13603:134:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 2816,
                        "nodeType": "ExpressionStatement",
                        "src": "13603:134:5"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 2819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2817,
                            "name": "maxPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2708,
                            "src": "13755:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2818,
                            "name": "endPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2780,
                            "src": "13768:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "13755:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2822,
                        "nodeType": "IfStatement",
                        "src": "13751:66:5",
                        "trueBody": {
                          "id": 2821,
                          "nodeType": "Block",
                          "src": "13779:38:5",
                          "statements": [
                            {
                              "id": 2820,
                              "nodeType": "Break",
                              "src": "13797:5:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2771,
                      "name": "indexOfDowntimePeriods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2693,
                      "src": "13219:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2772,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2736,
                      "src": "13244:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13219:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2824,
                  "initializationExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 2767,
                        "name": "indexOfDowntimePeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2693,
                        "src": "13150:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "id": 2768,
                        "name": "initialIndexOfDowntimePeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2744,
                        "src": "13175:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13150:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2770,
                    "nodeType": "ExpressionStatement",
                    "src": "13150:54:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13265:24:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2774,
                        "name": "indexOfDowntimePeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2693,
                        "src": "13265:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2776,
                    "nodeType": "ExpressionStatement",
                    "src": "13265:24:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "13145:682:5"
                },
                {
                  "assignments": [
                    2826
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2826,
                      "mutability": "mutable",
                      "name": "lastCommittedPeriod",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2867,
                      "src": "13837:26:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2825,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "13837:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2832,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2829,
                          "name": "_arrangement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2688,
                          "src": "13896:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                            "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                          }
                        },
                        "id": 2830,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "node",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1755,
                        "src": "13896:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2827,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1845,
                        "src": "13866:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                          "typeString": "contract StakingEscrow"
                        }
                      },
                      "id": 2828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getLastCommittedPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4940,
                      "src": "13866:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint16_$",
                        "typeString": "function (address) view external returns (uint16)"
                      }
                    },
                    "id": 2831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13866:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13837:77:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2833,
                        "name": "indexOfDowntimePeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2693,
                        "src": "13928:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2834,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2736,
                        "src": "13954:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13928:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "id": 2838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2836,
                        "name": "lastCommittedPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2826,
                        "src": "13964:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2837,
                        "name": "maxPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2708,
                        "src": "13986:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "src": "13964:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13928:67:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2853,
                  "nodeType": "IfStatement",
                  "src": "13924:307:5",
                  "trueBody": {
                    "id": 2852,
                    "nodeType": "Block",
                    "src": "13997:234:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2840,
                            "name": "downtimePeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2732,
                            "src": "14133:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 2849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2841,
                              "name": "maxPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2708,
                              "src": "14152:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "id": 2846,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 2844,
                                    "name": "minPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2723,
                                    "src": "14185:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 2845,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14197:1:5",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "14185:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 2847,
                                  "name": "lastCommittedPeriod",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2826,
                                  "src": "14200:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2842,
                                  "name": "AdditionalMath",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10777,
                                  "src": "14164:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AdditionalMath_$10777_$",
                                    "typeString": "type(library AdditionalMath)"
                                  }
                                },
                                "id": 2843,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "max16",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10522,
                                "src": "14164:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint16_$returns$_t_uint16_$",
                                  "typeString": "function (uint16,uint16) pure returns (uint16)"
                                }
                              },
                              "id": 2848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14164:56:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "src": "14152:68:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "14133:87:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 2851,
                        "nodeType": "ExpressionStatement",
                        "src": "14133:87:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2854,
                      "name": "refundValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2691,
                      "src": "14241:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "id": 2858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2855,
                          "name": "_policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2686,
                          "src": "14255:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 2856,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feeRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1768,
                        "src": "14255:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2857,
                        "name": "downtimePeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2732,
                        "src": "14273:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "src": "14255:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "14241:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2860,
                  "nodeType": "ExpressionStatement",
                  "src": "14241:47:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2861,
                      "name": "lastRefundedPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2695,
                      "src": "14298:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "id": 2864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2862,
                        "name": "maxPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2708,
                        "src": "14319:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 2863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14331:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "14319:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "14298:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 2866,
                  "nodeType": "ExpressionStatement",
                  "src": "14298:34:5"
                }
              ]
            },
            "documentation": {
              "id": 2684,
              "nodeType": "StructuredDocumentation",
              "src": "12069:117:5",
              "text": "@notice Calculate amount of refund\n@param _policy Policy\n@param _arrangement Arrangement"
            },
            "id": 2868,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRefundValue",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2686,
                  "mutability": "mutable",
                  "name": "_policy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2868,
                  "src": "12221:22:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                    "typeString": "struct PolicyManager.Policy"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2685,
                    "name": "Policy",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1786,
                    "src": "12221:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                      "typeString": "struct PolicyManager.Policy"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2688,
                  "mutability": "mutable",
                  "name": "_arrangement",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2868,
                  "src": "12245:36:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                    "typeString": "struct PolicyManager.ArrangementInfo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2687,
                    "name": "ArrangementInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1760,
                    "src": "12245:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                      "typeString": "struct PolicyManager.ArrangementInfo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12220:62:5"
            },
            "returnParameters": {
              "id": 2696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2691,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2868,
                  "src": "12314:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12314:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2693,
                  "mutability": "mutable",
                  "name": "indexOfDowntimePeriods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2868,
                  "src": "12335:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12335:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2695,
                  "mutability": "mutable",
                  "name": "lastRefundedPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2868,
                  "src": "12367:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2694,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12367:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12313:80:5"
            },
            "scope": 4116,
            "src": "12191:2148:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3246,
              "nodeType": "Block",
              "src": "14734:3474:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2880,
                      "name": "refundValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "14744:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14758:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14744:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2883,
                  "nodeType": "ExpressionStatement",
                  "src": "14744:15:5"
                },
                {
                  "assignments": [
                    2885
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2885,
                      "mutability": "mutable",
                      "name": "policy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3246,
                      "src": "14769:21:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2884,
                        "name": "Policy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1786,
                        "src": "14769:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2889,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2886,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1851,
                      "src": "14793:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$1786_storage_$",
                        "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                      }
                    },
                    "id": 2888,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2887,
                      "name": "_policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2871,
                      "src": "14802:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14793:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$1786_storage",
                      "typeString": "struct PolicyManager.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14769:43:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "14830:16:5",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2891,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2885,
                            "src": "14831:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                              "typeString": "struct PolicyManager.Policy storage pointer"
                            }
                          },
                          "id": 2892,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "disabled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1762,
                          "src": "14831:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2890,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14822:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14822:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2895,
                  "nodeType": "ExpressionStatement",
                  "src": "14822:25:5"
                },
                {
                  "assignments": [
                    2897
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2897,
                      "mutability": "mutable",
                      "name": "endPeriod",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3246,
                      "src": "14857:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2896,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "14857:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2907,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 2906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 2903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2900,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2885,
                              "src": "14883:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 2901,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "endTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1772,
                            "src": "14883:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2902,
                            "name": "secondsPerPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1847,
                            "src": "14905:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "14883:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 2899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14876:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint16_$",
                          "typeString": "type(uint16)"
                        },
                        "typeName": {
                          "id": 2898,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "14876:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14876:46:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14925:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "14876:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14857:69:5"
                },
                {
                  "assignments": [
                    2909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2909,
                      "mutability": "mutable",
                      "name": "numberOfActive",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3246,
                      "src": "14936:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2908,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14936:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2913,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2910,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2885,
                        "src": "14961:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 2911,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "arrangements",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1785,
                      "src": "14961:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$1760_storage_$dyn_storage",
                        "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "14961:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14936:51:5"
                },
                {
                  "assignments": [
                    2915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2915,
                      "mutability": "mutable",
                      "name": "i",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3246,
                      "src": "14997:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2914,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14997:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2917,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 2916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15009:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14997:13:5"
                },
                {
                  "body": {
                    "id": 3152,
                    "nodeType": "Block",
                    "src": "15064:2338:5",
                    "statements": [
                      {
                        "assignments": [
                          2927
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2927,
                            "mutability": "mutable",
                            "name": "arrangement",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3152,
                            "src": "15078:35:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                              "typeString": "struct PolicyManager.ArrangementInfo"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 2926,
                              "name": "ArrangementInfo",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1760,
                              "src": "15078:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2932,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2928,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2885,
                              "src": "15116:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 2929,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "arrangements",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1785,
                            "src": "15116:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$1760_storage_$dyn_storage",
                              "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                            }
                          },
                          "id": 2931,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2930,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2915,
                            "src": "15136:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15116:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage",
                            "typeString": "struct PolicyManager.ArrangementInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15078:60:5"
                      },
                      {
                        "assignments": [
                          2934
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2934,
                            "mutability": "mutable",
                            "name": "node",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3152,
                            "src": "15152:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2933,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15152:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2937,
                        "initialValue": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2935,
                            "name": "arrangement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2927,
                            "src": "15167:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                              "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                            }
                          },
                          "id": 2936,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "node",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1755,
                          "src": "15167:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15152:31:5"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2938,
                              "name": "node",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2934,
                              "src": "15201:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 2939,
                              "name": "RESERVED_NODE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1818,
                              "src": "15209:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "15201:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2941,
                                "name": "_node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2873,
                                "src": "15226:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 2942,
                                "name": "RESERVED_NODE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1818,
                                "src": "15235:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "15226:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2944,
                                "name": "_node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2873,
                                "src": "15252:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 2945,
                                "name": "node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2934,
                                "src": "15261:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "15252:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "15226:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15201:64:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2954,
                        "nodeType": "IfStatement",
                        "src": "15197:145:5",
                        "trueBody": {
                          "id": 2953,
                          "nodeType": "Block",
                          "src": "15267:75:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2950,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "--",
                                "prefix": false,
                                "src": "15285:16:5",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 2949,
                                  "name": "numberOfActive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2909,
                                  "src": "15285:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2951,
                              "nodeType": "ExpressionStatement",
                              "src": "15285:16:5"
                            },
                            {
                              "id": 2952,
                              "nodeType": "Continue",
                              "src": "15319:8:5"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2956
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2956,
                            "mutability": "mutable",
                            "name": "nodeRefundValue",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3152,
                            "src": "15355:23:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2955,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15355:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2957,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15355:23:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 2958,
                                "name": "nodeRefundValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2956,
                                "src": "15393:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2959,
                                  "name": "arrangement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2927,
                                  "src": "15410:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                    "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                  }
                                },
                                "id": 2960,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "indexOfDowntimePeriods",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1757,
                                "src": "15410:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2961,
                                  "name": "arrangement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2927,
                                  "src": "15446:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                    "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                  }
                                },
                                "id": 2962,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "lastRefundedPeriod",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1759,
                                "src": "15446:30:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              }
                            ],
                            "id": 2963,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "15392:85:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint16_$",
                              "typeString": "tuple(uint256,uint256,uint16)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2965,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2885,
                                "src": "15517:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                  "typeString": "struct PolicyManager.Policy storage pointer"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 2966,
                                "name": "arrangement",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2927,
                                "src": "15525:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                  "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                  "typeString": "struct PolicyManager.Policy storage pointer"
                                },
                                {
                                  "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                  "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                }
                              ],
                              "id": 2964,
                              "name": "calculateRefundValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2868,
                              "src": "15496:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_Policy_$1786_storage_ptr_$_t_struct$_ArrangementInfo_$1760_storage_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint16_$",
                                "typeString": "function (struct PolicyManager.Policy storage pointer,struct PolicyManager.ArrangementInfo storage pointer) view returns (uint256,uint256,uint16)"
                              }
                            },
                            "id": 2967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15496:41:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint16_$",
                              "typeString": "tuple(uint256,uint256,uint16)"
                            }
                          },
                          "src": "15392:145:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2969,
                        "nodeType": "ExpressionStatement",
                        "src": "15392:145:5"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 2970,
                          "name": "_forceRevoke",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2875,
                          "src": "15555:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 3095,
                        "nodeType": "IfStatement",
                        "src": "15551:1236:5",
                        "trueBody": {
                          "id": 3094,
                          "nodeType": "Block",
                          "src": "15569:1218:5",
                          "statements": [
                            {
                              "assignments": [
                                2972
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2972,
                                  "mutability": "mutable",
                                  "name": "nodeInfo",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 3094,
                                  "src": "15587:25:5",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                    "typeString": "struct PolicyManager.NodeInfo"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 2971,
                                    "name": "NodeInfo",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 1799,
                                    "src": "15587:8:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                      "typeString": "struct PolicyManager.NodeInfo"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2976,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2973,
                                  "name": "nodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1855,
                                  "src": "15615:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$1799_storage_$",
                                    "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                                  }
                                },
                                "id": 2975,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2974,
                                  "name": "node",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2934,
                                  "src": "15621:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15615:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$1799_storage",
                                  "typeString": "struct PolicyManager.NodeInfo storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "15587:39:5"
                            },
                            {
                              "assignments": [
                                2978
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2978,
                                  "mutability": "mutable",
                                  "name": "lastRefundedPeriod",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 3094,
                                  "src": "15697:25:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "typeName": {
                                    "id": 2977,
                                    "name": "uint16",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15697:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2981,
                              "initialValue": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2979,
                                  "name": "arrangement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2927,
                                  "src": "15725:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                    "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                  }
                                },
                                "id": 2980,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lastRefundedPeriod",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1759,
                                "src": "15725:30:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "15697:58:5"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 2987,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2982,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2972,
                                      "src": "15777:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2983,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1798,
                                    "src": "15777:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 2985,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2984,
                                    "name": "lastRefundedPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2978,
                                    "src": "15795:18:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15777:37:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2986,
                                  "name": "DEFAULT_FEE_DELTA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1843,
                                  "src": "15818:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "15777:58:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 3014,
                                "nodeType": "Block",
                                "src": "15947:104:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3012,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 3002,
                                            "name": "nodeInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2972,
                                            "src": "15969:8:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                            }
                                          },
                                          "id": 3005,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "feeDelta",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1798,
                                          "src": "15969:17:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                            "typeString": "mapping(uint16 => int256)"
                                          }
                                        },
                                        "id": 3006,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 3004,
                                          "name": "lastRefundedPeriod",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2978,
                                          "src": "15987:18:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "15969:37:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 3009,
                                              "name": "policy",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2885,
                                              "src": "16017:6:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                                "typeString": "struct PolicyManager.Policy storage pointer"
                                              }
                                            },
                                            "id": 3010,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "feeRate",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1768,
                                            "src": "16017:14:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          ],
                                          "id": 3008,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "16010:6:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_int256_$",
                                            "typeString": "type(int256)"
                                          },
                                          "typeName": {
                                            "id": 3007,
                                            "name": "int256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "16010:6:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 3011,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "16010:22:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "src": "15969:63:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "id": 3013,
                                    "nodeType": "ExpressionStatement",
                                    "src": "15969:63:5"
                                  }
                                ]
                              },
                              "id": 3015,
                              "nodeType": "IfStatement",
                              "src": "15773:278:5",
                              "trueBody": {
                                "id": 3001,
                                "nodeType": "Block",
                                "src": "15837:104:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2999,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2988,
                                            "name": "nodeInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2972,
                                            "src": "15859:8:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                            }
                                          },
                                          "id": 2991,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "feeDelta",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1798,
                                          "src": "15859:17:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                            "typeString": "mapping(uint16 => int256)"
                                          }
                                        },
                                        "id": 2992,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 2990,
                                          "name": "lastRefundedPeriod",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2978,
                                          "src": "15877:18:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "15859:37:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "id": 2998,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "-",
                                        "prefix": true,
                                        "src": "15899:23:5",
                                        "subExpression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 2995,
                                                "name": "policy",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2885,
                                                "src": "15907:6:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                                  "typeString": "struct PolicyManager.Policy storage pointer"
                                                }
                                              },
                                              "id": 2996,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "feeRate",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1768,
                                              "src": "15907:14:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint128",
                                                "typeString": "uint128"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint128",
                                                "typeString": "uint128"
                                              }
                                            ],
                                            "id": 2994,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "15900:6:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_int256_$",
                                              "typeString": "type(int256)"
                                            },
                                            "typeName": {
                                              "id": 2993,
                                              "name": "int256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "15900:6:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": null,
                                                "typeString": null
                                              }
                                            }
                                          },
                                          "id": 2997,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15900:22:5",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "src": "15859:63:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "id": 3000,
                                    "nodeType": "ExpressionStatement",
                                    "src": "15859:63:5"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 3021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3016,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2972,
                                      "src": "16072:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 3017,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1798,
                                    "src": "16072:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 3019,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 3018,
                                    "name": "endPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2897,
                                    "src": "16090:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16072:28:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 3020,
                                  "name": "DEFAULT_FEE_DELTA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1843,
                                  "src": "16104:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "16072:49:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 3048,
                                "nodeType": "Block",
                                "src": "16224:95:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3046,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 3036,
                                            "name": "nodeInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2972,
                                            "src": "16246:8:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                            }
                                          },
                                          "id": 3039,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "feeDelta",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1798,
                                          "src": "16246:17:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                            "typeString": "mapping(uint16 => int256)"
                                          }
                                        },
                                        "id": 3040,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 3038,
                                          "name": "endPeriod",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2897,
                                          "src": "16264:9:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "16246:28:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 3043,
                                              "name": "policy",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2885,
                                              "src": "16285:6:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                                "typeString": "struct PolicyManager.Policy storage pointer"
                                              }
                                            },
                                            "id": 3044,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "feeRate",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1768,
                                            "src": "16285:14:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          ],
                                          "id": 3042,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "16278:6:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_int256_$",
                                            "typeString": "type(int256)"
                                          },
                                          "typeName": {
                                            "id": 3041,
                                            "name": "int256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "16278:6:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 3045,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "16278:22:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "src": "16246:54:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "id": 3047,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16246:54:5"
                                  }
                                ]
                              },
                              "id": 3049,
                              "nodeType": "IfStatement",
                              "src": "16068:251:5",
                              "trueBody": {
                                "id": 3035,
                                "nodeType": "Block",
                                "src": "16123:95:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3033,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 3022,
                                            "name": "nodeInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2972,
                                            "src": "16145:8:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                            }
                                          },
                                          "id": 3025,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "feeDelta",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1798,
                                          "src": "16145:17:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                            "typeString": "mapping(uint16 => int256)"
                                          }
                                        },
                                        "id": 3026,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 3024,
                                          "name": "endPeriod",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2897,
                                          "src": "16163:9:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "16145:28:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "id": 3032,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "-",
                                        "prefix": true,
                                        "src": "16176:23:5",
                                        "subExpression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 3029,
                                                "name": "policy",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2885,
                                                "src": "16184:6:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                                  "typeString": "struct PolicyManager.Policy storage pointer"
                                                }
                                              },
                                              "id": 3030,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "feeRate",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1768,
                                              "src": "16184:14:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint128",
                                                "typeString": "uint128"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint128",
                                                "typeString": "uint128"
                                              }
                                            ],
                                            "id": 3028,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "16177:6:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_int256_$",
                                              "typeString": "type(int256)"
                                            },
                                            "typeName": {
                                              "id": 3027,
                                              "name": "int256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "16177:6:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": null,
                                                "typeString": null
                                              }
                                            }
                                          },
                                          "id": 3031,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "16177:22:5",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "src": "16145:54:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "id": 3034,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16145:54:5"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 3055,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3050,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2972,
                                      "src": "16393:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 3051,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1798,
                                    "src": "16393:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 3053,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 3052,
                                    "name": "lastRefundedPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2978,
                                    "src": "16411:18:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16393:37:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 3054,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16434:1:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "16393:42:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 3065,
                              "nodeType": "IfStatement",
                              "src": "16389:146:5",
                              "trueBody": {
                                "id": 3064,
                                "nodeType": "Block",
                                "src": "16437:98:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3062,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 3056,
                                            "name": "nodeInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2972,
                                            "src": "16459:8:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                            }
                                          },
                                          "id": 3059,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "feeDelta",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1798,
                                          "src": "16459:17:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                            "typeString": "mapping(uint16 => int256)"
                                          }
                                        },
                                        "id": 3060,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 3058,
                                          "name": "lastRefundedPeriod",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2978,
                                          "src": "16477:18:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "16459:37:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "id": 3061,
                                        "name": "DEFAULT_FEE_DELTA",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1843,
                                        "src": "16499:17:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "src": "16459:57:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "id": 3063,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16459:57:5"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 3071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3066,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2972,
                                      "src": "16556:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 3067,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1798,
                                    "src": "16556:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 3069,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 3068,
                                    "name": "endPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2897,
                                    "src": "16574:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16556:28:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 3070,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16588:1:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "16556:33:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 3081,
                              "nodeType": "IfStatement",
                              "src": "16552:128:5",
                              "trueBody": {
                                "id": 3080,
                                "nodeType": "Block",
                                "src": "16591:89:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3078,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 3072,
                                            "name": "nodeInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2972,
                                            "src": "16613:8:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                            }
                                          },
                                          "id": 3075,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "feeDelta",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1798,
                                          "src": "16613:17:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                            "typeString": "mapping(uint16 => int256)"
                                          }
                                        },
                                        "id": 3076,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 3074,
                                          "name": "endPeriod",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2897,
                                          "src": "16631:9:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "16613:28:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "id": 3077,
                                        "name": "DEFAULT_FEE_DELTA",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1843,
                                        "src": "16644:17:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "src": "16613:48:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "id": 3079,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16613:48:5"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3092,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 3082,
                                  "name": "nodeRefundValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2956,
                                  "src": "16697:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3091,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        },
                                        "id": 3087,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "id": 3085,
                                          "name": "endPeriod",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2897,
                                          "src": "16724:9:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "id": 3086,
                                          "name": "lastRefundedPeriod",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2978,
                                          "src": "16736:18:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "src": "16724:30:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      ],
                                      "id": 3084,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "16716:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 3083,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "16716:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 3088,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16716:39:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3089,
                                      "name": "policy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2885,
                                      "src": "16758:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                        "typeString": "struct PolicyManager.Policy storage pointer"
                                      }
                                    },
                                    "id": 3090,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeRate",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1768,
                                    "src": "16758:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "src": "16716:56:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16697:75:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3093,
                              "nodeType": "ExpressionStatement",
                              "src": "16697:75:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3096,
                            "name": "_forceRevoke",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2875,
                            "src": "16804:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 3100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3097,
                                "name": "arrangement",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2927,
                                "src": "16820:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                  "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                }
                              },
                              "id": 3098,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastRefundedPeriod",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1759,
                              "src": "16820:30:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 3099,
                              "name": "endPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2897,
                              "src": "16854:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "src": "16820:43:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "16804:59:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3140,
                          "nodeType": "Block",
                          "src": "17165:104:5",
                          "statements": [
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3133,
                                    "name": "_policyId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2871,
                                    "src": "17209:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3134,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "17220:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 3135,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "17220:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 3136,
                                    "name": "node",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2934,
                                    "src": "17232:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 3137,
                                    "name": "nodeRefundValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2956,
                                    "src": "17238:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3132,
                                  "name": "RefundForArrangement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1707,
                                  "src": "17188:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes16_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (bytes16,address,address,uint256)"
                                  }
                                },
                                "id": 3138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17188:66:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3139,
                              "nodeType": "EmitStatement",
                              "src": "17183:71:5"
                            }
                          ]
                        },
                        "id": 3141,
                        "nodeType": "IfStatement",
                        "src": "16800:469:5",
                        "trueBody": {
                          "id": 3131,
                          "nodeType": "Block",
                          "src": "16865:294:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3102,
                                    "name": "arrangement",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2927,
                                    "src": "16883:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                      "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                    }
                                  },
                                  "id": 3104,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "node",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1755,
                                  "src": "16883:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 3105,
                                  "name": "RESERVED_NODE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1818,
                                  "src": "16902:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "16883:32:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3107,
                              "nodeType": "ExpressionStatement",
                              "src": "16883:32:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3108,
                                    "name": "arrangement",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2927,
                                    "src": "16933:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                      "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                    }
                                  },
                                  "id": 3110,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "indexOfDowntimePeriods",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1757,
                                  "src": "16933:34:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 3111,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16970:1:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "16933:38:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3113,
                              "nodeType": "ExpressionStatement",
                              "src": "16933:38:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3114,
                                    "name": "arrangement",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2927,
                                    "src": "16989:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                      "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                    }
                                  },
                                  "id": 3116,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "lastRefundedPeriod",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1759,
                                  "src": "16989:30:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 3117,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17022:1:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "16989:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 3119,
                              "nodeType": "ExpressionStatement",
                              "src": "16989:34:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "--",
                                "prefix": false,
                                "src": "17041:16:5",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 3120,
                                  "name": "numberOfActive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2909,
                                  "src": "17041:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3122,
                              "nodeType": "ExpressionStatement",
                              "src": "17041:16:5"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3124,
                                    "name": "_policyId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2871,
                                    "src": "17099:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3125,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "17110:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 3126,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "17110:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 3127,
                                    "name": "node",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2934,
                                    "src": "17122:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 3128,
                                    "name": "nodeRefundValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2956,
                                    "src": "17128:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3123,
                                  "name": "ArrangementRevoked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1697,
                                  "src": "17080:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes16_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (bytes16,address,address,uint256)"
                                  }
                                },
                                "id": 3129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17080:64:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3130,
                              "nodeType": "EmitStatement",
                              "src": "17075:69:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3142,
                            "name": "refundValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2878,
                            "src": "17283:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3143,
                            "name": "nodeRefundValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2956,
                            "src": "17298:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17283:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3145,
                        "nodeType": "ExpressionStatement",
                        "src": "17283:30:5"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3146,
                            "name": "_node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2873,
                            "src": "17331:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3147,
                            "name": "RESERVED_NODE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1818,
                            "src": "17340:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17331:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 3151,
                        "nodeType": "IfStatement",
                        "src": "17327:65:5",
                        "trueBody": {
                          "id": 3150,
                          "nodeType": "Block",
                          "src": "17355:37:5",
                          "statements": [
                            {
                              "id": 3149,
                              "nodeType": "Break",
                              "src": "17372:5:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2918,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2915,
                      "src": "15027:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2919,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2885,
                          "src": "15031:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 2920,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arrangements",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1785,
                        "src": "15031:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$1760_storage_$dyn_storage",
                          "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                        }
                      },
                      "id": 2921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "15031:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15027:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3153,
                  "initializationExpression": null,
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15059:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2923,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2915,
                        "src": "15059:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2925,
                    "nodeType": "ExpressionStatement",
                    "src": "15059:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "15020:2382:5"
                },
                {
                  "assignments": [
                    3155
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3155,
                      "mutability": "mutable",
                      "name": "policySponsor",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3246,
                      "src": "17411:29:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 3154,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17411:15:5",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3158,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 3156,
                      "name": "policy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2885,
                      "src": "17443:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                        "typeString": "struct PolicyManager.Policy storage pointer"
                      }
                    },
                    "id": 3157,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sponsor",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1764,
                    "src": "17443:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17411:46:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3159,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2873,
                      "src": "17471:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3160,
                      "name": "RESERVED_NODE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1818,
                      "src": "17480:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17471:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3233,
                    "nodeType": "Block",
                    "src": "18010:101:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 3226,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2915,
                                "src": "18069:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3227,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2885,
                                    "src": "18073:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 3228,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "arrangements",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1785,
                                  "src": "18073:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$1760_storage_$dyn_storage",
                                    "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 3229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "18073:26:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "18069:30:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 3225,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "18061:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 3231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18061:39:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3232,
                        "nodeType": "ExpressionStatement",
                        "src": "18061:39:5"
                      }
                    ]
                  },
                  "id": 3234,
                  "nodeType": "IfStatement",
                  "src": "17467:644:5",
                  "trueBody": {
                    "id": 3224,
                    "nodeType": "Block",
                    "src": "17495:509:5",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3162,
                            "name": "numberOfActive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2909,
                            "src": "17513:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17531:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17513:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3222,
                          "nodeType": "Block",
                          "src": "17905:89:5",
                          "statements": [
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3216,
                                    "name": "_policyId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2871,
                                    "src": "17944:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3217,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "17955:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 3218,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "17955:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 3219,
                                    "name": "refundValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2878,
                                    "src": "17967:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3215,
                                  "name": "RefundForPolicy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1723,
                                  "src": "17928:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes16_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (bytes16,address,uint256)"
                                  }
                                },
                                "id": 3220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17928:51:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3221,
                              "nodeType": "EmitStatement",
                              "src": "17923:56:5"
                            }
                          ]
                        },
                        "id": 3223,
                        "nodeType": "IfStatement",
                        "src": "17509:485:5",
                        "trueBody": {
                          "id": 3214,
                          "nodeType": "Block",
                          "src": "17534:365:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3165,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2885,
                                    "src": "17552:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 3167,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "disabled",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1762,
                                  "src": "17552:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 3168,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17570:4:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "17552:22:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3170,
                              "nodeType": "ExpressionStatement",
                              "src": "17552:22:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3171,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2885,
                                    "src": "17622:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 3173,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "sponsor",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1764,
                                  "src": "17622:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 3176,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17647:1:5",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 3175,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "17639:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3174,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "17639:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 3177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17639:10:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "17622:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 3179,
                              "nodeType": "ExpressionStatement",
                              "src": "17622:27:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3180,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2885,
                                    "src": "17667:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 3182,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1766,
                                  "src": "17667:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 3185,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17690:1:5",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 3184,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "17682:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3183,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "17682:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 3186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17682:10:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "17667:25:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3188,
                              "nodeType": "ExpressionStatement",
                              "src": "17667:25:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3189,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2885,
                                    "src": "17710:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 3191,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "feeRate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1768,
                                  "src": "17710:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 3192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17727:1:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "17710:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 3194,
                              "nodeType": "ExpressionStatement",
                              "src": "17710:18:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3195,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2885,
                                    "src": "17746:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 3197,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "startTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1770,
                                  "src": "17746:21:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 3198,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17770:1:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "17746:25:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 3200,
                              "nodeType": "ExpressionStatement",
                              "src": "17746:25:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3201,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2885,
                                    "src": "17789:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 3203,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "endTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1772,
                                  "src": "17789:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 3204,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17811:1:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "17789:23:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 3206,
                              "nodeType": "ExpressionStatement",
                              "src": "17789:23:5"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3208,
                                    "name": "_policyId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2871,
                                    "src": "17849:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3209,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "17860:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 3210,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "17860:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 3211,
                                    "name": "refundValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2878,
                                    "src": "17872:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3207,
                                  "name": "PolicyRevoked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1715,
                                  "src": "17835:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes16_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (bytes16,address,uint256)"
                                  }
                                },
                                "id": 3212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17835:49:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3213,
                              "nodeType": "EmitStatement",
                              "src": "17830:54:5"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3235,
                      "name": "refundValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "18124:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18138:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18124:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3245,
                  "nodeType": "IfStatement",
                  "src": "18120:82:5",
                  "trueBody": {
                    "id": 3244,
                    "nodeType": "Block",
                    "src": "18141:61:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3241,
                              "name": "refundValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2878,
                              "src": "18179:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3238,
                              "name": "policySponsor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3155,
                              "src": "18155:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 3240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sendValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16366,
                            "src": "18155:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                              "typeString": "function (address payable,uint256)"
                            }
                          },
                          "id": 3242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18155:36:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3243,
                        "nodeType": "ExpressionStatement",
                        "src": "18155:36:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2869,
              "nodeType": "StructuredDocumentation",
              "src": "14345:256:5",
              "text": "@notice Revoke/refund arrangement/policy by the sponsor\n@param _policyId Policy id\n@param _node Node that will be excluded or RESERVED_NODE if full policy should be used\n( @param _forceRevoke Force revoke arrangement/policy"
            },
            "id": 3247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refundInternal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2871,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3247,
                  "src": "14630:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 2870,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "14630:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2873,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3247,
                  "src": "14649:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14649:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2875,
                  "mutability": "mutable",
                  "name": "_forceRevoke",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3247,
                  "src": "14664:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2874,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14664:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14629:53:5"
            },
            "returnParameters": {
              "id": 2879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2878,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3247,
                  "src": "14709:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14709:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14708:21:5"
            },
            "scope": 4116,
            "src": "14606:3602:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3353,
              "nodeType": "Block",
              "src": "18500:838:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3257,
                      "name": "refundValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3255,
                      "src": "18510:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18524:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18510:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3260,
                  "nodeType": "ExpressionStatement",
                  "src": "18510:15:5"
                },
                {
                  "assignments": [
                    3262
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3262,
                      "mutability": "mutable",
                      "name": "policy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3353,
                      "src": "18535:21:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3261,
                        "name": "Policy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1786,
                        "src": "18535:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3266,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3263,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1851,
                      "src": "18559:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$1786_storage_$",
                        "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                      }
                    },
                    "id": 3265,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3264,
                      "name": "_policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3250,
                      "src": "18568:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18559:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$1786_storage",
                      "typeString": "struct PolicyManager.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18535:43:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3272,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3268,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3262,
                                    "src": "18597:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 3269,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1766,
                                  "src": "18597:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3270,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "18613:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3271,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "18613:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "18597:26:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                "id": 3277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3273,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3262,
                                    "src": "18627:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 3274,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sponsor",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1764,
                                  "src": "18627:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3275,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "18645:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "18645:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "18627:28:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "18597:58:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 3279,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "18596:60:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "18660:16:5",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3280,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3262,
                              "src": "18661:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 3281,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "disabled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1762,
                            "src": "18661:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "18596:80:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3267,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18588:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18588:89:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3285,
                  "nodeType": "ExpressionStatement",
                  "src": "18588:89:5"
                },
                {
                  "assignments": [
                    3287
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3287,
                      "mutability": "mutable",
                      "name": "i",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3353,
                      "src": "18687:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3286,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18687:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3289,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "18699:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18687:13:5"
                },
                {
                  "body": {
                    "id": 3338,
                    "nodeType": "Block",
                    "src": "18754:440:5",
                    "statements": [
                      {
                        "assignments": [
                          3299
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3299,
                            "mutability": "mutable",
                            "name": "arrangement",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3338,
                            "src": "18768:35:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                              "typeString": "struct PolicyManager.ArrangementInfo"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 3298,
                              "name": "ArrangementInfo",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1760,
                              "src": "18768:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3304,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3300,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3262,
                              "src": "18806:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 3301,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "arrangements",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1785,
                            "src": "18806:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$1760_storage_$dyn_storage",
                              "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                            }
                          },
                          "id": 3303,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3302,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3287,
                            "src": "18826:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "18806:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage",
                            "typeString": "struct PolicyManager.ArrangementInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18768:60:5"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3305,
                                "name": "arrangement",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3299,
                                "src": "18846:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                  "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                }
                              },
                              "id": 3306,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "node",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1755,
                              "src": "18846:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 3307,
                              "name": "RESERVED_NODE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1818,
                              "src": "18866:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "18846:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 3316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 3309,
                                "name": "_node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3252,
                                "src": "18883:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 3310,
                                "name": "RESERVED_NODE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1818,
                                "src": "18892:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "18883:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 3312,
                                "name": "_node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3252,
                                "src": "18909:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3313,
                                  "name": "arrangement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3299,
                                  "src": "18918:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                    "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                  }
                                },
                                "id": 3314,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "node",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1755,
                                "src": "18918:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "18909:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "18883:51:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "18846:88:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 3320,
                        "nodeType": "IfStatement",
                        "src": "18842:135:5",
                        "trueBody": {
                          "id": 3319,
                          "nodeType": "Block",
                          "src": "18936:41:5",
                          "statements": [
                            {
                              "id": 3318,
                              "nodeType": "Continue",
                              "src": "18954:8:5"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          3322,
                          null,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3322,
                            "mutability": "mutable",
                            "name": "nodeRefundValue",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3338,
                            "src": "18991:23:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3321,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18991:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null,
                          null
                        ],
                        "id": 3327,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3324,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3262,
                              "src": "19041:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3325,
                              "name": "arrangement",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3299,
                              "src": "19049:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                              }
                            ],
                            "id": 3323,
                            "name": "calculateRefundValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2868,
                            "src": "19020:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Policy_$1786_storage_ptr_$_t_struct$_ArrangementInfo_$1760_storage_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint16_$",
                              "typeString": "function (struct PolicyManager.Policy storage pointer,struct PolicyManager.ArrangementInfo storage pointer) view returns (uint256,uint256,uint16)"
                            }
                          },
                          "id": 3326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19020:41:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint16_$",
                            "typeString": "tuple(uint256,uint256,uint16)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18990:71:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3328,
                            "name": "refundValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3255,
                            "src": "19075:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3329,
                            "name": "nodeRefundValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3322,
                            "src": "19090:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19075:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3331,
                        "nodeType": "ExpressionStatement",
                        "src": "19075:30:5"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3332,
                            "name": "_node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3252,
                            "src": "19123:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3333,
                            "name": "RESERVED_NODE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1818,
                            "src": "19132:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19123:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 3337,
                        "nodeType": "IfStatement",
                        "src": "19119:65:5",
                        "trueBody": {
                          "id": 3336,
                          "nodeType": "Block",
                          "src": "19147:37:5",
                          "statements": [
                            {
                              "id": 3335,
                              "nodeType": "Break",
                              "src": "19164:5:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3290,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3287,
                      "src": "18717:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3291,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3262,
                          "src": "18721:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 3292,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arrangements",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1785,
                        "src": "18721:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$1760_storage_$dyn_storage",
                          "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                        }
                      },
                      "id": 3293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "18721:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18717:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3339,
                  "initializationExpression": null,
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 3296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "18749:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 3295,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3287,
                        "src": "18749:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3297,
                    "nodeType": "ExpressionStatement",
                    "src": "18749:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "18710:484:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3340,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3252,
                      "src": "19207:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3341,
                      "name": "RESERVED_NODE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1818,
                      "src": "19216:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "19207:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3352,
                  "nodeType": "IfStatement",
                  "src": "19203:129:5",
                  "trueBody": {
                    "id": 3351,
                    "nodeType": "Block",
                    "src": "19231:101:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 3344,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3287,
                                "src": "19290:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3345,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3262,
                                    "src": "19294:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 3346,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "arrangements",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1785,
                                  "src": "19294:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$1760_storage_$dyn_storage",
                                    "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 3347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "19294:26:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19290:30:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 3343,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19282:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 3349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19282:39:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3350,
                        "nodeType": "ExpressionStatement",
                        "src": "19282:39:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3248,
              "nodeType": "StructuredDocumentation",
              "src": "18214:153:5",
              "text": "@notice Calculate amount of refund\n@param _policyId Policy id\n@param _node Node or RESERVED_NODE if all nodes should be used"
            },
            "id": 3354,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRefundValueInternal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3250,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3354,
                  "src": "18410:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3249,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "18410:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3252,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3354,
                  "src": "18429:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18429:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18409:34:5"
            },
            "returnParameters": {
              "id": 3256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3255,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3354,
                  "src": "18475:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18475:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18474:21:5"
            },
            "scope": 4116,
            "src": "18372:966:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3377,
              "nodeType": "Block",
              "src": "19515:128:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3364,
                              "name": "_policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3357,
                              "src": "19548:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            ],
                            "id": 3363,
                            "name": "getPolicyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2453,
                            "src": "19533:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes16_$returns$_t_address_$",
                              "typeString": "function (bytes16) view returns (address)"
                            }
                          },
                          "id": 3365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19533:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3366,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "19562:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "19562:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "19533:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19525:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19525:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3370,
                  "nodeType": "ExpressionStatement",
                  "src": "19525:48:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3372,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3357,
                        "src": "19605:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3373,
                        "name": "RESERVED_NODE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1818,
                        "src": "19616:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 3374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19631:4:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3371,
                      "name": "refundInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3247,
                      "src": "19590:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes16_$_t_address_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (bytes16,address,bool) returns (uint256)"
                      }
                    },
                    "id": 3375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19590:46:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3361,
                  "id": 3376,
                  "nodeType": "Return",
                  "src": "19583:53:5"
                }
              ]
            },
            "documentation": {
              "id": 3355,
              "nodeType": "StructuredDocumentation",
              "src": "19344:86:5",
              "text": "@notice Revoke policy by the sponsor\n@param _policyId Policy id"
            },
            "functionSelector": "a2d1d5e2",
            "id": 3378,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokePolicy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3357,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3378,
                  "src": "19457:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3356,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "19457:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19456:19:5"
            },
            "returnParameters": {
              "id": 3361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3360,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3378,
                  "src": "19494:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19494:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19493:21:5"
            },
            "scope": 4116,
            "src": "19435:208:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3409,
              "nodeType": "Block",
              "src": "19903:161:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3389,
                          "name": "_node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3383,
                          "src": "19921:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3390,
                          "name": "RESERVED_NODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1818,
                          "src": "19930:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "19921:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3388,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19913:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19913:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3393,
                  "nodeType": "ExpressionStatement",
                  "src": "19913:31:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3396,
                              "name": "_policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3381,
                              "src": "19977:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            ],
                            "id": 3395,
                            "name": "getPolicyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2453,
                            "src": "19962:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes16_$returns$_t_address_$",
                              "typeString": "function (bytes16) view returns (address)"
                            }
                          },
                          "id": 3397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19962:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3398,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "19991:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "19991:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "19962:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3394,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19954:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19954:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3402,
                  "nodeType": "ExpressionStatement",
                  "src": "19954:48:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3404,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3381,
                        "src": "20034:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3405,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3383,
                        "src": "20045:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 3406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20052:4:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3403,
                      "name": "refundInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3247,
                      "src": "20019:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes16_$_t_address_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (bytes16,address,bool) returns (uint256)"
                      }
                    },
                    "id": 3407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20019:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3387,
                  "id": 3408,
                  "nodeType": "Return",
                  "src": "20012:45:5"
                }
              ]
            },
            "documentation": {
              "id": 3379,
              "nodeType": "StructuredDocumentation",
              "src": "19649:137:5",
              "text": "@notice Revoke arrangement by the sponsor\n@param _policyId Policy id\n@param _node Node that will be excluded"
            },
            "functionSelector": "8d7fd2fa",
            "id": 3410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeArrangement",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3381,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3410,
                  "src": "19818:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3380,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "19818:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3383,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3410,
                  "src": "19837:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19837:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19817:34:5"
            },
            "returnParameters": {
              "id": 3387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3386,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3410,
                  "src": "19878:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19878:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19877:21:5"
            },
            "scope": 4116,
            "src": "19791:273:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3433,
              "nodeType": "Block",
              "src": "20359:100:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3424,
                            "name": "_policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3413,
                            "src": "20422:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes16",
                              "typeString": "bytes16"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 3425,
                            "name": "_node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3415,
                            "src": "20433:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes16",
                              "typeString": "bytes16"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3422,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "20405:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "20405:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20405:34:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30783435",
                            "id": 3429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20446:4:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_69_by_1",
                              "typeString": "int_const 69"
                            },
                            "value": "0x45"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_69_by_1",
                              "typeString": "int_const 69"
                            }
                          ],
                          "id": 3428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20441:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes1_$",
                            "typeString": "type(bytes1)"
                          },
                          "typeName": {
                            "id": 3427,
                            "name": "byte",
                            "nodeType": "ElementaryTypeName",
                            "src": "20441:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20441:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3420,
                        "name": "SignatureVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12381,
                        "src": "20376:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignatureVerifier_$12381_$",
                          "typeString": "type(library SignatureVerifier)"
                        }
                      },
                      "id": 3421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hashEIP191",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12346,
                      "src": "20376:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes1_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory,bytes1) view returns (bytes32)"
                      }
                    },
                    "id": 3431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20376:76:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 3419,
                  "id": 3432,
                  "nodeType": "Return",
                  "src": "20369:83:5"
                }
              ]
            },
            "documentation": {
              "id": 3411,
              "nodeType": "StructuredDocumentation",
              "src": "20070:193:5",
              "text": "@notice Get unsigned hash for revocation\n@param _policyId Policy id\n@param _node Node that will be excluded\n@return Revocation hash, EIP191 version 0x45 ('E')"
            },
            "functionSelector": "cbf12f2a",
            "id": 3434,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRevocationHash",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3413,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3434,
                  "src": "20295:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3412,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "20295:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3415,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3434,
                  "src": "20314:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20314:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20294:34:5"
            },
            "returnParameters": {
              "id": 3419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3418,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3434,
                  "src": "20350:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3417,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20350:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20349:9:5"
            },
            "scope": 4116,
            "src": "20268:191:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3467,
              "nodeType": "Block",
              "src": "20795:197:5",
              "statements": [
                {
                  "assignments": [
                    3445
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3445,
                      "mutability": "mutable",
                      "name": "hash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3467,
                      "src": "20805:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3444,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "20805:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3450,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3447,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3437,
                        "src": "20838:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3448,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3439,
                        "src": "20849:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3446,
                      "name": "getRevocationHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3434,
                      "src": "20820:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes16_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bytes16,address) view returns (bytes32)"
                      }
                    },
                    "id": 3449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20820:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20805:50:5"
                },
                {
                  "assignments": [
                    3452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3452,
                      "mutability": "mutable",
                      "name": "recovered",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3467,
                      "src": "20865:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3451,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "20865:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3458,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3455,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3445,
                        "src": "20911:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3456,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3441,
                        "src": "20917:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3453,
                        "name": "SignatureVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12381,
                        "src": "20885:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignatureVerifier_$12381_$",
                          "typeString": "type(library SignatureVerifier)"
                        }
                      },
                      "id": 3454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12108,
                      "src": "20885:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 3457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20885:43:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20865:63:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3461,
                              "name": "_policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3437,
                              "src": "20961:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            ],
                            "id": 3460,
                            "name": "getPolicyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2453,
                            "src": "20946:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes16_$returns$_t_address_$",
                              "typeString": "function (bytes16) view returns (address)"
                            }
                          },
                          "id": 3462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20946:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3463,
                          "name": "recovered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3452,
                          "src": "20975:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "20946:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20938:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20938:47:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3466,
                  "nodeType": "ExpressionStatement",
                  "src": "20938:47:5"
                }
              ]
            },
            "documentation": {
              "id": 3435,
              "nodeType": "StructuredDocumentation",
              "src": "20465:223:5",
              "text": "@notice Check correctness of signature\n@param _policyId Policy id\n@param _node Node that will be excluded, zero address if whole policy will be revoked\n@param _signature Signature of owner"
            },
            "id": 3468,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkOwnerSignature",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3437,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3468,
                  "src": "20722:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3436,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "20722:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3439,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3468,
                  "src": "20741:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20741:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3441,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3468,
                  "src": "20756:23:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3440,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20756:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20721:59:5"
            },
            "returnParameters": {
              "id": 3443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20795:0:5"
            },
            "scope": 4116,
            "src": "20693:299:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3492,
              "nodeType": "Block",
              "src": "21403:121:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3481,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "21433:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3482,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3473,
                        "src": "21444:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3483,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3475,
                        "src": "21451:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 3480,
                      "name": "checkOwnerSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3468,
                      "src": "21413:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes16_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes16,address,bytes memory) view"
                      }
                    },
                    "id": 3484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21413:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3485,
                  "nodeType": "ExpressionStatement",
                  "src": "21413:49:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3487,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3471,
                        "src": "21494:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3488,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3473,
                        "src": "21505:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 3489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21512:4:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3486,
                      "name": "refundInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3247,
                      "src": "21479:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes16_$_t_address_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (bytes16,address,bool) returns (uint256)"
                      }
                    },
                    "id": 3490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21479:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3479,
                  "id": 3491,
                  "nodeType": "Return",
                  "src": "21472:45:5"
                }
              ]
            },
            "documentation": {
              "id": 3469,
              "nodeType": "StructuredDocumentation",
              "src": "20998:272:5",
              "text": "@notice Revoke policy or arrangement using owner's signature\n@param _policyId Policy id\n@param _node Node that will be excluded, zero address if whole policy will be revoked\n@param _signature Signature of owner, EIP191 version 0x45 ('E')"
            },
            "functionSelector": "076421e8",
            "id": 3493,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revoke",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3471,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3493,
                  "src": "21291:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3470,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "21291:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3473,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3493,
                  "src": "21310:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21310:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3475,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3493,
                  "src": "21325:25:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3474,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21325:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21290:61:5"
            },
            "returnParameters": {
              "id": 3479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3478,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3493,
                  "src": "21378:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21378:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21377:21:5"
            },
            "scope": 4116,
            "src": "21275:249:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3525,
              "nodeType": "Block",
              "src": "21670:194:5",
              "statements": [
                {
                  "assignments": [
                    3500
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3500,
                      "mutability": "mutable",
                      "name": "policy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3525,
                      "src": "21680:21:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3499,
                        "name": "Policy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1786,
                        "src": "21680:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3504,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3501,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1851,
                      "src": "21704:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$1786_storage_$",
                        "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                      }
                    },
                    "id": 3503,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3502,
                      "name": "_policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3496,
                      "src": "21713:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21704:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$1786_storage",
                      "typeString": "struct PolicyManager.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21680:43:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3506,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3500,
                              "src": "21741:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 3507,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1766,
                            "src": "21741:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3508,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "21757:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "21757:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "21741:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "id": 3515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3511,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3500,
                              "src": "21771:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 3512,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sponsor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1764,
                            "src": "21771:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3513,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "21789:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "21789:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "21771:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "21741:58:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3505,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21733:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21733:67:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3518,
                  "nodeType": "ExpressionStatement",
                  "src": "21733:67:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3520,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3496,
                        "src": "21825:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3521,
                        "name": "RESERVED_NODE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1818,
                        "src": "21836:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 3522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21851:5:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3519,
                      "name": "refundInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3247,
                      "src": "21810:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes16_$_t_address_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (bytes16,address,bool) returns (uint256)"
                      }
                    },
                    "id": 3523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21810:47:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3524,
                  "nodeType": "ExpressionStatement",
                  "src": "21810:47:5"
                }
              ]
            },
            "documentation": {
              "id": 3494,
              "nodeType": "StructuredDocumentation",
              "src": "21530:91:5",
              "text": "@notice Refund part of fee by the sponsor\n@param _policyId Policy id"
            },
            "functionSelector": "dfdecfaf",
            "id": 3526,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3496,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3526,
                  "src": "21642:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3495,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "21642:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21641:19:5"
            },
            "returnParameters": {
              "id": 3498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21670:0:5"
            },
            "scope": 4116,
            "src": "21626:238:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3568,
              "nodeType": "Block",
              "src": "22110:234:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3537,
                          "name": "_node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3531,
                          "src": "22128:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3538,
                          "name": "RESERVED_NODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1818,
                          "src": "22137:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "22128:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22120:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22120:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3541,
                  "nodeType": "ExpressionStatement",
                  "src": "22120:31:5"
                },
                {
                  "assignments": [
                    3543
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3543,
                      "mutability": "mutable",
                      "name": "policy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3568,
                      "src": "22161:21:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3542,
                        "name": "Policy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1786,
                        "src": "22161:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3547,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3544,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1851,
                      "src": "22185:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$1786_storage_$",
                        "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                      }
                    },
                    "id": 3546,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3545,
                      "name": "_policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3529,
                      "src": "22194:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "22185:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$1786_storage",
                      "typeString": "struct PolicyManager.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22161:43:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3549,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3543,
                              "src": "22222:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 3550,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1766,
                            "src": "22222:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3551,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "22238:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "22238:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "22222:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "id": 3558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3554,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3543,
                              "src": "22252:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 3555,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sponsor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1764,
                            "src": "22252:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3556,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "22270:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "22270:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "22252:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "22222:58:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22214:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22214:67:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3561,
                  "nodeType": "ExpressionStatement",
                  "src": "22214:67:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3563,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3529,
                        "src": "22313:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3564,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3531,
                        "src": "22324:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 3565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22331:5:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3562,
                      "name": "refundInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3247,
                      "src": "22298:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes16_$_t_address_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (bytes16,address,bool) returns (uint256)"
                      }
                    },
                    "id": 3566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22298:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3535,
                  "id": 3567,
                  "nodeType": "Return",
                  "src": "22291:46:5"
                }
              ]
            },
            "documentation": {
              "id": 3527,
              "nodeType": "StructuredDocumentation",
              "src": "21870:134:5",
              "text": "@notice Refund part of one node's fee by the sponsor\n@param _policyId Policy id\n@param _node Node address"
            },
            "functionSelector": "63c509d5",
            "id": 3569,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3529,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3569,
                  "src": "22025:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3528,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "22025:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3531,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3569,
                  "src": "22044:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22044:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22024:34:5"
            },
            "returnParameters": {
              "id": 3535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3534,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3569,
                  "src": "22085:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22085:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22084:21:5"
            },
            "scope": 4116,
            "src": "22009:335:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3582,
              "nodeType": "Block",
              "src": "22544:78:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3578,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3572,
                        "src": "22590:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3579,
                        "name": "RESERVED_NODE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1818,
                        "src": "22601:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3577,
                      "name": "calculateRefundValueInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3354,
                      "src": "22561:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes16_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (bytes16,address) view returns (uint256)"
                      }
                    },
                    "id": 3580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22561:54:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3576,
                  "id": 3581,
                  "nodeType": "Return",
                  "src": "22554:61:5"
                }
              ]
            },
            "documentation": {
              "id": 3570,
              "nodeType": "StructuredDocumentation",
              "src": "22350:84:5",
              "text": "@notice Calculate amount of refund\n@param _policyId Policy id"
            },
            "functionSelector": "e665830d",
            "id": 3583,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRefundValue",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3572,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3583,
                  "src": "22469:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3571,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "22469:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22468:19:5"
            },
            "returnParameters": {
              "id": 3576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3575,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3583,
                  "src": "22519:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22519:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22518:21:5"
            },
            "scope": 4116,
            "src": "22439:183:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3604,
              "nodeType": "Block",
              "src": "22861:111:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3594,
                          "name": "_node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3588,
                          "src": "22879:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3595,
                          "name": "RESERVED_NODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1818,
                          "src": "22888:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "22879:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3593,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22871:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22871:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3598,
                  "nodeType": "ExpressionStatement",
                  "src": "22871:31:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3600,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3586,
                        "src": "22948:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3601,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3588,
                        "src": "22959:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3599,
                      "name": "calculateRefundValueInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3354,
                      "src": "22919:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes16_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (bytes16,address) view returns (uint256)"
                      }
                    },
                    "id": 3602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22919:46:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3592,
                  "id": 3603,
                  "nodeType": "Return",
                  "src": "22912:53:5"
                }
              ]
            },
            "documentation": {
              "id": 3584,
              "nodeType": "StructuredDocumentation",
              "src": "22628:108:5",
              "text": "@notice Calculate amount of refund\n@param _policyId Policy id\n@param _node Node"
            },
            "functionSelector": "a87d40d9",
            "id": 3605,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRefundValue",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3586,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3605,
                  "src": "22771:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3585,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "22771:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3588,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3605,
                  "src": "22790:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22790:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22770:34:5"
            },
            "returnParameters": {
              "id": 3592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3591,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3605,
                  "src": "22836:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22836:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22835:21:5"
            },
            "scope": 4116,
            "src": "22741:231:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3619,
              "nodeType": "Block",
              "src": "23163:63:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3613,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1851,
                          "src": "23180:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$1786_storage_$",
                            "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                          }
                        },
                        "id": 3615,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3614,
                          "name": "_policyId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3608,
                          "src": "23189:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes16",
                            "typeString": "bytes16"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23180:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage",
                          "typeString": "struct PolicyManager.Policy storage ref"
                        }
                      },
                      "id": 3616,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "arrangements",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1785,
                      "src": "23180:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$1760_storage_$dyn_storage",
                        "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                      }
                    },
                    "id": 3617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "23180:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3612,
                  "id": 3618,
                  "nodeType": "Return",
                  "src": "23173:46:5"
                }
              ]
            },
            "documentation": {
              "id": 3606,
              "nodeType": "StructuredDocumentation",
              "src": "22978:98:5",
              "text": "@notice Get number of arrangements in the policy\n@param _policyId Policy id"
            },
            "functionSelector": "6bd2af57",
            "id": 3620,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getArrangementsLength",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3608,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3620,
                  "src": "23112:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3607,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "23112:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23111:19:5"
            },
            "returnParameters": {
              "id": 3612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3611,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3620,
                  "src": "23154:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3610,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23154:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23153:9:5"
            },
            "scope": 4116,
            "src": "23081:145:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3637,
              "nodeType": "Block",
              "src": "23569:54:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3630,
                          "name": "nodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1855,
                          "src": "23586:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$1799_storage_$",
                            "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                          }
                        },
                        "id": 3632,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3631,
                          "name": "_node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3623,
                          "src": "23592:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23586:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage",
                          "typeString": "struct PolicyManager.NodeInfo storage ref"
                        }
                      },
                      "id": 3633,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "feeDelta",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1798,
                      "src": "23586:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                        "typeString": "mapping(uint16 => int256)"
                      }
                    },
                    "id": 3635,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3634,
                      "name": "_period",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3625,
                      "src": "23608:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23586:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 3629,
                  "id": 3636,
                  "nodeType": "Return",
                  "src": "23579:37:5"
                }
              ]
            },
            "documentation": {
              "id": 3621,
              "nodeType": "StructuredDocumentation",
              "src": "23232:146:5",
              "text": "@notice Get information about staker's fee rate\n@param _node Address of staker\n@param _period Period to get fee delta"
            },
            "functionSelector": "8e81ca5a",
            "id": 3638,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNodeFeeDelta",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3623,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3638,
                  "src": "23408:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23408:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3625,
                  "mutability": "mutable",
                  "name": "_period",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3638,
                  "src": "23423:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 3624,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "23423:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23407:31:5"
            },
            "returnParameters": {
              "id": 3629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3628,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3638,
                  "src": "23557:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 3627,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23557:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23556:8:5"
            },
            "scope": 4116,
            "src": "23383:240:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3676,
              "nodeType": "Block",
              "src": "23988:230:5",
              "statements": [
                {
                  "assignments": [
                    3653
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3653,
                      "mutability": "mutable",
                      "name": "info",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3676,
                      "src": "23998:28:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                        "typeString": "struct PolicyManager.ArrangementInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3652,
                        "name": "ArrangementInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1760,
                        "src": "23998:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                          "typeString": "struct PolicyManager.ArrangementInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3660,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3654,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1851,
                          "src": "24029:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$1786_storage_$",
                            "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                          }
                        },
                        "id": 3656,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3655,
                          "name": "_policyId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3641,
                          "src": "24038:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes16",
                            "typeString": "bytes16"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "24029:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage",
                          "typeString": "struct PolicyManager.Policy storage ref"
                        }
                      },
                      "id": 3657,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "arrangements",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1785,
                      "src": "24029:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$1760_storage_$dyn_storage",
                        "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                      }
                    },
                    "id": 3659,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3658,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3643,
                      "src": "24062:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "24029:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage",
                      "typeString": "struct PolicyManager.ArrangementInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23998:71:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3661,
                      "name": "node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3646,
                      "src": "24079:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3662,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3653,
                        "src": "24086:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                          "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                        }
                      },
                      "id": 3663,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "node",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1755,
                      "src": "24086:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "24079:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3665,
                  "nodeType": "ExpressionStatement",
                  "src": "24079:16:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3666,
                      "name": "indexOfDowntimePeriods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3648,
                      "src": "24105:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3667,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3653,
                        "src": "24130:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                          "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                        }
                      },
                      "id": 3668,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "indexOfDowntimePeriods",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1757,
                      "src": "24130:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24105:52:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3670,
                  "nodeType": "ExpressionStatement",
                  "src": "24105:52:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3671,
                      "name": "lastRefundedPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3650,
                      "src": "24167:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3672,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3653,
                        "src": "24188:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                          "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                        }
                      },
                      "id": 3673,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastRefundedPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1759,
                      "src": "24188:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "24167:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 3675,
                  "nodeType": "ExpressionStatement",
                  "src": "24167:44:5"
                }
              ]
            },
            "documentation": {
              "id": 3639,
              "nodeType": "StructuredDocumentation",
              "src": "23629:65:5",
              "text": "@notice Return the information about arrangement"
            },
            "functionSelector": "d845f4fb",
            "id": 3677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getArrangementInfo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3641,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3677,
                  "src": "23727:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3640,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "23727:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3643,
                  "mutability": "mutable",
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3677,
                  "src": "23746:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23746:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23726:35:5"
            },
            "returnParameters": {
              "id": 3651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3646,
                  "mutability": "mutable",
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3677,
                  "src": "23911:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23911:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3648,
                  "mutability": "mutable",
                  "name": "indexOfDowntimePeriods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3677,
                  "src": "23925:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23925:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3650,
                  "mutability": "mutable",
                  "name": "lastRefundedPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3677,
                  "src": "23957:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 3649,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "23957:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23910:73:5"
            },
            "scope": 4116,
            "src": "23699:519:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3703,
              "nodeType": "Block",
              "src": "24403:180:5",
              "statements": [
                {
                  "assignments": [
                    3688
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3688,
                      "mutability": "mutable",
                      "name": "memoryAddress",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3703,
                      "src": "24413:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3687,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "24413:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3701,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3690,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3680,
                        "src": "24453:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3691,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "24462:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyManager_$4116",
                              "typeString": "contract PolicyManager"
                            }
                          },
                          "id": 3692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "policies",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1851,
                          "src": "24462:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes16_$returns$_t_bool_$_t_address_payable_$_t_address_$_t_uint128_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "function (bytes16) view external returns (bool,address payable,address,uint128,uint64,uint64,uint256,uint256,uint256,uint256,uint256)"
                          }
                        },
                        "id": 3693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "24462:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 3694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24486:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3697,
                            "name": "_policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3682,
                            "src": "24497:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes16",
                              "typeString": "bytes16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes16",
                              "typeString": "bytes16"
                            }
                          ],
                          "id": 3696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24489:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 3695,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "24489:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24489:18:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 3699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24509:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3689,
                      "name": "delegateGetData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14073,
                      "src": "24437:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (address,bytes4,uint8,bytes32,bytes32) returns (bytes32)"
                      }
                    },
                    "id": 3700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24437:74:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24413:98:5"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "24530:47:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "24544:23:5",
                        "value": {
                          "name": "memoryAddress",
                          "nodeType": "YulIdentifier",
                          "src": "24554:13:5"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "24544:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "berlin",
                  "externalReferences": [
                    {
                      "declaration": 3688,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "24554:13:5",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3685,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "24544:6:5",
                      "valueSize": 1
                    }
                  ],
                  "id": 3702,
                  "nodeType": "InlineAssembly",
                  "src": "24521:56:5"
                }
              ]
            },
            "documentation": {
              "id": 3678,
              "nodeType": "StructuredDocumentation",
              "src": "24225:58:5",
              "text": "@dev Get Policy structure by delegatecall"
            },
            "id": 3704,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateGetPolicy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3680,
                  "mutability": "mutable",
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3704,
                  "src": "24315:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24315:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3682,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3704,
                  "src": "24332:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3681,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "24332:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24314:36:5"
            },
            "returnParameters": {
              "id": 3686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3685,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3704,
                  "src": "24377:20:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Policy_$1786_memory_ptr",
                    "typeString": "struct PolicyManager.Policy"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3684,
                    "name": "Policy",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1786,
                    "src": "24377:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                      "typeString": "struct PolicyManager.Policy"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24376:22:5"
            },
            "scope": 4116,
            "src": "24288:295:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3735,
              "nodeType": "Block",
              "src": "24810:217:5",
              "statements": [
                {
                  "assignments": [
                    3717
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3717,
                      "mutability": "mutable",
                      "name": "memoryAddress",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3735,
                      "src": "24820:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3716,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "24820:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3733,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3719,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3707,
                        "src": "24873:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3720,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "24882:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyManager_$4116",
                              "typeString": "contract PolicyManager"
                            }
                          },
                          "id": 3721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getArrangementInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3677,
                          "src": "24882:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes16_$_t_uint256_$returns$_t_address_$_t_uint256_$_t_uint16_$",
                            "typeString": "function (bytes16,uint256) view external returns (address,uint256,uint16)"
                          }
                        },
                        "id": 3722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "24882:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 3723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24916:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3726,
                            "name": "_policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3709,
                            "src": "24927:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes16",
                              "typeString": "bytes16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes16",
                              "typeString": "bytes16"
                            }
                          ],
                          "id": 3725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24919:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 3724,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "24919:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24919:18:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3730,
                            "name": "_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3711,
                            "src": "24947:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24939:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 3728,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "24939:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24939:15:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3718,
                      "name": "delegateGetData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14073,
                      "src": "24844:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (address,bytes4,uint8,bytes32,bytes32) returns (bytes32)"
                      }
                    },
                    "id": 3732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24844:111:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24820:135:5"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "24974:47:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "24988:23:5",
                        "value": {
                          "name": "memoryAddress",
                          "nodeType": "YulIdentifier",
                          "src": "24998:13:5"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "24988:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "berlin",
                  "externalReferences": [
                    {
                      "declaration": 3717,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "24998:13:5",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3714,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "24988:6:5",
                      "valueSize": 1
                    }
                  ],
                  "id": 3734,
                  "nodeType": "InlineAssembly",
                  "src": "24965:56:5"
                }
              ]
            },
            "documentation": {
              "id": 3705,
              "nodeType": "StructuredDocumentation",
              "src": "24589:67:5",
              "text": "@dev Get ArrangementInfo structure by delegatecall"
            },
            "id": 3736,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateGetArrangementInfo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3707,
                  "mutability": "mutable",
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3736,
                  "src": "24697:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24697:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3709,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3736,
                  "src": "24714:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3708,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "24714:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3711,
                  "mutability": "mutable",
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3736,
                  "src": "24733:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24733:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24696:52:5"
            },
            "returnParameters": {
              "id": 3715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3714,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3736,
                  "src": "24775:29:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ArrangementInfo_$1760_memory_ptr",
                    "typeString": "struct PolicyManager.ArrangementInfo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3713,
                    "name": "ArrangementInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1760,
                    "src": "24775:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                      "typeString": "struct PolicyManager.ArrangementInfo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24774:31:5"
            },
            "scope": 4116,
            "src": "24661:366:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3765,
              "nodeType": "Block",
              "src": "25213:182:5",
              "statements": [
                {
                  "assignments": [
                    3747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3747,
                      "mutability": "mutable",
                      "name": "memoryAddress",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3765,
                      "src": "25223:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3746,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "25223:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3763,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3749,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3739,
                        "src": "25263:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3750,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "25272:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyManager_$4116",
                              "typeString": "contract PolicyManager"
                            }
                          },
                          "id": 3751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nodes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1855,
                          "src": "25272:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint128_$_t_uint16_$_t_uint256_$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint128,uint16,uint256,uint256)"
                          }
                        },
                        "id": 3752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "25272:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 3753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25293:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3758,
                                "name": "_node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3741,
                                "src": "25312:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25304:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 3756,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "25304:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 3759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25304:14:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "25296:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 3754,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "25296:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25296:23:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 3761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25321:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3748,
                      "name": "delegateGetData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14073,
                      "src": "25247:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (address,bytes4,uint8,bytes32,bytes32) returns (bytes32)"
                      }
                    },
                    "id": 3762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25247:76:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25223:100:5"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "25342:47:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "25356:23:5",
                        "value": {
                          "name": "memoryAddress",
                          "nodeType": "YulIdentifier",
                          "src": "25366:13:5"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "25356:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "berlin",
                  "externalReferences": [
                    {
                      "declaration": 3747,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "25366:13:5",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3744,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "25356:6:5",
                      "valueSize": 1
                    }
                  ],
                  "id": 3764,
                  "nodeType": "InlineAssembly",
                  "src": "25333:56:5"
                }
              ]
            },
            "documentation": {
              "id": 3737,
              "nodeType": "StructuredDocumentation",
              "src": "25033:60:5",
              "text": "@dev Get NodeInfo structure by delegatecall"
            },
            "id": 3766,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateGetNodeInfo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3739,
                  "mutability": "mutable",
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3766,
                  "src": "25127:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25127:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3741,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3766,
                  "src": "25144:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25144:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25126:32:5"
            },
            "returnParameters": {
              "id": 3745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3744,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3766,
                  "src": "25185:22:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NodeInfo_$1799_memory_ptr",
                    "typeString": "struct PolicyManager.NodeInfo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3743,
                    "name": "NodeInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1799,
                    "src": "25185:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                      "typeString": "struct PolicyManager.NodeInfo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25184:24:5"
            },
            "scope": 4116,
            "src": "25098:297:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3787,
              "nodeType": "Block",
              "src": "25559:167:5",
              "statements": [
                {
                  "assignments": [
                    3775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3775,
                      "mutability": "mutable",
                      "name": "memoryAddress",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3787,
                      "src": "25569:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3774,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "25569:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3785,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3777,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3769,
                        "src": "25609:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3778,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "25618:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyManager_$4116",
                              "typeString": "contract PolicyManager"
                            }
                          },
                          "id": 3779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeRateRange",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1857,
                          "src": "25618:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                            "typeString": "function () view external returns (uint128,uint128,uint128)"
                          }
                        },
                        "id": 3780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "25618:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 3781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25646:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 3782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25649:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 3783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25652:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3776,
                      "name": "delegateGetData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14073,
                      "src": "25593:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (address,bytes4,uint8,bytes32,bytes32) returns (bytes32)"
                      }
                    },
                    "id": 3784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25593:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25569:85:5"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "25673:47:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "25687:23:5",
                        "value": {
                          "name": "memoryAddress",
                          "nodeType": "YulIdentifier",
                          "src": "25697:13:5"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "25687:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "berlin",
                  "externalReferences": [
                    {
                      "declaration": 3775,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "25697:13:5",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3772,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "25687:6:5",
                      "valueSize": 1
                    }
                  ],
                  "id": 3786,
                  "nodeType": "InlineAssembly",
                  "src": "25664:56:5"
                }
              ]
            },
            "documentation": {
              "id": 3767,
              "nodeType": "StructuredDocumentation",
              "src": "25401:64:5",
              "text": "@dev Get feeRateRange structure by delegatecall"
            },
            "id": 3788,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateGetFeeRateRange",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3769,
                  "mutability": "mutable",
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3788,
                  "src": "25503:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25503:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25502:17:5"
            },
            "returnParameters": {
              "id": 3773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3772,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3788,
                  "src": "25538:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Range_$1806_memory_ptr",
                    "typeString": "struct PolicyManager.Range"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3771,
                    "name": "Range",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1806,
                    "src": "25538:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Range_$1806_storage_ptr",
                      "typeString": "struct PolicyManager.Range"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25537:21:5"
            },
            "scope": 4116,
            "src": "25470:256:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14040
            ],
            "body": {
              "id": 4004,
              "nodeType": "Block",
              "src": "25894:2053:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3798,
                        "name": "_testTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3791,
                        "src": "25922:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3795,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "25904:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_PolicyManager_$4116",
                          "typeString": "contract super PolicyManager"
                        }
                      },
                      "id": 3797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verifyState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14040,
                      "src": "25904:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25904:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3800,
                  "nodeType": "ExpressionStatement",
                  "src": "25904:30:5"
                },
                {
                  "assignments": [
                    3802
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3802,
                      "mutability": "mutable",
                      "name": "rangeToCheck",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4004,
                      "src": "25944:25:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Range_$1806_memory_ptr",
                        "typeString": "struct PolicyManager.Range"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3801,
                        "name": "Range",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1806,
                        "src": "25944:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Range_$1806_storage_ptr",
                          "typeString": "struct PolicyManager.Range"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3806,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3804,
                        "name": "_testTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3791,
                        "src": "25996:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3803,
                      "name": "delegateGetFeeRateRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3788,
                      "src": "25972:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_struct$_Range_$1806_memory_ptr_$",
                        "typeString": "function (address) returns (struct PolicyManager.Range memory)"
                      }
                    },
                    "id": 3805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25972:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Range_$1806_memory_ptr",
                      "typeString": "struct PolicyManager.Range memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25944:64:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 3812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3808,
                                "name": "feeRateRange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "26026:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Range_$1806_storage",
                                  "typeString": "struct PolicyManager.Range storage ref"
                                }
                              },
                              "id": 3809,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "min",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1801,
                              "src": "26026:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3810,
                                "name": "rangeToCheck",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3802,
                                "src": "26046:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Range_$1806_memory_ptr",
                                  "typeString": "struct PolicyManager.Range memory"
                                }
                              },
                              "id": 3811,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "min",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1801,
                              "src": "26046:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "26026:36:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 3817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3813,
                                "name": "feeRateRange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "26078:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Range_$1806_storage",
                                  "typeString": "struct PolicyManager.Range storage ref"
                                }
                              },
                              "id": 3814,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "defaultValue",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1803,
                              "src": "26078:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3815,
                                "name": "rangeToCheck",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3802,
                                "src": "26107:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Range_$1806_memory_ptr",
                                  "typeString": "struct PolicyManager.Range memory"
                                }
                              },
                              "id": 3816,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "defaultValue",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1803,
                              "src": "26107:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "26078:54:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "26026:106:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 3823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3819,
                              "name": "feeRateRange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1857,
                              "src": "26148:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Range_$1806_storage",
                                "typeString": "struct PolicyManager.Range storage ref"
                              }
                            },
                            "id": 3820,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1805,
                            "src": "26148:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3821,
                              "name": "rangeToCheck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3802,
                              "src": "26168:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Range_$1806_memory_ptr",
                                "typeString": "struct PolicyManager.Range memory"
                              }
                            },
                            "id": 3822,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1805,
                            "src": "26168:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "26148:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "26026:158:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3807,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26018:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26018:167:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3826,
                  "nodeType": "ExpressionStatement",
                  "src": "26018:167:5"
                },
                {
                  "assignments": [
                    3828
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3828,
                      "mutability": "mutable",
                      "name": "policy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4004,
                      "src": "26195:21:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3827,
                        "name": "Policy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1786,
                        "src": "26195:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3832,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3829,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1851,
                      "src": "26219:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$1786_storage_$",
                        "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                      }
                    },
                    "id": 3831,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3830,
                      "name": "RESERVED_POLICY_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1812,
                      "src": "26228:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "26219:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$1786_storage",
                      "typeString": "struct PolicyManager.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26195:52:5"
                },
                {
                  "assignments": [
                    3834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3834,
                      "mutability": "mutable",
                      "name": "policyToCheck",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4004,
                      "src": "26257:27:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$1786_memory_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3833,
                        "name": "Policy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1786,
                        "src": "26257:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3839,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3836,
                        "name": "_testTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3791,
                        "src": "26305:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3837,
                        "name": "RESERVED_POLICY_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1812,
                        "src": "26318:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      ],
                      "id": 3835,
                      "name": "delegateGetPolicy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3704,
                      "src": "26287:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes16_$returns$_t_struct$_Policy_$1786_memory_ptr_$",
                        "typeString": "function (address,bytes16) returns (struct PolicyManager.Policy memory)"
                      }
                    },
                    "id": 3838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26287:50:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$1786_memory_ptr",
                      "typeString": "struct PolicyManager.Policy memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26257:80:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 3863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 3851,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "id": 3845,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3841,
                                      "name": "policyToCheck",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3834,
                                      "src": "26355:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Policy_$1786_memory_ptr",
                                        "typeString": "struct PolicyManager.Policy memory"
                                      }
                                    },
                                    "id": 3842,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sponsor",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1764,
                                    "src": "26355:21:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3843,
                                      "name": "policy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3828,
                                      "src": "26380:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                        "typeString": "struct PolicyManager.Policy storage pointer"
                                      }
                                    },
                                    "id": 3844,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sponsor",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1764,
                                    "src": "26380:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "src": "26355:39:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 3850,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3846,
                                      "name": "policyToCheck",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3834,
                                      "src": "26410:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Policy_$1786_memory_ptr",
                                        "typeString": "struct PolicyManager.Policy memory"
                                      }
                                    },
                                    "id": 3847,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "owner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1766,
                                    "src": "26410:19:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3848,
                                      "name": "policy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3828,
                                      "src": "26433:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                        "typeString": "struct PolicyManager.Policy storage pointer"
                                      }
                                    },
                                    "id": 3849,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "owner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1766,
                                    "src": "26433:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "26410:35:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "26355:90:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 3856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3852,
                                    "name": "policyToCheck",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3834,
                                    "src": "26461:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$1786_memory_ptr",
                                      "typeString": "struct PolicyManager.Policy memory"
                                    }
                                  },
                                  "id": 3853,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "feeRate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1768,
                                  "src": "26461:21:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3854,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3828,
                                    "src": "26486:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 3855,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "feeRate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1768,
                                  "src": "26486:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "26461:39:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "26355:145:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              "id": 3862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3858,
                                  "name": "policyToCheck",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3834,
                                  "src": "26516:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Policy_$1786_memory_ptr",
                                    "typeString": "struct PolicyManager.Policy memory"
                                  }
                                },
                                "id": 3859,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1770,
                                "src": "26516:28:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3860,
                                  "name": "policy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3828,
                                  "src": "26548:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                    "typeString": "struct PolicyManager.Policy storage pointer"
                                  }
                                },
                                "id": 3861,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1770,
                                "src": "26548:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "src": "26516:53:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "26355:214:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 3868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3864,
                                "name": "policyToCheck",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3834,
                                "src": "26585:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Policy_$1786_memory_ptr",
                                  "typeString": "struct PolicyManager.Policy memory"
                                }
                              },
                              "id": 3865,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1772,
                              "src": "26585:26:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3866,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3828,
                                "src": "26615:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                  "typeString": "struct PolicyManager.Policy storage pointer"
                                }
                              },
                              "id": 3867,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1772,
                              "src": "26615:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "26585:49:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "26355:279:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3870,
                              "name": "policyToCheck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3834,
                              "src": "26650:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$1786_memory_ptr",
                                "typeString": "struct PolicyManager.Policy memory"
                              }
                            },
                            "id": 3871,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "disabled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1762,
                            "src": "26650:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3872,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3828,
                              "src": "26676:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 3873,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "disabled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1762,
                            "src": "26676:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "26650:41:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "26355:336:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26347:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26347:345:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3877,
                  "nodeType": "ExpressionStatement",
                  "src": "26347:345:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3880,
                              "name": "_testTarget",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3791,
                              "src": "26723:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3881,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "26736:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PolicyManager_$4116",
                                    "typeString": "contract PolicyManager"
                                  }
                                },
                                "id": 3882,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getArrangementsLength",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3620,
                                "src": "26736:26:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes16_$returns$_t_uint256_$",
                                  "typeString": "function (bytes16) view external returns (uint256)"
                                }
                              },
                              "id": 3883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "26736:35:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3884,
                              "name": "RESERVED_POLICY_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1812,
                              "src": "26773:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            ],
                            "id": 3879,
                            "name": "delegateGet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              14095,
                              14119,
                              14145
                            ],
                            "referencedDeclaration": 14119,
                            "src": "26711:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$_t_bytes32_$returns$_t_uint256_$",
                              "typeString": "function (address,bytes4,bytes32) returns (uint256)"
                            }
                          },
                          "id": 3885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26711:81:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3886,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3828,
                              "src": "26808:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 3887,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "arrangements",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1785,
                            "src": "26808:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$1760_storage_$dyn_storage",
                              "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                            }
                          },
                          "id": 3888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "26808:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "26711:123:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3878,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26703:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26703:132:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3891,
                  "nodeType": "ExpressionStatement",
                  "src": "26703:132:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3892,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3828,
                          "src": "26849:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 3893,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arrangements",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1785,
                        "src": "26849:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$1760_storage_$dyn_storage",
                          "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                        }
                      },
                      "id": 3894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "26849:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26878:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "26849:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3933,
                  "nodeType": "IfStatement",
                  "src": "26845:514:5",
                  "trueBody": {
                    "id": 3932,
                    "nodeType": "Block",
                    "src": "26881:478:5",
                    "statements": [
                      {
                        "assignments": [
                          3898
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3898,
                            "mutability": "mutable",
                            "name": "arrangement",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3932,
                            "src": "26895:35:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                              "typeString": "struct PolicyManager.ArrangementInfo"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 3897,
                              "name": "ArrangementInfo",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1760,
                              "src": "26895:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3903,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3899,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3828,
                              "src": "26933:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 3900,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "arrangements",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1785,
                            "src": "26933:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$1760_storage_$dyn_storage",
                              "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                            }
                          },
                          "id": 3902,
                          "indexExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26953:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26933:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage",
                            "typeString": "struct PolicyManager.ArrangementInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26895:60:5"
                      },
                      {
                        "assignments": [
                          3905
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3905,
                            "mutability": "mutable",
                            "name": "arrangementToCheck",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3932,
                            "src": "26969:41:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ArrangementInfo_$1760_memory_ptr",
                              "typeString": "struct PolicyManager.ArrangementInfo"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 3904,
                              "name": "ArrangementInfo",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1760,
                              "src": "26969:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3911,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3907,
                              "name": "_testTarget",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3791,
                              "src": "27057:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3908,
                              "name": "RESERVED_POLICY_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1812,
                              "src": "27070:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27090:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3906,
                            "name": "delegateGetArrangementInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3736,
                            "src": "27013:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes16_$_t_uint256_$returns$_t_struct$_ArrangementInfo_$1760_memory_ptr_$",
                              "typeString": "function (address,bytes16,uint256) returns (struct PolicyManager.ArrangementInfo memory)"
                            }
                          },
                          "id": 3910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27013:79:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ArrangementInfo_$1760_memory_ptr",
                            "typeString": "struct PolicyManager.ArrangementInfo memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26969:123:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 3923,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 3917,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3913,
                                      "name": "arrangementToCheck",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3905,
                                      "src": "27114:18:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ArrangementInfo_$1760_memory_ptr",
                                        "typeString": "struct PolicyManager.ArrangementInfo memory"
                                      }
                                    },
                                    "id": 3914,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "node",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1755,
                                    "src": "27114:23:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3915,
                                      "name": "arrangement",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3898,
                                      "src": "27141:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                        "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                      }
                                    },
                                    "id": 3916,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "node",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1755,
                                    "src": "27141:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "27114:43:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3922,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3918,
                                      "name": "arrangementToCheck",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3905,
                                      "src": "27177:18:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ArrangementInfo_$1760_memory_ptr",
                                        "typeString": "struct PolicyManager.ArrangementInfo memory"
                                      }
                                    },
                                    "id": 3919,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "indexOfDowntimePeriods",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1757,
                                    "src": "27177:41:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3920,
                                      "name": "arrangement",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3898,
                                      "src": "27222:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                        "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                      }
                                    },
                                    "id": 3921,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "indexOfDowntimePeriods",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1757,
                                    "src": "27222:34:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "27177:79:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "27114:142:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                },
                                "id": 3928,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3924,
                                    "name": "arrangementToCheck",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3905,
                                    "src": "27276:18:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ArrangementInfo_$1760_memory_ptr",
                                      "typeString": "struct PolicyManager.ArrangementInfo memory"
                                    }
                                  },
                                  "id": 3925,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lastRefundedPeriod",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1759,
                                  "src": "27276:37:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3926,
                                    "name": "arrangement",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3898,
                                    "src": "27317:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ArrangementInfo_$1760_storage_ptr",
                                      "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                    }
                                  },
                                  "id": 3927,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lastRefundedPeriod",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1759,
                                  "src": "27317:30:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "27276:71:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "27114:233:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 3912,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "27106:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 3930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27106:242:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3931,
                        "nodeType": "ExpressionStatement",
                        "src": "27106:242:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3935
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3935,
                      "mutability": "mutable",
                      "name": "nodeInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4004,
                      "src": "27369:25:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3934,
                        "name": "NodeInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1799,
                        "src": "27369:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3939,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3936,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1855,
                      "src": "27397:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$1799_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 3938,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3937,
                      "name": "RESERVED_NODE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1818,
                      "src": "27403:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "27397:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$1799_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27369:48:5"
                },
                {
                  "assignments": [
                    3941
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3941,
                      "mutability": "mutable",
                      "name": "nodeInfoToCheck",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4004,
                      "src": "27427:31:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$1799_memory_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3940,
                        "name": "NodeInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1799,
                        "src": "27427:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3946,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3943,
                        "name": "_testTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3791,
                        "src": "27481:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3944,
                        "name": "RESERVED_NODE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1818,
                        "src": "27494:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3942,
                      "name": "delegateGetNodeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3766,
                      "src": "27461:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_struct$_NodeInfo_$1799_memory_ptr_$",
                        "typeString": "function (address,address) returns (struct PolicyManager.NodeInfo memory)"
                      }
                    },
                    "id": 3945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27461:47:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$1799_memory_ptr",
                      "typeString": "struct PolicyManager.NodeInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27427:81:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 3958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 3952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3948,
                                  "name": "nodeInfoToCheck",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3941,
                                  "src": "27526:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_NodeInfo_$1799_memory_ptr",
                                    "typeString": "struct PolicyManager.NodeInfo memory"
                                  }
                                },
                                "id": 3949,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1788,
                                "src": "27526:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3950,
                                  "name": "nodeInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3935,
                                  "src": "27549:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                    "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                  }
                                },
                                "id": 3951,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1788,
                                "src": "27549:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "27526:35:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3953,
                                  "name": "nodeInfoToCheck",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3941,
                                  "src": "27577:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_NodeInfo_$1799_memory_ptr",
                                    "typeString": "struct PolicyManager.NodeInfo memory"
                                  }
                                },
                                "id": 3954,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "feeRate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1792,
                                "src": "27577:23:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3955,
                                  "name": "nodeInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3935,
                                  "src": "27604:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                    "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                  }
                                },
                                "id": 3956,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "feeRate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1792,
                                "src": "27604:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "27577:43:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "27526:94:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 3963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3959,
                                "name": "nodeInfoToCheck",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3941,
                                "src": "27636:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$1799_memory_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo memory"
                                }
                              },
                              "id": 3960,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "previousFeePeriod",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1790,
                              "src": "27636:33:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3961,
                                "name": "nodeInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3935,
                                "src": "27673:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 3962,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "previousFeePeriod",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1790,
                              "src": "27673:26:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "src": "27636:63:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "27526:173:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3965,
                              "name": "nodeInfoToCheck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3941,
                              "src": "27715:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NodeInfo_$1799_memory_ptr",
                                "typeString": "struct PolicyManager.NodeInfo memory"
                              }
                            },
                            "id": 3966,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "minFeeRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1794,
                            "src": "27715:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3967,
                              "name": "nodeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3935,
                              "src": "27745:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                "typeString": "struct PolicyManager.NodeInfo storage pointer"
                              }
                            },
                            "id": 3968,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "minFeeRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1794,
                            "src": "27745:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27715:49:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "27526:238:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3947,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27518:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27518:247:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3972,
                  "nodeType": "ExpressionStatement",
                  "src": "27518:247:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 4001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3977,
                                  "name": "_testTarget",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3791,
                                  "src": "27803:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3978,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "27816:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PolicyManager_$4116",
                                        "typeString": "contract PolicyManager"
                                      }
                                    },
                                    "id": 3979,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getNodeFeeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3638,
                                    "src": "27816:20:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$_t_uint16_$returns$_t_int256_$",
                                      "typeString": "function (address,uint16) view external returns (int256)"
                                    }
                                  },
                                  "id": 3980,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "27816:29:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 3985,
                                          "name": "RESERVED_NODE",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1818,
                                          "src": "27875:13:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 3984,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "27867:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes20_$",
                                          "typeString": "type(bytes20)"
                                        },
                                        "typeName": {
                                          "id": 3983,
                                          "name": "bytes20",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "27867:7:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 3986,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "27867:22:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes20",
                                        "typeString": "bytes20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes20",
                                        "typeString": "bytes20"
                                      }
                                    ],
                                    "id": 3982,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "27859:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 3981,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "27859:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 3987,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "27859:31:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "3131",
                                          "id": 3992,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "27908:2:5",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_11_by_1",
                                            "typeString": "int_const 11"
                                          },
                                          "value": "11"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_11_by_1",
                                            "typeString": "int_const 11"
                                          }
                                        ],
                                        "id": 3991,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "27900:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 3990,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "27900:7:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 3993,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "27900:11:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 3989,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "27892:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 3988,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "27892:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 3994,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "27892:20:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 3976,
                                "name": "delegateGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  14095,
                                  14119,
                                  14145
                                ],
                                "referencedDeclaration": 14145,
                                "src": "27791:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$_t_bytes32_$_t_bytes32_$returns$_t_uint256_$",
                                  "typeString": "function (address,bytes4,bytes32,bytes32) returns (uint256)"
                                }
                              },
                              "id": 3995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "27791:122:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "27784:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 3974,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "27784:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27784:130:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3997,
                              "name": "nodeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3935,
                              "src": "27918:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                                "typeString": "struct PolicyManager.NodeInfo storage pointer"
                              }
                            },
                            "id": 3998,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "feeDelta",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1798,
                            "src": "27918:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                              "typeString": "mapping(uint16 => int256)"
                            }
                          },
                          "id": 4000,
                          "indexExpression": {
                            "argumentTypes": null,
                            "hexValue": "3131",
                            "id": 3999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "27936:2:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_11_by_1",
                              "typeString": "int_const 11"
                            },
                            "value": "11"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27918:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "27784:155:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3973,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27776:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27776:164:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4003,
                  "nodeType": "ExpressionStatement",
                  "src": "27776:164:5"
                }
              ]
            },
            "documentation": {
              "id": 3789,
              "nodeType": "StructuredDocumentation",
              "src": "25732:91:5",
              "text": "@dev the `onlyWhileUpgrading` modifier works through a call to the parent `verifyState`"
            },
            "functionSelector": "b9626d21",
            "id": 4005,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyState",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3793,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25877:8:5"
            },
            "parameters": {
              "id": 3792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3791,
                  "mutability": "mutable",
                  "name": "_testTarget",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4005,
                  "src": "25849:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25849:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25848:21:5"
            },
            "returnParameters": {
              "id": 3794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25894:0:5"
            },
            "scope": 4116,
            "src": "25828:2119:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14055
            ],
            "body": {
              "id": 4114,
              "nodeType": "Block",
              "src": "28115:692:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4015,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4008,
                        "src": "28145:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4012,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "28125:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_PolicyManager_$4116",
                          "typeString": "contract super PolicyManager"
                        }
                      },
                      "id": 4014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finishUpgrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14055,
                      "src": "28125:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28125:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4017,
                  "nodeType": "ExpressionStatement",
                  "src": "28125:28:5"
                },
                {
                  "assignments": [
                    4019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4019,
                      "mutability": "mutable",
                      "name": "policy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4114,
                      "src": "28242:21:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4018,
                        "name": "Policy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1786,
                        "src": "28242:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4023,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4020,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1851,
                      "src": "28266:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$1786_storage_$",
                        "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                      }
                    },
                    "id": 4022,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4021,
                      "name": "RESERVED_POLICY_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1812,
                      "src": "28275:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "28266:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$1786_storage",
                      "typeString": "struct PolicyManager.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28242:52:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4024,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4019,
                        "src": "28304:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 4026,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sponsor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1764,
                      "src": "28304:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4027,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "28321:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "28321:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "28304:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 4030,
                  "nodeType": "ExpressionStatement",
                  "src": "28304:27:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4031,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4019,
                        "src": "28341:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 4033,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1766,
                      "src": "28341:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4036,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "28364:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyManager_$4116",
                            "typeString": "contract PolicyManager"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PolicyManager_$4116",
                            "typeString": "contract PolicyManager"
                          }
                        ],
                        "id": 4035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "28356:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4034,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "28356:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28356:13:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "28341:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4039,
                  "nodeType": "ExpressionStatement",
                  "src": "28341:28:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4040,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4019,
                        "src": "28379:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 4042,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1770,
                      "src": "28379:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 4043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28403:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "28379:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 4045,
                  "nodeType": "ExpressionStatement",
                  "src": "28379:25:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4046,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4019,
                        "src": "28414:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 4048,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1772,
                      "src": "28414:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 4049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28436:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "28414:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 4051,
                  "nodeType": "ExpressionStatement",
                  "src": "28414:23:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4052,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4019,
                        "src": "28447:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 4054,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "feeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1768,
                      "src": "28447:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 4055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28464:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "28447:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 4057,
                  "nodeType": "ExpressionStatement",
                  "src": "28447:18:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4058,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4019,
                        "src": "28475:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 4060,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "disabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1762,
                      "src": "28475:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 4061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28493:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "28475:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4063,
                  "nodeType": "ExpressionStatement",
                  "src": "28475:22:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4070,
                            "name": "RESERVED_NODE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1818,
                            "src": "28548:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "3131",
                            "id": 4071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28563:2:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_11_by_1",
                              "typeString": "int_const 11"
                            },
                            "value": "11"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "3232",
                            "id": 4072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28567:2:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_22_by_1",
                              "typeString": "int_const 22"
                            },
                            "value": "22"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_11_by_1",
                              "typeString": "int_const 11"
                            },
                            {
                              "typeIdentifier": "t_rational_22_by_1",
                              "typeString": "int_const 22"
                            }
                          ],
                          "id": 4069,
                          "name": "ArrangementInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1760,
                          "src": "28532:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ArrangementInfo_$1760_storage_ptr_$",
                            "typeString": "type(struct PolicyManager.ArrangementInfo storage pointer)"
                          }
                        },
                        "id": 4073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28532:38:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ArrangementInfo_$1760_memory_ptr",
                          "typeString": "struct PolicyManager.ArrangementInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ArrangementInfo_$1760_memory_ptr",
                          "typeString": "struct PolicyManager.ArrangementInfo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4064,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4019,
                          "src": "28507:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$1786_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 4067,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arrangements",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1785,
                        "src": "28507:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$1760_storage_$dyn_storage",
                          "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                        }
                      },
                      "id": 4068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "28507:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_ArrangementInfo_$1760_storage_$returns$__$",
                        "typeString": "function (struct PolicyManager.ArrangementInfo storage ref)"
                      }
                    },
                    "id": 4074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28507:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4075,
                  "nodeType": "ExpressionStatement",
                  "src": "28507:64:5"
                },
                {
                  "assignments": [
                    4077
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4077,
                      "mutability": "mutable",
                      "name": "nodeInfo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4114,
                      "src": "28581:25:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4076,
                        "name": "NodeInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1799,
                        "src": "28581:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4081,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4078,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1855,
                      "src": "28609:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$1799_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 4080,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4079,
                      "name": "RESERVED_NODE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1818,
                      "src": "28615:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "28609:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$1799_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28581:48:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4082,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "28639:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 4084,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1788,
                      "src": "28639:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 4085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28654:3:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "28639:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 4087,
                  "nodeType": "ExpressionStatement",
                  "src": "28639:18:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4088,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "28667:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 4090,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "feeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1792,
                      "src": "28667:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3333",
                      "id": 4091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28686:2:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_33_by_1",
                        "typeString": "int_const 33"
                      },
                      "value": "33"
                    },
                    "src": "28667:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4093,
                  "nodeType": "ExpressionStatement",
                  "src": "28667:21:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4094,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "28698:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 4096,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "previousFeePeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1790,
                      "src": "28698:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3434",
                      "id": 4097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28727:2:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_44_by_1",
                        "typeString": "int_const 44"
                      },
                      "value": "44"
                    },
                    "src": "28698:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 4099,
                  "nodeType": "ExpressionStatement",
                  "src": "28698:31:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4100,
                          "name": "nodeInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4077,
                          "src": "28739:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                            "typeString": "struct PolicyManager.NodeInfo storage pointer"
                          }
                        },
                        "id": 4103,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feeDelta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1798,
                        "src": "28739:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                          "typeString": "mapping(uint16 => int256)"
                        }
                      },
                      "id": 4104,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3131",
                        "id": 4102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28757:2:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_11_by_1",
                          "typeString": "int_const 11"
                        },
                        "value": "11"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "28739:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3535",
                      "id": 4105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28763:2:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_55_by_1",
                        "typeString": "int_const 55"
                      },
                      "value": "55"
                    },
                    "src": "28739:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 4107,
                  "nodeType": "ExpressionStatement",
                  "src": "28739:26:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4108,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "28775:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$1799_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 4110,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "minFeeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1794,
                      "src": "28775:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "373737",
                      "id": 4111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28797:3:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_777_by_1",
                        "typeString": "int_const 777"
                      },
                      "value": "777"
                    },
                    "src": "28775:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4113,
                  "nodeType": "ExpressionStatement",
                  "src": "28775:25:5"
                }
              ]
            },
            "documentation": {
              "id": 4006,
              "nodeType": "StructuredDocumentation",
              "src": "27953:93:5",
              "text": "@dev the `onlyWhileUpgrading` modifier works through a call to the parent `finishUpgrade`"
            },
            "functionSelector": "e8dccd06",
            "id": 4115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finishUpgrade",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4010,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28098:8:5"
            },
            "parameters": {
              "id": 4009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4008,
                  "mutability": "mutable",
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4115,
                  "src": "28074:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28074:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28073:17:5"
            },
            "returnParameters": {
              "id": 4011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28115:0:5"
            },
            "scope": 4116,
            "src": "28051:756:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 4117,
        "src": "495:28314:5"
      }
    ],
    "src": "0:28810:5"
  },
  "bytecode": "60c06040523480156200001157600080fd5b50604051620036ab380380620036ab833981810160405260208110156200003757600080fd5b5051600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36000816001600160a01b031663407f80016040518163ffffffff1660e01b815260040160206040518083038186803b158015620000be57600080fd5b505afa158015620000d3573d6000803e3d6000fd5b505050506040513d6020811015620000ea57600080fd5b5051905063ffffffff8116620000ff57600080fd5b60e081901b6001600160e01b03191660a052606082901b6001600160601b0319166080526001600160a01b039091169063ffffffff1661351c6200018f60003980610b515280610db2528061127e52806120fa5280612e4d5280612eb1525080610bd6528061115c52806118dc5280611d8b5280612f3a5280612fed52806130ac52806131ce525061351c6000f3fe60806040526004361061021a5760003560e01c8063889ddd1a11610123578063b9626d21116100ab578063e2fdcc171161006f578063e2fdcc1714610a1b578063e38a303b14610a30578063e665830d14610a5b578063e8dccd0614610a8f578063f2fde38b14610ac25761021a565b8063b9626d21146108f6578063cbf12f2a14610929578063d4b839921461096c578063d845f4fb14610981578063dfdecfaf146109e75761021a565b80638e81ca5a116100f25780638e81ca5a146107dc5780638f32d59b14610819578063a2d1d5e214610842578063a87d40d914610876578063b438c4cd146108b95761021a565b8063889ddd1a146107275780638c316b901461075a5780638d7fd2fa146107845780638da5cb5b146107c75761021a565b806358cf15fb116101a65780636bd2af57116101755780636bd2af5714610556578063713c0e571461058a578063715018a61461063657806372be8d8d1461064b57806381e742a1146106885761021a565b806358cf15fb1461045a578063631722f21461048e57806363c509d5146104d357806365af62c3146105165761021a565b80633ea2391f116101ed5780633ea2391f14610374578063407f8001146103b35780634b2cd118146103e15780634b8fed4f1461041257806351cff8d9146104275761021a565b8063076421e81461021f578063086146d2146102cd578063189a5a17146102f95780633ccfd60b1461035f575b600080fd5b34801561022b57600080fd5b506102bb6004803603606081101561024257600080fd5b6001600160801b0319823516916001600160a01b036020820135169181019060608101604082013564010000000081111561027c57600080fd5b82018360208201111561028e57600080fd5b803590602001918460018302840111640100000000831117156102b057600080fd5b509092509050610af5565b60408051918252519081900360200190f35b3480156102d957600080fd5b506102e2610b4d565b6040805161ffff9092168252519081900360200190f35b34801561030557600080fd5b5061032c6004803603602081101561031c57600080fd5b50356001600160a01b0316610b84565b604080516001600160801b03909516855261ffff9093166020850152838301919091526060830152519081900360800190f35b34801561036b57600080fd5b506102bb610bbb565b34801561038057600080fd5b506103b16004803603604081101561039757600080fd5b5080356001600160a01b0316906020013561ffff16610bcb565b005b3480156103bf57600080fd5b506103c8610db0565b6040805163ffffffff9092168252519081900360200190f35b3480156103ed57600080fd5b506103f6610dd4565b604080516001600160a01b039092168252519081900360200190f35b34801561041e57600080fd5b506102bb610de3565b34801561043357600080fd5b506102bb6004803603602081101561044a57600080fd5b50356001600160a01b0316610dee565b34801561046657600080fd5b506103f66004803603602081101561047d57600080fd5b50356001600160801b031916610e82565b34801561049a57600080fd5b506103b1600480360360608110156104b157600080fd5b506001600160801b038135811691602081013582169160409091013516610ed9565b3480156104df57600080fd5b506102bb600480360360408110156104f657600080fd5b5080356001600160801b03191690602001356001600160a01b0316610fc3565b34801561052257600080fd5b5061052b611039565b604080516001600160801b039485168152928416602084015292168183015290519081900360600190f35b34801561056257600080fd5b506102bb6004803603602081101561057957600080fd5b50356001600160801b031916611059565b34801561059657600080fd5b506105be600480360360208110156105ad57600080fd5b50356001600160801b031916611078565b604080519b15158c526001600160a01b039a8b1660208d0152989099168a8901526001600160801b0390961660608a01526001600160401b0394851660808a01529290931660a088015260c087015260e086019190915261010085015261012084015261014083019190915251908190036101600190f35b34801561064257600080fd5b506103b16110f6565b34801561065757600080fd5b506103b16004803603604081101561066e57600080fd5b5080356001600160a01b0316906020013561ffff16611151565b6103b16004803603608081101561069e57600080fd5b6001600160801b0319823516916001600160a01b03602082013516916001600160401b0360408301351691908101906080810160608201356401000000008111156106e857600080fd5b8201836020820111156106fa57600080fd5b8035906020019184602083028401116401000000008311171561071c57600080fd5b5090925090506111f0565b34801561073357600080fd5b506102bb6004803603602081101561074a57600080fd5b50356001600160a01b0316611712565b34801561076657600080fd5b506103b16004803603602081101561077d57600080fd5b5035611733565b34801561079057600080fd5b506102bb600480360360408110156107a757600080fd5b5080356001600160801b03191690602001356001600160a01b03166117f7565b3480156107d357600080fd5b506103f6611835565b3480156107e857600080fd5b506102bb600480360360408110156107ff57600080fd5b5080356001600160a01b0316906020013561ffff16611844565b34801561082557600080fd5b5061082e611875565b604080519115158252519081900360200190f35b34801561084e57600080fd5b506102bb6004803603602081101561086557600080fd5b50356001600160801b031916611886565b34801561088257600080fd5b506102bb6004803603604081101561089957600080fd5b5080356001600160801b03191690602001356001600160a01b03166118b2565b3480156108c557600080fd5b506103b1600480360360408110156108dc57600080fd5b5080356001600160a01b0316906020013561ffff166118d1565b34801561090257600080fd5b506103b16004803603602081101561091957600080fd5b50356001600160a01b031661195c565b34801561093557600080fd5b506102bb6004803603604081101561094c57600080fd5b5080356001600160801b03191690602001356001600160a01b0316611c6b565b34801561097857600080fd5b506103f6611cbb565b34801561098d57600080fd5b506109bb600480360360408110156109a457600080fd5b506001600160801b03198135169060200135611cca565b604080516001600160a01b039094168452602084019290925261ffff1682820152519081900360600190f35b3480156109f357600080fd5b506103b160048036036020811015610a0a57600080fd5b50356001600160801b031916611d32565b348015610a2757600080fd5b506103f6611d89565b348015610a3c57600080fd5b50610a45611dad565b6040805160ff9092168252519081900360200190f35b348015610a6757600080fd5b506102bb60048036036020811015610a7e57600080fd5b50356001600160801b031916611dbd565b348015610a9b57600080fd5b506103b160048036036020811015610ab257600080fd5b50356001600160a01b0316611dca565b348015610ace57600080fd5b506103b160048036036020811015610ae557600080fd5b50356001600160a01b0316612065565b6000610b38858585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061207f92505050565b610b44858560016120c8565b95945050505050565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff164281610b7e57fe5b04905090565b6005602052600090815260409020805460018201546002909201546001600160801b03821692600160801b90920461ffff16919084565b6000610bc633610dee565b905090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c0057600080fd5b6001600160a01b03821660009081526005602052604090208054600160801b900461ffff161580610c415750805461ffff600160801b909104811690831611155b15610c4c5750610dac565b8054600160801b900461ffff166001015b8261ffff168161ffff1611610d6d5761ffff811660009081526003830160205260409020546001600160ff1b03811415610cad575061ffff81166000908152600383016020526040812055610d65565b600081128015610cc35750826001015481600003115b15610d325760018301805461ffff80851660009081526003870160209081526040808320805490950190945593558151908716815290516001600160a01b038816927fd56b4810f75e2913af1cd9e5f0d99d273958c5a67cff5ef0e7f298507b688bb8928290030190a2610d63565b6001830154610d47908263ffffffff6125c616565b600184015561ffff821660009081526003840160205260408120555b505b600101610c5d565b50805460018201546001600160801b031961ffff60801b19909216600160801b61ffff861602179182166001600160801b039283169091019091161790555b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002546001600160a01b031681565b6001600160ff1b0381565b33600090815260056020526040812080546001600160801b031680610e1257600080fd5b81546001600160801b0319168255610e396001600160a01b0385168263ffffffff6125fa16565b6040805182815290516001600160a01b0386169133917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb9181900360200190a39150505b919050565b6001600160801b03198116600090815260046020526040812060018101546001600160a01b031615610ec15760018101546001600160a01b0316610ed2565b805461010090046001600160a01b03165b9392505050565b610ee1611875565b610eea57600080fd5b816001600160801b0316836001600160801b031611158015610f1e5750806001600160801b0316826001600160801b031611155b610f2757600080fd5b60408051606080820183526001600160801b038681168084528682166020808601829052878416958701869052600680546001600160801b03199081168517909516600160801b840217905560078054909416861790935585519182529181019190915280840192909252915133927f3a93fb7c2385d29e9693a6edcd81c4cee090101cb783dc2f17a7814b79a2ecdc928290030190a2505050565b60006001600160a01b038216610fd857600080fd5b6001600160801b03198316600090815260046020526040902060018101546001600160a01b031633148061101a5750805461010090046001600160a01b031633145b61102357600080fd5b61102f848460006120c8565b9150505b92915050565b6006546007546001600160801b0380831692600160801b90048116911683565b6001600160801b03191660009081526004602052604090206008015490565b60046020819052600091825260409091208054600182015460028301546003840154948401546005850154600686015460079096015460ff8616976001600160a01b0361010090970487169795909616956001600160801b038516956001600160401b03600160801b8704811696600160c01b90041694919391928b565b6110fe611875565b61110757600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461118657600080fd5b6001600160a01b03821660009081526005602052604090208054600160801b900461ffff161580156111c657506111bb610b4d565b61ffff168261ffff16105b6111cf57600080fd5b805461ffff909216600160801b0261ffff60801b1990921691909117905550565b6001600160801b0319851660008181526004602052604090209015801590611223575060028101546001600160801b0316155b80156112315750805460ff16155b8015611245575042846001600160401b0316115b80156112515750600034115b61125a57600080fd5b6001600160801b0347111561126e57600080fd5b6000611278610b4d565b905060007f000000000000000000000000000000000000000000000000000000000000000063ffffffff16866001600160401b0316816112b457fe5b84546101003302610100600160a81b03199091161785556002850180546001600160401b038a8116600160c01b026001600160c01b034292909216600160801b0267ffffffffffffffff60801b199093169290921716179055046001818101925061ffff9184900301168061132934876126df565b8161133057fe5b6002860180546001600160801b031916929091046001600160801b0390811692909217908190551615801590611376575060028401546001600160801b03168102850234145b61137f57600080fd5b6001600160a01b03881633148015906113a057506001600160a01b03881615155b156113c3576001840180546001600160a01b0319166001600160a01b038a161790555b60005b858110156116685760008787838181106113dc57fe5b905060200201356001600160a01b0316905060006001600160a01b0316816001600160a01b0316141561140e57600080fd5b6001600160a01b03811660009081526005602052604090208054600160801b900461ffff161580159061144f5750805461ffff808816600160801b90920416105b8015611470575061145f81612701565b60028801546001600160801b031610155b61147957600080fd5b61ffff861660009081526003820160205260409020546001600160ff1b0314156114c957600287015461ffff8716600090815260038301602052604090206001600160801b0390911690556114f6565b600287015461ffff87166000908152600383016020526040902080546001600160801b0390921690910190555b61ffff851660009081526003820160205260409020546001600160ff1b03141561154857600287015461ffff8616600090815260038301602052604081206001600160801b0390921690039055611575565b600287015461ffff86166000908152600383016020526040902080546001600160801b0390921690910390555b61ffff861660009081526003820160205260409020546115af5761ffff8616600090815260038201602052604090206001600160ff1b0390555b61ffff851660009081526003820160205260409020546115e95761ffff8516600090815260038201602052604090206001600160ff1b0390555b50604080516060810182526001600160a01b0392831681526000602080830182815293830182815260088b01805460018082018355918552929093209351600390920290930180546001600160a01b03191691909516178455915183830155516002909201805461ffff191661ffff90931692909217909155016113c6565b506001600160a01b0388161561167e5787611680565b335b6002850154604080516001600160801b03831681526001600160401b03600160801b840481166020830152600160c01b9093049092168282015260608201889052516001600160a01b03929092169133916001600160801b03198d16917f8e609dac02bd39ff24c8ad6bb9a735e739b56708b22159948ec9828ad765b4d19181900360800190a4505050505050505050565b6001600160a01b0381166000908152600560205260408120610ed281612701565b6006546001600160801b0316811080159061175957506007546001600160801b03168111155b6117945760405162461bcd60e51b815260040180806020018281038252603f815260200180613447603f913960400191505060405180910390fd5b33600090815260056020526040902060028101548214156117b557506117f4565b6002810182905560408051838152905133917f6b9024cc1bf5710f290be788dca9886db7a3d9be0df0855bfa991dbf26a256bc919081900360200190a2505b50565b60006001600160a01b03821661180c57600080fd5b3361181684610e82565b6001600160a01b03161461182957600080fd5b610ed2838360016120c8565b6000546001600160a01b031690565b6001600160a01b038216600090815260056020908152604080832061ffff8516845260030190915290205492915050565b6000546001600160a01b0316331490565b60003361189283610e82565b6001600160a01b0316146118a557600080fd5b61103382600060016120c8565b60006001600160a01b0382166118c757600080fd5b610ed2838361276a565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461190657600080fd5b6001600160a01b038216600090815260056020908152604080832061ffff8516845260038101909252909120546119575761ffff8216600090815260038201602052604090206001600160ff1b0390555b505050565b61196581612894565b61196d613361565b611976826128ee565b80516006549192506001600160801b0391821691161480156119b157506020810151600654600160801b90046001600160801b039081169116145b80156119cf575060408101516007546001600160801b039081169116145b6119d857600080fd5b6000805260046020527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec611a0a613381565b611a1584600061290c565b8254602082015191925061010090046001600160a01b039081169116148015611a525750600182015460408201516001600160a01b039081169116145b8015611a725750600282015460608201516001600160801b039081169116145b8015611a995750600282015460808201516001600160401b03908116600160801b90920416145b8015611ac05750600282015460a08201516001600160401b03908116600160c01b90920416145b8015611ad6575081548151151560ff9091161515145b611adf57600080fd5b6008820154611af785636bd2af5760e01b600061293d565b14611b0157600080fd5b600882015415611b9057600082600801600081548110611b1d57fe5b90600052602060002090600302019050611b35613361565b611b4186600080612958565b825481519192506001600160a01b039182169116148015611b69575081600101548160200151145b8015611b8457506002820154604082015161ffff9081169116145b611b8d57600080fd5b50505b6000805260056020527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc611bc2613411565b611bcd866000612981565b825481519192506001600160801b039182169116148015611bf5575081600101548160400151145b8015611c1457508154602082015161ffff908116600160801b90920416145b8015611c27575081600201548160600151145b611c3057600080fd5b600b600081815260038401602052604081205491611c59918991634740e52d60e11b91906129a9565b14611c6357600080fd5b505050505050565b604080516001600160801b0319841660208201526bffffffffffffffffffffffff19606084901b166030820152815160248183030181526044909101909152600090610ed290604560f81b6129c5565b6001546001600160a01b031681565b6001600160801b03198216600090815260046020526040812060080180548291829182919086908110611cf957fe5b60009182526020909120600390910201805460018201546002909201546001600160a01b039091169891975061ffff1695509350505050565b6001600160801b03198116600090815260046020526040902060018101546001600160a01b0316331480611d745750805461010090046001600160a01b031633145b611d7d57600080fd5b611957826000806120c8565b7f000000000000000000000000000000000000000000000000000000000000000081565b600254600160a01b900460ff1681565b600061103382600061276a565b611dd381612cc4565b50600460209081527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec80547f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ed8054306001600160a01b0319918216179091557f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ee805460036001600160801b0319600160801b67ffffffffffffffff60801b19909316929092176001600160c01b0316600160c11b1782168117909255610100600160a81b031990931633610100021760ff19166001908117909455604080516060810182526000808252600b82890181815260169484019485527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3f48054998a018155835292517fdaf6a3df2e7fe032faba7f1c41811297bb73983780e1888a846f8aa1a8324d279890950297880180549096166001600160a01b0390951694909417909455517fdaf6a3df2e7fe032faba7f1c41811297bb73983780e1888a846f8aa1a8324d28860155517fdaf6a3df2e7fe032faba7f1c41811297bb73983780e1888a846f8aa1a8324d29909401805461ffff191661ffff909516949094179093557f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc805460217f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bd55606493169290921761ffff60801b1916600b60821b17909155527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bf905260377fe98516eef36ab8324c691eaae918b396562bbff0916fab980ba5f148c2da4dc8556103097f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746be55565b61206d611875565b61207657600080fd5b6117f481612d1e565b600061208b8484611c6b565b905060006120998284612d8c565b9050806001600160a01b03166120ae86610e82565b6001600160a01b0316146120c157600080fd5b5050505050565b6001600160801b031983166000908152600460205260408120805460ff16156120f057600080fd5b60028101546000907f000000000000000000000000000000000000000000000000000000000000000063ffffffff1690600160c01b90046001600160401b03168161213757fe5b6008840154919004600101915060005b60088401548110156124af57600084600801828154811061216457fe5b6000918252602090912060039091020180549091506001600160a01b03168015806121b457506001600160a01b038916158015906121b45750806001600160a01b0316896001600160a01b031614155b156121c7575050600019909101906124a7565b60006121d38784612e45565b60028601805461ffff191661ffff929092169190911790556001850155905088156123a2576001600160a01b0382166000908152600560209081526040808320600287015461ffff16808552600382019093529220546001600160ff1b03141561226557600289015461ffff8216600090815260038401602052604081206001600160801b0390921690039055612292565b600289015461ffff82166000908152600384016020526040902080546001600160801b0390921690910390555b61ffff881660009081526003830160205260409020546001600160ff1b0314156122e457600289015461ffff8916600090815260038401602052604081206001600160801b0390921690039055612311565b600289015461ffff89166000908152600384016020526040902080546001600160801b0390921690910190555b61ffff8116600090815260038301602052604090205461234b5761ffff8116600090815260038301602052604090206001600160ff1b0390555b61ffff881660009081526003830160205260409020546123855761ffff8816600090815260038301602052604090206001600160ff1b0390555b60028901546001600160801b031690880361ffff16029190910190505b88806123b95750600283015461ffff808816911610155b1561243a5782546001600160a01b03191683556000600184015560028301805461ffff1916905560408051828152905160001996909601956001600160a01b0384169133916001600160801b03198f16917ff3b13df5bdd5efcb090f73617909a6295ee75815920224c512d784b2726812f1919081900360200190a4612488565b6040805182815290516001600160a01b0384169133916001600160801b03198f16917fab654b569128c88ffcd210806a5e48ee14c541e2c76923f143281f20807090c1919081900360200190a45b968701966001600160a01b038a16156124a3575050506124af565b5050505b600101612147565b83546001600160a01b03610100909104811690881661258b5782612544578454600160ff199091168117610100600160a81b0319168655850180546001600160a01b03191690556000600286015560408051878152905133916001600160801b03198c16917fd5ea25ba3600c386669c484639012a0ae266ed537f0c4ab71b651024736efff4916020908290030190a3612586565b60408051878152905133916001600160801b03198c16917f51377f313f8c3404e86d38ae907b443ada38578fd6b9589d03f79d03ff9303c79181900360200190a35b61259b565b6008850154821061259b57600080fd5b85156125ba576125ba6001600160a01b0382168763ffffffff6125fa16565b50505050509392505050565b60008082126125e6576125df838363ffffffff6132a016565b9050611033565b6125df83600084900363ffffffff6132b216565b8047101561264f576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d806000811461269a576040519150601f19603f3d011682016040523d82523d6000602084013e61269f565b606091505b50509050806119575760405162461bcd60e51b815260040180806020018281038252603a815260200180613486603a913960400191505060405180910390fd5b60008082116126ed57600080fd5b60008284816126f857fe5b04949350505050565b6000816002015460001480612726575060065460028301546001600160801b03909116115b80612741575060075460028301546001600160801b03909116105b1561275f5750600654600160801b90046001600160801b0316610e7d565b506002810154610e7d565b6001600160801b03198216600090815260046020526040812060018101546001600160a01b03163314806127ac5750805461010090046001600160a01b031633145b80156127ba5750805460ff16155b6127c357600080fd5b60005b600882015481101561286d5760008260080182815481106127e357fe5b6000918252602090912060039091020180549091506001600160a01b0316158061282d57506001600160a01b0385161580159061282d575080546001600160a01b03868116911614155b156128385750612865565b60006128448483612e45565b50509485019490506001600160a01b0386161561286257505061286d565b50505b6001016127c6565b6001600160a01b0384161561288c576008820154811061288c57600080fd5b505092915050565b60028054600160a01b900460ff16146128ac57600080fd5b6040805133815290516001600160a01b038316917f1e8d98c1b4a0d9bd2e2371026b632eb2773fcce41742e41f02f574ab69868d4c919081900360200190a250565b6128f6613361565b6000610ed2836365af62c360e01b8380806132c7565b612914613381565b60006129358463713c0e5760e01b60016001600160801b03198716856132c7565b949350505050565b60008061294e8585600186856132c7565b5195945050505050565b612960613361565b6000610b448563d845f4fb60e01b60026001600160801b03198816876132c7565b612989613411565b60006129358463189a5a1760e01b60016001600160a01b038716856132c7565b6000806129ba8686600287876132c7565b519695505050505050565b60006001600160f81b03198216612a7857604051601960f81b602080830182815260006021850181905230606081901b602287015288519095919386938a9390926036909101918401908083835b60208310612a325780518252601f199092019160209182019101612a13565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120915050611033565b6001600160f81b03198216604560f81b1415612c7757825180612acc5760405162461bcd60e51b81526004018080602001828103825260278152602001806134c06027913960400191505060405180910390fd5b60005b8115612ae357600101600a82049150612acf565b6060816001600160401b0381118015612afb57600080fd5b506040519080825280601f01601f191660200182016040528015612b26576020820181803683370190505b5086519350905060001982015b8315612b7857600a840660300160f81b82828060019003935081518110612b5657fe5b60200101906001600160f81b031916908160001a905350600a84049350612b33565b604051601960f81b60208083018281527f457468657265756d205369676e6564204d6573736167653a0a000000000000006021850181905286519394909387938d9392603a0191908501908083835b60208310612be65780518252601f199092019160209182019101612bc7565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310612c2e5780518252601f199092019160209182019101612c0f565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120945050505050611033565b6040805162461bcd60e51b815260206004820152601a60248201527f556e737570706f72746564204549503139312076657273696f6e000000000000604482015290519081900360640190fd5b60028054600160a01b900460ff1614612cdc57600080fd5b6040805133815290516001600160a01b038316917fd55ec27c5c6316913ed8803c18cfd1bfefea953db909dcba6140744a9d8b0d1f919081900360200190a250565b6001600160a01b038116612d3157600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008151604114612d9c57600080fd5b60208201516040830151606084015160001a601b811015612dbb57601b015b8060ff16601b1480612dd057508060ff16601c145b612dd957600080fd5b6040805160008152602080820180845289905260ff8416828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa158015612e30573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000807f000000000000000000000000000000000000000000000000000000000000000063ffffffff168660020160109054906101000a90046001600160401b03166001600160401b031681612e9a57fe5b0490506000612ef4612eaa610b4d565b60028901547f000000000000000000000000000000000000000000000000000000000000000063ffffffff1690600160c01b90046001600160401b031681612eee57fe5b04613317565b6002870154909150600090612f0e90849061ffff16613335565b8754604080516390dcb51f60e01b81526001600160a01b039283166004820152905192935060009283927f000000000000000000000000000000000000000000000000000000000000000016916390dcb51f916024808301926020929190829003018186803b158015612f8057600080fd5b505afa158015612f94573d6000803e3d6000fd5b505050506040513d6020811015612faa57600080fd5b505160028a015490915060009061ffff1661306957895460408051634789d02d60e01b81526001600160a01b03928316600482015261ffff8916602482015290517f000000000000000000000000000000000000000000000000000000000000000090921691634789d02d91604480820192602092909190829003018186803b15801561303657600080fd5b505afa15801561304a573d6000803e3d6000fd5b505050506040513d602081101561306057600080fd5b50519050613070565b5060018901545b8097505b818810156131a757895460408051638fa95a1560e01b81526001600160a01b039283166004820152602481018b9052815160009384937f000000000000000000000000000000000000000000000000000000000000000090911692638fa95a159260448083019392829003018186803b1580156130f057600080fd5b505afa158015613104573d6000803e3d6000fd5b505050506040513d604081101561311a57600080fd5b508051602090910151909250905061ffff808816908316111561313e5750506131a7565b8561ffff168161ffff16101561315557505061319c565b61317c6131628784613335565b61316c8984613317565b61ffff169063ffffffff61334d16565b600101850194508061ffff168761ffff16116131995750506131a7565b50505b600190970196613074565b8954604080516351f5e0c160e11b81526001600160a01b03928316600482015290516000927f0000000000000000000000000000000000000000000000000000000000000000169163a3ebc182916024808301926020929190829003018186803b15801561321457600080fd5b505afa158015613228573d6000803e3d6000fd5b505050506040513d602081101561323e57600080fd5b50519050888314801561325857508561ffff168161ffff16105b156132715761326a6001860382613335565b8603840193505b5050506002989098015461ffff9098166001600160801b03988916029097169793965060010194509192505050565b600082820183811015610ed257600080fd5b6000828211156132c157600080fd5b50900390565b60405184815283156132da578260048201525b60018411156132ea578160248201525b6000808560200260040183895af48015613308573d6000833e61330d565b600082fd5b5095945050505050565b60008161ffff168361ffff161061332e5781610ed2565b5090919050565b60008161ffff168361ffff16101561332e5781610ed2565b60008261ffff168261ffff1611156132c157fe5b604080516060810182526000808252602082018190529181019190915290565b60405180610180016040528060001515815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160801b0316815260200160006001600160401b0316815260200160006001600160401b031681526020016000815260200160008152602001600081526020016000815260200160008152602001606081525090565b604051806080016040528060006001600160801b03168152602001600061ffff1681526020016000815260200160008152509056fe546865207374616b65722773206d696e206665652072617465206d7573742066616c6c2077697468696e2074686520676c6f62616c206665652072616e6765416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564456d707479206d657373616765206e6f7420616c6c6f77656420666f722076657273696f6e2045a2646970667358221220e04bdbf56f67a4f64aa85a9578302cf9921e7026c20e3030e661dc8ab5261fc664736f6c63430006070033",
  "bytecodeSha1": "8795c55f939057bcb0d5fac3ddee6e808c8492ee",
  "compiler": {
    "evm_version": "berlin",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.7"
  },
  "contractName": "PolicyManager",
  "coverageMap": {
    "branches": {
      "11": {
        "SignatureVerifier.hashEIP191": {
          "271": [
            3179,
            3201,
            false
          ],
          "272": [
            3407,
            3429,
            false
          ],
          "273": [
            3536,
            3546,
            true
          ]
        },
        "SignatureVerifier.recover": {
          "274": [
            738,
            761,
            true
          ],
          "275": [
            1094,
            1100,
            false
          ],
          "276": [
            1151,
            1158,
            true
          ],
          "277": [
            1162,
            1169,
            true
          ]
        }
      },
      "15": {},
      "20": {
        "SafeMath.add": {
          "269": [
            1552,
            1558,
            true
          ]
        },
        "SafeMath.div": {
          "268": [
            934,
            939,
            true
          ]
        },
        "SafeMath.sub": {
          "270": [
            1297,
            1303,
            true
          ]
        }
      },
      "21": {
        "Ownable._transferOwnership": {
          "267": [
            1980,
            2002,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "266": [
            864,
            873,
            true
          ]
        }
      },
      "25": {},
      "26": {
        "Address.sendValue": {
          "264": [
            2341,
            2372,
            true
          ],
          "265": [
            2541,
            2548,
            true
          ]
        }
      },
      "5": {
        "PolicyManager.calculateRefundValue": {
          "209": [
            22879,
            22901,
            true
          ],
          "256": [
            13453,
            13476,
            false
          ],
          "257": [
            13526,
            13547,
            false
          ],
          "258": [
            13755,
            13777,
            false
          ],
          "259": [
            13928,
            13960,
            false
          ],
          "260": [
            13964,
            13995,
            false
          ]
        },
        "PolicyManager.calculateRefundValueInternal": {
          "247": [
            18597,
            18623,
            true
          ],
          "248": [
            18627,
            18655,
            false
          ],
          "249": [
            18661,
            18676,
            true
          ],
          "250": [
            18846,
            18879,
            true
          ],
          "251": [
            18883,
            18905,
            false
          ],
          "252": [
            18909,
            18934,
            false
          ],
          "253": [
            19123,
            19145,
            false
          ],
          "254": [
            19207,
            19229,
            false
          ],
          "255": [
            19290,
            19320,
            true
          ]
        },
        "PolicyManager.checkOwnerSignature": {
          "232": [
            20946,
            20984,
            true
          ]
        },
        "PolicyManager.createPolicy": {
          "186": [
            7005,
            7036,
            false
          ],
          "187": [
            7052,
            7071,
            false
          ],
          "188": [
            7088,
            7103,
            false
          ],
          "189": [
            7119,
            7150,
            false
          ],
          "190": [
            7166,
            7179,
            true
          ],
          "191": [
            7207,
            7243,
            true
          ],
          "192": [
            7669,
            7687,
            false
          ],
          "193": [
            7691,
            7753,
            true
          ],
          "194": [
            7768,
            7794,
            false
          ],
          "195": [
            7798,
            7824,
            false
          ],
          "196": [
            7992,
            8013,
            true
          ],
          "197": [
            8089,
            8120,
            false
          ],
          "198": [
            8140,
            8182,
            false
          ],
          "199": [
            8202,
            8243,
            true
          ],
          "200": [
            8310,
            8363,
            false
          ],
          "201": [
            8667,
            8716,
            false
          ],
          "202": [
            9386,
            9412,
            true
          ]
        },
        "PolicyManager.getMinFeeRate": {
          "246": [
            5885,
            5910,
            true
          ]
        },
        "PolicyManager.getPolicyOwner": {
          "178": [
            9775,
            9801,
            true
          ]
        },
        "PolicyManager.refund": {
          "181": [
            22128,
            22150,
            true
          ],
          "182": [
            22222,
            22248,
            true
          ],
          "183": [
            22252,
            22280,
            true
          ],
          "230": [
            21741,
            21767,
            true
          ],
          "231": [
            21771,
            21799,
            true
          ]
        },
        "PolicyManager.refundInternal": {
          "233": [
            14830,
            14846,
            true
          ],
          "234": [
            15201,
            15222,
            true
          ],
          "235": [
            15226,
            15248,
            false
          ],
          "236": [
            15252,
            15265,
            false
          ],
          "237": [
            15777,
            15835,
            false
          ],
          "238": [
            16072,
            16121,
            false
          ],
          "239": [
            16804,
            16816,
            true
          ],
          "240": [
            16820,
            16863,
            false
          ],
          "241": [
            17331,
            17353,
            false
          ],
          "242": [
            17471,
            17493,
            false
          ],
          "243": [
            17513,
            17532,
            false
          ],
          "244": [
            18069,
            18099,
            true
          ],
          "245": [
            18124,
            18139,
            false
          ]
        },
        "PolicyManager.register": {
          "184": [
            4268,
            4299,
            false
          ],
          "185": [
            4303,
            4331,
            true
          ]
        },
        "PolicyManager.revokeArrangement": {
          "206": [
            19921,
            19943,
            true
          ],
          "207": [
            19962,
            20001,
            true
          ]
        },
        "PolicyManager.revokePolicy": {
          "208": [
            19533,
            19572,
            true
          ]
        },
        "PolicyManager.setDefaultFeeDelta": {
          "210": [
            3773,
            3802,
            true
          ]
        },
        "PolicyManager.setFeeRateRange": {
          "179": [
            4717,
            4733,
            false
          ],
          "180": [
            4737,
            4753,
            true
          ]
        },
        "PolicyManager.setMinFeeRate": {
          "203": [
            5137,
            5168,
            false
          ],
          "204": [
            5184,
            5215,
            true
          ],
          "205": [
            5364,
            5398,
            false
          ]
        },
        "PolicyManager.updateFee": {
          "172": [
            10598,
            10625,
            true
          ],
          "173": [
            10629,
            10662,
            false
          ],
          "174": [
            10830,
            10856,
            false
          ],
          "175": [
            11013,
            11022,
            false
          ],
          "176": [
            11026,
            11056,
            false
          ]
        },
        "PolicyManager.verifyState": {
          "211": [
            26026,
            26062,
            false
          ],
          "212": [
            26078,
            26132,
            false
          ],
          "213": [
            26148,
            26184,
            true
          ],
          "214": [
            26355,
            26394,
            false
          ],
          "215": [
            26410,
            26445,
            false
          ],
          "216": [
            26461,
            26500,
            false
          ],
          "217": [
            26516,
            26569,
            false
          ],
          "218": [
            26585,
            26634,
            false
          ],
          "219": [
            26650,
            26691,
            true
          ],
          "220": [
            26711,
            26834,
            true
          ],
          "221": [
            26849,
            26879,
            false
          ],
          "222": [
            27114,
            27157,
            false
          ],
          "223": [
            27177,
            27256,
            false
          ],
          "224": [
            27276,
            27347,
            true
          ],
          "225": [
            27526,
            27561,
            false
          ],
          "226": [
            27577,
            27620,
            false
          ],
          "227": [
            27636,
            27699,
            false
          ],
          "228": [
            27715,
            27764,
            true
          ],
          "229": [
            27784,
            27939,
            true
          ]
        },
        "PolicyManager.withdraw": {
          "177": [
            11917,
            11925,
            true
          ]
        }
      },
      "8": {
        "AdditionalMath.addSigned": {
          "261": [
            725,
            731,
            false
          ]
        },
        "AdditionalMath.max16": {
          "263": [
            254,
            260,
            true
          ]
        },
        "AdditionalMath.min16": {
          "262": [
            364,
            369,
            true
          ]
        }
      }
    },
    "statements": {
      "11": {
        "SignatureVerifier.hashEIP191": {
          "139": [
            3307,
            3386
          ],
          "140": [
            3528,
            3590
          ],
          "141": [
            3729,
            3737
          ],
          "142": [
            3755,
            3767
          ],
          "143": [
            3854,
            3878
          ],
          "144": [
            3970,
            4023
          ],
          "145": [
            4041,
            4053
          ],
          "146": [
            4082,
            4177
          ],
          "147": [
            4208,
            4244
          ]
        },
        "SignatureVerifier.recover": {
          "152": [
            730,
            762
          ],
          "153": [
            1116,
            1123
          ],
          "154": [
            1143,
            1170
          ],
          "155": [
            1180,
            1212
          ]
        }
      },
      "15": {
        "Upgradeable.finishUpgrade": {
          "148": [
            2126,
            2167
          ]
        },
        "Upgradeable.verifyState": {
          "138": [
            1856,
            1899
          ]
        }
      },
      "20": {
        "SafeMath.add": {
          "167": [
            1544,
            1559
          ]
        },
        "SafeMath.div": {
          "129": [
            926,
            940
          ]
        },
        "SafeMath.sub": {
          "168": [
            1289,
            1304
          ]
        }
      },
      "21": {
        "Ownable._transferOwnership": {
          "149": [
            1972,
            2003
          ],
          "150": [
            2013,
            2056
          ],
          "151": [
            2066,
            2083
          ]
        },
        "Ownable.isOwner": {
          "61": [
            1036,
            1063
          ]
        },
        "Ownable.owner": {
          "59": [
            717,
            730
          ]
        },
        "Ownable.renounceOwnership": {
          "28": [
            1404,
            1449
          ],
          "29": [
            1459,
            1478
          ]
        },
        "Ownable.transferOwnership": {
          "94": [
            1728,
            1756
          ]
        }
      },
      "25": {},
      "26": {
        "Address.sendValue": {
          "127": [
            2333,
            2406
          ],
          "128": [
            2533,
            2611
          ]
        }
      },
      "5": {
        "PolicyManager.calculateRefundValue": {
          "64": [
            22871,
            22902
          ],
          "65": [
            22912,
            22965
          ],
          "80": [
            22554,
            22615
          ],
          "156": [
            12926,
            13026
          ],
          "157": [
            13057,
            13124
          ],
          "158": [
            13150,
            13204
          ],
          "159": [
            13496,
            13501
          ],
          "160": [
            13567,
            13575
          ],
          "161": [
            13603,
            13737
          ],
          "162": [
            13797,
            13802
          ],
          "163": [
            13265,
            13289
          ],
          "164": [
            14133,
            14220
          ],
          "165": [
            14241,
            14288
          ],
          "166": [
            14298,
            14332
          ]
        },
        "PolicyManager.calculateRefundValueInternal": {
          "132": [
            18588,
            18677
          ],
          "133": [
            18954,
            18962
          ],
          "134": [
            19075,
            19105
          ],
          "135": [
            19164,
            19169
          ],
          "136": [
            18749,
            18752
          ],
          "137": [
            19282,
            19321
          ]
        },
        "PolicyManager.checkOwnerSignature": {
          "95": [
            20938,
            20985
          ]
        },
        "PolicyManager.createPolicy": {
          "32": [
            6984,
            7189
          ],
          "33": [
            7199,
            7244
          ],
          "34": [
            7440,
            7467
          ],
          "35": [
            7477,
            7524
          ],
          "36": [
            7534,
            7569
          ],
          "37": [
            7579,
            7651
          ],
          "38": [
            7661,
            7754
          ],
          "39": [
            7840,
            7867
          ],
          "40": [
            7984,
            8014
          ],
          "41": [
            8081,
            8244
          ],
          "42": [
            8383,
            8440
          ],
          "43": [
            8577,
            8635
          ],
          "44": [
            8736,
            8790
          ],
          "45": [
            8829,
            8883
          ],
          "46": [
            9020,
            9072
          ],
          "47": [
            9157,
            9205
          ],
          "48": [
            9233,
            9286
          ],
          "49": [
            7927,
            7930
          ],
          "50": [
            9307,
            9573
          ]
        },
        "PolicyManager.finishUpgrade": {
          "81": [
            28125,
            28153
          ],
          "82": [
            28304,
            28331
          ],
          "83": [
            28341,
            28369
          ],
          "84": [
            28379,
            28404
          ],
          "85": [
            28447,
            28465
          ],
          "86": [
            28414,
            28437
          ],
          "87": [
            28475,
            28497
          ],
          "88": [
            28507,
            28571
          ],
          "89": [
            28639,
            28657
          ],
          "90": [
            28667,
            28688
          ],
          "91": [
            28698,
            28729
          ],
          "92": [
            28739,
            28765
          ],
          "93": [
            28775,
            28800
          ]
        },
        "PolicyManager.getArrangementInfo": {
          "75": [
            24079,
            24095
          ],
          "76": [
            24105,
            24157
          ],
          "77": [
            24167,
            24211
          ]
        },
        "PolicyManager.getArrangementsLength": {
          "27": [
            23173,
            23219
          ]
        },
        "PolicyManager.getCurrentPeriod": {
          "2": [
            3948,
            3997
          ]
        },
        "PolicyManager.getMinFeeRate": {
          "51": [
            6386,
            6416
          ],
          "130": [
            6036,
            6068
          ],
          "131": [
            6099,
            6126
          ]
        },
        "PolicyManager.getNodeFeeDelta": {
          "60": [
            23579,
            23616
          ]
        },
        "PolicyManager.getPolicyOwner": {
          "20": [
            9768,
            9833
          ]
        },
        "PolicyManager.getRevocationHash": {
          "74": [
            20369,
            20452
          ]
        },
        "PolicyManager.refund": {
          "24": [
            22120,
            22151
          ],
          "25": [
            22214,
            22281
          ],
          "26": [
            22291,
            22337
          ],
          "78": [
            21733,
            21800
          ],
          "79": [
            21810,
            21857
          ]
        },
        "PolicyManager.refundInternal": {
          "96": [
            14822,
            14847
          ],
          "97": [
            15285,
            15301
          ],
          "98": [
            15319,
            15327
          ],
          "99": [
            15392,
            15537
          ],
          "100": [
            15859,
            15922
          ],
          "101": [
            15969,
            16032
          ],
          "102": [
            16145,
            16199
          ],
          "103": [
            16246,
            16300
          ],
          "104": [
            16459,
            16516
          ],
          "105": [
            16613,
            16661
          ],
          "106": [
            16697,
            16772
          ],
          "107": [
            16883,
            16915
          ],
          "108": [
            16933,
            16971
          ],
          "109": [
            16989,
            17023
          ],
          "110": [
            17075,
            17144
          ],
          "111": [
            17041,
            17057
          ],
          "112": [
            17183,
            17254
          ],
          "113": [
            17283,
            17313
          ],
          "114": [
            17372,
            17377
          ],
          "115": [
            15059,
            15062
          ],
          "116": [
            17552,
            17574
          ],
          "117": [
            17622,
            17649
          ],
          "118": [
            17667,
            17692
          ],
          "119": [
            17710,
            17728
          ],
          "120": [
            17789,
            17812
          ],
          "121": [
            17830,
            17884
          ],
          "122": [
            17923,
            17979
          ],
          "123": [
            18061,
            18100
          ],
          "124": [
            18155,
            18191
          ]
        },
        "PolicyManager.register": {
          "30": [
            4260,
            4332
          ],
          "31": [
            4342,
            4378
          ]
        },
        "PolicyManager.revoke": {
          "0": [
            21413,
            21462
          ],
          "1": [
            21472,
            21517
          ]
        },
        "PolicyManager.revokeArrangement": {
          "56": [
            19913,
            19944
          ],
          "57": [
            19954,
            20002
          ],
          "58": [
            20012,
            20057
          ]
        },
        "PolicyManager.revokePolicy": {
          "62": [
            19525,
            19573
          ],
          "63": [
            19583,
            19636
          ]
        },
        "PolicyManager.setDefaultFeeDelta": {
          "66": [
            10280,
            10322
          ]
        },
        "PolicyManager.setFeeRateRange": {
          "21": [
            4709,
            4754
          ],
          "22": [
            4764,
            4806
          ],
          "23": [
            4816,
            4870
          ]
        },
        "PolicyManager.setMinFeeRate": {
          "52": [
            5129,
            5295
          ],
          "53": [
            5414,
            5421
          ],
          "54": [
            5440,
            5473
          ],
          "55": [
            5483,
            5526
          ]
        },
        "PolicyManager.updateFee": {
          "4": [
            10678,
            10685
          ],
          "5": [
            10906,
            10926
          ],
          "6": [
            10944,
            10952
          ],
          "7": [
            11076,
            11116
          ],
          "8": [
            11134,
            11150
          ],
          "9": [
            11168,
            11204
          ],
          "10": [
            11269,
            11313
          ],
          "11": [
            11361,
            11381
          ],
          "12": [
            10762,
            10765
          ],
          "13": [
            11415,
            11447
          ],
          "14": [
            11457,
            11490
          ]
        },
        "PolicyManager.verifyState": {
          "67": [
            25904,
            25934
          ],
          "68": [
            26018,
            26185
          ],
          "69": [
            26347,
            26692
          ],
          "70": [
            26703,
            26835
          ],
          "71": [
            27106,
            27348
          ],
          "72": [
            27518,
            27765
          ],
          "73": [
            27776,
            27940
          ]
        },
        "PolicyManager.withdraw": {
          "3": [
            11610,
            11637
          ],
          "15": [
            11909,
            11926
          ],
          "16": [
            11936,
            11948
          ],
          "17": [
            11958,
            11983
          ],
          "18": [
            11993,
            12036
          ],
          "19": [
            12046,
            12056
          ]
        }
      },
      "8": {
        "AdditionalMath.addSigned": {
          "125": [
            747,
            771
          ],
          "126": [
            802,
            827
          ]
        },
        "AdditionalMath.max16": {
          "170": [
            247,
            268
          ]
        },
        "AdditionalMath.min16": {
          "169": [
            357,
            377
          ]
        },
        "AdditionalMath.sub16": {
          "171": [
            1827,
            1841
          ]
        }
      }
    }
  },
  "dependencies": [
    "AdditionalMath",
    "Address",
    "Ownable",
    "SafeERC20",
    "SafeMath",
    "SignatureVerifier",
    "Upgradeable"
  ],
  "deployedBytecode": "60806040526004361061021a5760003560e01c8063889ddd1a11610123578063b9626d21116100ab578063e2fdcc171161006f578063e2fdcc1714610a1b578063e38a303b14610a30578063e665830d14610a5b578063e8dccd0614610a8f578063f2fde38b14610ac25761021a565b8063b9626d21146108f6578063cbf12f2a14610929578063d4b839921461096c578063d845f4fb14610981578063dfdecfaf146109e75761021a565b80638e81ca5a116100f25780638e81ca5a146107dc5780638f32d59b14610819578063a2d1d5e214610842578063a87d40d914610876578063b438c4cd146108b95761021a565b8063889ddd1a146107275780638c316b901461075a5780638d7fd2fa146107845780638da5cb5b146107c75761021a565b806358cf15fb116101a65780636bd2af57116101755780636bd2af5714610556578063713c0e571461058a578063715018a61461063657806372be8d8d1461064b57806381e742a1146106885761021a565b806358cf15fb1461045a578063631722f21461048e57806363c509d5146104d357806365af62c3146105165761021a565b80633ea2391f116101ed5780633ea2391f14610374578063407f8001146103b35780634b2cd118146103e15780634b8fed4f1461041257806351cff8d9146104275761021a565b8063076421e81461021f578063086146d2146102cd578063189a5a17146102f95780633ccfd60b1461035f575b600080fd5b34801561022b57600080fd5b506102bb6004803603606081101561024257600080fd5b6001600160801b0319823516916001600160a01b036020820135169181019060608101604082013564010000000081111561027c57600080fd5b82018360208201111561028e57600080fd5b803590602001918460018302840111640100000000831117156102b057600080fd5b509092509050610af5565b60408051918252519081900360200190f35b3480156102d957600080fd5b506102e2610b4d565b6040805161ffff9092168252519081900360200190f35b34801561030557600080fd5b5061032c6004803603602081101561031c57600080fd5b50356001600160a01b0316610b84565b604080516001600160801b03909516855261ffff9093166020850152838301919091526060830152519081900360800190f35b34801561036b57600080fd5b506102bb610bbb565b34801561038057600080fd5b506103b16004803603604081101561039757600080fd5b5080356001600160a01b0316906020013561ffff16610bcb565b005b3480156103bf57600080fd5b506103c8610db0565b6040805163ffffffff9092168252519081900360200190f35b3480156103ed57600080fd5b506103f6610dd4565b604080516001600160a01b039092168252519081900360200190f35b34801561041e57600080fd5b506102bb610de3565b34801561043357600080fd5b506102bb6004803603602081101561044a57600080fd5b50356001600160a01b0316610dee565b34801561046657600080fd5b506103f66004803603602081101561047d57600080fd5b50356001600160801b031916610e82565b34801561049a57600080fd5b506103b1600480360360608110156104b157600080fd5b506001600160801b038135811691602081013582169160409091013516610ed9565b3480156104df57600080fd5b506102bb600480360360408110156104f657600080fd5b5080356001600160801b03191690602001356001600160a01b0316610fc3565b34801561052257600080fd5b5061052b611039565b604080516001600160801b039485168152928416602084015292168183015290519081900360600190f35b34801561056257600080fd5b506102bb6004803603602081101561057957600080fd5b50356001600160801b031916611059565b34801561059657600080fd5b506105be600480360360208110156105ad57600080fd5b50356001600160801b031916611078565b604080519b15158c526001600160a01b039a8b1660208d0152989099168a8901526001600160801b0390961660608a01526001600160401b0394851660808a01529290931660a088015260c087015260e086019190915261010085015261012084015261014083019190915251908190036101600190f35b34801561064257600080fd5b506103b16110f6565b34801561065757600080fd5b506103b16004803603604081101561066e57600080fd5b5080356001600160a01b0316906020013561ffff16611151565b6103b16004803603608081101561069e57600080fd5b6001600160801b0319823516916001600160a01b03602082013516916001600160401b0360408301351691908101906080810160608201356401000000008111156106e857600080fd5b8201836020820111156106fa57600080fd5b8035906020019184602083028401116401000000008311171561071c57600080fd5b5090925090506111f0565b34801561073357600080fd5b506102bb6004803603602081101561074a57600080fd5b50356001600160a01b0316611712565b34801561076657600080fd5b506103b16004803603602081101561077d57600080fd5b5035611733565b34801561079057600080fd5b506102bb600480360360408110156107a757600080fd5b5080356001600160801b03191690602001356001600160a01b03166117f7565b3480156107d357600080fd5b506103f6611835565b3480156107e857600080fd5b506102bb600480360360408110156107ff57600080fd5b5080356001600160a01b0316906020013561ffff16611844565b34801561082557600080fd5b5061082e611875565b604080519115158252519081900360200190f35b34801561084e57600080fd5b506102bb6004803603602081101561086557600080fd5b50356001600160801b031916611886565b34801561088257600080fd5b506102bb6004803603604081101561089957600080fd5b5080356001600160801b03191690602001356001600160a01b03166118b2565b3480156108c557600080fd5b506103b1600480360360408110156108dc57600080fd5b5080356001600160a01b0316906020013561ffff166118d1565b34801561090257600080fd5b506103b16004803603602081101561091957600080fd5b50356001600160a01b031661195c565b34801561093557600080fd5b506102bb6004803603604081101561094c57600080fd5b5080356001600160801b03191690602001356001600160a01b0316611c6b565b34801561097857600080fd5b506103f6611cbb565b34801561098d57600080fd5b506109bb600480360360408110156109a457600080fd5b506001600160801b03198135169060200135611cca565b604080516001600160a01b039094168452602084019290925261ffff1682820152519081900360600190f35b3480156109f357600080fd5b506103b160048036036020811015610a0a57600080fd5b50356001600160801b031916611d32565b348015610a2757600080fd5b506103f6611d89565b348015610a3c57600080fd5b50610a45611dad565b6040805160ff9092168252519081900360200190f35b348015610a6757600080fd5b506102bb60048036036020811015610a7e57600080fd5b50356001600160801b031916611dbd565b348015610a9b57600080fd5b506103b160048036036020811015610ab257600080fd5b50356001600160a01b0316611dca565b348015610ace57600080fd5b506103b160048036036020811015610ae557600080fd5b50356001600160a01b0316612065565b6000610b38858585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061207f92505050565b610b44858560016120c8565b95945050505050565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff164281610b7e57fe5b04905090565b6005602052600090815260409020805460018201546002909201546001600160801b03821692600160801b90920461ffff16919084565b6000610bc633610dee565b905090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c0057600080fd5b6001600160a01b03821660009081526005602052604090208054600160801b900461ffff161580610c415750805461ffff600160801b909104811690831611155b15610c4c5750610dac565b8054600160801b900461ffff166001015b8261ffff168161ffff1611610d6d5761ffff811660009081526003830160205260409020546001600160ff1b03811415610cad575061ffff81166000908152600383016020526040812055610d65565b600081128015610cc35750826001015481600003115b15610d325760018301805461ffff80851660009081526003870160209081526040808320805490950190945593558151908716815290516001600160a01b038816927fd56b4810f75e2913af1cd9e5f0d99d273958c5a67cff5ef0e7f298507b688bb8928290030190a2610d63565b6001830154610d47908263ffffffff6125c616565b600184015561ffff821660009081526003840160205260408120555b505b600101610c5d565b50805460018201546001600160801b031961ffff60801b19909216600160801b61ffff861602179182166001600160801b039283169091019091161790555b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002546001600160a01b031681565b6001600160ff1b0381565b33600090815260056020526040812080546001600160801b031680610e1257600080fd5b81546001600160801b0319168255610e396001600160a01b0385168263ffffffff6125fa16565b6040805182815290516001600160a01b0386169133917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb9181900360200190a39150505b919050565b6001600160801b03198116600090815260046020526040812060018101546001600160a01b031615610ec15760018101546001600160a01b0316610ed2565b805461010090046001600160a01b03165b9392505050565b610ee1611875565b610eea57600080fd5b816001600160801b0316836001600160801b031611158015610f1e5750806001600160801b0316826001600160801b031611155b610f2757600080fd5b60408051606080820183526001600160801b038681168084528682166020808601829052878416958701869052600680546001600160801b03199081168517909516600160801b840217905560078054909416861790935585519182529181019190915280840192909252915133927f3a93fb7c2385d29e9693a6edcd81c4cee090101cb783dc2f17a7814b79a2ecdc928290030190a2505050565b60006001600160a01b038216610fd857600080fd5b6001600160801b03198316600090815260046020526040902060018101546001600160a01b031633148061101a5750805461010090046001600160a01b031633145b61102357600080fd5b61102f848460006120c8565b9150505b92915050565b6006546007546001600160801b0380831692600160801b90048116911683565b6001600160801b03191660009081526004602052604090206008015490565b60046020819052600091825260409091208054600182015460028301546003840154948401546005850154600686015460079096015460ff8616976001600160a01b0361010090970487169795909616956001600160801b038516956001600160401b03600160801b8704811696600160c01b90041694919391928b565b6110fe611875565b61110757600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461118657600080fd5b6001600160a01b03821660009081526005602052604090208054600160801b900461ffff161580156111c657506111bb610b4d565b61ffff168261ffff16105b6111cf57600080fd5b805461ffff909216600160801b0261ffff60801b1990921691909117905550565b6001600160801b0319851660008181526004602052604090209015801590611223575060028101546001600160801b0316155b80156112315750805460ff16155b8015611245575042846001600160401b0316115b80156112515750600034115b61125a57600080fd5b6001600160801b0347111561126e57600080fd5b6000611278610b4d565b905060007f000000000000000000000000000000000000000000000000000000000000000063ffffffff16866001600160401b0316816112b457fe5b84546101003302610100600160a81b03199091161785556002850180546001600160401b038a8116600160c01b026001600160c01b034292909216600160801b0267ffffffffffffffff60801b199093169290921716179055046001818101925061ffff9184900301168061132934876126df565b8161133057fe5b6002860180546001600160801b031916929091046001600160801b0390811692909217908190551615801590611376575060028401546001600160801b03168102850234145b61137f57600080fd5b6001600160a01b03881633148015906113a057506001600160a01b03881615155b156113c3576001840180546001600160a01b0319166001600160a01b038a161790555b60005b858110156116685760008787838181106113dc57fe5b905060200201356001600160a01b0316905060006001600160a01b0316816001600160a01b0316141561140e57600080fd5b6001600160a01b03811660009081526005602052604090208054600160801b900461ffff161580159061144f5750805461ffff808816600160801b90920416105b8015611470575061145f81612701565b60028801546001600160801b031610155b61147957600080fd5b61ffff861660009081526003820160205260409020546001600160ff1b0314156114c957600287015461ffff8716600090815260038301602052604090206001600160801b0390911690556114f6565b600287015461ffff87166000908152600383016020526040902080546001600160801b0390921690910190555b61ffff851660009081526003820160205260409020546001600160ff1b03141561154857600287015461ffff8616600090815260038301602052604081206001600160801b0390921690039055611575565b600287015461ffff86166000908152600383016020526040902080546001600160801b0390921690910390555b61ffff861660009081526003820160205260409020546115af5761ffff8616600090815260038201602052604090206001600160ff1b0390555b61ffff851660009081526003820160205260409020546115e95761ffff8516600090815260038201602052604090206001600160ff1b0390555b50604080516060810182526001600160a01b0392831681526000602080830182815293830182815260088b01805460018082018355918552929093209351600390920290930180546001600160a01b03191691909516178455915183830155516002909201805461ffff191661ffff90931692909217909155016113c6565b506001600160a01b0388161561167e5787611680565b335b6002850154604080516001600160801b03831681526001600160401b03600160801b840481166020830152600160c01b9093049092168282015260608201889052516001600160a01b03929092169133916001600160801b03198d16917f8e609dac02bd39ff24c8ad6bb9a735e739b56708b22159948ec9828ad765b4d19181900360800190a4505050505050505050565b6001600160a01b0381166000908152600560205260408120610ed281612701565b6006546001600160801b0316811080159061175957506007546001600160801b03168111155b6117945760405162461bcd60e51b815260040180806020018281038252603f815260200180613447603f913960400191505060405180910390fd5b33600090815260056020526040902060028101548214156117b557506117f4565b6002810182905560408051838152905133917f6b9024cc1bf5710f290be788dca9886db7a3d9be0df0855bfa991dbf26a256bc919081900360200190a2505b50565b60006001600160a01b03821661180c57600080fd5b3361181684610e82565b6001600160a01b03161461182957600080fd5b610ed2838360016120c8565b6000546001600160a01b031690565b6001600160a01b038216600090815260056020908152604080832061ffff8516845260030190915290205492915050565b6000546001600160a01b0316331490565b60003361189283610e82565b6001600160a01b0316146118a557600080fd5b61103382600060016120c8565b60006001600160a01b0382166118c757600080fd5b610ed2838361276a565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461190657600080fd5b6001600160a01b038216600090815260056020908152604080832061ffff8516845260038101909252909120546119575761ffff8216600090815260038201602052604090206001600160ff1b0390555b505050565b61196581612894565b61196d613361565b611976826128ee565b80516006549192506001600160801b0391821691161480156119b157506020810151600654600160801b90046001600160801b039081169116145b80156119cf575060408101516007546001600160801b039081169116145b6119d857600080fd5b6000805260046020527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec611a0a613381565b611a1584600061290c565b8254602082015191925061010090046001600160a01b039081169116148015611a525750600182015460408201516001600160a01b039081169116145b8015611a725750600282015460608201516001600160801b039081169116145b8015611a995750600282015460808201516001600160401b03908116600160801b90920416145b8015611ac05750600282015460a08201516001600160401b03908116600160c01b90920416145b8015611ad6575081548151151560ff9091161515145b611adf57600080fd5b6008820154611af785636bd2af5760e01b600061293d565b14611b0157600080fd5b600882015415611b9057600082600801600081548110611b1d57fe5b90600052602060002090600302019050611b35613361565b611b4186600080612958565b825481519192506001600160a01b039182169116148015611b69575081600101548160200151145b8015611b8457506002820154604082015161ffff9081169116145b611b8d57600080fd5b50505b6000805260056020527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc611bc2613411565b611bcd866000612981565b825481519192506001600160801b039182169116148015611bf5575081600101548160400151145b8015611c1457508154602082015161ffff908116600160801b90920416145b8015611c27575081600201548160600151145b611c3057600080fd5b600b600081815260038401602052604081205491611c59918991634740e52d60e11b91906129a9565b14611c6357600080fd5b505050505050565b604080516001600160801b0319841660208201526bffffffffffffffffffffffff19606084901b166030820152815160248183030181526044909101909152600090610ed290604560f81b6129c5565b6001546001600160a01b031681565b6001600160801b03198216600090815260046020526040812060080180548291829182919086908110611cf957fe5b60009182526020909120600390910201805460018201546002909201546001600160a01b039091169891975061ffff1695509350505050565b6001600160801b03198116600090815260046020526040902060018101546001600160a01b0316331480611d745750805461010090046001600160a01b031633145b611d7d57600080fd5b611957826000806120c8565b7f000000000000000000000000000000000000000000000000000000000000000081565b600254600160a01b900460ff1681565b600061103382600061276a565b611dd381612cc4565b50600460209081527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec80547f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ed8054306001600160a01b0319918216179091557f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ee805460036001600160801b0319600160801b67ffffffffffffffff60801b19909316929092176001600160c01b0316600160c11b1782168117909255610100600160a81b031990931633610100021760ff19166001908117909455604080516060810182526000808252600b82890181815260169484019485527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3f48054998a018155835292517fdaf6a3df2e7fe032faba7f1c41811297bb73983780e1888a846f8aa1a8324d279890950297880180549096166001600160a01b0390951694909417909455517fdaf6a3df2e7fe032faba7f1c41811297bb73983780e1888a846f8aa1a8324d28860155517fdaf6a3df2e7fe032faba7f1c41811297bb73983780e1888a846f8aa1a8324d29909401805461ffff191661ffff909516949094179093557f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc805460217f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bd55606493169290921761ffff60801b1916600b60821b17909155527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bf905260377fe98516eef36ab8324c691eaae918b396562bbff0916fab980ba5f148c2da4dc8556103097f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746be55565b61206d611875565b61207657600080fd5b6117f481612d1e565b600061208b8484611c6b565b905060006120998284612d8c565b9050806001600160a01b03166120ae86610e82565b6001600160a01b0316146120c157600080fd5b5050505050565b6001600160801b031983166000908152600460205260408120805460ff16156120f057600080fd5b60028101546000907f000000000000000000000000000000000000000000000000000000000000000063ffffffff1690600160c01b90046001600160401b03168161213757fe5b6008840154919004600101915060005b60088401548110156124af57600084600801828154811061216457fe5b6000918252602090912060039091020180549091506001600160a01b03168015806121b457506001600160a01b038916158015906121b45750806001600160a01b0316896001600160a01b031614155b156121c7575050600019909101906124a7565b60006121d38784612e45565b60028601805461ffff191661ffff929092169190911790556001850155905088156123a2576001600160a01b0382166000908152600560209081526040808320600287015461ffff16808552600382019093529220546001600160ff1b03141561226557600289015461ffff8216600090815260038401602052604081206001600160801b0390921690039055612292565b600289015461ffff82166000908152600384016020526040902080546001600160801b0390921690910390555b61ffff881660009081526003830160205260409020546001600160ff1b0314156122e457600289015461ffff8916600090815260038401602052604081206001600160801b0390921690039055612311565b600289015461ffff89166000908152600384016020526040902080546001600160801b0390921690910190555b61ffff8116600090815260038301602052604090205461234b5761ffff8116600090815260038301602052604090206001600160ff1b0390555b61ffff881660009081526003830160205260409020546123855761ffff8816600090815260038301602052604090206001600160ff1b0390555b60028901546001600160801b031690880361ffff16029190910190505b88806123b95750600283015461ffff808816911610155b1561243a5782546001600160a01b03191683556000600184015560028301805461ffff1916905560408051828152905160001996909601956001600160a01b0384169133916001600160801b03198f16917ff3b13df5bdd5efcb090f73617909a6295ee75815920224c512d784b2726812f1919081900360200190a4612488565b6040805182815290516001600160a01b0384169133916001600160801b03198f16917fab654b569128c88ffcd210806a5e48ee14c541e2c76923f143281f20807090c1919081900360200190a45b968701966001600160a01b038a16156124a3575050506124af565b5050505b600101612147565b83546001600160a01b03610100909104811690881661258b5782612544578454600160ff199091168117610100600160a81b0319168655850180546001600160a01b03191690556000600286015560408051878152905133916001600160801b03198c16917fd5ea25ba3600c386669c484639012a0ae266ed537f0c4ab71b651024736efff4916020908290030190a3612586565b60408051878152905133916001600160801b03198c16917f51377f313f8c3404e86d38ae907b443ada38578fd6b9589d03f79d03ff9303c79181900360200190a35b61259b565b6008850154821061259b57600080fd5b85156125ba576125ba6001600160a01b0382168763ffffffff6125fa16565b50505050509392505050565b60008082126125e6576125df838363ffffffff6132a016565b9050611033565b6125df83600084900363ffffffff6132b216565b8047101561264f576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d806000811461269a576040519150601f19603f3d011682016040523d82523d6000602084013e61269f565b606091505b50509050806119575760405162461bcd60e51b815260040180806020018281038252603a815260200180613486603a913960400191505060405180910390fd5b60008082116126ed57600080fd5b60008284816126f857fe5b04949350505050565b6000816002015460001480612726575060065460028301546001600160801b03909116115b80612741575060075460028301546001600160801b03909116105b1561275f5750600654600160801b90046001600160801b0316610e7d565b506002810154610e7d565b6001600160801b03198216600090815260046020526040812060018101546001600160a01b03163314806127ac5750805461010090046001600160a01b031633145b80156127ba5750805460ff16155b6127c357600080fd5b60005b600882015481101561286d5760008260080182815481106127e357fe5b6000918252602090912060039091020180549091506001600160a01b0316158061282d57506001600160a01b0385161580159061282d575080546001600160a01b03868116911614155b156128385750612865565b60006128448483612e45565b50509485019490506001600160a01b0386161561286257505061286d565b50505b6001016127c6565b6001600160a01b0384161561288c576008820154811061288c57600080fd5b505092915050565b60028054600160a01b900460ff16146128ac57600080fd5b6040805133815290516001600160a01b038316917f1e8d98c1b4a0d9bd2e2371026b632eb2773fcce41742e41f02f574ab69868d4c919081900360200190a250565b6128f6613361565b6000610ed2836365af62c360e01b8380806132c7565b612914613381565b60006129358463713c0e5760e01b60016001600160801b03198716856132c7565b949350505050565b60008061294e8585600186856132c7565b5195945050505050565b612960613361565b6000610b448563d845f4fb60e01b60026001600160801b03198816876132c7565b612989613411565b60006129358463189a5a1760e01b60016001600160a01b038716856132c7565b6000806129ba8686600287876132c7565b519695505050505050565b60006001600160f81b03198216612a7857604051601960f81b602080830182815260006021850181905230606081901b602287015288519095919386938a9390926036909101918401908083835b60208310612a325780518252601f199092019160209182019101612a13565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120915050611033565b6001600160f81b03198216604560f81b1415612c7757825180612acc5760405162461bcd60e51b81526004018080602001828103825260278152602001806134c06027913960400191505060405180910390fd5b60005b8115612ae357600101600a82049150612acf565b6060816001600160401b0381118015612afb57600080fd5b506040519080825280601f01601f191660200182016040528015612b26576020820181803683370190505b5086519350905060001982015b8315612b7857600a840660300160f81b82828060019003935081518110612b5657fe5b60200101906001600160f81b031916908160001a905350600a84049350612b33565b604051601960f81b60208083018281527f457468657265756d205369676e6564204d6573736167653a0a000000000000006021850181905286519394909387938d9392603a0191908501908083835b60208310612be65780518252601f199092019160209182019101612bc7565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310612c2e5780518252601f199092019160209182019101612c0f565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120945050505050611033565b6040805162461bcd60e51b815260206004820152601a60248201527f556e737570706f72746564204549503139312076657273696f6e000000000000604482015290519081900360640190fd5b60028054600160a01b900460ff1614612cdc57600080fd5b6040805133815290516001600160a01b038316917fd55ec27c5c6316913ed8803c18cfd1bfefea953db909dcba6140744a9d8b0d1f919081900360200190a250565b6001600160a01b038116612d3157600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008151604114612d9c57600080fd5b60208201516040830151606084015160001a601b811015612dbb57601b015b8060ff16601b1480612dd057508060ff16601c145b612dd957600080fd5b6040805160008152602080820180845289905260ff8416828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa158015612e30573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000807f000000000000000000000000000000000000000000000000000000000000000063ffffffff168660020160109054906101000a90046001600160401b03166001600160401b031681612e9a57fe5b0490506000612ef4612eaa610b4d565b60028901547f000000000000000000000000000000000000000000000000000000000000000063ffffffff1690600160c01b90046001600160401b031681612eee57fe5b04613317565b6002870154909150600090612f0e90849061ffff16613335565b8754604080516390dcb51f60e01b81526001600160a01b039283166004820152905192935060009283927f000000000000000000000000000000000000000000000000000000000000000016916390dcb51f916024808301926020929190829003018186803b158015612f8057600080fd5b505afa158015612f94573d6000803e3d6000fd5b505050506040513d6020811015612faa57600080fd5b505160028a015490915060009061ffff1661306957895460408051634789d02d60e01b81526001600160a01b03928316600482015261ffff8916602482015290517f000000000000000000000000000000000000000000000000000000000000000090921691634789d02d91604480820192602092909190829003018186803b15801561303657600080fd5b505afa15801561304a573d6000803e3d6000fd5b505050506040513d602081101561306057600080fd5b50519050613070565b5060018901545b8097505b818810156131a757895460408051638fa95a1560e01b81526001600160a01b039283166004820152602481018b9052815160009384937f000000000000000000000000000000000000000000000000000000000000000090911692638fa95a159260448083019392829003018186803b1580156130f057600080fd5b505afa158015613104573d6000803e3d6000fd5b505050506040513d604081101561311a57600080fd5b508051602090910151909250905061ffff808816908316111561313e5750506131a7565b8561ffff168161ffff16101561315557505061319c565b61317c6131628784613335565b61316c8984613317565b61ffff169063ffffffff61334d16565b600101850194508061ffff168761ffff16116131995750506131a7565b50505b600190970196613074565b8954604080516351f5e0c160e11b81526001600160a01b03928316600482015290516000927f0000000000000000000000000000000000000000000000000000000000000000169163a3ebc182916024808301926020929190829003018186803b15801561321457600080fd5b505afa158015613228573d6000803e3d6000fd5b505050506040513d602081101561323e57600080fd5b50519050888314801561325857508561ffff168161ffff16105b156132715761326a6001860382613335565b8603840193505b5050506002989098015461ffff9098166001600160801b03988916029097169793965060010194509192505050565b600082820183811015610ed257600080fd5b6000828211156132c157600080fd5b50900390565b60405184815283156132da578260048201525b60018411156132ea578160248201525b6000808560200260040183895af48015613308573d6000833e61330d565b600082fd5b5095945050505050565b60008161ffff168361ffff161061332e5781610ed2565b5090919050565b60008161ffff168361ffff16101561332e5781610ed2565b60008261ffff168261ffff1611156132c157fe5b604080516060810182526000808252602082018190529181019190915290565b60405180610180016040528060001515815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160801b0316815260200160006001600160401b0316815260200160006001600160401b031681526020016000815260200160008152602001600081526020016000815260200160008152602001606081525090565b604051806080016040528060006001600160801b03168152602001600061ffff1681526020016000815260200160008152509056fe546865207374616b65722773206d696e206665652072617465206d7573742066616c6c2077697468696e2074686520676c6f62616c206665652072616e6765416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564456d707479206d657373616765206e6f7420616c6c6f77656420666f722076657273696f6e2045a2646970667358221220e04bdbf56f67a4f64aa85a9578302cf9921e7026c20e3030e661dc8ab5261fc664736f6c63430006070033",
  "deployedSourceMap": "495:28314:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;21275:249:5;;5:9:-1;2:2;;;27:1;24;17:12;2:2;21275:249:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;21275:249:5;;;;-1:-1:-1;;;;;21275:249:5;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;21275:249:5;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;21275:249:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;21275:249:5;;-1:-1:-1;21275:249:5;-1:-1:-1;21275:249:5;:::i;:::-;;;;;;;;;;;;;;;;3881:123;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3881:123:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3104:42;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3104:42:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3104:42:5;-1:-1:-1;;;;;3104:42:5;;:::i;:::-;;;;-1:-1:-1;;;;;3104:42:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11553:91;;5:9:-1;2:2;;;27:1;24;17:12;2:2;11553:91:5;;;:::i;10460:1037::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;10460:1037:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;10460:1037:5;;-1:-1:-1;;;;;10460:1037:5;;;;;;;;:::i;:::-;;3008:40;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3008:40:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;973:29:15;;5:9:-1;2:2;;;27:1;24;17:12;2:2;973:29:15;;;:::i;:::-;;;;-1:-1:-1;;;;;973:29:15;;;;;;;;;;;;;;2886:72:5;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2886:72:5;;;:::i;11745:318::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;11745:318:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;11745:318:5;-1:-1:-1;;;;;11745:318:5;;:::i;9632:208::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;9632:208:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;9632:208:5;-1:-1:-1;;;;;;9632:208:5;;:::i;4609:268::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4609:268:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4609:268:5;;;;;;;;;;;;;;;;;;;:::i;22009:335::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;22009:335:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;22009:335:5;;-1:-1:-1;;;;;;22009:335:5;;;;;-1:-1:-1;;;;;22009:335:5;;:::i;3152:25::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3152:25:5;;;:::i;:::-;;;;-1:-1:-1;;;;;3152:25:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;23081:145;;5:9:-1;2:2;;;27:1;24;17:12;2:2;23081:145:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;23081:145:5;-1:-1:-1;;;;;;23081:145:5;;:::i;3055:43::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3055:43:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3055:43:5;-1:-1:-1;;;;;;3055:43:5;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;3055:43:5;;;;;;;;;;;;;;;-1:-1:-1;;;;;3055:43:5;;;;;;;-1:-1:-1;;;;;3055:43:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1348:137:21;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1348:137:21;;;:::i;4123:262:5:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4123:262:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4123:262:5;;-1:-1:-1;;;;;4123:262:5;;;;;;;;:::i;6742:2838::-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;;6742:2838:5;;;;-1:-1:-1;;;;;6742:2838:5;;;;;;-1:-1:-1;;;;;6742:2838:5;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;6742:2838:5;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;6742:2838:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;6742:2838:5;;-1:-1:-1;6742:2838:5;-1:-1:-1;6742:2838:5;:::i;6258:165::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6258:165:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6258:165:5;-1:-1:-1;;;;;6258:165:5;;:::i;5066:467::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;5066:467:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5066:467:5;;:::i;19791:273::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;19791:273:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;19791:273:5;;-1:-1:-1;;;;;;19791:273:5;;;;;-1:-1:-1;;;;;19791:273:5;;:::i;660:77:21:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;660:77:21;;;:::i;23383:240:5:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;23383:240:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;23383:240:5;;-1:-1:-1;;;;;23383:240:5;;;;;;;;:::i;980:90:21:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;980:90:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;19435:208:5;;5:9:-1;2:2;;;27:1;24;17:12;2:2;19435:208:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;19435:208:5;-1:-1:-1;;;;;;19435:208:5;;:::i;22741:231::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;22741:231:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;22741:231:5;;-1:-1:-1;;;;;;22741:231:5;;;;;-1:-1:-1;;;;;22741:231:5;;:::i;10090:249::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;10090:249:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;10090:249:5;;-1:-1:-1;;;;;10090:249:5;;;;;;;;:::i;25828:2119::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;25828:2119:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;25828:2119:5;-1:-1:-1;;;;;25828:2119:5;;:::i;20268:191::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;20268:191:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;20268:191:5;;-1:-1:-1;;;;;;20268:191:5;;;;;-1:-1:-1;;;;;20268:191:5;;:::i;859:21:15:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;859:21:15;;;:::i;23699:519:5:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;23699:519:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;;23699:519:5;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;23699:519:5;;;;;;;;;;;;;;;;;;;;;;;;;;;21626:238;;5:9:-1;2:2;;;27:1;24;17:12;2:2;21626:238:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;21626:238:5;-1:-1:-1;;;;;;21626:238:5;;:::i;2965:37::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2965:37:5;;;:::i;1132:22:15:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1132:22:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;22439:183:5;;5:9:-1;2:2;;;27:1;24;17:12;2:2;22439:183:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;22439:183:5;-1:-1:-1;;;;;;22439:183:5;;:::i;28051:756::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;28051:756:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;28051:756:5;-1:-1:-1;;;;;28051:756:5;;:::i;1656:107:21:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1656:107:21;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1656:107:21;-1:-1:-1;;;;;1656:107:21;;:::i;21275:249:5:-;21378:19;21413:49;21433:9;21444:5;21451:10;;21413:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;21413:19:5;;-1:-1:-1;;;21413:49:5:i;:::-;21479:38;21494:9;21505:5;21512:4;21479:14;:38::i;:::-;21472:45;21275:249;-1:-1:-1;;;;;21275:249:5:o;3881:123::-;3930:6;3980:16;3962:34;;:15;:34;;;;;;3948:49;;3881:123;:::o;3104:42::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3104:42:5;;;-1:-1:-1;;;3104:42:5;;;;;;;;:::o;11553:91::-;11591:7;11617:20;11626:10;11617:8;:20::i;:::-;11610:27;;11553:91;:::o;10460:1037::-;3773:10;-1:-1:-1;;;;;3795:6:5;3773:29;;3765:38;;12:1:-1;9;2:12;3765:38:5;-1:-1:-1;;;;;10572:12:5;::::1;10548:21;10572:12:::0;;;:5:::1;:12;::::0;;;;10598:22;;-1:-1:-1;;;10598:22:5;::::1;;;:27:::0;;:64:::1;;-1:-1:-1::0;10640:22:5;;::::1;-1:-1:-1::0;;;10640:22:5;;::::1;::::0;::::1;10629:33:::0;;::::1;;;10598:64;10594:101;;;10678:7;;;10594:101;10720:22:::0;;-1:-1:-1;;;10720:22:5;::::1;;;10745:1;10720:26;10704:702;10753:7;10748:12;;:1;:12;;;10704:702;;10796:16;::::0;::::1;10781:12;10796:16:::0;;;:13:::1;::::0;::::1;:16;::::0;;;;;-1:-1:-1;;;;;10830:26:5;::::1;10826:141;;;-1:-1:-1::0;10906:16:5::1;::::0;::::1;10925:1;10906:16:::0;;;:13:::1;::::0;::::1;:16;::::0;;;;:20;10944:8:::1;;10826:141;11021:1;11013:5;:9;:43;;;;;11044:4;:12;;;11035:5;11034:6;;11026:30;11013:43;11009:387;;;11103:12;::::0;::::1;::::0;;11076:16:::1;::::0;;::::1;;::::0;;;:13:::1;::::0;::::1;:16;::::0;;;;;;;:40;;;;::::1;::::0;;;11134:16;;11173:31;;;;::::1;::::0;;;;-1:-1:-1;;;;;11173:31:5;::::1;::::0;::::1;::::0;;;;;;::::1;11009:387;;;11284:12;::::0;::::1;::::0;:29:::1;::::0;11307:5;11284:29:::1;:22;:29;:::i;:::-;11269:12;::::0;::::1;:44:::0;11361:16:::1;::::0;::::1;11380:1;11361:16:::0;;;:13:::1;::::0;::::1;:16;::::0;;;;:20;11009:387:::1;10704:702;;10762:3;;10704:702;;;-1:-1:-1::0;11415:32:5;;-1:-1:-1;11477:12:5;::::1;::::0;-1:-1:-1;;;;;;;;;;11415:32:5;;::::1;-1:-1:-1::0;;;11415:32:5::1;::::0;::::1;;;11457:33:::0;;::::1;-1:-1:-1::0;;;;;11457:33:5;;::::1;::::0;;::::1;::::0;;::::1;;::::0;;3813:1:::1;10460:1037:::0;;:::o;3008:40::-;;;:::o;973:29:15:-;;;-1:-1:-1;;;;;973:29:15;;:::o;2886:72:5:-;-1:-1:-1;;;;;2886:72:5;:::o;11745:318::-;11856:10;11807:7;11850:17;;;:5;:17;;;;;11891:8;;-1:-1:-1;;;;;11891:8:5;11917;11909:17;;12:1:-1;9;2:12;11909:17:5;11936:12;;-1:-1:-1;;;;;;11936:12:5;;;11958:25;-1:-1:-1;;;;;11958:20:5;;11979:3;11958:25;:20;:25;:::i;:::-;11998:38;;;;;;;;-1:-1:-1;;;;;11998:38:5;;;12008:10;;11998:38;;;;;;;;;12053:3;-1:-1:-1;;11745:318:5;;;;:::o;9632:208::-;-1:-1:-1;;;;;;9739:19:5;;9696:7;9739:19;;;:8;:19;;;;;9775:12;;;;-1:-1:-1;;;;;9775:12:5;:26;:58;;9821:12;;;;-1:-1:-1;;;;;9821:12:5;9775:58;;;9804:14;;;;;-1:-1:-1;;;;;9804:14:5;9775:58;9768:65;9632:208;-1:-1:-1;;;9632:208:5:o;4609:268::-;864:9:21;:7;:9::i;:::-;856:18;;12:1:-1;9;2:12;856:18:21;4725:8:5::1;-1:-1:-1::0;;;;;4717:16:5::1;:4;-1:-1:-1::0;;;;;4717:16:5::1;;;:36;;;;;4749:4;-1:-1:-1::0;;;;;4737:16:5::1;:8;-1:-1:-1::0;;;;;4737:16:5::1;;;4717:36;4709:45;;12:1:-1;9::::0;2:12:::1;4709:45:5;4779:27;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;4779:27:5;;::::1;::::0;;;;;::::1;;::::0;;::::1;::::0;;;;;::::1;::::0;;;;;;4764:12:::1;:42:::0;;-1:-1:-1;;;;;;4764:42:5;;::::1;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;;4764:42:5;::::1;;::::0;;;;;;;::::1;::::0;::::1;::::0;;;4821:49;;;;;;;::::1;::::0;;;;;;;;;;;;;4837:10:::1;::::0;4821:49:::1;::::0;;;;;;::::1;4609:268:::0;;;:::o;22009:335::-;22085:19;-1:-1:-1;;;;;22128:22:5;;22120:31;;12:1:-1;9;2:12;22120:31:5;-1:-1:-1;;;;;;22185:19:5;;22161:21;22185:19;;;:8;:19;;;;;22222:12;;;;-1:-1:-1;;;;;22222:12:5;22238:10;22222:26;;:58;;-1:-1:-1;22252:14:5;;;;;-1:-1:-1;;;;;22252:14:5;22270:10;22252:28;22222:58;22214:67;;12:1:-1;9;2:12;22214:67:5;22298:39;22313:9;22324:5;22331;22298:14;:39::i;:::-;22291:46;;;22009:335;;;;;:::o;3152:25::-;;;;;-1:-1:-1;;;;;3152:25:5;;;;-1:-1:-1;;;3152:25:5;;;;;;;:::o;23081:145::-;-1:-1:-1;;;;;;23180:19:5;23154:7;23180:19;;;:8;:19;;;;;:32;;:39;;23081:145::o;3055:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3055:43:5;;;;;;;;;;;;-1:-1:-1;;;;;3055:43:5;;;-1:-1:-1;;;;;;;;3055:43:5;;;;;-1:-1:-1;;;3055:43:5;;;;;;;;;:::o;1348:137:21:-;864:9;:7;:9::i;:::-;856:18;;12:1:-1;9;2:12;856:18:21;1446:1:::1;1430:6:::0;;1409:40:::1;::::0;-1:-1:-1;;;;;1430:6:21;;::::1;::::0;1409:40:::1;::::0;1446:1;;1409:40:::1;1476:1;1459:19:::0;;-1:-1:-1;;;;;;1459:19:21::1;::::0;;1348:137::o;4123:262:5:-;3773:10;-1:-1:-1;;;;;3795:6:5;3773:29;;3765:38;;12:1:-1;9;2:12;3765:38:5;-1:-1:-1;;;;;4238:12:5;::::1;4210:25;4238:12:::0;;;:5:::1;:12;::::0;;;;4268:26;;-1:-1:-1;;;4268:26:5;::::1;;;:31:::0;:63;::::1;;;;4313:18;:16;:18::i;:::-;4303:28;;:7;:28;;;4268:63;4260:72;;12:1:-1;9::::0;2:12:::1;4260:72:5;4342:36:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;4342:36:5::1;-1:-1:-1::0;;;;4342:36:5;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;4123:262:5:o;6742:2838::-;-1:-1:-1;;;;;;6955:19:5;;6931:21;6955:19;;;:8;:19;;;;;;7005:31;;;;:66;;-1:-1:-1;7052:14:5;;;;-1:-1:-1;;;;;7052:14:5;:19;7005:66;:98;;;;-1:-1:-1;7088:15:5;;;;7087:16;7005:98;:145;;;;;7135:15;7119:13;-1:-1:-1;;;;;7119:31:5;;7005:145;:174;;;;;7178:1;7166:9;:13;7005:174;6984:205;;12:1:-1;9;2:12;6984:205:5;-1:-1:-1;;;;;7207:21:5;:36;;7199:45;;12:1:-1;9;2:12;7199:45:5;7254:20;7277:18;:16;:18::i;:::-;7254:41;;7305:16;7347;7331:32;;:13;-1:-1:-1;;;;;7331:32:5;;;;;;7440:27;;;7457:10;7440:27;-1:-1:-1;;;;;;7440:27:5;;;;;;7477:21;;;:47;;-1:-1:-1;;;;;7534:35:5;;;-1:-1:-1;;;7534:35:5;-1:-1:-1;;;;;7508:15:5;7477:47;;;;-1:-1:-1;;;7477:47:5;-1:-1:-1;;;;7477:47:5;;;;;;;7534:35;;;;7331:32;-1:-1:-1;7324:44:5;;;;-1:-1:-1;7378:51:5;7404:25;;;;;7378:51;;7604:28;:9;7618:6;7604:13;:28::i;:::-;:46;;;;;7579:14;;;:72;;-1:-1:-1;;;;;;7579:72:5;7604:46;;;;-1:-1:-1;;;;;7579:72:5;;;;;;;;;;;7669:14;:18;;;;:84;;-1:-1:-1;7691:14:5;;;;-1:-1:-1;;;;;7691:14:5;:32;;:48;;7744:9;7691:62;7669:84;7661:93;;12:1:-1;9;2:12;7661:93:5;-1:-1:-1;;;;;7768:26:5;;7784:10;7768:26;;;;:56;;-1:-1:-1;;;;;;7798:26:5;;;;7768:56;7764:114;;;7840:12;;;:27;;-1:-1:-1;;;;;;7840:27:5;-1:-1:-1;;;;;7840:27:5;;;;;7764:114;7893:9;7888:1409;7908:17;;;7888:1409;;;7946:12;7961:6;;7968:1;7961:9;;;;;;;;;;;;;-1:-1:-1;;;;;7961:9:5;7946:24;;2764:1;-1:-1:-1;;;;;7992:21:5;:4;-1:-1:-1;;;;;7992:21:5;;;7984:30;;12:1:-1;9;2:12;7984:30:5;-1:-1:-1;;;;;8056:11:5;;8028:25;8056:11;;;:5;:11;;;;;8089:26;;-1:-1:-1;;;8089:26:5;;;;:31;;;;:93;;-1:-1:-1;8140:26:5;;:42;;;;-1:-1:-1;;;8140:26:5;;;;:42;8089:93;:154;;;;;8220:23;8234:8;8220:13;:23::i;:::-;8202:14;;;;-1:-1:-1;;;;;8202:14:5;:41;;8089:154;8081:163;;12:1:-1;9;2:12;8081:163:5;8310:32;;;2945:1;8310:32;;;:17;;;:32;;;;;;-1:-1:-1;;;;;8310:53:5;8306:344;;;8425:14;;;;8383:32;;;8425:14;8383:32;;;:17;;;:32;;;;;-1:-1:-1;;;;;8425:14:5;;;8383:57;;8306:344;;;8620:14;;;;8577:32;;;8620:14;8577:32;;;:17;;;:32;;;;;:58;;-1:-1:-1;;;;;8620:14:5;;;8577:58;;;;;8306:344;8667:28;;;2945:1;8667:28;;;:17;;;:28;;;;;;-1:-1:-1;;;;;8667:49:5;8663:235;;;8775:14;;;;8736:28;;;8775:14;8736:28;;;:17;;;:28;;;;;-1:-1:-1;;;;;8775:14:5;;;8767:23;;8736:54;;8663:235;;;8868:14;;;;8829:28;;;8868:14;8829:28;;;:17;;;:28;;;;;:54;;-1:-1:-1;;;;;8868:14:5;;;8829:54;;;;;8663:235;8963:32;;;;;;;:17;;;:32;;;;;;8959:128;;9020:32;;;2945:1;9020:32;;;:17;;;:32;;;;;-1:-1:-1;;;;;9020:52:5;;8959:128;9104:28;;;;;;;:17;;;:28;;;;;;9100:120;;9157:28;;;2945:1;9157:28;;;:17;;;:28;;;;;-1:-1:-1;;;;;9157:48:5;;9100:120;-1:-1:-1;9258:27:5;;;;;;;;-1:-1:-1;;;;;9258:27:5;;;;;-1:-1:-1;9258:27:5;;;;;;;;;;;;;9233:19;;;27:10:-1;;39:1;23:18;;;45:23;;9233:53:5;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9233:53:5;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9233:53:5;9258:27;9233:53;;;;;;;;;;7927:3;7888:1409;;;-1:-1:-1;;;;;;9386:26:5;;;:54;;9428:12;9386:54;;;9415:10;9386:54;9454:14;;;;9312:261;;;-1:-1:-1;;;;;9454:14:5;;9312:261;;-1:-1:-1;;;;;;;;9482:21:5;;;;9312:261;;;;-1:-1:-1;;;9517:19:5;;;;;;9312:261;;;;;;;;;;;-1:-1:-1;;;;;9312:261:5;;;;;9362:10;;-1:-1:-1;;;;;;9312:261:5;;;;;;;;;;;;6742:2838;;;;;;;;;:::o;6258:165::-;-1:-1:-1;;;;;6364:12:5;;6317:7;6364:12;;;:5;:12;;;;;6393:23;6364:12;6393:13;:23::i;5066:467::-;5152:12;:16;-1:-1:-1;;;;;5152:16:5;5137:31;;;;;:78;;-1:-1:-1;5199:16:5;;-1:-1:-1;;;;;5199:16:5;5184:31;;;5137:78;5129:166;;;;-1:-1:-1;;;5129:166:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5339:10;5305:25;5333:17;;;:5;:17;;;;;5364:19;;;;:34;;5360:71;;;5414:7;;;5360:71;5440:19;;;:33;;;5488:38;;;;;;;;5502:10;;5488:38;;;;;;;;;;5066:467;;;:::o;19791:273::-;19878:19;-1:-1:-1;;;;;19921:22:5;;19913:31;;12:1:-1;9;2:12;19913:31:5;19991:10;19962:25;19977:9;19962:14;:25::i;:::-;-1:-1:-1;;;;;19962:39:5;;19954:48;;12:1:-1;9;2:12;19954:48:5;20019:38;20034:9;20045:5;20052:4;20019:14;:38::i;660:77:21:-;698:7;724:6;-1:-1:-1;;;;;724:6:21;660:77;:::o;23383:240:5:-;-1:-1:-1;;;;;23586:12:5;;23557:6;23586:12;;;:5;:12;;;;;;;;:30;;;;;:21;;:30;;;;;;23383:240;;;;:::o;980:90:21:-;1020:4;1057:6;-1:-1:-1;;;;;1057:6:21;1043:10;:20;;980:90::o;19435:208:5:-;19494:19;19562:10;19533:25;19548:9;19533:14;:25::i;:::-;-1:-1:-1;;;;;19533:39:5;;19525:48;;12:1:-1;9;2:12;19525:48:5;19590:46;19605:9;2764:1;19631:4;19590:14;:46::i;22741:231::-;22836:19;-1:-1:-1;;;;;22879:22:5;;22871:31;;12:1:-1;9;2:12;22871:31:5;22919:46;22948:9;22959:5;22919:28;:46::i;10090:249::-;3773:10;-1:-1:-1;;;;;3795:6:5;3773:29;;3765:38;;12:1:-1;9;2:12;3765:38:5;-1:-1:-1;;;;;10211:12:5;::::1;10187:21;10211:12:::0;;;:5:::1;:12;::::0;;;;;;;10237:22:::1;::::0;::::1;::::0;;:13:::1;::::0;::::1;:22:::0;;;;;;;10233:100:::1;;10280:22;::::0;::::1;2945:1;10280:22:::0;;;:13:::1;::::0;::::1;:22;::::0;;;;-1:-1:-1;;;;;10280:42:5;;10233:100:::1;3813:1;10090:249:::0;;:::o;25828:2119::-;25904:30;25922:11;25904:17;:30::i;:::-;25944:25;;:::i;:::-;25972:36;25996:11;25972:23;:36::i;:::-;26046:16;;26026:12;:16;25944:64;;-1:-1:-1;;;;;;26026:16:5;;;:36;;;:106;;;;-1:-1:-1;26107:25:5;;;;26078:12;:25;-1:-1:-1;;;26078:25:5;;-1:-1:-1;;;;;26078:25:5;;;:54;;;26026:106;:158;;;;-1:-1:-1;26168:16:5;;;;26148;;-1:-1:-1;;;;;26148:16:5;;;:36;;;26026:158;26018:167;;12:1:-1;9;2:12;26018:167:5;26195:21;26219:28;;:8;:28;;;26257:27;;:::i;:::-;26287:50;26305:11;2706:1;26287:17;:50::i;:::-;26380:14;;26355:21;;;;;;-1:-1:-1;26380:14:5;;;-1:-1:-1;;;;;26380:14:5;;;26355:39;;;:90;;;;-1:-1:-1;26433:12:5;;;;26410:19;;;;-1:-1:-1;;;;;26410:35:5;;;26433:12;;26410:35;26355:90;:145;;;;-1:-1:-1;26486:14:5;;;;26461:21;;;;-1:-1:-1;;;;;26461:39:5;;;26486:14;;26461:39;26355:145;:214;;;;-1:-1:-1;26548:21:5;;;;26516:28;;;;-1:-1:-1;;;;;26516:53:5;;;-1:-1:-1;;;26548:21:5;;;;26516:53;26355:214;:279;;;;-1:-1:-1;26615:19:5;;;;26585:26;;;;-1:-1:-1;;;;;26585:49:5;;;-1:-1:-1;;;26615:19:5;;;;26585:49;26355:279;:336;;;;-1:-1:-1;26676:15:5;;26650:22;;:41;;26676:15;;;;26650:41;;;26355:336;26347:345;;12:1:-1;9;2:12;26347:345:5;26808:19;;;:26;26711:81;26723:11;-1:-1:-1;;;2706:1:5;26711:11;:81::i;:::-;:123;26703:132;;12:1:-1;9;2:12;26703:132:5;26849:19;;;:26;:30;26845:514;;26895:35;26933:6;:19;;26953:1;26933:22;;;;;;;;;;;;;;;;;;26895:60;;26969:41;;:::i;:::-;27013:79;27057:11;2706:1;;27013:26;:79::i;:::-;27141:16;;27114:23;;26969:123;;-1:-1:-1;;;;;;27114:43:5;;;27141:16;;27114:43;:142;;;;;27222:11;:34;;;27177:18;:41;;;:79;27114:142;:233;;;;-1:-1:-1;27317:30:5;;;;27276:37;;;;27317:30;27276:71;;;27317:30;;27276:71;27114:233;27106:242;;12:1:-1;9;2:12;27106:242:5;26845:514;;;27369:25;27397:20;;:5;:20;;;27427:31;;:::i;:::-;27461:47;27481:11;2764:1;27461:19;:47::i;:::-;27549:12;;27526:19;;27427:81;;-1:-1:-1;;;;;;27526:35:5;;;27549:12;;27526:35;:94;;;;;27604:8;:16;;;27577:15;:23;;;:43;27526:94;:173;;;;-1:-1:-1;27673:26:5;;27636:33;;;;27673:26;27636:63;;;-1:-1:-1;;;27673:26:5;;;;27636:63;27526:173;:238;;;;;27745:8;:19;;;27715:15;:26;;;:49;27526:238;27518:247;;12:1:-1;9;2:12;27518:247:5;27936:2;27918:21;;;;:17;;;:21;;;;;;;27791:122;;27803:11;;-1:-1:-1;;;27816:29:5;27918:21;27791:11;:122::i;:::-;27784:155;27776:164;;12:1:-1;9;2:12;27776:164:5;25828:2119;;;;;;:::o;20268:191::-;20405:34;;;-1:-1:-1;;;;;;20405:34:5;;;;;;-1:-1:-1;;20405:34:5;;;;;;;;;;;22:32:-1;26:21;;;22:32;6:49;;20405:34:5;;;;;;;20350:7;;20376:76;;-1:-1:-1;;;20376:28:5;:76::i;859:21:15:-;;;-1:-1:-1;;;;;859:21:15;;:::o;23699:519:5:-;-1:-1:-1;;;;;;24029:19:5;;23911:12;24029:19;;;:8;:19;;;;;:32;;:40;;23911:12;;;;;;24029:32;24062:6;;24029:40;;;;;;;;;;;;;;;;;;;24086:9;;;24130:27;;;24188:23;;;;;-1:-1:-1;;;;;24086:9:5;;;;24130:27;;-1:-1:-1;24188:23:5;;;-1:-1:-1;23699:519:5;-1:-1:-1;;;;23699:519:5:o;21626:238::-;-1:-1:-1;;;;;;21704:19:5;;21680:21;21704:19;;;:8;:19;;;;;21741:12;;;;-1:-1:-1;;;;;21741:12:5;21757:10;21741:26;;:58;;-1:-1:-1;21771:14:5;;;;;-1:-1:-1;;;;;21771:14:5;21789:10;21771:28;21741:58;21733:67;;12:1:-1;9;2:12;21733:67:5;21810:47;21825:9;2764:1;21851:5;21810:14;:47::i;2965:37::-;;;:::o;1132:22:15:-;;;-1:-1:-1;;;1132:22:15;;;;;:::o;22439:183:5:-;22519:19;22561:54;22590:9;2764:1;22561:28;:54::i;28051:756::-;28125:28;28145:7;28125:19;:28::i;:::-;-1:-1:-1;28266:8:5;:28;;;;;28304:27;;28341:12;:28;;28364:4;-1:-1:-1;;;;;;28341:28:5;;;;;;;28379:21;:25;;28464:1;-1:-1:-1;;;;;;;;;;;;;28379:25:5;;;;;;;-1:-1:-1;;;;;28414:23:5;-1:-1:-1;;;28414:23:5;28447:18;;;;;;;-1:-1:-1;;;;;;28304:27:5;;;28321:10;28304:27;;;-1:-1:-1;;28475:22:5;-1:-1:-1;28475:22:5;;;;;;28266:28;28532:38;;;;;;;-1:-1:-1;28532:38:5;;;28563:2;28532:38;;;;;;28567:2;28532:38;;;;;;28507:19;27:10:-1;;23:18;;;45:23;;28507:64:5;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;28507:64:5;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;28507:64:5;28532:38;28507:64;;;;;;;;;;28609:20;28639:18;;28686:2;28667:16;:21;28654:3;28639:18;;;;;;-1:-1:-1;;;;28698:31:5;-1:-1:-1;;;28698:31:5;;;;28739:21;:17;:21;;28763:2;28739:21;:26;28797:3;28775:19;:25;28051:756::o;1656:107:21:-;864:9;:7;:9::i;:::-;856:18;;12:1:-1;9;2:12;856:18:21;1728:28:::1;1747:8;1728:18;:28::i;20693:299:5:-:0;20805:12;20820:35;20838:9;20849:5;20820:17;:35::i;:::-;20805:50;;20865:17;20885:43;20911:4;20917:10;20885:25;:43::i;:::-;20865:63;;20975:9;-1:-1:-1;;;;;20946:38:5;:25;20961:9;20946:14;:25::i;:::-;-1:-1:-1;;;;;20946:38:5;;20938:47;;12:1:-1;9;2:12;20938:47:5;20693:299;;;;;:::o;14606:3602::-;-1:-1:-1;;;;;;14793:19:5;;14709;14793;;;:8;:19;;;;;14831:15;;;;14830:16;14822:25;;12:1:-1;9;2:12;14822:25:5;14883:19;;;;14857:16;;14905;14883:38;;;-1:-1:-1;;;14883:19:5;;-1:-1:-1;;;;;14883:19:5;:38;;;;;14961:19;;;:26;14883:38;;;14925:1;14876:50;;-1:-1:-1;14936:22:5;15020:2382;15031:19;;;:26;15027:30;;15020:2382;;;15078:35;15116:6;:19;;15136:1;15116:22;;;;;;;;;;;;;;;;;;;;;15167:16;;15116:22;;-1:-1:-1;;;;;;15167:16:5;15201:21;;;:64;;-1:-1:-1;;;;;;15226:22:5;;;;;;:39;;;15261:4;-1:-1:-1;;;;;15252:13:5;:5;-1:-1:-1;;;;;15252:13:5;;;15226:39;15197:145;;;-1:-1:-1;;;;15285:16:5;;;;15319:8;;15197:145;15355:23;15496:41;15517:6;15525:11;15496:20;:41::i;:::-;15446:30;;;15392:145;;-1:-1:-1;;15392:145:5;;;;;;;;;;;;-1:-1:-1;15410:34:5;;15392:145;;-1:-1:-1;15551:1236:5;;;;-1:-1:-1;;;;;15615:11:5;;15587:25;15615:11;;;:5;:11;;;;;;;;15725:30;;;;;;15777:37;;;:17;;;:37;;;;;;-1:-1:-1;;;;;15777:58:5;15773:278;;;15907:14;;;;15859:37;;;15907:14;15859:37;;;:17;;;:37;;;;;-1:-1:-1;;;;;15907:14:5;;;15899:23;;15859:63;;15773:278;;;16017:14;;;;15969:37;;;16017:14;15969:37;;;:17;;;:37;;;;;:63;;-1:-1:-1;;;;;16017:14:5;;;15969:63;;;;;15773:278;16072:28;;;2945:1;16072:28;;;:17;;;:28;;;;;;-1:-1:-1;;;;;16072:49:5;16068:251;;;16184:14;;;;16145:28;;;16184:14;16145:28;;;:17;;;:28;;;;;-1:-1:-1;;;;;16184:14:5;;;16176:23;;16145:54;;16068:251;;;16285:14;;;;16246:28;;;16285:14;16246:28;;;:17;;;:28;;;;;:54;;-1:-1:-1;;;;;16285:14:5;;;16246:54;;;;;16068:251;16393:37;;;;;;;:17;;;:37;;;;;;16389:146;;16459:37;;;2945:1;16459:37;;;:17;;;:37;;;;;-1:-1:-1;;;;;16459:57:5;;16389:146;16556:28;;;;;;;:17;;;:28;;;;;;16552:128;;16613:28;;;2945:1;16613:28;;;:17;;;:28;;;;;-1:-1:-1;;;;;16613:48:5;;16552:128;16758:14;;;;-1:-1:-1;;;;;16758:14:5;16724:30;;;16716:39;;:56;16697:75;;;;;-1:-1:-1;15551:1236:5;16804:12;:59;;;-1:-1:-1;16820:30:5;;;;:43;;;;:30;;:43;;16804:59;16800:469;;;16883:32;;-1:-1:-1;;;;;;16883:32:5;;;2764:1;16883:32;16933:34;;:38;16989:30;;;:34;;-1:-1:-1;;16989:34:5;;;17080:64;;;;;;;;-1:-1:-1;;17041:16:5;;;;;-1:-1:-1;;;;;17080:64:5;;;17110:10;;-1:-1:-1;;;;;;17080:64:5;;;;;;;;;;;;;16800:469;;;17188:66;;;;;;;;-1:-1:-1;;;;;17188:66:5;;;17220:10;;-1:-1:-1;;;;;;17188:66:5;;;;;;;;;;;;;16800:469;17283:30;;;;-1:-1:-1;;;;;17331:22:5;;;17327:65;;17372:5;;;;;17327:65;15020:2382;;;;15059:3;;15020:2382;;;17443:14;;-1:-1:-1;;;;;17443:14:5;;;;;;;17471:22;;17467:644;;17513:19;17509:485;;17552:22;;17570:4;-1:-1:-1;;17552:22:5;;;;;-1:-1:-1;;;;;;17622:27:5;;;17667:12;;:25;;-1:-1:-1;;;;;;17667:25:5;;;-1:-1:-1;17710:14:5;;;17789:23;17835:49;;;;;;;;17860:10;;-1:-1:-1;;;;;;17835:49:5;;;;;;;;;;;;;17509:485;;;17928:51;;;;;;;;17955:10;;-1:-1:-1;;;;;;17928:51:5;;;;;;;;;;;;17509:485;17467:644;;;18073:19;;;:26;18069:30;;18061:39;;12:1:-1;9;2:12;18061:39:5;18124:15;;18120:82;;18155:36;-1:-1:-1;;;;;18155:23:5;;18179:11;18155:36;:23;:36;:::i;:::-;14606:3602;;;;;;;;;;:::o;639:205:8:-;702:7;730:1;725;:6;721:117;;754:17;:1;768;754:17;:5;:17;:::i;:::-;747:24;;;;721:117;809:18;:1;823:2;;;;809:18;:5;:18;:::i;2252:366:26:-;2366:6;2341:21;:31;;2333:73;;;;;-1:-1:-1;;;2333:73:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;2490:33;;2472:12;;-1:-1:-1;;;;;2490:14:26;;;2512:6;;2472:12;2490:33;2472:12;2490:33;2512:6;2490:14;:33;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;2471:52:26;;;2541:7;2533:78;;;;-1:-1:-1;;;2533:78:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;783:296:20;841:7;938:1;934;:5;926:14;;12:1:-1;9;2:12;926:14:20;950:9;966:1;962;:5;;;;;;;783:296;-1:-1:-1;;;;783:296:20:o;5648:495:5:-;5722:7;5885:9;:20;;;5909:1;5885:25;:80;;;-1:-1:-1;5949:12:5;:16;5926:20;;;;-1:-1:-1;;;;;5949:16:5;;;-1:-1:-1;5885:80:5;:135;;;-1:-1:-1;6004:16:5;;5981:20;;;;-1:-1:-1;;;;;6004:16:5;;;-1:-1:-1;5885:135:5;5881:256;;;-1:-1:-1;6043:12:5;:25;-1:-1:-1;;;6043:25:5;;-1:-1:-1;;;;;6043:25:5;6036:32;;5881:256;-1:-1:-1;6106:20:5;;;;6099:27;;18372:966;-1:-1:-1;;;;;;18559:19:5;;18475;18559;;;:8;:19;;;;;18597:12;;;;-1:-1:-1;;;;;18597:12:5;18613:10;18597:26;;:58;;-1:-1:-1;18627:14:5;;;;;-1:-1:-1;;;;;18627:14:5;18645:10;18627:28;18597:58;18596:80;;;;-1:-1:-1;18661:15:5;;;;18660:16;18596:80;18588:89;;12:1:-1;9;2:12;18588:89:5;18687:9;18710:484;18721:19;;;:26;18717:30;;18710:484;;;18768:35;18806:6;:19;;18826:1;18806:22;;;;;;;;;;;;;;;;;;;;;18846:16;;18806:22;;-1:-1:-1;;;;;;18846:16:5;:33;;:88;;-1:-1:-1;;;;;;18883:22:5;;;;;;:51;;-1:-1:-1;18918:16:5;;-1:-1:-1;;;;;18909:25:5;;;18918:16;;18909:25;;18883:51;18842:135;;;18954:8;;;18842:135;18991:23;19020:41;19041:6;19049:11;19020:20;:41::i;:::-;-1:-1:-1;;19075:30:5;;;;18990:71;-1:-1:-1;;;;;;19123:22:5;;;19119:65;;19164:5;;;;19119:65;18710:484;;;18749:3;;18710:484;;;-1:-1:-1;;;;;19207:22:5;;;19203:129;;19294:19;;;:26;19290:30;;19282:39;;12:1:-1;9;2:12;19282:39:5;18372:966;;;;;;:::o;1770:136:15:-;1384:1;1586:9;;-1:-1:-1;;;1586:9:15;;:25;:9;:25;1578:34;;12:1:-1;9;2:12;1578:34:15;1861:38:::1;::::0;;1888:10:::1;1861:38:::0;;;;-1:-1:-1;;;;;1861:38:15;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;1770:136:::0;:::o;25470:256:5:-;25538:19;;:::i;:::-;25569:21;25593:61;25609:7;-1:-1:-1;;;25569:21:5;;;25593:15;:61::i;24288:295::-;24377:20;;:::i;:::-;24413:21;24437:74;24453:7;-1:-1:-1;;;24486:1:5;-1:-1:-1;;;;;;24489:18:5;;24413:21;24437:15;:74::i;:::-;24413:98;24530:47;-1:-1:-1;;;;24530:47:5:o;3897:286:15:-;3998:14;;4052:52;4068:7;4077:9;4088:1;4091:9;3998:14;4052:15;:52::i;:::-;4147:20;;4123:54;-1:-1:-1;;;;;4123:54:15:o;24661:366:5:-;24775:29;;:::i;:::-;24820:21;24844:111;24873:7;-1:-1:-1;;;24916:1:5;-1:-1:-1;;;;;;24919:18:5;;24947:6;24844:15;:111::i;25098:297::-;25185:22;;:::i;:::-;25223:21;25247:76;25263:7;-1:-1:-1;;;25293:1:5;-1:-1:-1;;;;;25304:14:5;;25223:21;25247:15;:76::i;4290:355:15:-;4450:14;4480:21;4504:62;4520:7;4529:9;4540:1;4543:10;4555;4504:15;:62::i;:::-;4609:20;;4585:54;-1:-1:-1;;;;;;4585:54:15:o;3019:1242:11:-;3146:14;-1:-1:-1;;;;;;3179:22:11;;3176:1079;;3324:61;;-1:-1:-1;;;3324:61:11;;;;;;;3260:17;3324:61;;;;;;3288:4;3324:61;;;;;;;;;;3288:4;;3260:17;;3288:4;;3376:8;;3324:61;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3324:61:11;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3324:61:11;;;3314:72;;;;;;3307:79;;;;;3176:1079;-1:-1:-1;;;;;;3407:22:11;;-1:-1:-1;;;3407:22:11;3403:852;;;3499:15;;3536:10;3528:62;;;;-1:-1:-1;;;3528:62:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3659:14;3691:91;3698:11;;3691:91;;3729:8;;3765:2;3755:12;;;;3691:91;;;3795:25;3833:6;-1:-1:-1;;;;;3823:17:11;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3823:17:11;;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;108:14;3823:17:11;87:42:-1;143:17;;-1:-1;3823:17:11;-1:-1:-1;3863:15:11;;;-1:-1:-1;3795:45:11;-1:-1:-1;;;3908:10:11;;3932:136;3939:11;;3932:136;;4019:2;4010:6;:11;4005:2;:16;3994:29;;3970:12;3983:7;;;;;;;3970:21;;;;;;;;;;;:53;-1:-1:-1;;;;;3970:53:11;;;;;;;;-1:-1:-1;4051:2:11;4041:12;;;;3932:136;;;4099:77;;-1:-1:-1;;;4099:77:11;;;;;;;4128:23;4099:77;;;;;;;;4116:10;;4128:23;;4153:12;;4167:8;;4099:77;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;4099:77:11;;;;;;;;;;-1:-1:-1;4099:77:11;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4099:77:11;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4099:77:11;;;4089:88;;;;;;4082:95;;;;;;;;3403:852;4208:36;;;-1:-1:-1;;;4208:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:132:15;1384:1;1586:9;;-1:-1:-1;;;1586:9:15;;:25;:9;:25;1578:34;;12:1:-1;9;2:12;1578:34:15;2131:36:::1;::::0;;2156:10:::1;2131:36:::0;;;;-1:-1:-1;;;;;2131:36:15;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;2042:132:::0;:::o;1907:183:21:-;-1:-1:-1;;;;;1980:22:21;;1972:31;;12:1:-1;9;2:12;1972:31:21;2039:6;;;2018:38;;-1:-1:-1;;;;;2018:38:21;;;;2039:6;;;2018:38;;;2066:6;:17;;-1:-1:-1;;;;;;2066:17:21;-1:-1:-1;;;;;2066:17:21;;;;;;;;;;1907:183::o;603:616:11:-;707:7;738:10;:17;759:2;738:23;730:32;;12:1:-1;9;2:12;730:32:11;878:2;862:19;;856:26;922:2;906:19;;900:26;974:2;958:19;;952:26;773:9;944:35;1098:2;1094:6;;1090:44;;;1121:2;1116:7;1090:44;1151:1;:7;;1156:2;1151:7;:18;;;;1162:1;:7;;1167:2;1162:7;1151:18;1143:27;;12:1:-1;9;2:12;1143:27:11;1187:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1187:25:11;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;1187:25:11;;-1:-1:-1;;1187:25:11;;;603:616;-1:-1:-1;;;;;;;603:616:11:o;12191:2148:5:-;12314:19;12335:30;12367:25;12408:24;12467:16;12442:41;;:7;:22;;;;;;;;;;-1:-1:-1;;;;;12442:22:5;-1:-1:-1;;;;;12442:41:5;;;;;;;12408:76;;12494:16;12513:89;12534:18;:16;:18::i;:::-;12561:20;;;;12584:16;12561:39;;;-1:-1:-1;;;12561:20:5;;-1:-1:-1;;;;;12561:20:5;:39;;;;;;12513:20;:89::i;:::-;12671:31;;;;12494:108;;-1:-1:-1;12612:16:5;;12631:72;;12652:17;;12671:31;;12631:20;:72::i;:::-;12795:17;;12766:47;;;-1:-1:-1;;;12766:47:5;;-1:-1:-1;;;;;12795:17:5;;;12766:47;;;;;;12612:91;;-1:-1:-1;12713:22:5;;;;12766:6;:28;;;;:47;;;;;;;;;;;;;;:28;:47;;;2:2:-1;;;;27:1;24;17:12;2:2;12766:47:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12766:47:5;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;12766:47:5;12874:31;;;;12766:47;;-1:-1:-1;12823:37:5;;12874:31;;12870:265;;12989:17;;12958:68;;;-1:-1:-1;;;12958:68:5;;-1:-1:-1;;;;;12989:17:5;;;12958:68;;;;;;;;;;;;;:6;:30;;;;;;:68;;;;;;;;;;;;;;;:30;:68;;;2:2:-1;;;;27:1;24;17:12;2:2;12958:68:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12958:68:5;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;12958:68:5;;-1:-1:-1;12870:265:5;;;-1:-1:-1;13089:35:5;;;;12870:265;13175:29;13150:54;;13145:682;13244:6;13219:22;:31;13145:682;;;13393:17;;13370:65;;;-1:-1:-1;;;13370:65:5;;-1:-1:-1;;;;;13393:17:5;;;13370:65;;;;;;;;;;;;-1:-1:-1;;;;13370:6:5;:22;;;;;;:65;;;;;;;;;;;:22;:65;;;2:2:-1;;;;27:1;24;17:12;2:2;13370:65:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13370:65:5;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;13370:65:5;;;;;;;;;-1:-1:-1;13370:65:5;-1:-1:-1;13453:23:5;;;;;;;;13449:141;;;13496:5;;;;13449:141;13538:9;13526:21;;:9;:21;;;13522:68;;;13567:8;;;;13522:68;13622:111;13688:44;13709:9;13720:11;13688:20;:44::i;:::-;13622:42;13643:9;13654;13622:20;:42::i;:::-;:65;;;:111;:65;:111;:::i;:::-;13736:1;13622:115;13603:134;;;;13768:9;13755:22;;:9;:22;;;13751:66;;13797:5;;;;13751:66;13145:682;;;13265:24;;;;;13145:682;;;13896:17;;13866:48;;;-1:-1:-1;;;13866:48:5;;-1:-1:-1;;;;;13896:17:5;;;13866:48;;;;;;13837:26;;13866:6;:29;;;;:48;;;;;;;;;;;;;;:29;:48;;;2:2:-1;;;;27:1;24;17:12;2:2;13866:48:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13866:48:5;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;13866:48:5;;-1:-1:-1;13928:32:5;;;:67;;;;;13986:9;13964:31;;:19;:31;;;13928:67;13924:307;;;14164:56;14197:1;14185:9;:13;14200:19;14164:20;:56::i;:::-;14152:9;:68;14133:87;;;;13924:307;-1:-1:-1;;;14255:15:5;;;;;;:33;;;;-1:-1:-1;;;;;14255:15:5;;;:33;14241:47;;;;12191:2148;;-1:-1:-1;14255:15:5;14319:13;;-1:-1:-1;14241:47:5;;-1:-1:-1;;;12191:2148:5:o;1440:145:20:-;1498:7;1529:5;;;1552:6;;;;1544:15;;12:1:-1;9;2:12;1212:145:20;1270:7;1302:1;1297;:6;;1289:15;;12:1:-1;9;2:12;1289:15:20;-1:-1:-1;1326:5:20;;;1212:145::o;2527:899:15:-;2808:4;2802:11;2826:32;;;2874:25;;2871:2;;2951:10;2944:4;2929:13;2925:24;2918:44;2871:2;3015:1;2995:18;2992:25;2989:2;;;3069:10;3062:4;3047:13;3043:24;3036:44;2989:2;3203:1;3200;3178:18;3172:4;3168:29;3162:4;3158:40;3143:13;3134:7;3127:5;3114:91;3222:71;;;;3375:16;3370:3;3355:13;3340:52;3107:303;;3222:71;3273:1;3258:13;3251:24;3107:303;;2771:649;;;;;;;:::o;281:103:8:-;339:6;368:1;364:5;;:1;:5;;;:13;;376:1;364:13;;;-1:-1:-1;372:1:8;;281:103;-1:-1:-1;281:103:8:o;171:104::-;229:6;259:1;254:6;;:1;:6;;;;:14;;267:1;254:14;;1751:119;1809:6;1839:1;1834:6;;:1;:6;;;;1827:14;;;495:28314:5;;;;;;;;;-1:-1:-1;495:28314:5;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;495:28314:5;;;;;;-1:-1:-1;;;;;495:28314:5;;;;;;-1:-1:-1;;;;;495:28314:5;;;;;;-1:-1:-1;;;;;495:28314:5;;;;;;-1:-1:-1;;;;;495:28314:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;495:28314:5;;;;;;;;;;;;;;;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "|v6.1.1|",
    "methods": {
      "calculateRefundValue(bytes16)": {
        "notice": "Calculate amount of refund",
        "params": {
          "_policyId": "Policy id"
        }
      },
      "calculateRefundValue(bytes16,address)": {
        "notice": "Calculate amount of refund",
        "params": {
          "_node": "Node",
          "_policyId": "Policy id"
        }
      },
      "constructor": {
        "params": {
          "_escrow": "Escrow contract"
        }
      },
      "createPolicy(bytes16,address,uint64,address[])": {
        "details": "Generate policy id before creation",
        "notice": "Create policy",
        "params": {
          "_endTimestamp": "End timestamp of the policy in seconds",
          "_nodes": "Nodes that will handle policy",
          "_policyId": "Policy id",
          "_policyOwner": "Policy owner. Zero address means sender is owner"
        }
      },
      "finishUpgrade(address)": {
        "details": "the `onlyWhileUpgrading` modifier works through a call to the parent `finishUpgrade`"
      },
      "getArrangementInfo(bytes16,uint256)": {
        "notice": "Return the information about arrangement"
      },
      "getArrangementsLength(bytes16)": {
        "notice": "Get number of arrangements in the policy",
        "params": {
          "_policyId": "Policy id"
        }
      },
      "getMinFeeRate(address)": {
        "notice": "Get the minimum acceptable fee rate (set by staker for their associated worker)"
      },
      "getNodeFeeDelta(address,uint16)": {
        "notice": "Get information about staker's fee rate",
        "params": {
          "_node": "Address of staker",
          "_period": "Period to get fee delta"
        }
      },
      "getPolicyOwner(bytes16)": {
        "notice": "Get policy owner"
      },
      "getRevocationHash(bytes16,address)": {
        "notice": "Get unsigned hash for revocation",
        "params": {
          "_node": "Node that will be excluded",
          "_policyId": "Policy id"
        },
        "returns": {
          "_0": "Revocation hash, EIP191 version 0x45 ('E')"
        }
      },
      "refund(bytes16)": {
        "notice": "Refund part of fee by the sponsor",
        "params": {
          "_policyId": "Policy id"
        }
      },
      "refund(bytes16,address)": {
        "notice": "Refund part of one node's fee by the sponsor",
        "params": {
          "_node": "Node address",
          "_policyId": "Policy id"
        }
      },
      "register(address,uint16)": {
        "notice": "Register a node",
        "params": {
          "_node": "Node address",
          "_period": "Initial period"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.",
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "revoke(bytes16,address,bytes)": {
        "notice": "Revoke policy or arrangement using owner's signature",
        "params": {
          "_node": "Node that will be excluded, zero address if whole policy will be revoked",
          "_policyId": "Policy id",
          "_signature": "Signature of owner, EIP191 version 0x45 ('E')"
        }
      },
      "revokeArrangement(bytes16,address)": {
        "notice": "Revoke arrangement by the sponsor",
        "params": {
          "_node": "Node that will be excluded",
          "_policyId": "Policy id"
        }
      },
      "revokePolicy(bytes16)": {
        "notice": "Revoke policy by the sponsor",
        "params": {
          "_policyId": "Policy id"
        }
      },
      "setDefaultFeeDelta(address,uint16)": {
        "details": "This method increases gas cost for node in trade of decreasing cost for policy sponsor",
        "notice": "Set default `feeDelta` value for specified period",
        "params": {
          "_node": "Node address",
          "_period": "Period to set"
        }
      },
      "setFeeRateRange(uint128,uint128,uint128)": {
        "notice": "Set minimum, default & maximum fee rate for all stakers and all policies ('global fee range')"
      },
      "setMinFeeRate(uint256)": {
        "details": "Input value must fall within `feeRateRange` (global fee range)",
        "notice": "Set the minimum acceptable fee rate (set by staker for their associated worker)"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "updateFee(address,uint16)": {
        "notice": "Update node fee",
        "params": {
          "_node": "Node address",
          "_period": "Processed period"
        }
      },
      "verifyState(address)": {
        "details": "the `onlyWhileUpgrading` modifier works through a call to the parent `verifyState`"
      },
      "withdraw()": {
        "notice": "Withdraw fee by node"
      },
      "withdraw(address)": {
        "notice": "Withdraw fee by node",
        "params": {
          "_recipient": "Recipient of the fee"
        }
      }
    },
    "notice": "Contract holds policy data and locks accrued policy fees",
    "title": "PolicyManager"
  },
  "offset": [
    495,
    28809
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x889DDD1A GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xB9626D21 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xE2FDCC17 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE2FDCC17 EQ PUSH2 0xA1B JUMPI DUP1 PUSH4 0xE38A303B EQ PUSH2 0xA30 JUMPI DUP1 PUSH4 0xE665830D EQ PUSH2 0xA5B JUMPI DUP1 PUSH4 0xE8DCCD06 EQ PUSH2 0xA8F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAC2 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0xB9626D21 EQ PUSH2 0x8F6 JUMPI DUP1 PUSH4 0xCBF12F2A EQ PUSH2 0x929 JUMPI DUP1 PUSH4 0xD4B83992 EQ PUSH2 0x96C JUMPI DUP1 PUSH4 0xD845F4FB EQ PUSH2 0x981 JUMPI DUP1 PUSH4 0xDFDECFAF EQ PUSH2 0x9E7 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x8E81CA5A GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x8E81CA5A EQ PUSH2 0x7DC JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x819 JUMPI DUP1 PUSH4 0xA2D1D5E2 EQ PUSH2 0x842 JUMPI DUP1 PUSH4 0xA87D40D9 EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0xB438C4CD EQ PUSH2 0x8B9 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x889DDD1A EQ PUSH2 0x727 JUMPI DUP1 PUSH4 0x8C316B90 EQ PUSH2 0x75A JUMPI DUP1 PUSH4 0x8D7FD2FA EQ PUSH2 0x784 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7C7 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x58CF15FB GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x6BD2AF57 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x6BD2AF57 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0x713C0E57 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x636 JUMPI DUP1 PUSH4 0x72BE8D8D EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0x81E742A1 EQ PUSH2 0x688 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x58CF15FB EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x631722F2 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x63C509D5 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0x65AF62C3 EQ PUSH2 0x516 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x3EA2391F GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x3EA2391F EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x407F8001 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x4B2CD118 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x4B8FED4F EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x427 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x76421E8 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x86146D2 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x189A5A17 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x35F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH2 0xFFFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH2 0xBBB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0xBCB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0xDB0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F6 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH2 0xDE3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH2 0xE82 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0xED9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52B PUSH2 0x1039 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH2 0x1059 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP12 ISZERO ISZERO DUP13 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP11 DUP12 AND PUSH1 0x20 DUP14 ADD MSTORE SWAP9 SWAP1 SWAP10 AND DUP11 DUP10 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP7 AND PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 DUP6 AND PUSH1 0x80 DUP11 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x160 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x10F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x66E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x1151 JUMP JUMPDEST PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 DUP4 ADD CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x6E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x11F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1712 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1733 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F6 PUSH2 0x1835 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x1844 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x825 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82E PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH2 0x1886 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x18D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x195C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x935 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x94C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F6 PUSH2 0x1CBB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0xFFFF AND DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH2 0x1D32 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F6 PUSH2 0x1D89 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA45 PUSH2 0x1DAD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH2 0x1DBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xACE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB38 DUP6 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x207F SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB44 DUP6 DUP6 PUSH1 0x1 PUSH2 0x20C8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH4 0xFFFFFFFF AND TIMESTAMP DUP2 PUSH2 0xB7E JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC6 CALLER PUSH2 0xDEE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xC00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND ISZERO DUP1 PUSH2 0xC41 JUMPI POP DUP1 SLOAD PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP4 AND GT ISZERO JUMPDEST ISZERO PUSH2 0xC4C JUMPI POP PUSH2 0xDAC JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0x1 ADD JUMPDEST DUP3 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND GT PUSH2 0xD6D JUMPI PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 EQ ISZERO PUSH2 0xCAD JUMPI POP PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x0 DUP2 SLT DUP1 ISZERO PUSH2 0xCC3 JUMPI POP DUP3 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x0 SUB GT JUMPDEST ISZERO PUSH2 0xD32 JUMPI PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH2 0xFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP8 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP6 ADD SWAP1 SWAP5 SSTORE SWAP4 SSTORE DUP2 MLOAD SWAP1 DUP8 AND DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 PUSH32 0xD56B4810F75E2913AF1CD9E5F0D99D273958C5A67CFF5EF0E7F298507B688BB8 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH2 0xD63 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0xD47 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x25C6 AND JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xC5D JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT PUSH2 0xFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0xFFFF DUP7 AND MUL OR SWAP2 DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND SWAP1 SWAP2 ADD SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP1 PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND DUP3 SSTORE PUSH2 0xE39 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP3 PUSH4 0xFFFFFFFF PUSH2 0x25FA AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0xD1C19FBCD4551A5EDFB66D43D2E337C04837AFDA3482B42BDF569A8FCCDAE5FB SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xED2 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEE1 PUSH2 0x1875 JUMP JUMPDEST PUSH2 0xEEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO DUP1 ISZERO PUSH2 0xF1E JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO JUMPDEST PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 DUP2 AND DUP1 DUP5 MSTORE DUP7 DUP3 AND PUSH1 0x20 DUP1 DUP7 ADD DUP3 SWAP1 MSTORE DUP8 DUP5 AND SWAP6 DUP8 ADD DUP7 SWAP1 MSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 DUP2 AND DUP6 OR SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x80 SHL DUP5 MUL OR SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP1 SWAP5 AND DUP7 OR SWAP1 SWAP4 SSTORE DUP6 MLOAD SWAP2 DUP3 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 MLOAD CALLER SWAP3 PUSH32 0x3A93FB7C2385D29E9693A6EDCD81C4CEE090101CB783DC2F17A7814B79A2ECDC SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x101A JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1023 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102F DUP5 DUP5 PUSH1 0x0 PUSH2 0x20C8 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV DUP2 AND SWAP2 AND DUP4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP5 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 SWAP1 SWAP7 ADD SLOAD PUSH1 0xFF DUP7 AND SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP8 DIV DUP8 AND SWAP8 SWAP6 SWAP1 SWAP7 AND SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP8 DIV DUP2 AND SWAP7 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP12 JUMP JUMPDEST PUSH2 0x10FE PUSH2 0x1875 JUMP JUMPDEST PUSH2 0x1107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND ISZERO DUP1 ISZERO PUSH2 0x11C6 JUMPI POP PUSH2 0x11BB PUSH2 0xB4D JUMP JUMPDEST PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x11CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH2 0xFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1223 JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1231 JUMPI POP DUP1 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1245 JUMPI POP TIMESTAMP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT JUMPDEST DUP1 ISZERO PUSH2 0x1251 JUMPI POP PUSH1 0x0 CALLVALUE GT JUMPDEST PUSH2 0x125A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SELFBALANCE GT ISZERO PUSH2 0x126E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1278 PUSH2 0xB4D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH4 0xFFFFFFFF AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 PUSH2 0x12B4 JUMPI INVALID JUMPDEST DUP5 SLOAD PUSH2 0x100 CALLER MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR DUP6 SSTORE PUSH1 0x2 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP11 DUP2 AND PUSH1 0x1 PUSH1 0xC0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB TIMESTAMP SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND OR SWAP1 SSTORE DIV PUSH1 0x1 DUP2 DUP2 ADD SWAP3 POP PUSH2 0xFFFF SWAP2 DUP5 SWAP1 SUB ADD AND DUP1 PUSH2 0x1329 CALLVALUE DUP8 PUSH2 0x26DF JUMP JUMPDEST DUP2 PUSH2 0x1330 JUMPI INVALID JUMPDEST PUSH1 0x2 DUP7 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 SWAP3 OR SWAP1 DUP2 SWAP1 SSTORE AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1376 JUMPI POP PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MUL DUP6 MUL CALLVALUE EQ JUMPDEST PUSH2 0x137F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x13A0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x13C3 JUMPI PUSH1 0x1 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1668 JUMPI PUSH1 0x0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x13DC JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x140E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x144F JUMPI POP DUP1 SLOAD PUSH2 0xFFFF DUP1 DUP9 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND LT JUMPDEST DUP1 ISZERO PUSH2 0x1470 JUMPI POP PUSH2 0x145F DUP2 PUSH2 0x2701 JUMP JUMPDEST PUSH1 0x2 DUP9 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO JUMPDEST PUSH2 0x1479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB EQ ISZERO PUSH2 0x14C9 JUMPI PUSH1 0x2 DUP8 ADD SLOAD PUSH2 0xFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP1 SSTORE PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD SLOAD PUSH2 0xFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP1 SWAP2 ADD SWAP1 SSTORE JUMPDEST PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB EQ ISZERO PUSH2 0x1548 JUMPI PUSH1 0x2 DUP8 ADD SLOAD PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP1 SUB SWAP1 SSTORE PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD SLOAD PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP1 SWAP2 SUB SWAP1 SSTORE JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x15AF JUMPI PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB SWAP1 SSTORE JUMPDEST PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x15E9 JUMPI PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB SWAP1 SSTORE JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE SWAP4 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x8 DUP12 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP6 MSTORE SWAP3 SWAP1 SWAP4 KECCAK256 SWAP4 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP6 AND OR DUP5 SSTORE SWAP2 MLOAD DUP4 DUP4 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE ADD PUSH2 0x13C6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x167E JUMPI DUP8 PUSH2 0x1680 JUMP JUMPDEST CALLER JUMPDEST PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP5 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP4 DIV SWAP1 SWAP3 AND DUP3 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP9 SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP14 AND SWAP2 PUSH32 0x8E609DAC02BD39FF24C8AD6BB9A735E739B56708B22159948EC9828AD765B4D1 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xED2 DUP2 PUSH2 0x2701 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 LT DUP1 ISZERO SWAP1 PUSH2 0x1759 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 GT ISZERO JUMPDEST PUSH2 0x1794 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3447 PUSH1 0x3F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD DUP3 EQ ISZERO PUSH2 0x17B5 JUMPI POP PUSH2 0x17F4 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x6B9024CC1BF5710F290BE788DCA9886DB7A3D9BE0DF0855BFA991DBF26A256BC SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x180C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH2 0x1816 DUP5 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED2 DUP4 DUP4 PUSH1 0x1 PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH2 0xFFFF DUP6 AND DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x1892 DUP4 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x18A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1033 DUP3 PUSH1 0x0 PUSH1 0x1 PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x18C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED2 DUP4 DUP4 PUSH2 0x276A JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH2 0xFFFF DUP6 AND DUP5 MSTORE PUSH1 0x3 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x1957 JUMPI PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1965 DUP2 PUSH2 0x2894 JUMP JUMPDEST PUSH2 0x196D PUSH2 0x3361 JUMP JUMPDEST PUSH2 0x1976 DUP3 PUSH2 0x28EE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x6 SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x19B1 JUMPI POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x19CF JUMPI POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x19D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC PUSH2 0x1A0A PUSH2 0x3381 JUMP JUMPDEST PUSH2 0x1A15 DUP5 PUSH1 0x0 PUSH2 0x290C JUMP JUMPDEST DUP3 SLOAD PUSH1 0x20 DUP3 ADD MLOAD SWAP2 SWAP3 POP PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1A52 JUMPI POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1A72 JUMPI POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1A99 JUMPI POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1AC0 JUMPI POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP3 DIV AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1AD6 JUMPI POP DUP2 SLOAD DUP2 MLOAD ISZERO ISZERO PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO EQ JUMPDEST PUSH2 0x1ADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x1AF7 DUP6 PUSH4 0x6BD2AF57 PUSH1 0xE0 SHL PUSH1 0x0 PUSH2 0x293D JUMP JUMPDEST EQ PUSH2 0x1B01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP3 ADD SLOAD ISZERO PUSH2 0x1B90 JUMPI PUSH1 0x0 DUP3 PUSH1 0x8 ADD PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x1B1D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH2 0x1B35 PUSH2 0x3361 JUMP JUMPDEST PUSH2 0x1B41 DUP7 PUSH1 0x0 DUP1 PUSH2 0x2958 JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1B69 JUMPI POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x20 ADD MLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x1B84 JUMPI POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xFFFF SWAP1 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x1B8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BC PUSH2 0x1BC2 PUSH2 0x3411 JUMP JUMPDEST PUSH2 0x1BCD DUP7 PUSH1 0x0 PUSH2 0x2981 JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1BF5 JUMPI POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x40 ADD MLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x1C14 JUMPI POP DUP2 SLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1C27 JUMPI POP DUP2 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x60 ADD MLOAD EQ JUMPDEST PUSH2 0x1C30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 PUSH2 0x1C59 SWAP2 DUP10 SWAP2 PUSH4 0x4740E52D PUSH1 0xE1 SHL SWAP2 SWAP1 PUSH2 0x29A9 JUMP JUMPDEST EQ PUSH2 0x1C63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x30 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x24 DUP2 DUP4 SUB ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xED2 SWAP1 PUSH1 0x45 PUSH1 0xF8 SHL PUSH2 0x29C5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x1CF9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP9 SWAP2 SWAP8 POP PUSH2 0xFFFF AND SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1D74 JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1D7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1957 DUP3 PUSH1 0x0 DUP1 PUSH2 0x20C8 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1033 DUP3 PUSH1 0x0 PUSH2 0x276A JUMP JUMPDEST PUSH2 0x1DD3 DUP2 PUSH2 0x2CC4 JUMP JUMPDEST POP PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC DUP1 SLOAD PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3ED DUP1 SLOAD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EE DUP1 SLOAD PUSH1 0x3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT PUSH1 0x1 PUSH1 0x80 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH1 0x1 PUSH1 0xC1 SHL OR DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND CALLER PUSH2 0x100 MUL OR PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP5 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0xB DUP3 DUP10 ADD DUP2 DUP2 MSTORE PUSH1 0x16 SWAP5 DUP5 ADD SWAP5 DUP6 MSTORE PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3F4 DUP1 SLOAD SWAP10 DUP11 ADD DUP2 SSTORE DUP4 MSTORE SWAP3 MLOAD PUSH32 0xDAF6A3DF2E7FE032FABA7F1C41811297BB73983780E1888A846F8AA1A8324D27 SWAP9 SWAP1 SWAP6 MUL SWAP8 DUP9 ADD DUP1 SLOAD SWAP1 SWAP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP5 SSTORE MLOAD PUSH32 0xDAF6A3DF2E7FE032FABA7F1C41811297BB73983780E1888A846F8AA1A8324D28 DUP7 ADD SSTORE MLOAD PUSH32 0xDAF6A3DF2E7FE032FABA7F1C41811297BB73983780E1888A846F8AA1A8324D29 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BC DUP1 SLOAD PUSH1 0x21 PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BD SSTORE PUSH1 0x64 SWAP4 AND SWAP3 SWAP1 SWAP3 OR PUSH2 0xFFFF PUSH1 0x80 SHL NOT AND PUSH1 0xB PUSH1 0x82 SHL OR SWAP1 SWAP2 SSTORE MSTORE PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BF SWAP1 MSTORE PUSH1 0x37 PUSH32 0xE98516EEF36AB8324C691EAAE918B396562BBFF0916FAB980BA5F148C2DA4DC8 SSTORE PUSH2 0x309 PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BE SSTORE JUMP JUMPDEST PUSH2 0x206D PUSH2 0x1875 JUMP JUMPDEST PUSH2 0x2076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17F4 DUP2 PUSH2 0x2D1E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208B DUP5 DUP5 PUSH2 0x1C6B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2099 DUP3 DUP5 PUSH2 0x2D8C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20AE DUP7 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x20C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x20F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 PUSH2 0x2137 JUMPI INVALID JUMPDEST PUSH1 0x8 DUP5 ADD SLOAD SWAP2 SWAP1 DIV PUSH1 0x1 ADD SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 DUP5 ADD SLOAD DUP2 LT ISZERO PUSH2 0x24AF JUMPI PUSH1 0x0 DUP5 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2164 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO DUP1 PUSH2 0x21B4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x21B4 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x21C7 JUMPI POP POP PUSH1 0x0 NOT SWAP1 SWAP2 ADD SWAP1 PUSH2 0x24A7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D3 DUP8 DUP5 PUSH2 0x2E45 JUMP JUMPDEST PUSH1 0x2 DUP7 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 DUP6 ADD SSTORE SWAP1 POP DUP9 ISZERO PUSH2 0x23A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x2 DUP8 ADD SLOAD PUSH2 0xFFFF AND DUP1 DUP6 MSTORE PUSH1 0x3 DUP3 ADD SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB EQ ISZERO PUSH2 0x2265 JUMPI PUSH1 0x2 DUP10 ADD SLOAD PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP1 SUB SWAP1 SSTORE PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x2 DUP10 ADD SLOAD PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP1 SWAP2 SUB SWAP1 SSTORE JUMPDEST PUSH2 0xFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB EQ ISZERO PUSH2 0x22E4 JUMPI PUSH1 0x2 DUP10 ADD SLOAD PUSH2 0xFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP1 SUB SWAP1 SSTORE PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x2 DUP10 ADD SLOAD PUSH2 0xFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP1 SWAP2 ADD SWAP1 SSTORE JUMPDEST PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x234B JUMPI PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB SWAP1 SSTORE JUMPDEST PUSH2 0xFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2385 JUMPI PUSH2 0xFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP10 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 DUP9 SUB PUSH2 0xFFFF AND MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 POP JUMPDEST DUP9 DUP1 PUSH2 0x23B9 JUMPI POP PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0xFFFF DUP1 DUP9 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0x243A JUMPI DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 SSTORE PUSH1 0x0 PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 NOT SWAP7 SWAP1 SWAP7 ADD SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP16 AND SWAP2 PUSH32 0xF3B13DF5BDD5EFCB090F73617909A6295EE75815920224C512D784B2726812F1 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG4 PUSH2 0x2488 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP16 AND SWAP2 PUSH32 0xAB654B569128C88FFCD210806A5E48EE14C541E2C76923F143281F20807090C1 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG4 JUMPDEST SWAP7 DUP8 ADD SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND ISZERO PUSH2 0x24A3 JUMPI POP POP POP PUSH2 0x24AF JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2147 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP9 AND PUSH2 0x258B JUMPI DUP3 PUSH2 0x2544 JUMPI DUP5 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND DUP7 SSTORE DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP7 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP13 AND SWAP2 PUSH32 0xD5EA25BA3600C386669C484639012A0AE266ED537F0C4AB71B651024736EFFF4 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH2 0x2586 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP13 AND SWAP2 PUSH32 0x51377F313F8C3404E86D38AE907B443ADA38578FD6B9589D03F79D03FF9303C7 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 JUMPDEST PUSH2 0x259B JUMP JUMPDEST PUSH1 0x8 DUP6 ADD SLOAD DUP3 LT PUSH2 0x259B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ISZERO PUSH2 0x25BA JUMPI PUSH2 0x25BA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP8 PUSH4 0xFFFFFFFF PUSH2 0x25FA AND JUMP JUMPDEST POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT PUSH2 0x25E6 JUMPI PUSH2 0x25DF DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x32A0 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x25DF DUP4 PUSH1 0x0 DUP5 SWAP1 SUB PUSH4 0xFFFFFFFF PUSH2 0x32B2 AND JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x264F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x269A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x269F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1957 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3486 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x26ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x26F8 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x2726 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND GT JUMPDEST DUP1 PUSH2 0x2741 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND LT JUMPDEST ISZERO PUSH2 0x275F JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0xE7D JUMP JUMPDEST POP PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x27AC JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST DUP1 ISZERO PUSH2 0x27BA JUMPI POP DUP1 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x27C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 DUP3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x286D JUMPI PUSH1 0x0 DUP3 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x27E3 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x282D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x282D JUMPI POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2838 JUMPI POP PUSH2 0x2865 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2844 DUP5 DUP4 PUSH2 0x2E45 JUMP JUMPDEST POP POP SWAP5 DUP6 ADD SWAP5 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0x2862 JUMPI POP POP PUSH2 0x286D JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x27C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x288C JUMPI PUSH1 0x8 DUP3 ADD SLOAD DUP2 LT PUSH2 0x288C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND EQ PUSH2 0x28AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH32 0x1E8D98C1B4A0D9BD2E2371026B632EB2773FCCE41742E41F02F574AB69868D4C SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x28F6 PUSH2 0x3361 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED2 DUP4 PUSH4 0x65AF62C3 PUSH1 0xE0 SHL DUP4 DUP1 DUP1 PUSH2 0x32C7 JUMP JUMPDEST PUSH2 0x2914 PUSH2 0x3381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2935 DUP5 PUSH4 0x713C0E57 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP8 AND DUP6 PUSH2 0x32C7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x294E DUP6 DUP6 PUSH1 0x1 DUP7 DUP6 PUSH2 0x32C7 JUMP JUMPDEST MLOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2960 PUSH2 0x3361 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB44 DUP6 PUSH4 0xD845F4FB PUSH1 0xE0 SHL PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP9 AND DUP8 PUSH2 0x32C7 JUMP JUMPDEST PUSH2 0x2989 PUSH2 0x3411 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2935 DUP5 PUSH4 0x189A5A17 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP6 PUSH2 0x32C7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29BA DUP7 DUP7 PUSH1 0x2 DUP8 DUP8 PUSH2 0x32C7 JUMP JUMPDEST MLOAD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH2 0x2A78 JUMPI PUSH1 0x40 MLOAD PUSH1 0x19 PUSH1 0xF8 SHL PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x21 DUP6 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP2 SWAP1 SHL PUSH1 0x22 DUP8 ADD MSTORE DUP9 MLOAD SWAP1 SWAP6 SWAP2 SWAP4 DUP7 SWAP4 DUP11 SWAP4 SWAP1 SWAP3 PUSH1 0x36 SWAP1 SWAP2 ADD SWAP2 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2A32 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2A13 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x45 PUSH1 0xF8 SHL EQ ISZERO PUSH2 0x2C77 JUMPI DUP3 MLOAD DUP1 PUSH2 0x2ACC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x34C0 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x2AE3 JUMPI PUSH1 0x1 ADD PUSH1 0xA DUP3 DIV SWAP2 POP PUSH2 0x2ACF JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x2AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2B26 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP7 MLOAD SWAP4 POP SWAP1 POP PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP4 ISZERO PUSH2 0x2B78 JUMPI PUSH1 0xA DUP5 MOD PUSH1 0x30 ADD PUSH1 0xF8 SHL DUP3 DUP3 DUP1 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x2B56 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP5 DIV SWAP4 POP PUSH2 0x2B33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x19 PUSH1 0xF8 SHL PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH32 0x457468657265756D205369676E6564204D6573736167653A0A00000000000000 PUSH1 0x21 DUP6 ADD DUP2 SWAP1 MSTORE DUP7 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 DUP8 SWAP4 DUP14 SWAP4 SWAP3 PUSH1 0x3A ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2BE6 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2BC7 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE DUP6 MLOAD SWAP2 SWAP1 SWAP4 ADD SWAP3 DUP6 ADD SWAP2 POP DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2C2E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2C0F JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP5 POP POP POP POP POP PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E737570706F72746564204549503139312076657273696F6E000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND EQ PUSH2 0x2CDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH32 0xD55EC27C5C6316913ED8803C18CFD1BFEFEA953DB909DCBA6140744A9D8B0D1F SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2D31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x2D9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B DUP2 LT ISZERO PUSH2 0x2DBB JUMPI PUSH1 0x1B ADD JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x2DD0 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x2DD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E30 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH4 0xFFFFFFFF AND DUP7 PUSH1 0x2 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 PUSH2 0x2E9A JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x2EF4 PUSH2 0x2EAA PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x2 DUP10 ADD SLOAD PUSH32 0x0 PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 PUSH2 0x2EEE JUMPI INVALID JUMPDEST DIV PUSH2 0x3317 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2F0E SWAP1 DUP5 SWAP1 PUSH2 0xFFFF AND PUSH2 0x3335 JUMP JUMPDEST DUP8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x90DCB51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH32 0x0 AND SWAP2 PUSH4 0x90DCB51F SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 DUP11 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xFFFF AND PUSH2 0x3069 JUMPI DUP10 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x4789D02D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0xFFFF DUP10 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0x0 SWAP1 SWAP3 AND SWAP2 PUSH4 0x4789D02D SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x304A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x3070 JUMP JUMPDEST POP PUSH1 0x1 DUP10 ADD SLOAD JUMPDEST DUP1 SWAP8 POP JUMPDEST DUP2 DUP9 LT ISZERO PUSH2 0x31A7 JUMPI DUP10 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x8FA95A15 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH32 0x0 SWAP1 SWAP2 AND SWAP3 PUSH4 0x8FA95A15 SWAP3 PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3104 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x311A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xFFFF DUP1 DUP9 AND SWAP1 DUP4 AND GT ISZERO PUSH2 0x313E JUMPI POP POP PUSH2 0x31A7 JUMP JUMPDEST DUP6 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND LT ISZERO PUSH2 0x3155 JUMPI POP POP PUSH2 0x319C JUMP JUMPDEST PUSH2 0x317C PUSH2 0x3162 DUP8 DUP5 PUSH2 0x3335 JUMP JUMPDEST PUSH2 0x316C DUP10 DUP5 PUSH2 0x3317 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x334D AND JUMP JUMPDEST PUSH1 0x1 ADD DUP6 ADD SWAP5 POP DUP1 PUSH2 0xFFFF AND DUP8 PUSH2 0xFFFF AND GT PUSH2 0x3199 JUMPI POP POP PUSH2 0x31A7 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 SWAP1 SWAP8 ADD SWAP7 PUSH2 0x3074 JUMP JUMPDEST DUP10 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x51F5E0C1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH32 0x0 AND SWAP2 PUSH4 0xA3EBC182 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3228 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x323E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP9 DUP4 EQ DUP1 ISZERO PUSH2 0x3258 JUMPI POP DUP6 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND LT JUMPDEST ISZERO PUSH2 0x3271 JUMPI PUSH2 0x326A PUSH1 0x1 DUP7 SUB DUP3 PUSH2 0x3335 JUMP JUMPDEST DUP7 SUB DUP5 ADD SWAP4 POP JUMPDEST POP POP POP PUSH1 0x2 SWAP9 SWAP1 SWAP9 ADD SLOAD PUSH2 0xFFFF SWAP1 SWAP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP9 DUP10 AND MUL SWAP1 SWAP8 AND SWAP8 SWAP4 SWAP7 POP PUSH1 0x1 ADD SWAP5 POP SWAP2 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x32C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP4 ISZERO PUSH2 0x32DA JUMPI DUP3 PUSH1 0x4 DUP3 ADD MSTORE JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x32EA JUMPI DUP2 PUSH1 0x24 DUP3 ADD MSTORE JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x20 MUL PUSH1 0x4 ADD DUP4 DUP10 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x3308 JUMPI RETURNDATASIZE PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x330D JUMP JUMPDEST PUSH1 0x0 DUP3 REVERT JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xFFFF AND DUP4 PUSH2 0xFFFF AND LT PUSH2 0x332E JUMPI DUP2 PUSH2 0xED2 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xFFFF AND DUP4 PUSH2 0xFFFF AND LT ISZERO PUSH2 0x332E JUMPI DUP2 PUSH2 0xED2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x32C1 JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID SLOAD PUSH9 0x65207374616B657227 PUSH20 0x206D696E206665652072617465206D7573742066 PUSH2 0x6C6C KECCAK256 PUSH24 0x697468696E2074686520676C6F62616C206665652072616E PUSH8 0x6541646472657373 GASPRICE KECCAK256 PUSH22 0x6E61626C6520746F2073656E642076616C75652C2072 PUSH6 0x63697069656E PUSH21 0x206D61792068617665207265766572746564456D70 PUSH21 0x79206D657373616765206E6F7420616C6C6F776564 KECCAK256 PUSH7 0x6F722076657273 PUSH10 0x6F6E2045A26469706673 PC 0x22 SLT KECCAK256 0xE0 0x4B 0xDB CREATE2 PUSH16 0x67A4F64AA85A9578302CF9921E7026C2 0xE ADDRESS ADDRESS 0xE6 PUSH2 0xDC8A 0xB5 0x26 0x1F 0xC6 PUSH5 0x736F6C6343 STOP MOD SMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "LT",
      "path": "5"
    },
    "9": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21A"
    },
    "12": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "13": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "SHR",
      "path": "5"
    },
    "19": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x889DDD1A"
    },
    "25": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "GT",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x123"
    },
    "29": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "30": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "31": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB9626D21"
    },
    "36": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "GT",
      "path": "5"
    },
    "37": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAB"
    },
    "40": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "41": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "42": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE2FDCC17"
    },
    "47": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "GT",
      "path": "5"
    },
    "48": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6F"
    },
    "51": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "52": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "53": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE2FDCC17"
    },
    "58": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "59": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA1B"
    },
    "62": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "63": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "64": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE38A303B"
    },
    "69": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "70": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA30"
    },
    "73": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "74": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "75": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE665830D"
    },
    "80": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "81": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA5B"
    },
    "84": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "85": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "86": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE8DCCD06"
    },
    "91": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "92": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA8F"
    },
    "95": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "96": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "97": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF2FDE38B"
    },
    "102": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "103": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC2"
    },
    "106": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "107": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21A"
    },
    "110": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMP",
      "path": "5"
    },
    "111": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "112": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB9626D21"
    },
    "118": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "119": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F6"
    },
    "122": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "123": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "124": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xCBF12F2A"
    },
    "129": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "130": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x929"
    },
    "133": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "134": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "135": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD4B83992"
    },
    "140": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "141": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x96C"
    },
    "144": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "145": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "146": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD845F4FB"
    },
    "151": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "152": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x981"
    },
    "155": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "156": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "157": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xDFDECFAF"
    },
    "162": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "163": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E7"
    },
    "166": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "167": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21A"
    },
    "170": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMP",
      "path": "5"
    },
    "171": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "172": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "173": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8E81CA5A"
    },
    "178": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "GT",
      "path": "5"
    },
    "179": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF2"
    },
    "182": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "183": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "184": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8E81CA5A"
    },
    "189": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "190": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7DC"
    },
    "193": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "194": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "195": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8F32D59B"
    },
    "200": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "201": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x819"
    },
    "204": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "205": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "206": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA2D1D5E2"
    },
    "211": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "212": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x842"
    },
    "215": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "216": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "217": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA87D40D9"
    },
    "222": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "223": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x876"
    },
    "226": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "227": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "228": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB438C4CD"
    },
    "233": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "234": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8B9"
    },
    "237": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "238": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21A"
    },
    "241": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMP",
      "path": "5"
    },
    "242": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "243": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "244": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x889DDD1A"
    },
    "249": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "250": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x727"
    },
    "253": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "254": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "255": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8C316B90"
    },
    "260": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "261": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x75A"
    },
    "264": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "265": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "266": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8D7FD2FA"
    },
    "271": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "272": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x784"
    },
    "275": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "276": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "277": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "282": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "283": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7C7"
    },
    "286": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "287": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21A"
    },
    "290": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMP",
      "path": "5"
    },
    "291": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "292": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "293": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x58CF15FB"
    },
    "298": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "GT",
      "path": "5"
    },
    "299": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A6"
    },
    "302": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "303": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "304": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6BD2AF57"
    },
    "309": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "GT",
      "path": "5"
    },
    "310": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x175"
    },
    "313": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "314": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "315": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6BD2AF57"
    },
    "320": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "321": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x556"
    },
    "324": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "325": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "326": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x713C0E57"
    },
    "331": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "332": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x58A"
    },
    "335": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "336": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "337": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "342": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "343": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x636"
    },
    "346": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "347": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "348": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x72BE8D8D"
    },
    "353": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "354": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x64B"
    },
    "357": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "358": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "359": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x81E742A1"
    },
    "364": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "365": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x688"
    },
    "368": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "369": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21A"
    },
    "372": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMP",
      "path": "5"
    },
    "373": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "374": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "375": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x58CF15FB"
    },
    "380": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "381": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x45A"
    },
    "384": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "385": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "386": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x631722F2"
    },
    "391": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "392": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x48E"
    },
    "395": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "396": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "397": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x63C509D5"
    },
    "402": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "403": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4D3"
    },
    "406": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "407": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "408": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x65AF62C3"
    },
    "413": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "414": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x516"
    },
    "417": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "418": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21A"
    },
    "421": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMP",
      "path": "5"
    },
    "422": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "423": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "424": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3EA2391F"
    },
    "429": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "GT",
      "path": "5"
    },
    "430": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1ED"
    },
    "433": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "434": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "435": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3EA2391F"
    },
    "440": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "441": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x374"
    },
    "444": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "445": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "446": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x407F8001"
    },
    "451": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "452": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B3"
    },
    "455": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "456": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "457": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4B2CD118"
    },
    "462": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "463": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3E1"
    },
    "466": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "467": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "468": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4B8FED4F"
    },
    "473": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "474": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x412"
    },
    "477": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "478": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "479": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x51CFF8D9"
    },
    "484": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "485": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x427"
    },
    "488": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "489": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21A"
    },
    "492": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMP",
      "path": "5"
    },
    "493": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "494": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "495": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x76421E8"
    },
    "500": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "501": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21F"
    },
    "504": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "505": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "506": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x86146D2"
    },
    "511": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "512": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CD"
    },
    "515": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "516": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "517": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x189A5A17"
    },
    "522": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "523": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F9"
    },
    "526": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "527": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "528": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3CCFD60B"
    },
    "533": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "EQ",
      "path": "5"
    },
    "534": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35F"
    },
    "537": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "538": {
      "fn": null,
      "offset": [
        495,
        28809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "541": {
      "op": "DUP1"
    },
    "542": {
      "first_revert": true,
      "op": "REVERT"
    },
    "543": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "544": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "545": {
      "op": "DUP1"
    },
    "546": {
      "op": "ISZERO"
    },
    "547": {
      "op": "PUSH2",
      "value": "0x22B"
    },
    "550": {
      "op": "JUMPI"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "553": {
      "op": "DUP1"
    },
    "554": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "REVERT",
      "path": "5"
    },
    "555": {
      "op": "JUMPDEST"
    },
    "556": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "POP",
      "path": "5"
    },
    "557": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "560": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "562": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "DUP1",
      "path": "5"
    },
    "563": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "564": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "SUB",
      "path": "5"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "567": {
      "op": "DUP2"
    },
    "568": {
      "op": "LT"
    },
    "569": {
      "op": "ISZERO"
    },
    "570": {
      "op": "PUSH2",
      "value": "0x242"
    },
    "573": {
      "op": "JUMPI"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "576": {
      "op": "DUP1"
    },
    "577": {
      "op": "REVERT"
    },
    "578": {
      "op": "JUMPDEST"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "585": {
      "op": "SHL"
    },
    "586": {
      "op": "SUB"
    },
    "587": {
      "op": "NOT"
    },
    "588": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "DUP3",
      "path": "5"
    },
    "589": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "590": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "AND",
      "path": "5"
    },
    "591": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "598": {
      "op": "SHL"
    },
    "599": {
      "op": "SUB"
    },
    "600": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "602": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "DUP3",
      "path": "5"
    },
    "603": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "ADD",
      "path": "5"
    },
    "604": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "605": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "AND",
      "path": "5"
    },
    "606": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "607": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "DUP2",
      "path": "5"
    },
    "608": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "ADD",
      "path": "5"
    },
    "609": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "610": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "612": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "DUP2",
      "path": "5"
    },
    "613": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "ADD",
      "path": "5"
    },
    "614": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "616": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "DUP3",
      "path": "5"
    },
    "617": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "ADD",
      "path": "5"
    },
    "618": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "619": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "625": {
      "op": "DUP2"
    },
    "626": {
      "op": "GT"
    },
    "627": {
      "op": "ISZERO"
    },
    "628": {
      "op": "PUSH2",
      "value": "0x27C"
    },
    "631": {
      "op": "JUMPI"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "634": {
      "op": "DUP1"
    },
    "635": {
      "op": "REVERT"
    },
    "636": {
      "op": "JUMPDEST"
    },
    "637": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "DUP3",
      "path": "5"
    },
    "638": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "ADD",
      "path": "5"
    },
    "639": {
      "op": "DUP4"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "642": {
      "op": "DUP3"
    },
    "643": {
      "op": "ADD"
    },
    "644": {
      "op": "GT"
    },
    "645": {
      "op": "ISZERO"
    },
    "646": {
      "op": "PUSH2",
      "value": "0x28E"
    },
    "649": {
      "op": "JUMPI"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "652": {
      "op": "DUP1"
    },
    "653": {
      "op": "REVERT"
    },
    "654": {
      "op": "JUMPDEST"
    },
    "655": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "DUP1",
      "path": "5"
    },
    "656": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "657": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "658": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "660": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "ADD",
      "path": "5"
    },
    "661": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "662": {
      "op": "DUP5"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "665": {
      "op": "DUP4"
    },
    "666": {
      "op": "MUL"
    },
    "667": {
      "op": "DUP5"
    },
    "668": {
      "op": "ADD"
    },
    "669": {
      "op": "GT"
    },
    "670": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "676": {
      "op": "DUP4"
    },
    "677": {
      "op": "GT"
    },
    "678": {
      "op": "OR"
    },
    "679": {
      "op": "ISZERO"
    },
    "680": {
      "op": "PUSH2",
      "value": "0x2B0"
    },
    "683": {
      "op": "JUMPI"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "686": {
      "op": "DUP1"
    },
    "687": {
      "op": "REVERT"
    },
    "688": {
      "op": "JUMPDEST"
    },
    "689": {
      "op": "POP"
    },
    "690": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "691": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "692": {
      "op": "POP"
    },
    "693": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "694": {
      "op": "POP"
    },
    "695": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAF5"
    },
    "698": {
      "fn": "PolicyManager.revoke",
      "jump": "i",
      "offset": [
        21275,
        21524
      ],
      "op": "JUMP",
      "path": "5"
    },
    "699": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "700": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "702": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "DUP1",
      "path": "5"
    },
    "703": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "704": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "705": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "DUP3",
      "path": "5"
    },
    "706": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "707": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "708": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "709": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "DUP2",
      "path": "5"
    },
    "710": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "711": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "SUB",
      "path": "5"
    },
    "712": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "714": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "ADD",
      "path": "5"
    },
    "715": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "716": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "RETURN",
      "path": "5"
    },
    "717": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "718": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "719": {
      "op": "DUP1"
    },
    "720": {
      "op": "ISZERO"
    },
    "721": {
      "op": "PUSH2",
      "value": "0x2D9"
    },
    "724": {
      "op": "JUMPI"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "727": {
      "op": "DUP1"
    },
    "728": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "REVERT",
      "path": "5"
    },
    "729": {
      "op": "JUMPDEST"
    },
    "730": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "POP",
      "path": "5"
    },
    "731": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E2"
    },
    "734": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB4D"
    },
    "737": {
      "fn": "PolicyManager.getCurrentPeriod",
      "jump": "i",
      "offset": [
        3881,
        4004
      ],
      "op": "JUMP",
      "path": "5"
    },
    "738": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "739": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "741": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "DUP1",
      "path": "5"
    },
    "742": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "743": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "746": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "747": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "748": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "AND",
      "path": "5"
    },
    "749": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "DUP3",
      "path": "5"
    },
    "750": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "751": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "752": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "753": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "DUP2",
      "path": "5"
    },
    "754": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "755": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "SUB",
      "path": "5"
    },
    "756": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "758": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "ADD",
      "path": "5"
    },
    "759": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "760": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "RETURN",
      "path": "5"
    },
    "761": {
      "offset": [
        3104,
        3146
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "762": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "763": {
      "op": "DUP1"
    },
    "764": {
      "op": "ISZERO"
    },
    "765": {
      "op": "PUSH2",
      "value": "0x305"
    },
    "768": {
      "op": "JUMPI"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "771": {
      "op": "DUP1"
    },
    "772": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "REVERT",
      "path": "5"
    },
    "773": {
      "op": "JUMPDEST"
    },
    "774": {
      "offset": [
        3104,
        3146
      ],
      "op": "POP",
      "path": "5"
    },
    "775": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32C"
    },
    "778": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "780": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "DUP1",
      "path": "5"
    },
    "781": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "782": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SUB",
      "path": "5"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "785": {
      "op": "DUP2"
    },
    "786": {
      "op": "LT"
    },
    "787": {
      "op": "ISZERO"
    },
    "788": {
      "op": "PUSH2",
      "value": "0x31C"
    },
    "791": {
      "op": "JUMPI"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "794": {
      "op": "DUP1"
    },
    "795": {
      "op": "REVERT"
    },
    "796": {
      "op": "JUMPDEST"
    },
    "797": {
      "op": "POP"
    },
    "798": {
      "offset": [
        3104,
        3146
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "805": {
      "op": "SHL"
    },
    "806": {
      "op": "SUB"
    },
    "807": {
      "offset": [
        3104,
        3146
      ],
      "op": "AND",
      "path": "5"
    },
    "808": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB84"
    },
    "811": {
      "fn": "PolicyManager.getCurrentPeriod",
      "jump": "i",
      "offset": [
        3104,
        3146
      ],
      "op": "JUMP",
      "path": "5"
    },
    "812": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "813": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "815": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "DUP1",
      "path": "5"
    },
    "816": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "823": {
      "op": "SHL"
    },
    "824": {
      "op": "SUB"
    },
    "825": {
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "826": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "827": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "AND",
      "path": "5"
    },
    "828": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "DUP6",
      "path": "5"
    },
    "829": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "830": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "833": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "834": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "835": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "AND",
      "path": "5"
    },
    "836": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "838": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "DUP6",
      "path": "5"
    },
    "839": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "ADD",
      "path": "5"
    },
    "840": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "841": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "DUP4",
      "path": "5"
    },
    "842": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "DUP4",
      "path": "5"
    },
    "843": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "ADD",
      "path": "5"
    },
    "844": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "845": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "846": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "847": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "848": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "850": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "DUP4",
      "path": "5"
    },
    "851": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "ADD",
      "path": "5"
    },
    "852": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "853": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "854": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "855": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "DUP2",
      "path": "5"
    },
    "856": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "857": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SUB",
      "path": "5"
    },
    "858": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "860": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "ADD",
      "path": "5"
    },
    "861": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "862": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "RETURN",
      "path": "5"
    },
    "863": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11553,
        11644
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "864": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11553,
        11644
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "865": {
      "op": "DUP1"
    },
    "866": {
      "op": "ISZERO"
    },
    "867": {
      "op": "PUSH2",
      "value": "0x36B"
    },
    "870": {
      "op": "JUMPI"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "873": {
      "op": "DUP1"
    },
    "874": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.withdraw",
      "offset": [
        11553,
        11644
      ],
      "op": "REVERT",
      "path": "5"
    },
    "875": {
      "op": "JUMPDEST"
    },
    "876": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11553,
        11644
      ],
      "op": "POP",
      "path": "5"
    },
    "877": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11553,
        11644
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "880": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11553,
        11644
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBBB"
    },
    "883": {
      "fn": "PolicyManager.withdraw",
      "jump": "i",
      "offset": [
        11553,
        11644
      ],
      "op": "JUMP",
      "path": "5"
    },
    "884": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "885": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "886": {
      "op": "DUP1"
    },
    "887": {
      "op": "ISZERO"
    },
    "888": {
      "op": "PUSH2",
      "value": "0x380"
    },
    "891": {
      "op": "JUMPI"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "894": {
      "op": "DUP1"
    },
    "895": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "REVERT",
      "path": "5"
    },
    "896": {
      "op": "JUMPDEST"
    },
    "897": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "POP",
      "path": "5"
    },
    "898": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B1"
    },
    "901": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "903": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "DUP1",
      "path": "5"
    },
    "904": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "905": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "SUB",
      "path": "5"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "908": {
      "op": "DUP2"
    },
    "909": {
      "op": "LT"
    },
    "910": {
      "op": "ISZERO"
    },
    "911": {
      "op": "PUSH2",
      "value": "0x397"
    },
    "914": {
      "op": "JUMPI"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "917": {
      "op": "DUP1"
    },
    "918": {
      "op": "REVERT"
    },
    "919": {
      "op": "JUMPDEST"
    },
    "920": {
      "op": "POP"
    },
    "921": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "DUP1",
      "path": "5"
    },
    "922": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "AND",
      "path": "5"
    },
    "932": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "933": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "935": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "ADD",
      "path": "5"
    },
    "936": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "937": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "940": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "AND",
      "path": "5"
    },
    "941": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBCB"
    },
    "944": {
      "fn": "PolicyManager.updateFee",
      "jump": "i",
      "offset": [
        10460,
        11497
      ],
      "op": "JUMP",
      "path": "5"
    },
    "945": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "946": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "STOP",
      "path": "5"
    },
    "947": {
      "offset": [
        3008,
        3048
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "948": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "949": {
      "op": "DUP1"
    },
    "950": {
      "op": "ISZERO"
    },
    "951": {
      "op": "PUSH2",
      "value": "0x3BF"
    },
    "954": {
      "op": "JUMPI"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "957": {
      "op": "DUP1"
    },
    "958": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "REVERT",
      "path": "5"
    },
    "959": {
      "op": "JUMPDEST"
    },
    "960": {
      "offset": [
        3008,
        3048
      ],
      "op": "POP",
      "path": "5"
    },
    "961": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C8"
    },
    "964": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDB0"
    },
    "967": {
      "fn": "PolicyManager.updateFee",
      "jump": "i",
      "offset": [
        3008,
        3048
      ],
      "op": "JUMP",
      "path": "5"
    },
    "968": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "969": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "971": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "DUP1",
      "path": "5"
    },
    "972": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "973": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "978": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "979": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "980": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "AND",
      "path": "5"
    },
    "981": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "DUP3",
      "path": "5"
    },
    "982": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "983": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "984": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "985": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "DUP2",
      "path": "5"
    },
    "986": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "987": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "SUB",
      "path": "5"
    },
    "988": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "990": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "ADD",
      "path": "5"
    },
    "991": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "992": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "RETURN",
      "path": "5"
    },
    "993": {
      "offset": [
        973,
        1002
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "994": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "995": {
      "op": "DUP1"
    },
    "996": {
      "op": "ISZERO"
    },
    "997": {
      "op": "PUSH2",
      "value": "0x3ED"
    },
    "1000": {
      "op": "JUMPI"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1003": {
      "op": "DUP1"
    },
    "1004": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1005": {
      "op": "JUMPDEST"
    },
    "1006": {
      "offset": [
        973,
        1002
      ],
      "op": "POP",
      "path": "15"
    },
    "1007": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3F6"
    },
    "1010": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDD4"
    },
    "1013": {
      "fn": "PolicyManager.updateFee",
      "jump": "i",
      "offset": [
        973,
        1002
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1014": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1015": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1017": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1018": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1025": {
      "op": "SHL"
    },
    "1026": {
      "op": "SUB"
    },
    "1027": {
      "offset": [
        973,
        1002
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1028": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1029": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "AND",
      "path": "15"
    },
    "1030": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1031": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1032": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1033": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1034": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1035": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1036": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "SUB",
      "path": "15"
    },
    "1037": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1039": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "ADD",
      "path": "15"
    },
    "1040": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1041": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "RETURN",
      "path": "15"
    },
    "1042": {
      "offset": [
        2886,
        2958
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1043": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        2886,
        2958
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1044": {
      "op": "DUP1"
    },
    "1045": {
      "op": "ISZERO"
    },
    "1046": {
      "op": "PUSH2",
      "value": "0x41E"
    },
    "1049": {
      "op": "JUMPI"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1052": {
      "op": "DUP1"
    },
    "1053": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.updateFee",
      "offset": [
        2886,
        2958
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1054": {
      "op": "JUMPDEST"
    },
    "1055": {
      "offset": [
        2886,
        2958
      ],
      "op": "POP",
      "path": "5"
    },
    "1056": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        2886,
        2958
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "1059": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        2886,
        2958
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDE3"
    },
    "1062": {
      "fn": "PolicyManager.updateFee",
      "jump": "i",
      "offset": [
        2886,
        2958
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1063": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1064": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1065": {
      "op": "DUP1"
    },
    "1066": {
      "op": "ISZERO"
    },
    "1067": {
      "op": "PUSH2",
      "value": "0x433"
    },
    "1070": {
      "op": "JUMPI"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1073": {
      "op": "DUP1"
    },
    "1074": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1075": {
      "op": "JUMPDEST"
    },
    "1076": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "POP",
      "path": "5"
    },
    "1077": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "1080": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1082": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1083": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1084": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "SUB",
      "path": "5"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1087": {
      "op": "DUP2"
    },
    "1088": {
      "op": "LT"
    },
    "1089": {
      "op": "ISZERO"
    },
    "1090": {
      "op": "PUSH2",
      "value": "0x44A"
    },
    "1093": {
      "op": "JUMPI"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1096": {
      "op": "DUP1"
    },
    "1097": {
      "op": "REVERT"
    },
    "1098": {
      "op": "JUMPDEST"
    },
    "1099": {
      "op": "POP"
    },
    "1100": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1107": {
      "op": "SHL"
    },
    "1108": {
      "op": "SUB"
    },
    "1109": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "AND",
      "path": "5"
    },
    "1110": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDEE"
    },
    "1113": {
      "fn": "PolicyManager.withdraw",
      "jump": "i",
      "offset": [
        11745,
        12063
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1114": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9632,
        9840
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1115": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9632,
        9840
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1116": {
      "op": "DUP1"
    },
    "1117": {
      "op": "ISZERO"
    },
    "1118": {
      "op": "PUSH2",
      "value": "0x466"
    },
    "1121": {
      "op": "JUMPI"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1124": {
      "op": "DUP1"
    },
    "1125": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9632,
        9840
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1126": {
      "op": "JUMPDEST"
    },
    "1127": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9632,
        9840
      ],
      "op": "POP",
      "path": "5"
    },
    "1128": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9632,
        9840
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F6"
    },
    "1131": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9632,
        9840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1133": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9632,
        9840
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1134": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9632,
        9840
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1135": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9632,
        9840
      ],
      "op": "SUB",
      "path": "5"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1138": {
      "op": "DUP2"
    },
    "1139": {
      "op": "LT"
    },
    "1140": {
      "op": "ISZERO"
    },
    "1141": {
      "op": "PUSH2",
      "value": "0x47D"
    },
    "1144": {
      "op": "JUMPI"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1147": {
      "op": "DUP1"
    },
    "1148": {
      "op": "REVERT"
    },
    "1149": {
      "op": "JUMPDEST"
    },
    "1150": {
      "op": "POP"
    },
    "1151": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9632,
        9840
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1158": {
      "op": "SHL"
    },
    "1159": {
      "op": "SUB"
    },
    "1160": {
      "op": "NOT"
    },
    "1161": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9632,
        9840
      ],
      "op": "AND",
      "path": "5"
    },
    "1162": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9632,
        9840
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE82"
    },
    "1165": {
      "fn": "PolicyManager.getPolicyOwner",
      "jump": "i",
      "offset": [
        9632,
        9840
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1166": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1167": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1168": {
      "op": "DUP1"
    },
    "1169": {
      "op": "ISZERO"
    },
    "1170": {
      "op": "PUSH2",
      "value": "0x49A"
    },
    "1173": {
      "op": "JUMPI"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1176": {
      "op": "DUP1"
    },
    "1177": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1178": {
      "op": "JUMPDEST"
    },
    "1179": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "POP",
      "path": "5"
    },
    "1180": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B1"
    },
    "1183": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1185": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1186": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1187": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "SUB",
      "path": "5"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1190": {
      "op": "DUP2"
    },
    "1191": {
      "op": "LT"
    },
    "1192": {
      "op": "ISZERO"
    },
    "1193": {
      "op": "PUSH2",
      "value": "0x4B1"
    },
    "1196": {
      "op": "JUMPI"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1199": {
      "op": "DUP1"
    },
    "1200": {
      "op": "REVERT"
    },
    "1201": {
      "op": "JUMPDEST"
    },
    "1202": {
      "op": "POP"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1209": {
      "op": "SHL"
    },
    "1210": {
      "op": "SUB"
    },
    "1211": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1212": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1213": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1214": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "AND",
      "path": "5"
    },
    "1215": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1216": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1218": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1219": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "ADD",
      "path": "5"
    },
    "1220": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1221": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1222": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "AND",
      "path": "5"
    },
    "1223": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1224": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1226": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1227": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1228": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "ADD",
      "path": "5"
    },
    "1229": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1230": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "AND",
      "path": "5"
    },
    "1231": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xED9"
    },
    "1234": {
      "fn": "PolicyManager.setFeeRateRange",
      "jump": "i",
      "offset": [
        4609,
        4877
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1235": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1236": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1237": {
      "op": "DUP1"
    },
    "1238": {
      "op": "ISZERO"
    },
    "1239": {
      "op": "PUSH2",
      "value": "0x4DF"
    },
    "1242": {
      "op": "JUMPI"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1245": {
      "op": "DUP1"
    },
    "1246": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1247": {
      "op": "JUMPDEST"
    },
    "1248": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "POP",
      "path": "5"
    },
    "1249": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "1252": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1254": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1255": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1256": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "SUB",
      "path": "5"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1259": {
      "op": "DUP2"
    },
    "1260": {
      "op": "LT"
    },
    "1261": {
      "op": "ISZERO"
    },
    "1262": {
      "op": "PUSH2",
      "value": "0x4F6"
    },
    "1265": {
      "op": "JUMPI"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1268": {
      "op": "DUP1"
    },
    "1269": {
      "op": "REVERT"
    },
    "1270": {
      "op": "JUMPDEST"
    },
    "1271": {
      "op": "POP"
    },
    "1272": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1273": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1280": {
      "op": "SHL"
    },
    "1281": {
      "op": "SUB"
    },
    "1282": {
      "op": "NOT"
    },
    "1283": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "AND",
      "path": "5"
    },
    "1284": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1285": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1287": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "ADD",
      "path": "5"
    },
    "1288": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1295": {
      "op": "SHL"
    },
    "1296": {
      "op": "SUB"
    },
    "1297": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "AND",
      "path": "5"
    },
    "1298": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFC3"
    },
    "1301": {
      "fn": "PolicyManager.refund",
      "jump": "i",
      "offset": [
        22009,
        22344
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1302": {
      "offset": [
        3152,
        3177
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1303": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1304": {
      "op": "DUP1"
    },
    "1305": {
      "op": "ISZERO"
    },
    "1306": {
      "op": "PUSH2",
      "value": "0x522"
    },
    "1309": {
      "op": "JUMPI"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1312": {
      "op": "DUP1"
    },
    "1313": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1314": {
      "op": "JUMPDEST"
    },
    "1315": {
      "offset": [
        3152,
        3177
      ],
      "op": "POP",
      "path": "5"
    },
    "1316": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x52B"
    },
    "1319": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1039"
    },
    "1322": {
      "fn": "PolicyManager.refund",
      "jump": "i",
      "offset": [
        3152,
        3177
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1323": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1324": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1326": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1327": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1334": {
      "op": "SHL"
    },
    "1335": {
      "op": "SUB"
    },
    "1336": {
      "offset": [
        3152,
        3177
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1337": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1338": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "AND",
      "path": "5"
    },
    "1339": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1340": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1341": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1342": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1343": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "AND",
      "path": "5"
    },
    "1344": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1346": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1347": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "ADD",
      "path": "5"
    },
    "1348": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1349": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1350": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "AND",
      "path": "5"
    },
    "1351": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1352": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1353": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "ADD",
      "path": "5"
    },
    "1354": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1355": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1356": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1357": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1358": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1359": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1360": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "SUB",
      "path": "5"
    },
    "1361": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1363": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "ADD",
      "path": "5"
    },
    "1364": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1365": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "RETURN",
      "path": "5"
    },
    "1366": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23081,
        23226
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1367": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23081,
        23226
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1368": {
      "op": "DUP1"
    },
    "1369": {
      "op": "ISZERO"
    },
    "1370": {
      "op": "PUSH2",
      "value": "0x562"
    },
    "1373": {
      "op": "JUMPI"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1376": {
      "op": "DUP1"
    },
    "1377": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23081,
        23226
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1378": {
      "op": "JUMPDEST"
    },
    "1379": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23081,
        23226
      ],
      "op": "POP",
      "path": "5"
    },
    "1380": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23081,
        23226
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "1383": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23081,
        23226
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1385": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23081,
        23226
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1386": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23081,
        23226
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1387": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23081,
        23226
      ],
      "op": "SUB",
      "path": "5"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1390": {
      "op": "DUP2"
    },
    "1391": {
      "op": "LT"
    },
    "1392": {
      "op": "ISZERO"
    },
    "1393": {
      "op": "PUSH2",
      "value": "0x579"
    },
    "1396": {
      "op": "JUMPI"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1399": {
      "op": "DUP1"
    },
    "1400": {
      "op": "REVERT"
    },
    "1401": {
      "op": "JUMPDEST"
    },
    "1402": {
      "op": "POP"
    },
    "1403": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23081,
        23226
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1410": {
      "op": "SHL"
    },
    "1411": {
      "op": "SUB"
    },
    "1412": {
      "op": "NOT"
    },
    "1413": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23081,
        23226
      ],
      "op": "AND",
      "path": "5"
    },
    "1414": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23081,
        23226
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1059"
    },
    "1417": {
      "fn": "PolicyManager.getArrangementsLength",
      "jump": "i",
      "offset": [
        23081,
        23226
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1418": {
      "offset": [
        3055,
        3098
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1419": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1420": {
      "op": "DUP1"
    },
    "1421": {
      "op": "ISZERO"
    },
    "1422": {
      "op": "PUSH2",
      "value": "0x596"
    },
    "1425": {
      "op": "JUMPI"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1428": {
      "op": "DUP1"
    },
    "1429": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1430": {
      "op": "JUMPDEST"
    },
    "1431": {
      "offset": [
        3055,
        3098
      ],
      "op": "POP",
      "path": "5"
    },
    "1432": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5BE"
    },
    "1435": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1437": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1438": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1439": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SUB",
      "path": "5"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1442": {
      "op": "DUP2"
    },
    "1443": {
      "op": "LT"
    },
    "1444": {
      "op": "ISZERO"
    },
    "1445": {
      "op": "PUSH2",
      "value": "0x5AD"
    },
    "1448": {
      "op": "JUMPI"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1451": {
      "op": "DUP1"
    },
    "1452": {
      "op": "REVERT"
    },
    "1453": {
      "op": "JUMPDEST"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "offset": [
        3055,
        3098
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1462": {
      "op": "SHL"
    },
    "1463": {
      "op": "SUB"
    },
    "1464": {
      "op": "NOT"
    },
    "1465": {
      "offset": [
        3055,
        3098
      ],
      "op": "AND",
      "path": "5"
    },
    "1466": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1078"
    },
    "1469": {
      "fn": "PolicyManager.getArrangementsLength",
      "jump": "i",
      "offset": [
        3055,
        3098
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1470": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1471": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1473": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1474": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1475": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP12",
      "path": "5"
    },
    "1476": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1477": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1478": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP13",
      "path": "5"
    },
    "1479": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1486": {
      "op": "SHL"
    },
    "1487": {
      "op": "SUB"
    },
    "1488": {
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP11",
      "path": "5"
    },
    "1489": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP12",
      "path": "5"
    },
    "1490": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "AND",
      "path": "5"
    },
    "1491": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1493": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP14",
      "path": "5"
    },
    "1494": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "1495": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1496": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "1497": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1498": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP10",
      "path": "5"
    },
    "1499": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "AND",
      "path": "5"
    },
    "1500": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP11",
      "path": "5"
    },
    "1501": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP10",
      "path": "5"
    },
    "1502": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "1503": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1510": {
      "op": "SHL"
    },
    "1511": {
      "op": "SUB"
    },
    "1512": {
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1513": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "1514": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "AND",
      "path": "5"
    },
    "1515": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1517": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP11",
      "path": "5"
    },
    "1518": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "1519": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1526": {
      "op": "SHL"
    },
    "1527": {
      "op": "SUB"
    },
    "1528": {
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1529": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1530": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "AND",
      "path": "5"
    },
    "1531": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "1533": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP11",
      "path": "5"
    },
    "1534": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "1535": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1536": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1537": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1538": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1539": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "AND",
      "path": "5"
    },
    "1540": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "1542": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1543": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "1544": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1545": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xC0"
    },
    "1547": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1548": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "1549": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1550": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "1552": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1553": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "1554": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1555": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1556": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1557": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1558": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1561": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1562": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "1563": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1564": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x120"
    },
    "1567": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1568": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "1569": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1570": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x140"
    },
    "1573": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1574": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "1575": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1576": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1577": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1578": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1579": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1580": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1581": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1582": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1583": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SUB",
      "path": "5"
    },
    "1584": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x160"
    },
    "1587": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "1588": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1589": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "RETURN",
      "path": "5"
    },
    "1590": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1591": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1592": {
      "op": "DUP1"
    },
    "1593": {
      "op": "ISZERO"
    },
    "1594": {
      "op": "PUSH2",
      "value": "0x642"
    },
    "1597": {
      "op": "JUMPI"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1600": {
      "op": "DUP1"
    },
    "1601": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1602": {
      "op": "JUMPDEST"
    },
    "1603": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "POP",
      "path": "21"
    },
    "1604": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3B1"
    },
    "1607": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x10F6"
    },
    "1610": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1348,
        1485
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1611": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1612": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1613": {
      "op": "DUP1"
    },
    "1614": {
      "op": "ISZERO"
    },
    "1615": {
      "op": "PUSH2",
      "value": "0x657"
    },
    "1618": {
      "op": "JUMPI"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1621": {
      "op": "DUP1"
    },
    "1622": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1623": {
      "op": "JUMPDEST"
    },
    "1624": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "POP",
      "path": "5"
    },
    "1625": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B1"
    },
    "1628": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1630": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1631": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1632": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "SUB",
      "path": "5"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1635": {
      "op": "DUP2"
    },
    "1636": {
      "op": "LT"
    },
    "1637": {
      "op": "ISZERO"
    },
    "1638": {
      "op": "PUSH2",
      "value": "0x66E"
    },
    "1641": {
      "op": "JUMPI"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1644": {
      "op": "DUP1"
    },
    "1645": {
      "op": "REVERT"
    },
    "1646": {
      "op": "JUMPDEST"
    },
    "1647": {
      "op": "POP"
    },
    "1648": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1649": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1656": {
      "op": "SHL"
    },
    "1657": {
      "op": "SUB"
    },
    "1658": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "AND",
      "path": "5"
    },
    "1659": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1660": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1662": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "ADD",
      "path": "5"
    },
    "1663": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1664": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "1667": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "AND",
      "path": "5"
    },
    "1668": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1151"
    },
    "1671": {
      "fn": "PolicyManager.register",
      "jump": "i",
      "offset": [
        4123,
        4385
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1672": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1673": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B1"
    },
    "1676": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1678": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1679": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1680": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "SUB",
      "path": "5"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1683": {
      "op": "DUP2"
    },
    "1684": {
      "op": "LT"
    },
    "1685": {
      "op": "ISZERO"
    },
    "1686": {
      "op": "PUSH2",
      "value": "0x69E"
    },
    "1689": {
      "op": "JUMPI"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1692": {
      "op": "DUP1"
    },
    "1693": {
      "op": "REVERT"
    },
    "1694": {
      "op": "JUMPDEST"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1701": {
      "op": "SHL"
    },
    "1702": {
      "op": "SUB"
    },
    "1703": {
      "op": "NOT"
    },
    "1704": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1705": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1706": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "AND",
      "path": "5"
    },
    "1707": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1714": {
      "op": "SHL"
    },
    "1715": {
      "op": "SUB"
    },
    "1716": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1718": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1719": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "ADD",
      "path": "5"
    },
    "1720": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1721": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "AND",
      "path": "5"
    },
    "1722": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1729": {
      "op": "SHL"
    },
    "1730": {
      "op": "SUB"
    },
    "1731": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1733": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1734": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "ADD",
      "path": "5"
    },
    "1735": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1736": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "AND",
      "path": "5"
    },
    "1737": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1738": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1739": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1740": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "ADD",
      "path": "5"
    },
    "1741": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1742": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "1744": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1745": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "ADD",
      "path": "5"
    },
    "1746": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1748": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1749": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "ADD",
      "path": "5"
    },
    "1750": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1751": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "1757": {
      "op": "DUP2"
    },
    "1758": {
      "op": "GT"
    },
    "1759": {
      "op": "ISZERO"
    },
    "1760": {
      "op": "PUSH2",
      "value": "0x6E8"
    },
    "1763": {
      "op": "JUMPI"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1766": {
      "op": "DUP1"
    },
    "1767": {
      "op": "REVERT"
    },
    "1768": {
      "op": "JUMPDEST"
    },
    "1769": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1770": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "ADD",
      "path": "5"
    },
    "1771": {
      "op": "DUP4"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1774": {
      "op": "DUP3"
    },
    "1775": {
      "op": "ADD"
    },
    "1776": {
      "op": "GT"
    },
    "1777": {
      "op": "ISZERO"
    },
    "1778": {
      "op": "PUSH2",
      "value": "0x6FA"
    },
    "1781": {
      "op": "JUMPI"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1784": {
      "op": "DUP1"
    },
    "1785": {
      "op": "REVERT"
    },
    "1786": {
      "op": "JUMPDEST"
    },
    "1787": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1788": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1789": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1790": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1792": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "ADD",
      "path": "5"
    },
    "1793": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1794": {
      "op": "DUP5"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1797": {
      "op": "DUP4"
    },
    "1798": {
      "op": "MUL"
    },
    "1799": {
      "op": "DUP5"
    },
    "1800": {
      "op": "ADD"
    },
    "1801": {
      "op": "GT"
    },
    "1802": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "1808": {
      "op": "DUP4"
    },
    "1809": {
      "op": "GT"
    },
    "1810": {
      "op": "OR"
    },
    "1811": {
      "op": "ISZERO"
    },
    "1812": {
      "op": "PUSH2",
      "value": "0x71C"
    },
    "1815": {
      "op": "JUMPI"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1818": {
      "op": "DUP1"
    },
    "1819": {
      "op": "REVERT"
    },
    "1820": {
      "op": "JUMPDEST"
    },
    "1821": {
      "op": "POP"
    },
    "1822": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1823": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1824": {
      "op": "POP"
    },
    "1825": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1826": {
      "op": "POP"
    },
    "1827": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11F0"
    },
    "1830": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        6742,
        9580
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1831": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6258,
        6423
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1832": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6258,
        6423
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1833": {
      "op": "DUP1"
    },
    "1834": {
      "op": "ISZERO"
    },
    "1835": {
      "op": "PUSH2",
      "value": "0x733"
    },
    "1838": {
      "op": "JUMPI"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1841": {
      "op": "DUP1"
    },
    "1842": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6258,
        6423
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1843": {
      "op": "JUMPDEST"
    },
    "1844": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6258,
        6423
      ],
      "op": "POP",
      "path": "5"
    },
    "1845": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6258,
        6423
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "1848": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6258,
        6423
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1850": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6258,
        6423
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1851": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6258,
        6423
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1852": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6258,
        6423
      ],
      "op": "SUB",
      "path": "5"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1855": {
      "op": "DUP2"
    },
    "1856": {
      "op": "LT"
    },
    "1857": {
      "op": "ISZERO"
    },
    "1858": {
      "op": "PUSH2",
      "value": "0x74A"
    },
    "1861": {
      "op": "JUMPI"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1864": {
      "op": "DUP1"
    },
    "1865": {
      "op": "REVERT"
    },
    "1866": {
      "op": "JUMPDEST"
    },
    "1867": {
      "op": "POP"
    },
    "1868": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6258,
        6423
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1875": {
      "op": "SHL"
    },
    "1876": {
      "op": "SUB"
    },
    "1877": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6258,
        6423
      ],
      "op": "AND",
      "path": "5"
    },
    "1878": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6258,
        6423
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1712"
    },
    "1881": {
      "fn": "PolicyManager.getMinFeeRate",
      "jump": "i",
      "offset": [
        6258,
        6423
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1882": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5066,
        5533
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1883": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5066,
        5533
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1884": {
      "op": "DUP1"
    },
    "1885": {
      "op": "ISZERO"
    },
    "1886": {
      "op": "PUSH2",
      "value": "0x766"
    },
    "1889": {
      "op": "JUMPI"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1892": {
      "op": "DUP1"
    },
    "1893": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5066,
        5533
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1894": {
      "op": "JUMPDEST"
    },
    "1895": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5066,
        5533
      ],
      "op": "POP",
      "path": "5"
    },
    "1896": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5066,
        5533
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B1"
    },
    "1899": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5066,
        5533
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1901": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5066,
        5533
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1902": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5066,
        5533
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1903": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5066,
        5533
      ],
      "op": "SUB",
      "path": "5"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1906": {
      "op": "DUP2"
    },
    "1907": {
      "op": "LT"
    },
    "1908": {
      "op": "ISZERO"
    },
    "1909": {
      "op": "PUSH2",
      "value": "0x77D"
    },
    "1912": {
      "op": "JUMPI"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1915": {
      "op": "DUP1"
    },
    "1916": {
      "op": "REVERT"
    },
    "1917": {
      "op": "JUMPDEST"
    },
    "1918": {
      "op": "POP"
    },
    "1919": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5066,
        5533
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1920": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5066,
        5533
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1733"
    },
    "1923": {
      "fn": "PolicyManager.setMinFeeRate",
      "jump": "i",
      "offset": [
        5066,
        5533
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1924": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1925": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1926": {
      "op": "DUP1"
    },
    "1927": {
      "op": "ISZERO"
    },
    "1928": {
      "op": "PUSH2",
      "value": "0x790"
    },
    "1931": {
      "op": "JUMPI"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1934": {
      "op": "DUP1"
    },
    "1935": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1936": {
      "op": "JUMPDEST"
    },
    "1937": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "POP",
      "path": "5"
    },
    "1938": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "1941": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1943": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1944": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1945": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "SUB",
      "path": "5"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1948": {
      "op": "DUP2"
    },
    "1949": {
      "op": "LT"
    },
    "1950": {
      "op": "ISZERO"
    },
    "1951": {
      "op": "PUSH2",
      "value": "0x7A7"
    },
    "1954": {
      "op": "JUMPI"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1957": {
      "op": "DUP1"
    },
    "1958": {
      "op": "REVERT"
    },
    "1959": {
      "op": "JUMPDEST"
    },
    "1960": {
      "op": "POP"
    },
    "1961": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1962": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1969": {
      "op": "SHL"
    },
    "1970": {
      "op": "SUB"
    },
    "1971": {
      "op": "NOT"
    },
    "1972": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "AND",
      "path": "5"
    },
    "1973": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1974": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1976": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "ADD",
      "path": "5"
    },
    "1977": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1984": {
      "op": "SHL"
    },
    "1985": {
      "op": "SUB"
    },
    "1986": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "AND",
      "path": "5"
    },
    "1987": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17F7"
    },
    "1990": {
      "fn": "PolicyManager.revokeArrangement",
      "jump": "i",
      "offset": [
        19791,
        20064
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1991": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1992": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1993": {
      "op": "DUP1"
    },
    "1994": {
      "op": "ISZERO"
    },
    "1995": {
      "op": "PUSH2",
      "value": "0x7D3"
    },
    "1998": {
      "op": "JUMPI"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2001": {
      "op": "DUP1"
    },
    "2002": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "REVERT",
      "path": "21"
    },
    "2003": {
      "op": "JUMPDEST"
    },
    "2004": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "POP",
      "path": "21"
    },
    "2005": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3F6"
    },
    "2008": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1835"
    },
    "2011": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        660,
        737
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2012": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2013": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2014": {
      "op": "DUP1"
    },
    "2015": {
      "op": "ISZERO"
    },
    "2016": {
      "op": "PUSH2",
      "value": "0x7E8"
    },
    "2019": {
      "op": "JUMPI"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2022": {
      "op": "DUP1"
    },
    "2023": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2024": {
      "op": "JUMPDEST"
    },
    "2025": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "POP",
      "path": "5"
    },
    "2026": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "2029": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2031": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2032": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2033": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "SUB",
      "path": "5"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2036": {
      "op": "DUP2"
    },
    "2037": {
      "op": "LT"
    },
    "2038": {
      "op": "ISZERO"
    },
    "2039": {
      "op": "PUSH2",
      "value": "0x7FF"
    },
    "2042": {
      "op": "JUMPI"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2045": {
      "op": "DUP1"
    },
    "2046": {
      "op": "REVERT"
    },
    "2047": {
      "op": "JUMPDEST"
    },
    "2048": {
      "op": "POP"
    },
    "2049": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2050": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2057": {
      "op": "SHL"
    },
    "2058": {
      "op": "SUB"
    },
    "2059": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "AND",
      "path": "5"
    },
    "2060": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2061": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2063": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "ADD",
      "path": "5"
    },
    "2064": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2065": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "2068": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "AND",
      "path": "5"
    },
    "2069": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1844"
    },
    "2072": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "jump": "i",
      "offset": [
        23383,
        23623
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2073": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2074": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "2075": {
      "op": "DUP1"
    },
    "2076": {
      "op": "ISZERO"
    },
    "2077": {
      "op": "PUSH2",
      "value": "0x825"
    },
    "2080": {
      "op": "JUMPI"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2083": {
      "op": "DUP1"
    },
    "2084": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "REVERT",
      "path": "21"
    },
    "2085": {
      "op": "JUMPDEST"
    },
    "2086": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "POP",
      "path": "21"
    },
    "2087": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x82E"
    },
    "2090": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1875"
    },
    "2093": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        980,
        1070
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2094": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2095": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2097": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2098": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2099": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2100": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "2101": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "2102": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2103": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2104": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2105": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2106": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2107": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2108": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SUB",
      "path": "21"
    },
    "2109": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2111": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "ADD",
      "path": "21"
    },
    "2112": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2113": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "RETURN",
      "path": "21"
    },
    "2114": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19435,
        19643
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2115": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19435,
        19643
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2116": {
      "op": "DUP1"
    },
    "2117": {
      "op": "ISZERO"
    },
    "2118": {
      "op": "PUSH2",
      "value": "0x84E"
    },
    "2121": {
      "op": "JUMPI"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2124": {
      "op": "DUP1"
    },
    "2125": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19435,
        19643
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2126": {
      "op": "JUMPDEST"
    },
    "2127": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19435,
        19643
      ],
      "op": "POP",
      "path": "5"
    },
    "2128": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19435,
        19643
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "2131": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19435,
        19643
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2133": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19435,
        19643
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2134": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19435,
        19643
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2135": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19435,
        19643
      ],
      "op": "SUB",
      "path": "5"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2138": {
      "op": "DUP2"
    },
    "2139": {
      "op": "LT"
    },
    "2140": {
      "op": "ISZERO"
    },
    "2141": {
      "op": "PUSH2",
      "value": "0x865"
    },
    "2144": {
      "op": "JUMPI"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2147": {
      "op": "DUP1"
    },
    "2148": {
      "op": "REVERT"
    },
    "2149": {
      "op": "JUMPDEST"
    },
    "2150": {
      "op": "POP"
    },
    "2151": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19435,
        19643
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2158": {
      "op": "SHL"
    },
    "2159": {
      "op": "SUB"
    },
    "2160": {
      "op": "NOT"
    },
    "2161": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19435,
        19643
      ],
      "op": "AND",
      "path": "5"
    },
    "2162": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19435,
        19643
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1886"
    },
    "2165": {
      "fn": "PolicyManager.revokePolicy",
      "jump": "i",
      "offset": [
        19435,
        19643
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2166": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2167": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2168": {
      "op": "DUP1"
    },
    "2169": {
      "op": "ISZERO"
    },
    "2170": {
      "op": "PUSH2",
      "value": "0x882"
    },
    "2173": {
      "op": "JUMPI"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2176": {
      "op": "DUP1"
    },
    "2177": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2178": {
      "op": "JUMPDEST"
    },
    "2179": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "POP",
      "path": "5"
    },
    "2180": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "2183": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2185": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2186": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2187": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "SUB",
      "path": "5"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2190": {
      "op": "DUP2"
    },
    "2191": {
      "op": "LT"
    },
    "2192": {
      "op": "ISZERO"
    },
    "2193": {
      "op": "PUSH2",
      "value": "0x899"
    },
    "2196": {
      "op": "JUMPI"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2199": {
      "op": "DUP1"
    },
    "2200": {
      "op": "REVERT"
    },
    "2201": {
      "op": "JUMPDEST"
    },
    "2202": {
      "op": "POP"
    },
    "2203": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2204": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2211": {
      "op": "SHL"
    },
    "2212": {
      "op": "SUB"
    },
    "2213": {
      "op": "NOT"
    },
    "2214": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "AND",
      "path": "5"
    },
    "2215": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2216": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2218": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "ADD",
      "path": "5"
    },
    "2219": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2226": {
      "op": "SHL"
    },
    "2227": {
      "op": "SUB"
    },
    "2228": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "AND",
      "path": "5"
    },
    "2229": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18B2"
    },
    "2232": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        22741,
        22972
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2233": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2234": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2235": {
      "op": "DUP1"
    },
    "2236": {
      "op": "ISZERO"
    },
    "2237": {
      "op": "PUSH2",
      "value": "0x8C5"
    },
    "2240": {
      "op": "JUMPI"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2243": {
      "op": "DUP1"
    },
    "2244": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2245": {
      "op": "JUMPDEST"
    },
    "2246": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "POP",
      "path": "5"
    },
    "2247": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B1"
    },
    "2250": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2252": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2253": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2254": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "SUB",
      "path": "5"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2257": {
      "op": "DUP2"
    },
    "2258": {
      "op": "LT"
    },
    "2259": {
      "op": "ISZERO"
    },
    "2260": {
      "op": "PUSH2",
      "value": "0x8DC"
    },
    "2263": {
      "op": "JUMPI"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2266": {
      "op": "DUP1"
    },
    "2267": {
      "op": "REVERT"
    },
    "2268": {
      "op": "JUMPDEST"
    },
    "2269": {
      "op": "POP"
    },
    "2270": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2271": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2278": {
      "op": "SHL"
    },
    "2279": {
      "op": "SUB"
    },
    "2280": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "AND",
      "path": "5"
    },
    "2281": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2282": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2284": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "ADD",
      "path": "5"
    },
    "2285": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2286": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "2289": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "AND",
      "path": "5"
    },
    "2290": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18D1"
    },
    "2293": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "jump": "i",
      "offset": [
        10090,
        10339
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2294": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2295": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2296": {
      "op": "DUP1"
    },
    "2297": {
      "op": "ISZERO"
    },
    "2298": {
      "op": "PUSH2",
      "value": "0x902"
    },
    "2301": {
      "op": "JUMPI"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2304": {
      "op": "DUP1"
    },
    "2305": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2306": {
      "op": "JUMPDEST"
    },
    "2307": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "POP",
      "path": "5"
    },
    "2308": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B1"
    },
    "2311": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2313": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2314": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2315": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "SUB",
      "path": "5"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2318": {
      "op": "DUP2"
    },
    "2319": {
      "op": "LT"
    },
    "2320": {
      "op": "ISZERO"
    },
    "2321": {
      "op": "PUSH2",
      "value": "0x919"
    },
    "2324": {
      "op": "JUMPI"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2327": {
      "op": "DUP1"
    },
    "2328": {
      "op": "REVERT"
    },
    "2329": {
      "op": "JUMPDEST"
    },
    "2330": {
      "op": "POP"
    },
    "2331": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2338": {
      "op": "SHL"
    },
    "2339": {
      "op": "SUB"
    },
    "2340": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "AND",
      "path": "5"
    },
    "2341": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x195C"
    },
    "2344": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        25828,
        27947
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2345": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2346": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2347": {
      "op": "DUP1"
    },
    "2348": {
      "op": "ISZERO"
    },
    "2349": {
      "op": "PUSH2",
      "value": "0x935"
    },
    "2352": {
      "op": "JUMPI"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2355": {
      "op": "DUP1"
    },
    "2356": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2357": {
      "op": "JUMPDEST"
    },
    "2358": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "POP",
      "path": "5"
    },
    "2359": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "2362": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2364": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2365": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2366": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "SUB",
      "path": "5"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2369": {
      "op": "DUP2"
    },
    "2370": {
      "op": "LT"
    },
    "2371": {
      "op": "ISZERO"
    },
    "2372": {
      "op": "PUSH2",
      "value": "0x94C"
    },
    "2375": {
      "op": "JUMPI"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2378": {
      "op": "DUP1"
    },
    "2379": {
      "op": "REVERT"
    },
    "2380": {
      "op": "JUMPDEST"
    },
    "2381": {
      "op": "POP"
    },
    "2382": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2383": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2390": {
      "op": "SHL"
    },
    "2391": {
      "op": "SUB"
    },
    "2392": {
      "op": "NOT"
    },
    "2393": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "AND",
      "path": "5"
    },
    "2394": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2395": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2397": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "ADD",
      "path": "5"
    },
    "2398": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2405": {
      "op": "SHL"
    },
    "2406": {
      "op": "SUB"
    },
    "2407": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "AND",
      "path": "5"
    },
    "2408": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C6B"
    },
    "2411": {
      "fn": "PolicyManager.getRevocationHash",
      "jump": "i",
      "offset": [
        20268,
        20459
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2412": {
      "offset": [
        859,
        880
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2413": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        859,
        880
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2414": {
      "op": "DUP1"
    },
    "2415": {
      "op": "ISZERO"
    },
    "2416": {
      "op": "PUSH2",
      "value": "0x978"
    },
    "2419": {
      "op": "JUMPI"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2422": {
      "op": "DUP1"
    },
    "2423": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        859,
        880
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2424": {
      "op": "JUMPDEST"
    },
    "2425": {
      "offset": [
        859,
        880
      ],
      "op": "POP",
      "path": "15"
    },
    "2426": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        859,
        880
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3F6"
    },
    "2429": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        859,
        880
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CBB"
    },
    "2432": {
      "fn": "PolicyManager.getRevocationHash",
      "jump": "i",
      "offset": [
        859,
        880
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2433": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2434": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2435": {
      "op": "DUP1"
    },
    "2436": {
      "op": "ISZERO"
    },
    "2437": {
      "op": "PUSH2",
      "value": "0x98D"
    },
    "2440": {
      "op": "JUMPI"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2443": {
      "op": "DUP1"
    },
    "2444": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2445": {
      "op": "JUMPDEST"
    },
    "2446": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "POP",
      "path": "5"
    },
    "2447": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9BB"
    },
    "2450": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2452": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2453": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2454": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "SUB",
      "path": "5"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2457": {
      "op": "DUP2"
    },
    "2458": {
      "op": "LT"
    },
    "2459": {
      "op": "ISZERO"
    },
    "2460": {
      "op": "PUSH2",
      "value": "0x9A4"
    },
    "2463": {
      "op": "JUMPI"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2466": {
      "op": "DUP1"
    },
    "2467": {
      "op": "REVERT"
    },
    "2468": {
      "op": "JUMPDEST"
    },
    "2469": {
      "op": "POP"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2476": {
      "op": "SHL"
    },
    "2477": {
      "op": "SUB"
    },
    "2478": {
      "op": "NOT"
    },
    "2479": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2480": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2481": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "AND",
      "path": "5"
    },
    "2482": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2483": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2485": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "ADD",
      "path": "5"
    },
    "2486": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2487": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CCA"
    },
    "2490": {
      "fn": "PolicyManager.getArrangementInfo",
      "jump": "i",
      "offset": [
        23699,
        24218
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2491": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2492": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2494": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2495": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2502": {
      "op": "SHL"
    },
    "2503": {
      "op": "SUB"
    },
    "2504": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2505": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2506": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "AND",
      "path": "5"
    },
    "2507": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2508": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2509": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2511": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2512": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "ADD",
      "path": "5"
    },
    "2513": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2514": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2515": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2516": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2517": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "2520": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "AND",
      "path": "5"
    },
    "2521": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2522": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2523": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "ADD",
      "path": "5"
    },
    "2524": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2525": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2526": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2527": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2528": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2529": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "SUB",
      "path": "5"
    },
    "2530": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2532": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "ADD",
      "path": "5"
    },
    "2533": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2534": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "RETURN",
      "path": "5"
    },
    "2535": {
      "fn": "PolicyManager.refund",
      "offset": [
        21626,
        21864
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2536": {
      "fn": "PolicyManager.refund",
      "offset": [
        21626,
        21864
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2537": {
      "op": "DUP1"
    },
    "2538": {
      "op": "ISZERO"
    },
    "2539": {
      "op": "PUSH2",
      "value": "0x9F3"
    },
    "2542": {
      "op": "JUMPI"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2545": {
      "op": "DUP1"
    },
    "2546": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.refund",
      "offset": [
        21626,
        21864
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2547": {
      "op": "JUMPDEST"
    },
    "2548": {
      "fn": "PolicyManager.refund",
      "offset": [
        21626,
        21864
      ],
      "op": "POP",
      "path": "5"
    },
    "2549": {
      "fn": "PolicyManager.refund",
      "offset": [
        21626,
        21864
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B1"
    },
    "2552": {
      "fn": "PolicyManager.refund",
      "offset": [
        21626,
        21864
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2554": {
      "fn": "PolicyManager.refund",
      "offset": [
        21626,
        21864
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2555": {
      "fn": "PolicyManager.refund",
      "offset": [
        21626,
        21864
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2556": {
      "fn": "PolicyManager.refund",
      "offset": [
        21626,
        21864
      ],
      "op": "SUB",
      "path": "5"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2559": {
      "op": "DUP2"
    },
    "2560": {
      "op": "LT"
    },
    "2561": {
      "op": "ISZERO"
    },
    "2562": {
      "op": "PUSH2",
      "value": "0xA0A"
    },
    "2565": {
      "op": "JUMPI"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2568": {
      "op": "DUP1"
    },
    "2569": {
      "op": "REVERT"
    },
    "2570": {
      "op": "JUMPDEST"
    },
    "2571": {
      "op": "POP"
    },
    "2572": {
      "fn": "PolicyManager.refund",
      "offset": [
        21626,
        21864
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2579": {
      "op": "SHL"
    },
    "2580": {
      "op": "SUB"
    },
    "2581": {
      "op": "NOT"
    },
    "2582": {
      "fn": "PolicyManager.refund",
      "offset": [
        21626,
        21864
      ],
      "op": "AND",
      "path": "5"
    },
    "2583": {
      "fn": "PolicyManager.refund",
      "offset": [
        21626,
        21864
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D32"
    },
    "2586": {
      "fn": "PolicyManager.refund",
      "jump": "i",
      "offset": [
        21626,
        21864
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2587": {
      "offset": [
        2965,
        3002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2588": {
      "fn": "PolicyManager.refund",
      "offset": [
        2965,
        3002
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2589": {
      "op": "DUP1"
    },
    "2590": {
      "op": "ISZERO"
    },
    "2591": {
      "op": "PUSH2",
      "value": "0xA27"
    },
    "2594": {
      "op": "JUMPI"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2597": {
      "op": "DUP1"
    },
    "2598": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.refund",
      "offset": [
        2965,
        3002
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2599": {
      "op": "JUMPDEST"
    },
    "2600": {
      "offset": [
        2965,
        3002
      ],
      "op": "POP",
      "path": "5"
    },
    "2601": {
      "fn": "PolicyManager.refund",
      "offset": [
        2965,
        3002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F6"
    },
    "2604": {
      "fn": "PolicyManager.refund",
      "offset": [
        2965,
        3002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D89"
    },
    "2607": {
      "fn": "PolicyManager.refund",
      "jump": "i",
      "offset": [
        2965,
        3002
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2608": {
      "offset": [
        1132,
        1154
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2609": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2610": {
      "op": "DUP1"
    },
    "2611": {
      "op": "ISZERO"
    },
    "2612": {
      "op": "PUSH2",
      "value": "0xA3C"
    },
    "2615": {
      "op": "JUMPI"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2618": {
      "op": "DUP1"
    },
    "2619": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2620": {
      "op": "JUMPDEST"
    },
    "2621": {
      "offset": [
        1132,
        1154
      ],
      "op": "POP",
      "path": "15"
    },
    "2622": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA45"
    },
    "2625": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DAD"
    },
    "2628": {
      "fn": "PolicyManager.refund",
      "jump": "i",
      "offset": [
        1132,
        1154
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2629": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2630": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2632": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2633": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2634": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2636": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2637": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2638": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "AND",
      "path": "15"
    },
    "2639": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2640": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2641": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2642": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2643": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2644": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2645": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "SUB",
      "path": "15"
    },
    "2646": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2648": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "ADD",
      "path": "15"
    },
    "2649": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2650": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "RETURN",
      "path": "15"
    },
    "2651": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22439,
        22622
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2652": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22439,
        22622
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2653": {
      "op": "DUP1"
    },
    "2654": {
      "op": "ISZERO"
    },
    "2655": {
      "op": "PUSH2",
      "value": "0xA67"
    },
    "2658": {
      "op": "JUMPI"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2661": {
      "op": "DUP1"
    },
    "2662": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22439,
        22622
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2663": {
      "op": "JUMPDEST"
    },
    "2664": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22439,
        22622
      ],
      "op": "POP",
      "path": "5"
    },
    "2665": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22439,
        22622
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "2668": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22439,
        22622
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2670": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22439,
        22622
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2671": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22439,
        22622
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2672": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22439,
        22622
      ],
      "op": "SUB",
      "path": "5"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2675": {
      "op": "DUP2"
    },
    "2676": {
      "op": "LT"
    },
    "2677": {
      "op": "ISZERO"
    },
    "2678": {
      "op": "PUSH2",
      "value": "0xA7E"
    },
    "2681": {
      "op": "JUMPI"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2684": {
      "op": "DUP1"
    },
    "2685": {
      "op": "REVERT"
    },
    "2686": {
      "op": "JUMPDEST"
    },
    "2687": {
      "op": "POP"
    },
    "2688": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22439,
        22622
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2695": {
      "op": "SHL"
    },
    "2696": {
      "op": "SUB"
    },
    "2697": {
      "op": "NOT"
    },
    "2698": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22439,
        22622
      ],
      "op": "AND",
      "path": "5"
    },
    "2699": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22439,
        22622
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DBD"
    },
    "2702": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        22439,
        22622
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2703": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28051,
        28807
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2704": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28051,
        28807
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2705": {
      "op": "DUP1"
    },
    "2706": {
      "op": "ISZERO"
    },
    "2707": {
      "op": "PUSH2",
      "value": "0xA9B"
    },
    "2710": {
      "op": "JUMPI"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2713": {
      "op": "DUP1"
    },
    "2714": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28051,
        28807
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2715": {
      "op": "JUMPDEST"
    },
    "2716": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28051,
        28807
      ],
      "op": "POP",
      "path": "5"
    },
    "2717": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28051,
        28807
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B1"
    },
    "2720": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28051,
        28807
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2722": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28051,
        28807
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2723": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28051,
        28807
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2724": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28051,
        28807
      ],
      "op": "SUB",
      "path": "5"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2727": {
      "op": "DUP2"
    },
    "2728": {
      "op": "LT"
    },
    "2729": {
      "op": "ISZERO"
    },
    "2730": {
      "op": "PUSH2",
      "value": "0xAB2"
    },
    "2733": {
      "op": "JUMPI"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2736": {
      "op": "DUP1"
    },
    "2737": {
      "op": "REVERT"
    },
    "2738": {
      "op": "JUMPDEST"
    },
    "2739": {
      "op": "POP"
    },
    "2740": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28051,
        28807
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2747": {
      "op": "SHL"
    },
    "2748": {
      "op": "SUB"
    },
    "2749": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28051,
        28807
      ],
      "op": "AND",
      "path": "5"
    },
    "2750": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28051,
        28807
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DCA"
    },
    "2753": {
      "fn": "PolicyManager.finishUpgrade",
      "jump": "i",
      "offset": [
        28051,
        28807
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2754": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2755": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "2756": {
      "op": "DUP1"
    },
    "2757": {
      "op": "ISZERO"
    },
    "2758": {
      "op": "PUSH2",
      "value": "0xACE"
    },
    "2761": {
      "op": "JUMPI"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2764": {
      "op": "DUP1"
    },
    "2765": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "REVERT",
      "path": "21"
    },
    "2766": {
      "op": "JUMPDEST"
    },
    "2767": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "POP",
      "path": "21"
    },
    "2768": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3B1"
    },
    "2771": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2773": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2774": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "2775": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "SUB",
      "path": "21"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2778": {
      "op": "DUP2"
    },
    "2779": {
      "op": "LT"
    },
    "2780": {
      "op": "ISZERO"
    },
    "2781": {
      "op": "PUSH2",
      "value": "0xAE5"
    },
    "2784": {
      "op": "JUMPI"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2787": {
      "op": "DUP1"
    },
    "2788": {
      "op": "REVERT"
    },
    "2789": {
      "op": "JUMPDEST"
    },
    "2790": {
      "op": "POP"
    },
    "2791": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "CALLDATALOAD",
      "path": "21"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2798": {
      "op": "SHL"
    },
    "2799": {
      "op": "SUB"
    },
    "2800": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "AND",
      "path": "21"
    },
    "2801": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2065"
    },
    "2804": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1656,
        1763
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2805": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2806": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21378,
        21397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2808": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 0,
      "value": "0xB38"
    },
    "2811": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21433,
        21442
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2812": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21444,
        21449
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2813": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21451,
        21461
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2814": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21451,
        21461
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2815": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2816": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2817": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2819": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "ADD",
      "path": "5"
    },
    "2820": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2822": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2823": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2824": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "DIV",
      "path": "5"
    },
    "2825": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "MUL",
      "path": "5"
    },
    "2826": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2828": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "ADD",
      "path": "5"
    },
    "2829": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2831": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2832": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2833": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2834": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "ADD",
      "path": "5"
    },
    "2835": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2837": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2838": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2839": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2840": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2841": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2842": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2843": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2844": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2845": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2846": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2848": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "ADD",
      "path": "5"
    },
    "2849": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2850": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2851": {
      "op": "DUP1"
    },
    "2852": {
      "op": "DUP3"
    },
    "2853": {
      "op": "DUP5"
    },
    "2854": {
      "op": "CALLDATACOPY"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2857": {
      "op": "SWAP3"
    },
    "2858": {
      "op": "ADD"
    },
    "2859": {
      "op": "SWAP2"
    },
    "2860": {
      "op": "SWAP1"
    },
    "2861": {
      "op": "SWAP2"
    },
    "2862": {
      "op": "MSTORE"
    },
    "2863": {
      "op": "POP"
    },
    "2864": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21432
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x207F"
    },
    "2867": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21432
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2868": {
      "op": "POP"
    },
    "2869": {
      "op": "POP"
    },
    "2870": {
      "op": "POP"
    },
    "2871": {
      "fn": "PolicyManager.revoke",
      "jump": "i",
      "offset": [
        21413,
        21462
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2872": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21413,
        21462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2873": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21479,
        21517
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 1,
      "value": "0xB44"
    },
    "2876": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21494,
        21503
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2877": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21505,
        21510
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2878": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21512,
        21516
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2880": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21479,
        21493
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20C8"
    },
    "2883": {
      "fn": "PolicyManager.revoke",
      "jump": "i",
      "offset": [
        21479,
        21517
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2884": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21479,
        21517
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2885": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21472,
        21517
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "2886": {
      "fn": "PolicyManager.revoke",
      "offset": [
        21275,
        21524
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2887": {
      "op": "POP"
    },
    "2888": {
      "op": "POP"
    },
    "2889": {
      "op": "POP"
    },
    "2890": {
      "op": "POP"
    },
    "2891": {
      "op": "POP"
    },
    "2892": {
      "fn": "PolicyManager.revoke",
      "jump": "o",
      "offset": [
        21275,
        21524
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2893": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2894": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3930,
        3936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2896": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3980,
        3996
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 2,
      "value": "0x0"
    },
    "2929": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3962,
        3996
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "2934": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3962,
        3996
      ],
      "op": "AND",
      "path": "5"
    },
    "2935": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3962,
        3977
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "2936": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3962,
        3996
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2937": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3962,
        3996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB7E"
    },
    "2940": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3962,
        3996
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2941": {
      "dev": "Division by zero",
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3962,
        3996
      ],
      "op": "INVALID",
      "path": "5"
    },
    "2942": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3962,
        3996
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2943": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3962,
        3996
      ],
      "op": "DIV",
      "path": "5"
    },
    "2944": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3948,
        3997
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2945": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3948,
        3997
      ],
      "op": "POP",
      "path": "5"
    },
    "2946": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3881,
        4004
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2947": {
      "fn": "PolicyManager.getCurrentPeriod",
      "jump": "o",
      "offset": [
        3881,
        4004
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2948": {
      "offset": [
        3104,
        3146
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2949": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "2951": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2953": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2954": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2956": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2957": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2958": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2959": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2961": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2962": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2963": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2964": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2965": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2967": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2968": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "ADD",
      "path": "5"
    },
    "2969": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2970": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2972": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2973": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2974": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "ADD",
      "path": "5"
    },
    "2975": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2982": {
      "op": "SHL"
    },
    "2983": {
      "op": "SUB"
    },
    "2984": {
      "offset": [
        3104,
        3146
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2985": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "AND",
      "path": "5"
    },
    "2986": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2991": {
      "op": "SHL"
    },
    "2992": {
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2993": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2994": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "DIV",
      "path": "5"
    },
    "2995": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "2998": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "AND",
      "path": "5"
    },
    "2999": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3000": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3001": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3104,
        3146
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3002": {
      "fn": "PolicyManager.getCurrentPeriod",
      "jump": "o",
      "offset": [
        3104,
        3146
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3003": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11553,
        11644
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3004": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11591,
        11598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3006": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11617,
        11637
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 3,
      "value": "0xBC6"
    },
    "3009": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11626,
        11636
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3010": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11617,
        11625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDEE"
    },
    "3013": {
      "fn": "PolicyManager.withdraw",
      "jump": "i",
      "offset": [
        11617,
        11637
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3014": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11617,
        11637
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3015": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11610,
        11637
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3016": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11610,
        11637
      ],
      "op": "POP",
      "path": "5"
    },
    "3017": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11553,
        11644
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3018": {
      "fn": "PolicyManager.withdraw",
      "jump": "o",
      "offset": [
        11553,
        11644
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3019": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3020": {
      "offset": [
        3773,
        3783
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3027": {
      "op": "SHL"
    },
    "3028": {
      "op": "SUB"
    },
    "3029": {
      "offset": [
        3795,
        3801
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x0"
    },
    "3062": {
      "offset": [
        3773,
        3802
      ],
      "op": "AND",
      "path": "5"
    },
    "3063": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3773,
        3802
      ],
      "op": "EQ",
      "path": "5"
    },
    "3064": {
      "offset": [
        3765,
        3803
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC00"
    },
    "3067": {
      "offset": [
        3765,
        3803
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3070": {
      "op": "DUP1"
    },
    "3071": {
      "op": "REVERT"
    },
    "3072": {
      "offset": [
        3765,
        3803
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3079": {
      "op": "SHL"
    },
    "3080": {
      "op": "SUB"
    },
    "3081": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10572,
        10584
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3082": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10572,
        10584
      ],
      "op": "AND",
      "path": "5"
    },
    "3083": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10548,
        10569
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3085": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10572,
        10584
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3086": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10572,
        10584
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3087": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10572,
        10584
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3088": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10572,
        10577
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "3090": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10572,
        10584
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3092": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10572,
        10584
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3093": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10572,
        10584
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3095": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10572,
        10584
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3096": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10572,
        10584
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3097": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10598,
        10620
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3098": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10598,
        10620
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3103": {
      "op": "SHL"
    },
    "3104": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10598,
        10620
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3105": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10598,
        10620
      ],
      "op": "DIV",
      "path": "5"
    },
    "3106": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10598,
        10620
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "3109": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10598,
        10620
      ],
      "op": "AND",
      "path": "5"
    },
    "3110": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10598,
        10625
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3111": {
      "branch": 172,
      "fn": "PolicyManager.updateFee",
      "offset": [
        10598,
        10625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3112": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10598,
        10662
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC41"
    },
    "3115": {
      "branch": 172,
      "fn": "PolicyManager.updateFee",
      "offset": [
        10598,
        10662
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3116": {
      "op": "POP"
    },
    "3117": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10640,
        10662
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3118": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10640,
        10662
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3119": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10640,
        10662
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3126": {
      "op": "SHL"
    },
    "3127": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10640,
        10662
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3128": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10640,
        10662
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3129": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10640,
        10662
      ],
      "op": "DIV",
      "path": "5"
    },
    "3130": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10640,
        10662
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3131": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10640,
        10662
      ],
      "op": "AND",
      "path": "5"
    },
    "3132": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10629,
        10662
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3133": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10629,
        10662
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3134": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10629,
        10662
      ],
      "op": "AND",
      "path": "5"
    },
    "3135": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10629,
        10662
      ],
      "op": "GT",
      "path": "5"
    },
    "3136": {
      "branch": 173,
      "fn": "PolicyManager.updateFee",
      "offset": [
        10629,
        10662
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3137": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10598,
        10662
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3138": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10594,
        10695
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3139": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10594,
        10695
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC4C"
    },
    "3142": {
      "branch": 173,
      "fn": "PolicyManager.updateFee",
      "offset": [
        10594,
        10695
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3143": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10678,
        10685
      ],
      "op": "POP",
      "path": "5",
      "statement": 4
    },
    "3144": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10678,
        10685
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDAC"
    },
    "3147": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10678,
        10685
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3148": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10594,
        10695
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3149": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10720,
        10742
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3150": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10720,
        10742
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3155": {
      "op": "SHL"
    },
    "3156": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10720,
        10742
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3157": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10720,
        10742
      ],
      "op": "DIV",
      "path": "5"
    },
    "3158": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10720,
        10742
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "3161": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10720,
        10742
      ],
      "op": "AND",
      "path": "5"
    },
    "3162": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10745,
        10746
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3164": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10720,
        10746
      ],
      "op": "ADD",
      "path": "5"
    },
    "3165": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10704,
        11406
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3166": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10753,
        10760
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3167": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10748,
        10760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "3170": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10748,
        10760
      ],
      "op": "AND",
      "path": "5"
    },
    "3171": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10748,
        10749
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3172": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10748,
        10760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "3175": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10748,
        10760
      ],
      "op": "AND",
      "path": "5"
    },
    "3176": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10748,
        10760
      ],
      "op": "GT",
      "path": "5"
    },
    "3177": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10704,
        11406
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD6D"
    },
    "3180": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10704,
        11406
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3181": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10796,
        10812
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "3184": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10796,
        10812
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3185": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10796,
        10812
      ],
      "op": "AND",
      "path": "5"
    },
    "3186": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10781,
        10793
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3188": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10796,
        10812
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3189": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10796,
        10812
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3190": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10796,
        10812
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3191": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10796,
        10809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3193": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10796,
        10809
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3194": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10796,
        10809
      ],
      "op": "ADD",
      "path": "5"
    },
    "3195": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10796,
        10812
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3197": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10796,
        10812
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3198": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10796,
        10812
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3200": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10796,
        10812
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3201": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10796,
        10812
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3202": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10796,
        10812
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3209": {
      "op": "SHL"
    },
    "3210": {
      "op": "SUB"
    },
    "3211": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10830,
        10856
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3212": {
      "branch": 174,
      "fn": "PolicyManager.updateFee",
      "offset": [
        10830,
        10856
      ],
      "op": "EQ",
      "path": "5"
    },
    "3213": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10826,
        10967
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3214": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10826,
        10967
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCAD"
    },
    "3217": {
      "branch": 174,
      "fn": "PolicyManager.updateFee",
      "offset": [
        10826,
        10967
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3218": {
      "op": "POP"
    },
    "3219": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10906,
        10922
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 5,
      "value": "0xFFFF"
    },
    "3222": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10906,
        10922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3223": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10906,
        10922
      ],
      "op": "AND",
      "path": "5"
    },
    "3224": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10925,
        10926
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3226": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10906,
        10922
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3227": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10906,
        10922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3228": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10906,
        10922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3229": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10906,
        10919
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3231": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10906,
        10919
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3232": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10906,
        10919
      ],
      "op": "ADD",
      "path": "5"
    },
    "3233": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10906,
        10922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3235": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10906,
        10922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3236": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10906,
        10922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3238": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10906,
        10922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3239": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10906,
        10922
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3240": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10906,
        10926
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3241": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10944,
        10952
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 6,
      "value": "0xD65"
    },
    "3244": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10944,
        10952
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3245": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10826,
        10967
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3246": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11021,
        11022
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3248": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11013,
        11018
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3249": {
      "branch": 175,
      "fn": "PolicyManager.updateFee",
      "offset": [
        11013,
        11022
      ],
      "op": "SLT",
      "path": "5"
    },
    "3250": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11013,
        11056
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3251": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11013,
        11056
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3252": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11013,
        11056
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC3"
    },
    "3255": {
      "branch": 175,
      "fn": "PolicyManager.updateFee",
      "offset": [
        11013,
        11056
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3256": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11013,
        11056
      ],
      "op": "POP",
      "path": "5"
    },
    "3257": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11044,
        11048
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3258": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11044,
        11056
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3260": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11044,
        11056
      ],
      "op": "ADD",
      "path": "5"
    },
    "3261": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11044,
        11056
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3262": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11035,
        11040
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3263": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11034,
        11040
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3265": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11034,
        11040
      ],
      "op": "SUB",
      "path": "5"
    },
    "3266": {
      "branch": 176,
      "fn": "PolicyManager.updateFee",
      "offset": [
        11026,
        11056
      ],
      "op": "GT",
      "path": "5"
    },
    "3267": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11013,
        11056
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3268": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11009,
        11396
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3269": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11009,
        11396
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD32"
    },
    "3272": {
      "branch": 176,
      "fn": "PolicyManager.updateFee",
      "offset": [
        11009,
        11396
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3273": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11103,
        11115
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 7,
      "value": "0x1"
    },
    "3275": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11103,
        11115
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3276": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11103,
        11115
      ],
      "op": "ADD",
      "path": "5"
    },
    "3277": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11103,
        11115
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3278": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11103,
        11115
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3279": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11092
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "3282": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11092
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3283": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11092
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3284": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11092
      ],
      "op": "AND",
      "path": "5"
    },
    "3285": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11092
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3287": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11092
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3288": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11092
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3289": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11092
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3290": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11089
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3292": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11089
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3293": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11089
      ],
      "op": "ADD",
      "path": "5"
    },
    "3294": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11092
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3296": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11092
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3297": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11092
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3298": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11092
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3299": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11092
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3301": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11092
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3302": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11092
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3303": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11092
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3304": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11116
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3305": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11116
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3306": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11116
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3307": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11116
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "3308": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11116
      ],
      "op": "ADD",
      "path": "5"
    },
    "3309": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11116
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3310": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11116
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3311": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11076,
        11116
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3312": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11134,
        11150
      ],
      "op": "SWAP4",
      "path": "5",
      "statement": 8
    },
    "3313": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11134,
        11150
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3314": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 9
    },
    "3315": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3316": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3317": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3318": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "AND",
      "path": "5"
    },
    "3319": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3320": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3321": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3322": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3329": {
      "op": "SHL"
    },
    "3330": {
      "op": "SUB"
    },
    "3331": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "DUP9",
      "path": "5"
    },
    "3332": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "AND",
      "path": "5"
    },
    "3333": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3334": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xD56B4810F75E2913AF1CD9E5F0D99D273958C5A67CFF5EF0E7F298507B688BB8"
    },
    "3367": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3368": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3369": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3370": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "SUB",
      "path": "5"
    },
    "3371": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "ADD",
      "path": "5"
    },
    "3372": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3373": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11173,
        11204
      ],
      "op": "LOG2",
      "path": "5"
    },
    "3374": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11009,
        11396
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD63"
    },
    "3377": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11009,
        11396
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3378": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11009,
        11396
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3379": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11284,
        11296
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 10,
      "value": "0x1"
    },
    "3381": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11284,
        11296
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3382": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11284,
        11296
      ],
      "op": "ADD",
      "path": "5"
    },
    "3383": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11284,
        11296
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3384": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11284,
        11313
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD47"
    },
    "3387": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11284,
        11313
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3388": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11307,
        11312
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3389": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11284,
        11313
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "3394": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11284,
        11306
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25C6"
    },
    "3397": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11284,
        11313
      ],
      "op": "AND",
      "path": "5"
    },
    "3398": {
      "fn": "PolicyManager.updateFee",
      "jump": "i",
      "offset": [
        11284,
        11313
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3399": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11284,
        11313
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3400": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11269,
        11281
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3402": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11269,
        11281
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3403": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11269,
        11281
      ],
      "op": "ADD",
      "path": "5"
    },
    "3404": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11269,
        11313
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3405": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11361,
        11377
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 11,
      "value": "0xFFFF"
    },
    "3408": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11361,
        11377
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3409": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11361,
        11377
      ],
      "op": "AND",
      "path": "5"
    },
    "3410": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11380,
        11381
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3412": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11361,
        11377
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3413": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11361,
        11377
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3414": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11361,
        11377
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3415": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11361,
        11374
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3417": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11361,
        11374
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3418": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11361,
        11374
      ],
      "op": "ADD",
      "path": "5"
    },
    "3419": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11361,
        11377
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3421": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11361,
        11377
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3422": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11361,
        11377
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3424": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11361,
        11377
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3425": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11361,
        11377
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3426": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11361,
        11381
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3427": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11009,
        11396
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3428": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10704,
        11406
      ],
      "op": "POP",
      "path": "5"
    },
    "3429": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10704,
        11406
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3430": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10762,
        10765
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 12,
      "value": "0x1"
    },
    "3432": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10762,
        10765
      ],
      "op": "ADD",
      "path": "5"
    },
    "3433": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10704,
        11406
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC5D"
    },
    "3436": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10704,
        11406
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3437": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10704,
        11406
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3438": {
      "op": "POP"
    },
    "3439": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11415,
        11447
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 13
    },
    "3440": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11415,
        11447
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3443": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11477,
        11489
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 14
    },
    "3444": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11477,
        11489
      ],
      "op": "ADD",
      "path": "5"
    },
    "3445": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11477,
        11489
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3452": {
      "op": "SHL"
    },
    "3453": {
      "op": "SUB"
    },
    "3454": {
      "op": "NOT"
    },
    "3455": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3460": {
      "op": "SHL"
    },
    "3461": {
      "op": "NOT"
    },
    "3462": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11415,
        11447
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3463": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11415,
        11447
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3464": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11415,
        11447
      ],
      "op": "AND",
      "path": "5"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3469": {
      "op": "SHL"
    },
    "3470": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11415,
        11447
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "3473": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11415,
        11447
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3474": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11415,
        11447
      ],
      "op": "AND",
      "path": "5"
    },
    "3475": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11415,
        11447
      ],
      "op": "MUL",
      "path": "5"
    },
    "3476": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11415,
        11447
      ],
      "op": "OR",
      "path": "5"
    },
    "3477": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11457,
        11490
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3478": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11457,
        11490
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3479": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11457,
        11490
      ],
      "op": "AND",
      "path": "5"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3486": {
      "op": "SHL"
    },
    "3487": {
      "op": "SUB"
    },
    "3488": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11457,
        11490
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3489": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11457,
        11490
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3490": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11457,
        11490
      ],
      "op": "AND",
      "path": "5"
    },
    "3491": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11457,
        11490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3492": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11457,
        11490
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3493": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11457,
        11490
      ],
      "op": "ADD",
      "path": "5"
    },
    "3494": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11457,
        11490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3495": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11457,
        11490
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3496": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11457,
        11490
      ],
      "op": "AND",
      "path": "5"
    },
    "3497": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11457,
        11490
      ],
      "op": "OR",
      "path": "5"
    },
    "3498": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11457,
        11490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3499": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        11457,
        11490
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3500": {
      "offset": [
        3813,
        3814
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3501": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "POP",
      "path": "5"
    },
    "3502": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        10460,
        11497
      ],
      "op": "POP",
      "path": "5"
    },
    "3503": {
      "fn": "PolicyManager.updateFee",
      "jump": "o",
      "offset": [
        10460,
        11497
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3504": {
      "offset": [
        3008,
        3048
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3505": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x0"
    },
    "3538": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        3008,
        3048
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3539": {
      "fn": "PolicyManager.updateFee",
      "jump": "o",
      "offset": [
        3008,
        3048
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3540": {
      "offset": [
        973,
        1002
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3541": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "3543": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3550": {
      "op": "SHL"
    },
    "3551": {
      "op": "SUB"
    },
    "3552": {
      "offset": [
        973,
        1002
      ],
      "op": "AND",
      "path": "15"
    },
    "3553": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        973,
        1002
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3554": {
      "fn": "PolicyManager.updateFee",
      "jump": "o",
      "offset": [
        973,
        1002
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3555": {
      "offset": [
        2886,
        2958
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3562": {
      "op": "SHL"
    },
    "3563": {
      "op": "SUB"
    },
    "3564": {
      "offset": [
        2886,
        2958
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3565": {
      "fn": "PolicyManager.updateFee",
      "jump": "o",
      "offset": [
        2886,
        2958
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3566": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3567": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11856,
        11866
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3568": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11807,
        11814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3570": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11850,
        11867
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3571": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11850,
        11867
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3572": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11850,
        11867
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3573": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11850,
        11855
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "3575": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11850,
        11867
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3577": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11850,
        11867
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3578": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11850,
        11867
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3580": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11850,
        11867
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3581": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11850,
        11867
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3582": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11891,
        11899
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3583": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11891,
        11899
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3590": {
      "op": "SHL"
    },
    "3591": {
      "op": "SUB"
    },
    "3592": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11891,
        11899
      ],
      "op": "AND",
      "path": "5"
    },
    "3593": {
      "branch": 177,
      "fn": "PolicyManager.withdraw",
      "offset": [
        11917,
        11925
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 15
    },
    "3594": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11909,
        11926
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE12"
    },
    "3597": {
      "branch": 177,
      "fn": "PolicyManager.withdraw",
      "offset": [
        11909,
        11926
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3600": {
      "op": "DUP1"
    },
    "3601": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11909,
        11926
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3602": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11909,
        11926
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3603": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11936,
        11948
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 16
    },
    "3604": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11936,
        11948
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3611": {
      "op": "SHL"
    },
    "3612": {
      "op": "SUB"
    },
    "3613": {
      "op": "NOT"
    },
    "3614": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11936,
        11948
      ],
      "op": "AND",
      "path": "5"
    },
    "3615": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11936,
        11948
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3616": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11936,
        11948
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3617": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11958,
        11983
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 17,
      "value": "0xE39"
    },
    "3620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3626": {
      "op": "SHL"
    },
    "3627": {
      "op": "SUB"
    },
    "3628": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11958,
        11978
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3629": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11958,
        11978
      ],
      "op": "AND",
      "path": "5"
    },
    "3630": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11979,
        11982
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3631": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11958,
        11983
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "3636": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11958,
        11978
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25FA"
    },
    "3639": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11958,
        11983
      ],
      "op": "AND",
      "path": "5"
    },
    "3640": {
      "fn": "PolicyManager.withdraw",
      "jump": "i",
      "offset": [
        11958,
        11983
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3641": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11958,
        11983
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3642": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 18,
      "value": "0x40"
    },
    "3644": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3645": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3646": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3647": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3648": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3649": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3650": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3657": {
      "op": "SHL"
    },
    "3658": {
      "op": "SUB"
    },
    "3659": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3660": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "AND",
      "path": "5"
    },
    "3661": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3662": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        12008,
        12018
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3663": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        12008,
        12018
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3664": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xD1C19FBCD4551A5EDFB66D43D2E337C04837AFDA3482B42BDF569A8FCCDAE5FB"
    },
    "3697": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3698": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3699": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3700": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "SUB",
      "path": "5"
    },
    "3701": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3703": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "ADD",
      "path": "5"
    },
    "3704": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3705": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11998,
        12036
      ],
      "op": "LOG3",
      "path": "5"
    },
    "3706": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        12053,
        12056
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 19
    },
    "3707": {
      "op": "POP"
    },
    "3708": {
      "op": "POP"
    },
    "3709": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3710": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3711": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3712": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        11745,
        12063
      ],
      "op": "POP",
      "path": "5"
    },
    "3713": {
      "fn": "PolicyManager.withdraw",
      "jump": "o",
      "offset": [
        11745,
        12063
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3714": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9632,
        9840
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3721": {
      "op": "SHL"
    },
    "3722": {
      "op": "SUB"
    },
    "3723": {
      "op": "NOT"
    },
    "3724": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9739,
        9758
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3725": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9739,
        9758
      ],
      "op": "AND",
      "path": "5"
    },
    "3726": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9696,
        9703
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3728": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9739,
        9758
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3729": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9739,
        9758
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3730": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9739,
        9758
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3731": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9739,
        9747
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3733": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9739,
        9758
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3735": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9739,
        9758
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3736": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9739,
        9758
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3738": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9739,
        9758
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3739": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9739,
        9758
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3740": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9775,
        9787
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 20,
      "value": "0x1"
    },
    "3742": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9775,
        9787
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3743": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9775,
        9787
      ],
      "op": "ADD",
      "path": "5"
    },
    "3744": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9775,
        9787
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3751": {
      "op": "SHL"
    },
    "3752": {
      "op": "SUB"
    },
    "3753": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9775,
        9787
      ],
      "op": "AND",
      "path": "5"
    },
    "3754": {
      "branch": 178,
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9775,
        9801
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3755": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9775,
        9833
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEC1"
    },
    "3758": {
      "branch": 178,
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9775,
        9833
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3759": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9821,
        9833
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3761": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9821,
        9833
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3762": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9821,
        9833
      ],
      "op": "ADD",
      "path": "5"
    },
    "3763": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9821,
        9833
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3770": {
      "op": "SHL"
    },
    "3771": {
      "op": "SUB"
    },
    "3772": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9821,
        9833
      ],
      "op": "AND",
      "path": "5"
    },
    "3773": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9775,
        9833
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xED2"
    },
    "3776": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9775,
        9833
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3777": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9775,
        9833
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3778": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9804,
        9818
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3779": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9804,
        9818
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3780": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9804,
        9818
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "3783": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9804,
        9818
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3784": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9804,
        9818
      ],
      "op": "DIV",
      "path": "5"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3791": {
      "op": "SHL"
    },
    "3792": {
      "op": "SUB"
    },
    "3793": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9804,
        9818
      ],
      "op": "AND",
      "path": "5"
    },
    "3794": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9775,
        9833
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3795": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9768,
        9833
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3796": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        9632,
        9840
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3797": {
      "op": "POP"
    },
    "3798": {
      "op": "POP"
    },
    "3799": {
      "op": "POP"
    },
    "3800": {
      "fn": "PolicyManager.getPolicyOwner",
      "jump": "o",
      "offset": [
        9632,
        9840
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3801": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3802": {
      "offset": [
        864,
        873
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xEE1"
    },
    "3805": {
      "offset": [
        864,
        871
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1875"
    },
    "3808": {
      "jump": "i",
      "offset": [
        864,
        873
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3809": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        864,
        873
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3810": {
      "offset": [
        856,
        874
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xEEA"
    },
    "3813": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3816": {
      "op": "DUP1"
    },
    "3817": {
      "op": "REVERT"
    },
    "3818": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3819": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4725,
        4733
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 21
    },
    "3820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3826": {
      "op": "SHL"
    },
    "3827": {
      "op": "SUB"
    },
    "3828": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4717,
        4733
      ],
      "op": "AND",
      "path": "5"
    },
    "3829": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4717,
        4721
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3836": {
      "op": "SHL"
    },
    "3837": {
      "op": "SUB"
    },
    "3838": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4717,
        4733
      ],
      "op": "AND",
      "path": "5"
    },
    "3839": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4717,
        4733
      ],
      "op": "GT",
      "path": "5"
    },
    "3840": {
      "branch": 179,
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4717,
        4733
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3841": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4717,
        4753
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3842": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4717,
        4753
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3843": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4717,
        4753
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF1E"
    },
    "3846": {
      "branch": 179,
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4717,
        4753
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3847": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4717,
        4753
      ],
      "op": "POP",
      "path": "5"
    },
    "3848": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4749,
        4753
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3855": {
      "op": "SHL"
    },
    "3856": {
      "op": "SUB"
    },
    "3857": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4737,
        4753
      ],
      "op": "AND",
      "path": "5"
    },
    "3858": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4737,
        4745
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3865": {
      "op": "SHL"
    },
    "3866": {
      "op": "SUB"
    },
    "3867": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4737,
        4753
      ],
      "op": "AND",
      "path": "5"
    },
    "3868": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4737,
        4753
      ],
      "op": "GT",
      "path": "5"
    },
    "3869": {
      "branch": 180,
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4737,
        4753
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3870": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4717,
        4753
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3871": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4709,
        4754
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF27"
    },
    "3874": {
      "branch": 180,
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4709,
        4754
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3877": {
      "op": "DUP1"
    },
    "3878": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4709,
        4754
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3879": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4709,
        4754
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3880": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 22,
      "value": "0x40"
    },
    "3882": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3883": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3884": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "3886": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3887": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3888": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "ADD",
      "path": "5"
    },
    "3889": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3890": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3897": {
      "op": "SHL"
    },
    "3898": {
      "op": "SUB"
    },
    "3899": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3900": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3901": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "AND",
      "path": "5"
    },
    "3902": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3903": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3904": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3905": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3906": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3907": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "AND",
      "path": "5"
    },
    "3908": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3910": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3911": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3912": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "ADD",
      "path": "5"
    },
    "3913": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3914": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3915": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3916": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3917": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3918": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "AND",
      "path": "5"
    },
    "3919": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "3920": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3921": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "ADD",
      "path": "5"
    },
    "3922": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3923": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3924": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4779,
        4806
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3925": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4776
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "3927": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3928": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3935": {
      "op": "SHL"
    },
    "3936": {
      "op": "SUB"
    },
    "3937": {
      "op": "NOT"
    },
    "3938": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3939": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3940": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "AND",
      "path": "5"
    },
    "3941": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3942": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "OR",
      "path": "5"
    },
    "3943": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3944": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "3945": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "AND",
      "path": "5"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3950": {
      "op": "SHL"
    },
    "3951": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3952": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "MUL",
      "path": "5"
    },
    "3953": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "OR",
      "path": "5"
    },
    "3954": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3955": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3956": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "3958": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3959": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3960": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3961": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3962": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "AND",
      "path": "5"
    },
    "3963": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3964": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "OR",
      "path": "5"
    },
    "3965": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3966": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3967": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4764,
        4806
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3968": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "DUP6",
      "path": "5",
      "statement": 23
    },
    "3969": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3970": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3971": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3972": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3973": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3974": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3975": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "ADD",
      "path": "5"
    },
    "3976": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3977": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3978": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3979": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3980": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3981": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3982": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "ADD",
      "path": "5"
    },
    "3983": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3984": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3985": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3986": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3987": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3988": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3989": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4837,
        4847
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3990": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4837,
        4847
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3991": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x3A93FB7C2385D29E9693A6EDCD81C4CEE090101CB783DC2F17A7814B79A2ECDC"
    },
    "4024": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4025": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4026": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4027": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "SUB",
      "path": "5"
    },
    "4028": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "ADD",
      "path": "5"
    },
    "4029": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4030": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4821,
        4870
      ],
      "op": "LOG2",
      "path": "5"
    },
    "4031": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "POP",
      "path": "5"
    },
    "4032": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "POP",
      "path": "5"
    },
    "4033": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        4609,
        4877
      ],
      "op": "POP",
      "path": "5"
    },
    "4034": {
      "fn": "PolicyManager.setFeeRateRange",
      "jump": "o",
      "offset": [
        4609,
        4877
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4035": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4036": {
      "fn": "PolicyManager.refund",
      "offset": [
        22085,
        22104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4044": {
      "op": "SHL"
    },
    "4045": {
      "op": "SUB"
    },
    "4046": {
      "fn": "PolicyManager.refund",
      "offset": [
        22128,
        22150
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 24
    },
    "4047": {
      "branch": 181,
      "fn": "PolicyManager.refund",
      "offset": [
        22128,
        22150
      ],
      "op": "AND",
      "path": "5"
    },
    "4048": {
      "fn": "PolicyManager.refund",
      "offset": [
        22120,
        22151
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFD8"
    },
    "4051": {
      "branch": 181,
      "fn": "PolicyManager.refund",
      "offset": [
        22120,
        22151
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4054": {
      "op": "DUP1"
    },
    "4055": {
      "fn": "PolicyManager.refund",
      "offset": [
        22120,
        22151
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4056": {
      "fn": "PolicyManager.refund",
      "offset": [
        22120,
        22151
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4063": {
      "op": "SHL"
    },
    "4064": {
      "op": "SUB"
    },
    "4065": {
      "op": "NOT"
    },
    "4066": {
      "fn": "PolicyManager.refund",
      "offset": [
        22185,
        22204
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4067": {
      "fn": "PolicyManager.refund",
      "offset": [
        22185,
        22204
      ],
      "op": "AND",
      "path": "5"
    },
    "4068": {
      "fn": "PolicyManager.refund",
      "offset": [
        22161,
        22182
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4070": {
      "fn": "PolicyManager.refund",
      "offset": [
        22185,
        22204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4071": {
      "fn": "PolicyManager.refund",
      "offset": [
        22185,
        22204
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4072": {
      "fn": "PolicyManager.refund",
      "offset": [
        22185,
        22204
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4073": {
      "fn": "PolicyManager.refund",
      "offset": [
        22185,
        22193
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4075": {
      "fn": "PolicyManager.refund",
      "offset": [
        22185,
        22204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4077": {
      "fn": "PolicyManager.refund",
      "offset": [
        22185,
        22204
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4078": {
      "fn": "PolicyManager.refund",
      "offset": [
        22185,
        22204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4080": {
      "fn": "PolicyManager.refund",
      "offset": [
        22185,
        22204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4081": {
      "fn": "PolicyManager.refund",
      "offset": [
        22185,
        22204
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4082": {
      "fn": "PolicyManager.refund",
      "offset": [
        22222,
        22234
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 25,
      "value": "0x1"
    },
    "4084": {
      "fn": "PolicyManager.refund",
      "offset": [
        22222,
        22234
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4085": {
      "fn": "PolicyManager.refund",
      "offset": [
        22222,
        22234
      ],
      "op": "ADD",
      "path": "5"
    },
    "4086": {
      "fn": "PolicyManager.refund",
      "offset": [
        22222,
        22234
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4093": {
      "op": "SHL"
    },
    "4094": {
      "op": "SUB"
    },
    "4095": {
      "fn": "PolicyManager.refund",
      "offset": [
        22222,
        22234
      ],
      "op": "AND",
      "path": "5"
    },
    "4096": {
      "fn": "PolicyManager.refund",
      "offset": [
        22238,
        22248
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4097": {
      "fn": "PolicyManager.refund",
      "offset": [
        22222,
        22248
      ],
      "op": "EQ",
      "path": "5"
    },
    "4098": {
      "branch": 182,
      "fn": "PolicyManager.refund",
      "offset": [
        22222,
        22248
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4099": {
      "fn": "PolicyManager.refund",
      "offset": [
        22222,
        22280
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x101A"
    },
    "4102": {
      "branch": 182,
      "fn": "PolicyManager.refund",
      "offset": [
        22222,
        22280
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4103": {
      "op": "POP"
    },
    "4104": {
      "fn": "PolicyManager.refund",
      "offset": [
        22252,
        22266
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4105": {
      "fn": "PolicyManager.refund",
      "offset": [
        22252,
        22266
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4106": {
      "fn": "PolicyManager.refund",
      "offset": [
        22252,
        22266
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "4109": {
      "fn": "PolicyManager.refund",
      "offset": [
        22252,
        22266
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4110": {
      "fn": "PolicyManager.refund",
      "offset": [
        22252,
        22266
      ],
      "op": "DIV",
      "path": "5"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4117": {
      "op": "SHL"
    },
    "4118": {
      "op": "SUB"
    },
    "4119": {
      "fn": "PolicyManager.refund",
      "offset": [
        22252,
        22266
      ],
      "op": "AND",
      "path": "5"
    },
    "4120": {
      "fn": "PolicyManager.refund",
      "offset": [
        22270,
        22280
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4121": {
      "branch": 183,
      "fn": "PolicyManager.refund",
      "offset": [
        22252,
        22280
      ],
      "op": "EQ",
      "path": "5"
    },
    "4122": {
      "fn": "PolicyManager.refund",
      "offset": [
        22222,
        22280
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4123": {
      "fn": "PolicyManager.refund",
      "offset": [
        22214,
        22281
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1023"
    },
    "4126": {
      "branch": 183,
      "fn": "PolicyManager.refund",
      "offset": [
        22214,
        22281
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4129": {
      "op": "DUP1"
    },
    "4130": {
      "fn": "PolicyManager.refund",
      "offset": [
        22214,
        22281
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4131": {
      "fn": "PolicyManager.refund",
      "offset": [
        22214,
        22281
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4132": {
      "fn": "PolicyManager.refund",
      "offset": [
        22298,
        22337
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 26,
      "value": "0x102F"
    },
    "4135": {
      "fn": "PolicyManager.refund",
      "offset": [
        22313,
        22322
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4136": {
      "fn": "PolicyManager.refund",
      "offset": [
        22324,
        22329
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4137": {
      "fn": "PolicyManager.refund",
      "offset": [
        22331,
        22336
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4139": {
      "fn": "PolicyManager.refund",
      "offset": [
        22298,
        22312
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20C8"
    },
    "4142": {
      "fn": "PolicyManager.refund",
      "jump": "i",
      "offset": [
        22298,
        22337
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4143": {
      "fn": "PolicyManager.refund",
      "offset": [
        22298,
        22337
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4144": {
      "fn": "PolicyManager.refund",
      "offset": [
        22291,
        22337
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4145": {
      "fn": "PolicyManager.refund",
      "offset": [
        22291,
        22337
      ],
      "op": "POP",
      "path": "5"
    },
    "4146": {
      "fn": "PolicyManager.refund",
      "offset": [
        22291,
        22337
      ],
      "op": "POP",
      "path": "5"
    },
    "4147": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4148": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4149": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4150": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "POP",
      "path": "5"
    },
    "4151": {
      "fn": "PolicyManager.refund",
      "offset": [
        22009,
        22344
      ],
      "op": "POP",
      "path": "5"
    },
    "4152": {
      "fn": "PolicyManager.refund",
      "jump": "o",
      "offset": [
        22009,
        22344
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4153": {
      "offset": [
        3152,
        3177
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4154": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "4156": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4157": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "4159": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4166": {
      "op": "SHL"
    },
    "4167": {
      "op": "SUB"
    },
    "4168": {
      "offset": [
        3152,
        3177
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4169": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4170": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "AND",
      "path": "5"
    },
    "4171": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4176": {
      "op": "SHL"
    },
    "4177": {
      "offset": [
        3152,
        3177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4178": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "DIV",
      "path": "5"
    },
    "4179": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4180": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "AND",
      "path": "5"
    },
    "4181": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4182": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "AND",
      "path": "5"
    },
    "4183": {
      "fn": "PolicyManager.refund",
      "offset": [
        3152,
        3177
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4184": {
      "fn": "PolicyManager.refund",
      "jump": "o",
      "offset": [
        3152,
        3177
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4185": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23081,
        23226
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4192": {
      "op": "SHL"
    },
    "4193": {
      "op": "SUB"
    },
    "4194": {
      "op": "NOT"
    },
    "4195": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23180,
        23199
      ],
      "op": "AND",
      "path": "5",
      "statement": 27
    },
    "4196": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23154,
        23161
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4198": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23180,
        23199
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4199": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23180,
        23199
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4200": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23180,
        23199
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4201": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23180,
        23188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4203": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23180,
        23199
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4205": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23180,
        23199
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4206": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23180,
        23199
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4208": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23180,
        23199
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4209": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23180,
        23199
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4210": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23180,
        23212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "4212": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23180,
        23212
      ],
      "op": "ADD",
      "path": "5"
    },
    "4213": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23180,
        23219
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4214": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        23180,
        23219
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4215": {
      "fn": "PolicyManager.getArrangementsLength",
      "jump": "o",
      "offset": [
        23081,
        23226
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4216": {
      "offset": [
        3055,
        3098
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4217": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4219": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4221": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4222": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4223": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4224": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4226": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4227": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4228": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4229": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4231": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4232": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4233": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4234": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4235": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4236": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4238": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4239": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "4240": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4241": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4243": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4244": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "4245": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4246": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4248": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4249": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "4250": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4251": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4252": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4253": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "4254": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4255": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "4257": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4258": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "4259": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4260": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "4262": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4263": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "4264": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4265": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "4267": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4268": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "4269": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "ADD",
      "path": "5"
    },
    "4270": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4271": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4273": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4274": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "AND",
      "path": "5"
    },
    "4275": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4282": {
      "op": "SHL"
    },
    "4283": {
      "op": "SUB"
    },
    "4284": {
      "offset": [
        3055,
        3098
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "4287": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4288": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "4289": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DIV",
      "path": "5"
    },
    "4290": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4291": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "AND",
      "path": "5"
    },
    "4292": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "4293": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "4294": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4295": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "4296": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "AND",
      "path": "5"
    },
    "4297": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4304": {
      "op": "SHL"
    },
    "4305": {
      "op": "SUB"
    },
    "4306": {
      "offset": [
        3055,
        3098
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4307": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "AND",
      "path": "5"
    },
    "4308": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4315": {
      "op": "SHL"
    },
    "4316": {
      "op": "SUB"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4321": {
      "op": "SHL"
    },
    "4322": {
      "offset": [
        3055,
        3098
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4323": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DIV",
      "path": "5"
    },
    "4324": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4325": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "AND",
      "path": "5"
    },
    "4326": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4331": {
      "op": "SHL"
    },
    "4332": {
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4333": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DIV",
      "path": "5"
    },
    "4334": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "AND",
      "path": "5"
    },
    "4335": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4336": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4337": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4338": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4339": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4340": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3055,
        3098
      ],
      "op": "DUP12",
      "path": "5"
    },
    "4341": {
      "fn": "PolicyManager.getArrangementsLength",
      "jump": "o",
      "offset": [
        3055,
        3098
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4342": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4343": {
      "offset": [
        864,
        873
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x10FE"
    },
    "4346": {
      "offset": [
        864,
        871
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1875"
    },
    "4349": {
      "jump": "i",
      "offset": [
        864,
        873
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4350": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        864,
        873
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4351": {
      "offset": [
        856,
        874
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1107"
    },
    "4354": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4357": {
      "op": "DUP1"
    },
    "4358": {
      "op": "REVERT"
    },
    "4359": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4360": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1446,
        1447
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 28,
      "value": "0x0"
    },
    "4362": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4363": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4364": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4366": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4373": {
      "op": "SHL"
    },
    "4374": {
      "op": "SUB"
    },
    "4375": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4376": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4377": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "AND",
      "path": "21"
    },
    "4378": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4379": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4412": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4413": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1446,
        1447
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4414": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1446,
        1447
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4415": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "LOG3",
      "path": "21"
    },
    "4416": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1476,
        1477
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 29,
      "value": "0x0"
    },
    "4418": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4419": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4426": {
      "op": "SHL"
    },
    "4427": {
      "op": "SUB"
    },
    "4428": {
      "op": "NOT"
    },
    "4429": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "AND",
      "path": "21"
    },
    "4430": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4431": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "4432": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1348,
        1485
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4433": {
      "fn": "PolicyManager.register",
      "offset": [
        4123,
        4385
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4434": {
      "offset": [
        3773,
        3783
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4441": {
      "op": "SHL"
    },
    "4442": {
      "op": "SUB"
    },
    "4443": {
      "offset": [
        3795,
        3801
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x0"
    },
    "4476": {
      "offset": [
        3773,
        3802
      ],
      "op": "AND",
      "path": "5"
    },
    "4477": {
      "fn": "PolicyManager.register",
      "offset": [
        3773,
        3802
      ],
      "op": "EQ",
      "path": "5"
    },
    "4478": {
      "offset": [
        3765,
        3803
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1186"
    },
    "4481": {
      "offset": [
        3765,
        3803
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4484": {
      "op": "DUP1"
    },
    "4485": {
      "op": "REVERT"
    },
    "4486": {
      "offset": [
        3765,
        3803
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4493": {
      "op": "SHL"
    },
    "4494": {
      "op": "SUB"
    },
    "4495": {
      "fn": "PolicyManager.register",
      "offset": [
        4238,
        4250
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4496": {
      "fn": "PolicyManager.register",
      "offset": [
        4238,
        4250
      ],
      "op": "AND",
      "path": "5"
    },
    "4497": {
      "fn": "PolicyManager.register",
      "offset": [
        4210,
        4235
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4499": {
      "fn": "PolicyManager.register",
      "offset": [
        4238,
        4250
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4500": {
      "fn": "PolicyManager.register",
      "offset": [
        4238,
        4250
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4501": {
      "fn": "PolicyManager.register",
      "offset": [
        4238,
        4250
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4502": {
      "fn": "PolicyManager.register",
      "offset": [
        4238,
        4243
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "4504": {
      "fn": "PolicyManager.register",
      "offset": [
        4238,
        4250
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4506": {
      "fn": "PolicyManager.register",
      "offset": [
        4238,
        4250
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4507": {
      "fn": "PolicyManager.register",
      "offset": [
        4238,
        4250
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4509": {
      "fn": "PolicyManager.register",
      "offset": [
        4238,
        4250
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4510": {
      "fn": "PolicyManager.register",
      "offset": [
        4238,
        4250
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4511": {
      "fn": "PolicyManager.register",
      "offset": [
        4268,
        4294
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 30
    },
    "4512": {
      "fn": "PolicyManager.register",
      "offset": [
        4268,
        4294
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4517": {
      "op": "SHL"
    },
    "4518": {
      "fn": "PolicyManager.register",
      "offset": [
        4268,
        4294
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4519": {
      "fn": "PolicyManager.register",
      "offset": [
        4268,
        4294
      ],
      "op": "DIV",
      "path": "5"
    },
    "4520": {
      "fn": "PolicyManager.register",
      "offset": [
        4268,
        4294
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "4523": {
      "fn": "PolicyManager.register",
      "offset": [
        4268,
        4294
      ],
      "op": "AND",
      "path": "5"
    },
    "4524": {
      "branch": 184,
      "fn": "PolicyManager.register",
      "offset": [
        4268,
        4299
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4525": {
      "fn": "PolicyManager.register",
      "offset": [
        4268,
        4331
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4526": {
      "fn": "PolicyManager.register",
      "offset": [
        4268,
        4331
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4527": {
      "fn": "PolicyManager.register",
      "offset": [
        4268,
        4331
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11C6"
    },
    "4530": {
      "branch": 184,
      "fn": "PolicyManager.register",
      "offset": [
        4268,
        4331
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4531": {
      "fn": "PolicyManager.register",
      "offset": [
        4268,
        4331
      ],
      "op": "POP",
      "path": "5"
    },
    "4532": {
      "fn": "PolicyManager.register",
      "offset": [
        4313,
        4331
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11BB"
    },
    "4535": {
      "fn": "PolicyManager.register",
      "offset": [
        4313,
        4329
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB4D"
    },
    "4538": {
      "fn": "PolicyManager.register",
      "jump": "i",
      "offset": [
        4313,
        4331
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4539": {
      "fn": "PolicyManager.register",
      "offset": [
        4313,
        4331
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4540": {
      "fn": "PolicyManager.register",
      "offset": [
        4303,
        4331
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "4543": {
      "fn": "PolicyManager.register",
      "offset": [
        4303,
        4331
      ],
      "op": "AND",
      "path": "5"
    },
    "4544": {
      "fn": "PolicyManager.register",
      "offset": [
        4303,
        4310
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4545": {
      "fn": "PolicyManager.register",
      "offset": [
        4303,
        4331
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "4548": {
      "fn": "PolicyManager.register",
      "offset": [
        4303,
        4331
      ],
      "op": "AND",
      "path": "5"
    },
    "4549": {
      "branch": 185,
      "fn": "PolicyManager.register",
      "offset": [
        4303,
        4331
      ],
      "op": "LT",
      "path": "5"
    },
    "4550": {
      "fn": "PolicyManager.register",
      "offset": [
        4268,
        4331
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4551": {
      "fn": "PolicyManager.register",
      "offset": [
        4260,
        4332
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11CF"
    },
    "4554": {
      "branch": 185,
      "fn": "PolicyManager.register",
      "offset": [
        4260,
        4332
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4557": {
      "op": "DUP1"
    },
    "4558": {
      "fn": "PolicyManager.register",
      "offset": [
        4260,
        4332
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4559": {
      "fn": "PolicyManager.register",
      "offset": [
        4260,
        4332
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4560": {
      "fn": "PolicyManager.register",
      "offset": [
        4342,
        4378
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 31
    },
    "4561": {
      "fn": "PolicyManager.register",
      "offset": [
        4342,
        4378
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4562": {
      "fn": "PolicyManager.register",
      "offset": [
        4342,
        4378
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "4565": {
      "fn": "PolicyManager.register",
      "offset": [
        4342,
        4378
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4566": {
      "fn": "PolicyManager.register",
      "offset": [
        4342,
        4378
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4567": {
      "fn": "PolicyManager.register",
      "offset": [
        4342,
        4378
      ],
      "op": "AND",
      "path": "5"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4572": {
      "op": "SHL"
    },
    "4573": {
      "fn": "PolicyManager.register",
      "offset": [
        4342,
        4378
      ],
      "op": "MUL",
      "path": "5"
    },
    "4574": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4579": {
      "op": "SHL"
    },
    "4580": {
      "op": "NOT"
    },
    "4581": {
      "fn": "PolicyManager.register",
      "offset": [
        4342,
        4378
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4582": {
      "fn": "PolicyManager.register",
      "offset": [
        4342,
        4378
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4583": {
      "fn": "PolicyManager.register",
      "offset": [
        4342,
        4378
      ],
      "op": "AND",
      "path": "5"
    },
    "4584": {
      "fn": "PolicyManager.register",
      "offset": [
        4342,
        4378
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4585": {
      "fn": "PolicyManager.register",
      "offset": [
        4342,
        4378
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4586": {
      "fn": "PolicyManager.register",
      "offset": [
        4342,
        4378
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4587": {
      "fn": "PolicyManager.register",
      "offset": [
        4342,
        4378
      ],
      "op": "OR",
      "path": "5"
    },
    "4588": {
      "fn": "PolicyManager.register",
      "offset": [
        4342,
        4378
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4589": {
      "fn": "PolicyManager.register",
      "offset": [
        4342,
        4378
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4590": {
      "op": "POP"
    },
    "4591": {
      "fn": "PolicyManager.register",
      "jump": "o",
      "offset": [
        4123,
        4385
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4592": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4599": {
      "op": "SHL"
    },
    "4600": {
      "op": "SUB"
    },
    "4601": {
      "op": "NOT"
    },
    "4602": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6955,
        6974
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4603": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6955,
        6974
      ],
      "op": "AND",
      "path": "5"
    },
    "4604": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6931,
        6952
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4606": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6955,
        6974
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4607": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6955,
        6974
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4608": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6955,
        6974
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4609": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6955,
        6963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4611": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6955,
        6974
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4613": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6955,
        6974
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4614": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6955,
        6974
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4616": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6955,
        6974
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4617": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6955,
        6974
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4618": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6955,
        6974
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4619": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7036
      ],
      "op": "ISZERO",
      "path": "5",
      "statement": 32
    },
    "4620": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7036
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4621": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7036
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4622": {
      "branch": 186,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7036
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4623": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7071
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1223"
    },
    "4626": {
      "branch": 186,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7071
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4627": {
      "op": "POP"
    },
    "4628": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7052,
        7066
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4630": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7052,
        7066
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4631": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7052,
        7066
      ],
      "op": "ADD",
      "path": "5"
    },
    "4632": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7052,
        7066
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4637": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4639": {
      "op": "SHL"
    },
    "4640": {
      "op": "SUB"
    },
    "4641": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7052,
        7066
      ],
      "op": "AND",
      "path": "5"
    },
    "4642": {
      "branch": 187,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7052,
        7071
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4643": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7071
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4644": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7103
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4645": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7103
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4646": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7103
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1231"
    },
    "4649": {
      "branch": 187,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7103
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4650": {
      "op": "POP"
    },
    "4651": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7088,
        7103
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4652": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7088,
        7103
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4653": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7088,
        7103
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4655": {
      "branch": 188,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7088,
        7103
      ],
      "op": "AND",
      "path": "5"
    },
    "4656": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7087,
        7103
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4657": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7103
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4658": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7150
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4659": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7150
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4660": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7150
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1245"
    },
    "4663": {
      "branch": 188,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7150
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4664": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7150
      ],
      "op": "POP",
      "path": "5"
    },
    "4665": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7135,
        7150
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "4666": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7119,
        7132
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4673": {
      "op": "SHL"
    },
    "4674": {
      "op": "SUB"
    },
    "4675": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7119,
        7150
      ],
      "op": "AND",
      "path": "5"
    },
    "4676": {
      "branch": 189,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7119,
        7150
      ],
      "op": "GT",
      "path": "5"
    },
    "4677": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7150
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4678": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7179
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4679": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7179
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4680": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7179
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1251"
    },
    "4683": {
      "branch": 189,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7179
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4684": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7179
      ],
      "op": "POP",
      "path": "5"
    },
    "4685": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7178,
        7179
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4687": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7166,
        7175
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "4688": {
      "branch": 190,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7166,
        7179
      ],
      "op": "GT",
      "path": "5"
    },
    "4689": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7005,
        7179
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4690": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6984,
        7189
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x125A"
    },
    "4693": {
      "branch": 190,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6984,
        7189
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4696": {
      "op": "DUP1"
    },
    "4697": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6984,
        7189
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4698": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6984,
        7189
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4705": {
      "op": "SHL"
    },
    "4706": {
      "op": "SUB"
    },
    "4707": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7207,
        7228
      ],
      "op": "SELFBALANCE",
      "path": "5",
      "statement": 33
    },
    "4708": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7207,
        7243
      ],
      "op": "GT",
      "path": "5"
    },
    "4709": {
      "branch": 191,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7207,
        7243
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4710": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7199,
        7244
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x126E"
    },
    "4713": {
      "branch": 191,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7199,
        7244
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4716": {
      "op": "DUP1"
    },
    "4717": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7199,
        7244
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4718": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7199,
        7244
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4719": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7254,
        7274
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4721": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7277,
        7295
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1278"
    },
    "4724": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7277,
        7293
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB4D"
    },
    "4727": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        7277,
        7295
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4728": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7277,
        7295
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4729": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7254,
        7295
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4730": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7254,
        7295
      ],
      "op": "POP",
      "path": "5"
    },
    "4731": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7305,
        7321
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4733": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7347,
        7363
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x0"
    },
    "4766": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7331,
        7363
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "4771": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7331,
        7363
      ],
      "op": "AND",
      "path": "5"
    },
    "4772": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7331,
        7344
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4777": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4779": {
      "op": "SHL"
    },
    "4780": {
      "op": "SUB"
    },
    "4781": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7331,
        7363
      ],
      "op": "AND",
      "path": "5"
    },
    "4782": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7331,
        7363
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4783": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7331,
        7363
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12B4"
    },
    "4786": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7331,
        7363
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4787": {
      "dev": "Division by zero",
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7331,
        7363
      ],
      "op": "INVALID",
      "path": "5"
    },
    "4788": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7331,
        7363
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4789": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7440,
        7467
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 34
    },
    "4790": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7440,
        7467
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4791": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7440,
        7467
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "4794": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7457,
        7467
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4795": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7440,
        7467
      ],
      "op": "MUL",
      "path": "5"
    },
    "4796": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4803": {
      "op": "SHL"
    },
    "4804": {
      "op": "SUB"
    },
    "4805": {
      "op": "NOT"
    },
    "4806": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7440,
        7467
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4807": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7440,
        7467
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4808": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7440,
        7467
      ],
      "op": "AND",
      "path": "5"
    },
    "4809": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7440,
        7467
      ],
      "op": "OR",
      "path": "5"
    },
    "4810": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7440,
        7467
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4811": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7440,
        7467
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4812": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7498
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 35,
      "value": "0x2"
    },
    "4814": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7498
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4815": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7498
      ],
      "op": "ADD",
      "path": "5"
    },
    "4816": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7524
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4817": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7524
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4822": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4824": {
      "op": "SHL"
    },
    "4825": {
      "op": "SUB"
    },
    "4826": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7534,
        7569
      ],
      "op": "DUP11",
      "path": "5",
      "statement": 36
    },
    "4827": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7534,
        7569
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4828": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7534,
        7569
      ],
      "op": "AND",
      "path": "5"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4833": {
      "op": "SHL"
    },
    "4834": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7534,
        7569
      ],
      "op": "MUL",
      "path": "5"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4841": {
      "op": "SHL"
    },
    "4842": {
      "op": "SUB"
    },
    "4843": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7508,
        7523
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "4844": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7524
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4845": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7524
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4846": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7524
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4847": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7524
      ],
      "op": "AND",
      "path": "5"
    },
    "4848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4852": {
      "op": "SHL"
    },
    "4853": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7524
      ],
      "op": "MUL",
      "path": "5"
    },
    "4854": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4865": {
      "op": "SHL"
    },
    "4866": {
      "op": "NOT"
    },
    "4867": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7524
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4868": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7524
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4869": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7524
      ],
      "op": "AND",
      "path": "5"
    },
    "4870": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7524
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4871": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7524
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4872": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7524
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4873": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7477,
        7524
      ],
      "op": "OR",
      "path": "5"
    },
    "4874": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7534,
        7569
      ],
      "op": "AND",
      "path": "5"
    },
    "4875": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7534,
        7569
      ],
      "op": "OR",
      "path": "5"
    },
    "4876": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7534,
        7569
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4877": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7534,
        7569
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4878": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7331,
        7363
      ],
      "op": "DIV",
      "path": "5"
    },
    "4879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4881": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7324,
        7368
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4882": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7324,
        7368
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4883": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7324,
        7368
      ],
      "op": "ADD",
      "path": "5"
    },
    "4884": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7324,
        7368
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4885": {
      "op": "POP"
    },
    "4886": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7378,
        7429
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "4889": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7404,
        7429
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4890": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7404,
        7429
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4891": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7404,
        7429
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4892": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7404,
        7429
      ],
      "op": "SUB",
      "path": "5"
    },
    "4893": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7404,
        7429
      ],
      "op": "ADD",
      "path": "5"
    },
    "4894": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7378,
        7429
      ],
      "op": "AND",
      "path": "5"
    },
    "4895": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7378,
        7429
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4896": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7604,
        7632
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 37,
      "value": "0x1329"
    },
    "4899": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7604,
        7613
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "4900": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7618,
        7624
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4901": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7604,
        7617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26DF"
    },
    "4904": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        7604,
        7632
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4905": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7604,
        7632
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4906": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7604,
        7650
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4907": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7604,
        7650
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1330"
    },
    "4910": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7604,
        7650
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4911": {
      "dev": "Division by zero",
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7604,
        7650
      ],
      "op": "INVALID",
      "path": "5"
    },
    "4912": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7604,
        7650
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4913": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7593
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4915": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7593
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4916": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7593
      ],
      "op": "ADD",
      "path": "5"
    },
    "4917": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7651
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4918": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7651
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4925": {
      "op": "SHL"
    },
    "4926": {
      "op": "SUB"
    },
    "4927": {
      "op": "NOT"
    },
    "4928": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7651
      ],
      "op": "AND",
      "path": "5"
    },
    "4929": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7604,
        7650
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4930": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7604,
        7650
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4931": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7604,
        7650
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4932": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7604,
        7650
      ],
      "op": "DIV",
      "path": "5"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4937": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4939": {
      "op": "SHL"
    },
    "4940": {
      "op": "SUB"
    },
    "4941": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7651
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4942": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7651
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4943": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7651
      ],
      "op": "AND",
      "path": "5"
    },
    "4944": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7651
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4945": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7651
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4946": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7651
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4947": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7651
      ],
      "op": "OR",
      "path": "5"
    },
    "4948": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7651
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4949": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7651
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4950": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7651
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4951": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7579,
        7651
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4952": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7669,
        7683
      ],
      "op": "AND",
      "path": "5",
      "statement": 38
    },
    "4953": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7669,
        7687
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4954": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7669,
        7687
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4955": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7669,
        7687
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4956": {
      "branch": 192,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7669,
        7687
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4957": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7669,
        7753
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1376"
    },
    "4960": {
      "branch": 192,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7669,
        7753
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4961": {
      "op": "POP"
    },
    "4962": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7691,
        7705
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4964": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7691,
        7705
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4965": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7691,
        7705
      ],
      "op": "ADD",
      "path": "5"
    },
    "4966": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7691,
        7705
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4973": {
      "op": "SHL"
    },
    "4974": {
      "op": "SUB"
    },
    "4975": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7691,
        7705
      ],
      "op": "AND",
      "path": "5"
    },
    "4976": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7691,
        7723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4977": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7691,
        7723
      ],
      "op": "MUL",
      "path": "5"
    },
    "4978": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7691,
        7739
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4979": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7691,
        7739
      ],
      "op": "MUL",
      "path": "5"
    },
    "4980": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7744,
        7753
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "4981": {
      "branch": 193,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7691,
        7753
      ],
      "op": "EQ",
      "path": "5"
    },
    "4982": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7669,
        7753
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4983": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7661,
        7754
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x137F"
    },
    "4986": {
      "branch": 193,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7661,
        7754
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4989": {
      "op": "DUP1"
    },
    "4990": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7661,
        7754
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4991": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7661,
        7754
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4998": {
      "op": "SHL"
    },
    "4999": {
      "op": "SUB"
    },
    "5000": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7768,
        7794
      ],
      "op": "DUP9",
      "path": "5"
    },
    "5001": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7768,
        7794
      ],
      "op": "AND",
      "path": "5"
    },
    "5002": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7784,
        7794
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5003": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7768,
        7794
      ],
      "op": "EQ",
      "path": "5"
    },
    "5004": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7768,
        7794
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5005": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7768,
        7794
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5006": {
      "branch": 194,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7768,
        7794
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5007": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7768,
        7824
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13A0"
    },
    "5010": {
      "branch": 194,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7768,
        7824
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5011": {
      "op": "POP"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5018": {
      "op": "SHL"
    },
    "5019": {
      "op": "SUB"
    },
    "5020": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7798,
        7824
      ],
      "op": "DUP9",
      "path": "5"
    },
    "5021": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7798,
        7824
      ],
      "op": "AND",
      "path": "5"
    },
    "5022": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7798,
        7824
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5023": {
      "branch": 195,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7798,
        7824
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5024": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7768,
        7824
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5025": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7764,
        7878
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5026": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7764,
        7878
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13C3"
    },
    "5029": {
      "branch": 195,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7764,
        7878
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5030": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7840,
        7852
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 39,
      "value": "0x1"
    },
    "5032": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7840,
        7852
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5033": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7840,
        7852
      ],
      "op": "ADD",
      "path": "5"
    },
    "5034": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7840,
        7867
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5035": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7840,
        7867
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5042": {
      "op": "SHL"
    },
    "5043": {
      "op": "SUB"
    },
    "5044": {
      "op": "NOT"
    },
    "5045": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7840,
        7867
      ],
      "op": "AND",
      "path": "5"
    },
    "5046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5052": {
      "op": "SHL"
    },
    "5053": {
      "op": "SUB"
    },
    "5054": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7840,
        7867
      ],
      "op": "DUP11",
      "path": "5"
    },
    "5055": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7840,
        7867
      ],
      "op": "AND",
      "path": "5"
    },
    "5056": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7840,
        7867
      ],
      "op": "OR",
      "path": "5"
    },
    "5057": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7840,
        7867
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5058": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7840,
        7867
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5059": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7764,
        7878
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5060": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7893,
        7902
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5062": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7888,
        9297
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5063": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7908,
        7925
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5064": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7908,
        7925
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5065": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7908,
        7925
      ],
      "op": "LT",
      "path": "5"
    },
    "5066": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7888,
        9297
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5067": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7888,
        9297
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1668"
    },
    "5070": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7888,
        9297
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5071": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7946,
        7958
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5073": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7961,
        7967
      ],
      "op": "DUP8",
      "path": "5"
    },
    "5074": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7961,
        7967
      ],
      "op": "DUP8",
      "path": "5"
    },
    "5075": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7968,
        7969
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5076": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7961,
        7970
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5077": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7961,
        7970
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5078": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7961,
        7970
      ],
      "op": "LT",
      "path": "5"
    },
    "5079": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7961,
        7970
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13DC"
    },
    "5082": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7961,
        7970
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5083": {
      "dev": "Index out of range",
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7961,
        7970
      ],
      "op": "INVALID",
      "path": "5"
    },
    "5084": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7961,
        7970
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5085": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7961,
        7970
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5086": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7961,
        7970
      ],
      "op": "POP",
      "path": "5"
    },
    "5087": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7961,
        7970
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5089": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7961,
        7970
      ],
      "op": "MUL",
      "path": "5"
    },
    "5090": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7961,
        7970
      ],
      "op": "ADD",
      "path": "5"
    },
    "5091": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7961,
        7970
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5098": {
      "op": "SHL"
    },
    "5099": {
      "op": "SUB"
    },
    "5100": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7961,
        7970
      ],
      "op": "AND",
      "path": "5"
    },
    "5101": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7946,
        7970
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5102": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7946,
        7970
      ],
      "op": "POP",
      "path": "5"
    },
    "5103": {
      "offset": [
        2764,
        2765
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5111": {
      "op": "SHL"
    },
    "5112": {
      "op": "SUB"
    },
    "5113": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7992,
        8013
      ],
      "op": "AND",
      "path": "5",
      "statement": 40
    },
    "5114": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7992,
        7996
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5121": {
      "op": "SHL"
    },
    "5122": {
      "op": "SUB"
    },
    "5123": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7992,
        8013
      ],
      "op": "AND",
      "path": "5"
    },
    "5124": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7992,
        8013
      ],
      "op": "EQ",
      "path": "5"
    },
    "5125": {
      "branch": 196,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7992,
        8013
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5126": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7984,
        8014
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x140E"
    },
    "5129": {
      "branch": 196,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7984,
        8014
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5132": {
      "op": "DUP1"
    },
    "5133": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7984,
        8014
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5134": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7984,
        8014
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5141": {
      "op": "SHL"
    },
    "5142": {
      "op": "SUB"
    },
    "5143": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8056,
        8067
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5144": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8056,
        8067
      ],
      "op": "AND",
      "path": "5"
    },
    "5145": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8028,
        8053
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5147": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8056,
        8067
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5148": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8056,
        8067
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5149": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8056,
        8067
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5150": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8056,
        8061
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "5152": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8056,
        8067
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5154": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8056,
        8067
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5155": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8056,
        8067
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5157": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8056,
        8067
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5158": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8056,
        8067
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5159": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8115
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 41
    },
    "5160": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8115
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5165": {
      "op": "SHL"
    },
    "5166": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8115
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5167": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8115
      ],
      "op": "DIV",
      "path": "5"
    },
    "5168": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8115
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "5171": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8115
      ],
      "op": "AND",
      "path": "5"
    },
    "5172": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8120
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5173": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8120
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5174": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8120
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5175": {
      "branch": 197,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8120
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5176": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8182
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x144F"
    },
    "5179": {
      "branch": 197,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8182
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5180": {
      "op": "POP"
    },
    "5181": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8140,
        8166
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5182": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8140,
        8166
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5183": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8140,
        8182
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "5186": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8140,
        8182
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5187": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8140,
        8182
      ],
      "op": "DUP9",
      "path": "5"
    },
    "5188": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8140,
        8182
      ],
      "op": "AND",
      "path": "5"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5193": {
      "op": "SHL"
    },
    "5194": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8140,
        8166
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5195": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8140,
        8166
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5196": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8140,
        8166
      ],
      "op": "DIV",
      "path": "5"
    },
    "5197": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8140,
        8166
      ],
      "op": "AND",
      "path": "5"
    },
    "5198": {
      "branch": 198,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8140,
        8182
      ],
      "op": "LT",
      "path": "5"
    },
    "5199": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8182
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5200": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8243
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5201": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8243
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5202": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8243
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1470"
    },
    "5205": {
      "branch": 198,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8243
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5206": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8243
      ],
      "op": "POP",
      "path": "5"
    },
    "5207": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8220,
        8243
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x145F"
    },
    "5210": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8234,
        8242
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5211": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8220,
        8233
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2701"
    },
    "5214": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        8220,
        8243
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5215": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8220,
        8243
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5216": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8202,
        8216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5218": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8202,
        8216
      ],
      "op": "DUP9",
      "path": "5"
    },
    "5219": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8202,
        8216
      ],
      "op": "ADD",
      "path": "5"
    },
    "5220": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8202,
        8216
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5225": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5227": {
      "op": "SHL"
    },
    "5228": {
      "op": "SUB"
    },
    "5229": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8202,
        8216
      ],
      "op": "AND",
      "path": "5"
    },
    "5230": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8202,
        8243
      ],
      "op": "LT",
      "path": "5"
    },
    "5231": {
      "branch": 199,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8202,
        8243
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5232": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8089,
        8243
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5233": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8081,
        8244
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1479"
    },
    "5236": {
      "branch": 199,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8081,
        8244
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5239": {
      "op": "DUP1"
    },
    "5240": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8081,
        8244
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5241": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8081,
        8244
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5242": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8310,
        8342
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "5245": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8310,
        8342
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5246": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8310,
        8342
      ],
      "op": "AND",
      "path": "5"
    },
    "5247": {
      "offset": [
        2945,
        2946
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5249": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8310,
        8342
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5250": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8310,
        8342
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5251": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8310,
        8342
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5252": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8310,
        8327
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5254": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8310,
        8327
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5255": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8310,
        8327
      ],
      "op": "ADD",
      "path": "5"
    },
    "5256": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8310,
        8342
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5258": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8310,
        8342
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5259": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8310,
        8342
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5261": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8310,
        8342
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5262": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8310,
        8342
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5263": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8310,
        8342
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5268": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5270": {
      "op": "SHL"
    },
    "5271": {
      "op": "SUB"
    },
    "5272": {
      "branch": 200,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8310,
        8363
      ],
      "op": "EQ",
      "path": "5"
    },
    "5273": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8306,
        8650
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5274": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8306,
        8650
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C9"
    },
    "5277": {
      "branch": 200,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8306,
        8650
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5278": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8425,
        8439
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 42,
      "value": "0x2"
    },
    "5280": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8425,
        8439
      ],
      "op": "DUP8",
      "path": "5"
    },
    "5281": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8425,
        8439
      ],
      "op": "ADD",
      "path": "5"
    },
    "5282": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8425,
        8439
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5283": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8383,
        8415
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "5286": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8383,
        8415
      ],
      "op": "DUP8",
      "path": "5"
    },
    "5287": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8383,
        8415
      ],
      "op": "AND",
      "path": "5"
    },
    "5288": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8425,
        8439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5290": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8383,
        8415
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5291": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8383,
        8415
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5292": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8383,
        8415
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5293": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8383,
        8400
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5295": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8383,
        8400
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5296": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8383,
        8400
      ],
      "op": "ADD",
      "path": "5"
    },
    "5297": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8383,
        8415
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5299": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8383,
        8415
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5300": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8383,
        8415
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5302": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8383,
        8415
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5303": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8383,
        8415
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5310": {
      "op": "SHL"
    },
    "5311": {
      "op": "SUB"
    },
    "5312": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8425,
        8439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5313": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8425,
        8439
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5314": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8425,
        8439
      ],
      "op": "AND",
      "path": "5"
    },
    "5315": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8383,
        8440
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5316": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8383,
        8440
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5317": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8306,
        8650
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14F6"
    },
    "5320": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8306,
        8650
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5321": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8306,
        8650
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5322": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8620,
        8634
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 43,
      "value": "0x2"
    },
    "5324": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8620,
        8634
      ],
      "op": "DUP8",
      "path": "5"
    },
    "5325": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8620,
        8634
      ],
      "op": "ADD",
      "path": "5"
    },
    "5326": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8620,
        8634
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5327": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8609
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "5330": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8609
      ],
      "op": "DUP8",
      "path": "5"
    },
    "5331": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8609
      ],
      "op": "AND",
      "path": "5"
    },
    "5332": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8620,
        8634
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5334": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8609
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5335": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8609
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5336": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8609
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5337": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8594
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5339": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8594
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5340": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8594
      ],
      "op": "ADD",
      "path": "5"
    },
    "5341": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8609
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5343": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8609
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5344": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8609
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5346": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8609
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5347": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8609
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5348": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8635
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5349": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8635
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5356": {
      "op": "SHL"
    },
    "5357": {
      "op": "SUB"
    },
    "5358": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8620,
        8634
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5359": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8620,
        8634
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5360": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8620,
        8634
      ],
      "op": "AND",
      "path": "5"
    },
    "5361": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8635
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5362": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8635
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5363": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8635
      ],
      "op": "ADD",
      "path": "5"
    },
    "5364": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8635
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5365": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8577,
        8635
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5366": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8306,
        8650
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5367": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8667,
        8695
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "5370": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8667,
        8695
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5371": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8667,
        8695
      ],
      "op": "AND",
      "path": "5"
    },
    "5372": {
      "offset": [
        2945,
        2946
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5374": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8667,
        8695
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5375": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8667,
        8695
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5376": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8667,
        8695
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5377": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8667,
        8684
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5379": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8667,
        8684
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5380": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8667,
        8684
      ],
      "op": "ADD",
      "path": "5"
    },
    "5381": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8667,
        8695
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5383": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8667,
        8695
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5384": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8667,
        8695
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5386": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8667,
        8695
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5387": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8667,
        8695
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5388": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8667,
        8695
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5393": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5395": {
      "op": "SHL"
    },
    "5396": {
      "op": "SUB"
    },
    "5397": {
      "branch": 201,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8667,
        8716
      ],
      "op": "EQ",
      "path": "5"
    },
    "5398": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8663,
        8898
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5399": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8663,
        8898
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1548"
    },
    "5402": {
      "branch": 201,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8663,
        8898
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5403": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8775,
        8789
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 44,
      "value": "0x2"
    },
    "5405": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8775,
        8789
      ],
      "op": "DUP8",
      "path": "5"
    },
    "5406": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8775,
        8789
      ],
      "op": "ADD",
      "path": "5"
    },
    "5407": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8775,
        8789
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5408": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8736,
        8764
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "5411": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8736,
        8764
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5412": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8736,
        8764
      ],
      "op": "AND",
      "path": "5"
    },
    "5413": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8775,
        8789
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5415": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8736,
        8764
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5416": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8736,
        8764
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5417": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8736,
        8764
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5418": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8736,
        8753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5420": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8736,
        8753
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5421": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8736,
        8753
      ],
      "op": "ADD",
      "path": "5"
    },
    "5422": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8736,
        8764
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5424": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8736,
        8764
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5425": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8736,
        8764
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5427": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8736,
        8764
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5428": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8736,
        8764
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5433": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5435": {
      "op": "SHL"
    },
    "5436": {
      "op": "SUB"
    },
    "5437": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8775,
        8789
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5438": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8775,
        8789
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5439": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8775,
        8789
      ],
      "op": "AND",
      "path": "5"
    },
    "5440": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8767,
        8790
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5441": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8767,
        8790
      ],
      "op": "SUB",
      "path": "5"
    },
    "5442": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8736,
        8790
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5443": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8736,
        8790
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5444": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8663,
        8898
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1575"
    },
    "5447": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8663,
        8898
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5448": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8663,
        8898
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5449": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8868,
        8882
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 45,
      "value": "0x2"
    },
    "5451": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8868,
        8882
      ],
      "op": "DUP8",
      "path": "5"
    },
    "5452": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8868,
        8882
      ],
      "op": "ADD",
      "path": "5"
    },
    "5453": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8868,
        8882
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5454": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8857
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "5457": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8857
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5458": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8857
      ],
      "op": "AND",
      "path": "5"
    },
    "5459": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8868,
        8882
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5461": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8857
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5462": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8857
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5463": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8857
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5464": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8846
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5466": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8846
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5467": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8846
      ],
      "op": "ADD",
      "path": "5"
    },
    "5468": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5470": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8857
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5471": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5473": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8857
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5474": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8857
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5475": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8883
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5476": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8883
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5481": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5483": {
      "op": "SHL"
    },
    "5484": {
      "op": "SUB"
    },
    "5485": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8868,
        8882
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5486": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8868,
        8882
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5487": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8868,
        8882
      ],
      "op": "AND",
      "path": "5"
    },
    "5488": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8883
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5489": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8883
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5490": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8883
      ],
      "op": "SUB",
      "path": "5"
    },
    "5491": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8883
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5492": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8829,
        8883
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5493": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8663,
        8898
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5494": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8963,
        8995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "5497": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8963,
        8995
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5498": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8963,
        8995
      ],
      "op": "AND",
      "path": "5"
    },
    "5499": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8963,
        8995
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5501": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8963,
        8995
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5502": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8963,
        8995
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5503": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8963,
        8995
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5504": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8963,
        8980
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5506": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8963,
        8980
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5507": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8963,
        8980
      ],
      "op": "ADD",
      "path": "5"
    },
    "5508": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8963,
        8995
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5510": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8963,
        8995
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5511": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8963,
        8995
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5513": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8963,
        8995
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5514": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8963,
        8995
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5515": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8963,
        8995
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5516": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8959,
        9087
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15AF"
    },
    "5519": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8959,
        9087
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5520": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9020,
        9052
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 46,
      "value": "0xFFFF"
    },
    "5523": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9020,
        9052
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5524": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9020,
        9052
      ],
      "op": "AND",
      "path": "5"
    },
    "5525": {
      "offset": [
        2945,
        2946
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5527": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9020,
        9052
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5528": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9020,
        9052
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5529": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9020,
        9052
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5530": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9020,
        9037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5532": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9020,
        9037
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5533": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9020,
        9037
      ],
      "op": "ADD",
      "path": "5"
    },
    "5534": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9020,
        9052
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5536": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9020,
        9052
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5537": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9020,
        9052
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5539": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9020,
        9052
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5540": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9020,
        9052
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5547": {
      "op": "SHL"
    },
    "5548": {
      "op": "SUB"
    },
    "5549": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9020,
        9072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5550": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9020,
        9072
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5551": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8959,
        9087
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5552": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9104,
        9132
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "5555": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9104,
        9132
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5556": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9104,
        9132
      ],
      "op": "AND",
      "path": "5"
    },
    "5557": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9104,
        9132
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5559": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9104,
        9132
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5560": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9104,
        9132
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5561": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9104,
        9132
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5562": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9104,
        9121
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5564": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9104,
        9121
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5565": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9104,
        9121
      ],
      "op": "ADD",
      "path": "5"
    },
    "5566": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9104,
        9132
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5568": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9104,
        9132
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5569": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9104,
        9132
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5571": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9104,
        9132
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5572": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9104,
        9132
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5573": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9104,
        9132
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5574": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9100,
        9220
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15E9"
    },
    "5577": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9100,
        9220
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5578": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9157,
        9185
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 47,
      "value": "0xFFFF"
    },
    "5581": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9157,
        9185
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5582": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9157,
        9185
      ],
      "op": "AND",
      "path": "5"
    },
    "5583": {
      "offset": [
        2945,
        2946
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5585": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9157,
        9185
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5586": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9157,
        9185
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5587": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9157,
        9185
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5588": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9157,
        9174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5590": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9157,
        9174
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5591": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9157,
        9174
      ],
      "op": "ADD",
      "path": "5"
    },
    "5592": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9157,
        9185
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5594": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9157,
        9185
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5595": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9157,
        9185
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5597": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9157,
        9185
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5598": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9157,
        9185
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5605": {
      "op": "SHL"
    },
    "5606": {
      "op": "SUB"
    },
    "5607": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9157,
        9205
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5608": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9157,
        9205
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5609": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9100,
        9220
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5610": {
      "op": "POP"
    },
    "5611": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 48,
      "value": "0x40"
    },
    "5613": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5614": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5615": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5617": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5618": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "ADD",
      "path": "5"
    },
    "5619": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5620": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5627": {
      "op": "SHL"
    },
    "5628": {
      "op": "SUB"
    },
    "5629": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5630": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5631": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "AND",
      "path": "5"
    },
    "5632": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5633": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5636": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5638": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5639": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5640": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "ADD",
      "path": "5"
    },
    "5641": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5642": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5643": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5644": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5645": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5646": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "ADD",
      "path": "5"
    },
    "5647": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5648": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5649": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5650": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9252
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "5652": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9252
      ],
      "op": "DUP12",
      "path": "5"
    },
    "5653": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9252
      ],
      "op": "ADD",
      "path": "5"
    },
    "5654": {
      "op": "DUP1"
    },
    "5655": {
      "op": "SLOAD"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5658": {
      "op": "DUP1"
    },
    "5659": {
      "op": "DUP3"
    },
    "5660": {
      "op": "ADD"
    },
    "5661": {
      "op": "DUP4"
    },
    "5662": {
      "op": "SSTORE"
    },
    "5663": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5664": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5665": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5666": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5667": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5668": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5669": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5670": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5671": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5672": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5674": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5675": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5676": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "MUL",
      "path": "5"
    },
    "5677": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5678": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5679": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "ADD",
      "path": "5"
    },
    "5680": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5681": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5688": {
      "op": "SHL"
    },
    "5689": {
      "op": "SUB"
    },
    "5690": {
      "op": "NOT"
    },
    "5691": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "AND",
      "path": "5"
    },
    "5692": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5693": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5694": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "5695": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "AND",
      "path": "5"
    },
    "5696": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "OR",
      "path": "5"
    },
    "5697": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5698": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5699": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5700": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5701": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5702": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5703": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "ADD",
      "path": "5"
    },
    "5704": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5705": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5706": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5708": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5709": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5710": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "ADD",
      "path": "5"
    },
    "5711": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5712": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5713": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5716": {
      "op": "NOT"
    },
    "5717": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "AND",
      "path": "5"
    },
    "5718": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9258,
        9285
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "5721": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5722": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5723": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "AND",
      "path": "5"
    },
    "5724": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5725": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5726": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5727": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "OR",
      "path": "5"
    },
    "5728": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5729": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5730": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9233,
        9286
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5731": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7927,
        7930
      ],
      "op": "ADD",
      "path": "5",
      "statement": 49
    },
    "5732": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7888,
        9297
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13C6"
    },
    "5735": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7888,
        9297
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5736": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        7888,
        9297
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5737": {
      "op": "POP"
    },
    "5738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5744": {
      "op": "SHL"
    },
    "5745": {
      "op": "SUB"
    },
    "5746": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9386,
        9412
      ],
      "op": "DUP9",
      "path": "5",
      "statement": 50
    },
    "5747": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9386,
        9412
      ],
      "op": "AND",
      "path": "5"
    },
    "5748": {
      "branch": 202,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9386,
        9412
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5749": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9386,
        9440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x167E"
    },
    "5752": {
      "branch": 202,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9386,
        9440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5753": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9428,
        9440
      ],
      "op": "DUP8",
      "path": "5"
    },
    "5754": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9386,
        9440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1680"
    },
    "5757": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9386,
        9440
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5758": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9386,
        9440
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5759": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9415,
        9425
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5760": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9386,
        9440
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5761": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9454,
        9468
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5763": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9454,
        9468
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5764": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9454,
        9468
      ],
      "op": "ADD",
      "path": "5"
    },
    "5765": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9454,
        9468
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5766": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5768": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5769": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5776": {
      "op": "SHL"
    },
    "5777": {
      "op": "SUB"
    },
    "5778": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9454,
        9468
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5779": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9454,
        9468
      ],
      "op": "AND",
      "path": "5"
    },
    "5780": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5781": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5786": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5788": {
      "op": "SHL"
    },
    "5789": {
      "op": "SUB"
    },
    "5790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5794": {
      "op": "SHL"
    },
    "5795": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9482,
        9503
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5796": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9482,
        9503
      ],
      "op": "DIV",
      "path": "5"
    },
    "5797": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9482,
        9503
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5798": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9482,
        9503
      ],
      "op": "AND",
      "path": "5"
    },
    "5799": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5801": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5802": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "ADD",
      "path": "5"
    },
    "5803": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5806": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5808": {
      "op": "SHL"
    },
    "5809": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9517,
        9536
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5810": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9517,
        9536
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5811": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9517,
        9536
      ],
      "op": "DIV",
      "path": "5"
    },
    "5812": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9517,
        9536
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5813": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9517,
        9536
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5814": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9517,
        9536
      ],
      "op": "AND",
      "path": "5"
    },
    "5815": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5816": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5817": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "ADD",
      "path": "5"
    },
    "5818": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5819": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5821": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5822": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "ADD",
      "path": "5"
    },
    "5823": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "DUP9",
      "path": "5"
    },
    "5824": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5825": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5826": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5833": {
      "op": "SHL"
    },
    "5834": {
      "op": "SUB"
    },
    "5835": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5836": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5837": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5838": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "AND",
      "path": "5"
    },
    "5839": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5840": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9362,
        9372
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5841": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9362,
        9372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5846": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5848": {
      "op": "SHL"
    },
    "5849": {
      "op": "SUB"
    },
    "5850": {
      "op": "NOT"
    },
    "5851": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "DUP14",
      "path": "5"
    },
    "5852": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "AND",
      "path": "5"
    },
    "5853": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5854": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8E609DAC02BD39FF24C8AD6BB9A735E739B56708B22159948EC9828AD765B4D1"
    },
    "5887": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5888": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5889": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5890": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "SUB",
      "path": "5"
    },
    "5891": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "5893": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "ADD",
      "path": "5"
    },
    "5894": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5895": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9312,
        9573
      ],
      "op": "LOG4",
      "path": "5"
    },
    "5896": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "POP",
      "path": "5"
    },
    "5897": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "POP",
      "path": "5"
    },
    "5898": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "POP",
      "path": "5"
    },
    "5899": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "POP",
      "path": "5"
    },
    "5900": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "POP",
      "path": "5"
    },
    "5901": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "POP",
      "path": "5"
    },
    "5902": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "POP",
      "path": "5"
    },
    "5903": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "POP",
      "path": "5"
    },
    "5904": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        6742,
        9580
      ],
      "op": "POP",
      "path": "5"
    },
    "5905": {
      "fn": "PolicyManager.createPolicy",
      "jump": "o",
      "offset": [
        6742,
        9580
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5906": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6258,
        6423
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5913": {
      "op": "SHL"
    },
    "5914": {
      "op": "SUB"
    },
    "5915": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6364,
        6376
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5916": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6364,
        6376
      ],
      "op": "AND",
      "path": "5"
    },
    "5917": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6317,
        6324
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5919": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6364,
        6376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5920": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6364,
        6376
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5921": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6364,
        6376
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5922": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6364,
        6369
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "5924": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6364,
        6376
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5926": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6364,
        6376
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5927": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6364,
        6376
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5929": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6364,
        6376
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5930": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6364,
        6376
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5931": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6393,
        6416
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 51,
      "value": "0xED2"
    },
    "5934": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6364,
        6376
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5935": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6393,
        6406
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2701"
    },
    "5938": {
      "fn": "PolicyManager.getMinFeeRate",
      "jump": "i",
      "offset": [
        6393,
        6416
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5939": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5066,
        5533
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5940": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5152,
        5164
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 52,
      "value": "0x6"
    },
    "5942": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5152,
        5168
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5947": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5949": {
      "op": "SHL"
    },
    "5950": {
      "op": "SUB"
    },
    "5951": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5152,
        5168
      ],
      "op": "AND",
      "path": "5"
    },
    "5952": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5137,
        5168
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5953": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5137,
        5168
      ],
      "op": "LT",
      "path": "5"
    },
    "5954": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5137,
        5168
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5955": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5137,
        5168
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5956": {
      "branch": 203,
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5137,
        5168
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5957": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5137,
        5215
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1759"
    },
    "5960": {
      "branch": 203,
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5137,
        5215
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5961": {
      "op": "POP"
    },
    "5962": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5199,
        5215
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "5964": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5199,
        5215
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5969": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5971": {
      "op": "SHL"
    },
    "5972": {
      "op": "SUB"
    },
    "5973": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5199,
        5215
      ],
      "op": "AND",
      "path": "5"
    },
    "5974": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5184,
        5215
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5975": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5184,
        5215
      ],
      "op": "GT",
      "path": "5"
    },
    "5976": {
      "branch": 204,
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5184,
        5215
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5977": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5137,
        5215
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5978": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1794"
    },
    "5981": {
      "branch": 204,
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5982": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5984": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5985": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5991": {
      "op": "SHL"
    },
    "5992": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5993": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5994": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5996": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "ADD",
      "path": "5"
    },
    "5997": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5998": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5999": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6001": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "ADD",
      "path": "5"
    },
    "6002": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6003": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6004": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "SUB",
      "path": "5"
    },
    "6005": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6006": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6007": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "6009": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6010": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6011": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6013": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "ADD",
      "path": "5"
    },
    "6014": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6015": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3447"
    },
    "6018": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "6020": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6021": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6022": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6024": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "ADD",
      "path": "5"
    },
    "6025": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6026": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "POP",
      "path": "5"
    },
    "6027": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "POP",
      "path": "5"
    },
    "6028": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6030": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6031": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6032": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6033": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "SUB",
      "path": "5"
    },
    "6034": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6035": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6036": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5129,
        5295
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6037": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5339,
        5349
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6038": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5305,
        5330
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6040": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5333,
        5350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6041": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5333,
        5350
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6042": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5333,
        5350
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6043": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5333,
        5338
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "6045": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5333,
        5350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6047": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5333,
        5350
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6048": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5333,
        5350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6050": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5333,
        5350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6051": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5333,
        5350
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6052": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5364,
        5383
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6054": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5364,
        5383
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6055": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5364,
        5383
      ],
      "op": "ADD",
      "path": "5"
    },
    "6056": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5364,
        5383
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6057": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5364,
        5398
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6058": {
      "branch": 205,
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5364,
        5398
      ],
      "op": "EQ",
      "path": "5"
    },
    "6059": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5360,
        5431
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6060": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5360,
        5431
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17B5"
    },
    "6063": {
      "branch": 205,
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5360,
        5431
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6064": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5414,
        5421
      ],
      "op": "POP",
      "path": "5",
      "statement": 53
    },
    "6065": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5414,
        5421
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17F4"
    },
    "6068": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5414,
        5421
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6069": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5360,
        5431
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6070": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5440,
        5459
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 54,
      "value": "0x2"
    },
    "6072": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5440,
        5459
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6073": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5440,
        5459
      ],
      "op": "ADD",
      "path": "5"
    },
    "6074": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5440,
        5473
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6075": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5440,
        5473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6076": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5440,
        5473
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6077": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 55,
      "value": "0x40"
    },
    "6079": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6080": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6081": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6082": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6083": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6084": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6085": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6086": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5502,
        5512
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6087": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5502,
        5512
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6088": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x6B9024CC1BF5710F290BE788DCA9886DB7A3D9BE0DF0855BFA991DBF26A256BC"
    },
    "6121": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6122": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6123": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6124": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6125": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "SUB",
      "path": "5"
    },
    "6126": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6128": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "ADD",
      "path": "5"
    },
    "6129": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6130": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5488,
        5526
      ],
      "op": "LOG2",
      "path": "5"
    },
    "6131": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5066,
        5533
      ],
      "op": "POP",
      "path": "5"
    },
    "6132": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5066,
        5533
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6133": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        5066,
        5533
      ],
      "op": "POP",
      "path": "5"
    },
    "6134": {
      "fn": "PolicyManager.setMinFeeRate",
      "jump": "o",
      "offset": [
        5066,
        5533
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6135": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19791,
        20064
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6136": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19878,
        19897
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6144": {
      "op": "SHL"
    },
    "6145": {
      "op": "SUB"
    },
    "6146": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19921,
        19943
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 56
    },
    "6147": {
      "branch": 206,
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19921,
        19943
      ],
      "op": "AND",
      "path": "5"
    },
    "6148": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19913,
        19944
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x180C"
    },
    "6151": {
      "branch": 206,
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19913,
        19944
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6154": {
      "op": "DUP1"
    },
    "6155": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19913,
        19944
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6156": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19913,
        19944
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6157": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19991,
        20001
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 57
    },
    "6158": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19962,
        19987
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1816"
    },
    "6161": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19977,
        19986
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6162": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19962,
        19976
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE82"
    },
    "6165": {
      "fn": "PolicyManager.revokeArrangement",
      "jump": "i",
      "offset": [
        19962,
        19987
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6166": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19962,
        19987
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6173": {
      "op": "SHL"
    },
    "6174": {
      "op": "SUB"
    },
    "6175": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19962,
        20001
      ],
      "op": "AND",
      "path": "5"
    },
    "6176": {
      "branch": 207,
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19962,
        20001
      ],
      "op": "EQ",
      "path": "5"
    },
    "6177": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19954,
        20002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1829"
    },
    "6180": {
      "branch": 207,
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19954,
        20002
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6183": {
      "op": "DUP1"
    },
    "6184": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19954,
        20002
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6185": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        19954,
        20002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6186": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        20019,
        20057
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 58,
      "value": "0xED2"
    },
    "6189": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        20034,
        20043
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6190": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        20045,
        20050
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6191": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        20052,
        20056
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6193": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        20019,
        20033
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20C8"
    },
    "6196": {
      "fn": "PolicyManager.revokeArrangement",
      "jump": "i",
      "offset": [
        20019,
        20057
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6197": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6198": {
      "fn": "Ownable.owner",
      "offset": [
        698,
        705
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "6200": {
      "fn": "Ownable.owner",
      "offset": [
        724,
        730
      ],
      "op": "SLOAD",
      "path": "21",
      "statement": 59
    },
    "6201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6207": {
      "op": "SHL"
    },
    "6208": {
      "op": "SUB"
    },
    "6209": {
      "fn": "Ownable.owner",
      "offset": [
        724,
        730
      ],
      "op": "AND",
      "path": "21"
    },
    "6210": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6211": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        660,
        737
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6212": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6219": {
      "op": "SHL"
    },
    "6220": {
      "op": "SUB"
    },
    "6221": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23598
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 60
    },
    "6222": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23598
      ],
      "op": "AND",
      "path": "5"
    },
    "6223": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23557,
        23563
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6225": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6226": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6227": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6228": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23591
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "6230": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6232": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6233": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6234": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6235": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6237": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6238": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6239": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23598
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6240": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23616
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "6243": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23616
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6244": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23616
      ],
      "op": "AND",
      "path": "5"
    },
    "6245": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23616
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6246": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23616
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6247": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23607
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "6249": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23607
      ],
      "op": "ADD",
      "path": "5"
    },
    "6250": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23616
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6251": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23616
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6252": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23616
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6253": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23616
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6254": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23616
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6255": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23586,
        23616
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6256": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6257": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6258": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "POP",
      "path": "5"
    },
    "6259": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        23383,
        23623
      ],
      "op": "POP",
      "path": "5"
    },
    "6260": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "jump": "o",
      "offset": [
        23383,
        23623
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6261": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6262": {
      "fn": "Ownable.isOwner",
      "offset": [
        1020,
        1024
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "6264": {
      "fn": "Ownable.isOwner",
      "offset": [
        1057,
        1063
      ],
      "op": "SLOAD",
      "path": "21",
      "statement": 61
    },
    "6265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6269": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6271": {
      "op": "SHL"
    },
    "6272": {
      "op": "SUB"
    },
    "6273": {
      "fn": "Ownable.isOwner",
      "offset": [
        1057,
        1063
      ],
      "op": "AND",
      "path": "21"
    },
    "6274": {
      "fn": "Ownable.isOwner",
      "offset": [
        1043,
        1053
      ],
      "op": "CALLER",
      "path": "21"
    },
    "6275": {
      "fn": "Ownable.isOwner",
      "offset": [
        1043,
        1063
      ],
      "op": "EQ",
      "path": "21"
    },
    "6276": {
      "fn": "Ownable.isOwner",
      "offset": [
        1043,
        1063
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6277": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        980,
        1070
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6278": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19435,
        19643
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6279": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19494,
        19513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6281": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19562,
        19572
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 62
    },
    "6282": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19533,
        19558
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1892"
    },
    "6285": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19548,
        19557
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6286": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19533,
        19547
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE82"
    },
    "6289": {
      "fn": "PolicyManager.revokePolicy",
      "jump": "i",
      "offset": [
        19533,
        19558
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6290": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19533,
        19558
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6297": {
      "op": "SHL"
    },
    "6298": {
      "op": "SUB"
    },
    "6299": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19533,
        19572
      ],
      "op": "AND",
      "path": "5"
    },
    "6300": {
      "branch": 208,
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19533,
        19572
      ],
      "op": "EQ",
      "path": "5"
    },
    "6301": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19525,
        19573
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18A5"
    },
    "6304": {
      "branch": 208,
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19525,
        19573
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6307": {
      "op": "DUP1"
    },
    "6308": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19525,
        19573
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6309": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19525,
        19573
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6310": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19590,
        19636
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 63,
      "value": "0x1033"
    },
    "6313": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19605,
        19614
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6314": {
      "offset": [
        2764,
        2765
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6316": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19631,
        19635
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6318": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        19590,
        19604
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20C8"
    },
    "6321": {
      "fn": "PolicyManager.revokePolicy",
      "jump": "i",
      "offset": [
        19590,
        19636
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6322": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22741,
        22972
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6323": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22836,
        22855
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6331": {
      "op": "SHL"
    },
    "6332": {
      "op": "SUB"
    },
    "6333": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22879,
        22901
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 64
    },
    "6334": {
      "branch": 209,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22879,
        22901
      ],
      "op": "AND",
      "path": "5"
    },
    "6335": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22871,
        22902
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18C7"
    },
    "6338": {
      "branch": 209,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22871,
        22902
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6341": {
      "op": "DUP1"
    },
    "6342": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22871,
        22902
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6343": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22871,
        22902
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6344": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22919,
        22965
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 65,
      "value": "0xED2"
    },
    "6347": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22948,
        22957
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6348": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22959,
        22964
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6349": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22919,
        22947
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x276A"
    },
    "6352": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        22919,
        22965
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6353": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6354": {
      "offset": [
        3773,
        3783
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6361": {
      "op": "SHL"
    },
    "6362": {
      "op": "SUB"
    },
    "6363": {
      "offset": [
        3795,
        3801
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x0"
    },
    "6396": {
      "offset": [
        3773,
        3802
      ],
      "op": "AND",
      "path": "5"
    },
    "6397": {
      "branch": 210,
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        3773,
        3802
      ],
      "op": "EQ",
      "path": "5"
    },
    "6398": {
      "offset": [
        3765,
        3803
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1906"
    },
    "6401": {
      "branch": 210,
      "offset": [
        3765,
        3803
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6404": {
      "op": "DUP1"
    },
    "6405": {
      "op": "REVERT"
    },
    "6406": {
      "offset": [
        3765,
        3803
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6413": {
      "op": "SHL"
    },
    "6414": {
      "op": "SUB"
    },
    "6415": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10211,
        10223
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6416": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10211,
        10223
      ],
      "op": "AND",
      "path": "5"
    },
    "6417": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10187,
        10208
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6419": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10211,
        10223
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6420": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10211,
        10223
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6421": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10211,
        10223
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6422": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10211,
        10216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "6424": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10211,
        10223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6426": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10211,
        10223
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6427": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10211,
        10223
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6428": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10211,
        10223
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6429": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10211,
        10223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6431": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10211,
        10223
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6432": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10211,
        10223
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6433": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10211,
        10223
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6434": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10237,
        10259
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "6437": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10237,
        10259
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6438": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10237,
        10259
      ],
      "op": "AND",
      "path": "5"
    },
    "6439": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10237,
        10259
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6440": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10237,
        10259
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6441": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10237,
        10250
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "6443": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10237,
        10250
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6444": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10237,
        10250
      ],
      "op": "ADD",
      "path": "5"
    },
    "6445": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10237,
        10259
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6446": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10237,
        10259
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6447": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10237,
        10259
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6448": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10237,
        10259
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6449": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10237,
        10259
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6450": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10237,
        10259
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6451": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10237,
        10259
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6452": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10233,
        10333
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1957"
    },
    "6455": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10233,
        10333
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6456": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10280,
        10302
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 66,
      "value": "0xFFFF"
    },
    "6459": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10280,
        10302
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6460": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10280,
        10302
      ],
      "op": "AND",
      "path": "5"
    },
    "6461": {
      "offset": [
        2945,
        2946
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6463": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10280,
        10302
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6464": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10280,
        10302
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6465": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10280,
        10302
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6466": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10280,
        10293
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "6468": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10280,
        10293
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6469": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10280,
        10293
      ],
      "op": "ADD",
      "path": "5"
    },
    "6470": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10280,
        10302
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6472": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10280,
        10302
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6473": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10280,
        10302
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6475": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10280,
        10302
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6476": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10280,
        10302
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6481": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6483": {
      "op": "SHL"
    },
    "6484": {
      "op": "SUB"
    },
    "6485": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10280,
        10322
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6486": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10280,
        10322
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6487": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10233,
        10333
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6488": {
      "offset": [
        3813,
        3814
      ],
      "op": "POP",
      "path": "5"
    },
    "6489": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "POP",
      "path": "5"
    },
    "6490": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "offset": [
        10090,
        10339
      ],
      "op": "POP",
      "path": "5"
    },
    "6491": {
      "fn": "PolicyManager.setDefaultFeeDelta",
      "jump": "o",
      "offset": [
        10090,
        10339
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6492": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6493": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25904,
        25934
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 67,
      "value": "0x1965"
    },
    "6496": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25922,
        25933
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6497": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25904,
        25921
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2894"
    },
    "6500": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        25904,
        25934
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6501": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25904,
        25934
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6502": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25944,
        25969
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x196D"
    },
    "6505": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25944,
        25969
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3361"
    },
    "6508": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        25944,
        25969
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6509": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25944,
        25969
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6510": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25972,
        26008
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1976"
    },
    "6513": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25996,
        26007
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6514": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25972,
        25995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28EE"
    },
    "6517": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        25972,
        26008
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6518": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25972,
        26008
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6519": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26046,
        26062
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 68
    },
    "6520": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26046,
        26062
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6521": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26038
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "6523": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26042
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6524": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25944,
        26008
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6525": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25944,
        26008
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6526": {
      "op": "POP"
    },
    "6527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6531": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6533": {
      "op": "SHL"
    },
    "6534": {
      "op": "SUB"
    },
    "6535": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26042
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6536": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26042
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6537": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26042
      ],
      "op": "AND",
      "path": "5"
    },
    "6538": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26062
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6539": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26062
      ],
      "op": "AND",
      "path": "5"
    },
    "6540": {
      "branch": 211,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26062
      ],
      "op": "EQ",
      "path": "5"
    },
    "6541": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26132
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6542": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26132
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6543": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26132
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19B1"
    },
    "6546": {
      "branch": 211,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26132
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6547": {
      "op": "POP"
    },
    "6548": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26107,
        26132
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6550": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26107,
        26132
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6551": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26107,
        26132
      ],
      "op": "ADD",
      "path": "5"
    },
    "6552": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26107,
        26132
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6553": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26078,
        26090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "6555": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26078,
        26103
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6560": {
      "op": "SHL"
    },
    "6561": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26078,
        26103
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6562": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26078,
        26103
      ],
      "op": "DIV",
      "path": "5"
    },
    "6563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6567": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6569": {
      "op": "SHL"
    },
    "6570": {
      "op": "SUB"
    },
    "6571": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26078,
        26103
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6572": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26078,
        26103
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6573": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26078,
        26103
      ],
      "op": "AND",
      "path": "5"
    },
    "6574": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26078,
        26132
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6575": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26078,
        26132
      ],
      "op": "AND",
      "path": "5"
    },
    "6576": {
      "branch": 212,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26078,
        26132
      ],
      "op": "EQ",
      "path": "5"
    },
    "6577": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26132
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6578": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26184
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6579": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26184
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6580": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26184
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19CF"
    },
    "6583": {
      "branch": 212,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26184
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6584": {
      "op": "POP"
    },
    "6585": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26168,
        26184
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6587": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26168,
        26184
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6588": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26168,
        26184
      ],
      "op": "ADD",
      "path": "5"
    },
    "6589": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26168,
        26184
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6590": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26148,
        26164
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "6592": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26148,
        26164
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6597": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6599": {
      "op": "SHL"
    },
    "6600": {
      "op": "SUB"
    },
    "6601": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26148,
        26164
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6602": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26148,
        26164
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6603": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26148,
        26164
      ],
      "op": "AND",
      "path": "5"
    },
    "6604": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26148,
        26184
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6605": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26148,
        26184
      ],
      "op": "AND",
      "path": "5"
    },
    "6606": {
      "branch": 213,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26148,
        26184
      ],
      "op": "EQ",
      "path": "5"
    },
    "6607": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26026,
        26184
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6608": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26018,
        26185
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19D8"
    },
    "6611": {
      "branch": 213,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26018,
        26185
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6614": {
      "op": "DUP1"
    },
    "6615": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26018,
        26185
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6616": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26018,
        26185
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6617": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26195,
        26216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6619": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26219,
        26247
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6620": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26219,
        26247
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6621": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26219,
        26227
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6623": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26219,
        26247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6625": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26219,
        26247
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6626": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26219,
        26247
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC"
    },
    "6659": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26257,
        26284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A0A"
    },
    "6662": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26257,
        26284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3381"
    },
    "6665": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        26257,
        26284
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6666": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26257,
        26284
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6667": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26287,
        26337
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A15"
    },
    "6670": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26305,
        26316
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6671": {
      "offset": [
        2706,
        2707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6673": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26287,
        26304
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x290C"
    },
    "6676": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        26287,
        26337
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6677": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26287,
        26337
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6678": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26380,
        26394
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 69
    },
    "6679": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26380,
        26394
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6680": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26376
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6682": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26376
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6683": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26376
      ],
      "op": "ADD",
      "path": "5"
    },
    "6684": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26376
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6685": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26376
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6686": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26376
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6687": {
      "op": "POP"
    },
    "6688": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26380,
        26394
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "6691": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26380,
        26394
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6692": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26380,
        26394
      ],
      "op": "DIV",
      "path": "5"
    },
    "6693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6699": {
      "op": "SHL"
    },
    "6700": {
      "op": "SUB"
    },
    "6701": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26380,
        26394
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6702": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26380,
        26394
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6703": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26380,
        26394
      ],
      "op": "AND",
      "path": "5"
    },
    "6704": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26394
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6705": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26394
      ],
      "op": "AND",
      "path": "5"
    },
    "6706": {
      "branch": 214,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26394
      ],
      "op": "EQ",
      "path": "5"
    },
    "6707": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26445
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6708": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26445
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6709": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26445
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A52"
    },
    "6712": {
      "branch": 214,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26445
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6713": {
      "op": "POP"
    },
    "6714": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26433,
        26445
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6716": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26433,
        26445
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6717": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26433,
        26445
      ],
      "op": "ADD",
      "path": "5"
    },
    "6718": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26433,
        26445
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6719": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26410,
        26429
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6721": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26410,
        26429
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6722": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26410,
        26429
      ],
      "op": "ADD",
      "path": "5"
    },
    "6723": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26410,
        26429
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6730": {
      "op": "SHL"
    },
    "6731": {
      "op": "SUB"
    },
    "6732": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26410,
        26445
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6733": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26410,
        26445
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6734": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26410,
        26445
      ],
      "op": "AND",
      "path": "5"
    },
    "6735": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26433,
        26445
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6736": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26433,
        26445
      ],
      "op": "AND",
      "path": "5"
    },
    "6737": {
      "branch": 215,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26410,
        26445
      ],
      "op": "EQ",
      "path": "5"
    },
    "6738": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26445
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6739": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26500
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6740": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26500
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6741": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26500
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A72"
    },
    "6744": {
      "branch": 215,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26500
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6745": {
      "op": "POP"
    },
    "6746": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26486,
        26500
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6748": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26486,
        26500
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6749": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26486,
        26500
      ],
      "op": "ADD",
      "path": "5"
    },
    "6750": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26486,
        26500
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6751": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26461,
        26482
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6753": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26461,
        26482
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6754": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26461,
        26482
      ],
      "op": "ADD",
      "path": "5"
    },
    "6755": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26461,
        26482
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6760": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6762": {
      "op": "SHL"
    },
    "6763": {
      "op": "SUB"
    },
    "6764": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26461,
        26500
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6765": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26461,
        26500
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6766": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26461,
        26500
      ],
      "op": "AND",
      "path": "5"
    },
    "6767": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26486,
        26500
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6768": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26486,
        26500
      ],
      "op": "AND",
      "path": "5"
    },
    "6769": {
      "branch": 216,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26461,
        26500
      ],
      "op": "EQ",
      "path": "5"
    },
    "6770": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26500
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6771": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26569
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6772": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26569
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6773": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26569
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A99"
    },
    "6776": {
      "branch": 216,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26569
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6777": {
      "op": "POP"
    },
    "6778": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26548,
        26569
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6780": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26548,
        26569
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6781": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26548,
        26569
      ],
      "op": "ADD",
      "path": "5"
    },
    "6782": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26548,
        26569
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6783": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26516,
        26544
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "6785": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26516,
        26544
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6786": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26516,
        26544
      ],
      "op": "ADD",
      "path": "5"
    },
    "6787": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26516,
        26544
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6792": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6794": {
      "op": "SHL"
    },
    "6795": {
      "op": "SUB"
    },
    "6796": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26516,
        26569
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6797": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26516,
        26569
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6798": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26516,
        26569
      ],
      "op": "AND",
      "path": "5"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6801": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6803": {
      "op": "SHL"
    },
    "6804": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26548,
        26569
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6805": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26548,
        26569
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6806": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26548,
        26569
      ],
      "op": "DIV",
      "path": "5"
    },
    "6807": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26548,
        26569
      ],
      "op": "AND",
      "path": "5"
    },
    "6808": {
      "branch": 217,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26516,
        26569
      ],
      "op": "EQ",
      "path": "5"
    },
    "6809": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26569
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6810": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26634
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6811": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26634
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6812": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26634
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AC0"
    },
    "6815": {
      "branch": 217,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26634
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6816": {
      "op": "POP"
    },
    "6817": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26615,
        26634
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6819": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26615,
        26634
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6820": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26615,
        26634
      ],
      "op": "ADD",
      "path": "5"
    },
    "6821": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26615,
        26634
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6822": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26585,
        26611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "6824": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26585,
        26611
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6825": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26585,
        26611
      ],
      "op": "ADD",
      "path": "5"
    },
    "6826": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26585,
        26611
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6831": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6833": {
      "op": "SHL"
    },
    "6834": {
      "op": "SUB"
    },
    "6835": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26585,
        26634
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6836": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26585,
        26634
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6837": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26585,
        26634
      ],
      "op": "AND",
      "path": "5"
    },
    "6838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6840": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6842": {
      "op": "SHL"
    },
    "6843": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26615,
        26634
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6844": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26615,
        26634
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6845": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26615,
        26634
      ],
      "op": "DIV",
      "path": "5"
    },
    "6846": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26615,
        26634
      ],
      "op": "AND",
      "path": "5"
    },
    "6847": {
      "branch": 218,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26585,
        26634
      ],
      "op": "EQ",
      "path": "5"
    },
    "6848": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26634
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6849": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6850": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26691
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6851": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AD6"
    },
    "6854": {
      "branch": 218,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6855": {
      "op": "POP"
    },
    "6856": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26676,
        26691
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6857": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26676,
        26691
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6858": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26650,
        26672
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6859": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26650,
        26672
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6860": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26650,
        26691
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6861": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26650,
        26691
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6862": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26676,
        26691
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6864": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26676,
        26691
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6865": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26676,
        26691
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6866": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26676,
        26691
      ],
      "op": "AND",
      "path": "5"
    },
    "6867": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26650,
        26691
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6868": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26650,
        26691
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6869": {
      "branch": 219,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26650,
        26691
      ],
      "op": "EQ",
      "path": "5"
    },
    "6870": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26355,
        26691
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6871": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26347,
        26692
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1ADF"
    },
    "6874": {
      "branch": 219,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26347,
        26692
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6877": {
      "op": "DUP1"
    },
    "6878": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26347,
        26692
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6879": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26347,
        26692
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6880": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26808,
        26827
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 70,
      "value": "0x8"
    },
    "6882": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26808,
        26827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6883": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26808,
        26827
      ],
      "op": "ADD",
      "path": "5"
    },
    "6884": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26808,
        26834
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6885": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26711,
        26792
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AF7"
    },
    "6888": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26723,
        26734
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6889": {
      "op": "PUSH4",
      "value": "0x6BD2AF57"
    },
    "6894": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6896": {
      "op": "SHL"
    },
    "6897": {
      "offset": [
        2706,
        2707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6899": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26711,
        26722
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x293D"
    },
    "6902": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        26711,
        26792
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6903": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26711,
        26792
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6904": {
      "branch": 220,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26711,
        26834
      ],
      "op": "EQ",
      "path": "5"
    },
    "6905": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26703,
        26835
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B01"
    },
    "6908": {
      "branch": 220,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26703,
        26835
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6911": {
      "op": "DUP1"
    },
    "6912": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26703,
        26835
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6913": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26703,
        26835
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6914": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26849,
        26868
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "6916": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26849,
        26868
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6917": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26849,
        26868
      ],
      "op": "ADD",
      "path": "5"
    },
    "6918": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26849,
        26875
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6919": {
      "branch": 221,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26849,
        26879
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6920": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26845,
        27359
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B90"
    },
    "6923": {
      "branch": 221,
      "fn": "PolicyManager.verifyState",
      "offset": [
        26845,
        27359
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6924": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26895,
        26930
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6926": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26939
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6927": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26952
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "6929": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26952
      ],
      "op": "ADD",
      "path": "5"
    },
    "6930": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26953,
        26954
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6932": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6933": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6934": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6935": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "LT",
      "path": "5"
    },
    "6936": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B1D"
    },
    "6939": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6940": {
      "dev": "Index out of range",
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "INVALID",
      "path": "5"
    },
    "6941": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6942": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6943": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6945": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6946": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6948": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6950": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6951": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6952": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "6954": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "MUL",
      "path": "5"
    },
    "6955": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26933,
        26955
      ],
      "op": "ADD",
      "path": "5"
    },
    "6956": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26895,
        26955
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6957": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26895,
        26955
      ],
      "op": "POP",
      "path": "5"
    },
    "6958": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26969,
        27010
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B35"
    },
    "6961": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26969,
        27010
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3361"
    },
    "6964": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        26969,
        27010
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6965": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26969,
        27010
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6966": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27013,
        27092
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B41"
    },
    "6969": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27057,
        27068
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6970": {
      "offset": [
        2706,
        2707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6972": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        2706,
        2707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6973": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27013,
        27039
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2958"
    },
    "6976": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        27013,
        27092
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6977": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27013,
        27092
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6978": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27141,
        27157
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 71
    },
    "6979": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27141,
        27157
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6980": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27137
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6981": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27137
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6982": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26969,
        27092
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6983": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26969,
        27092
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6984": {
      "op": "POP"
    },
    "6985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6991": {
      "op": "SHL"
    },
    "6992": {
      "op": "SUB"
    },
    "6993": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27157
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6994": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27157
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6995": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27157
      ],
      "op": "AND",
      "path": "5"
    },
    "6996": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27141,
        27157
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6997": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27141,
        27157
      ],
      "op": "AND",
      "path": "5"
    },
    "6998": {
      "branch": 222,
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27157
      ],
      "op": "EQ",
      "path": "5"
    },
    "6999": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27256
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7000": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27256
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7001": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27256
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B69"
    },
    "7004": {
      "branch": 222,
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27256
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7005": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27256
      ],
      "op": "POP",
      "path": "5"
    },
    "7006": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27222,
        27233
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7007": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27222,
        27256
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "7009": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27222,
        27256
      ],
      "op": "ADD",
      "path": "5"
    },
    "7010": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27222,
        27256
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7011": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27177,
        27195
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7012": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27177,
        27218
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7014": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27177,
        27218
      ],
      "op": "ADD",
      "path": "5"
    },
    "7015": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27177,
        27218
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7016": {
      "branch": 223,
      "fn": "PolicyManager.verifyState",
      "offset": [
        27177,
        27256
      ],
      "op": "EQ",
      "path": "5"
    },
    "7017": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27256
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7018": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27347
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7019": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27347
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7020": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27347
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B84"
    },
    "7023": {
      "branch": 223,
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27347
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7024": {
      "op": "POP"
    },
    "7025": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27317,
        27347
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "7027": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27317,
        27347
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7028": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27317,
        27347
      ],
      "op": "ADD",
      "path": "5"
    },
    "7029": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27317,
        27347
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7030": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27276,
        27313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7032": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27276,
        27313
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7033": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27276,
        27313
      ],
      "op": "ADD",
      "path": "5"
    },
    "7034": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27276,
        27313
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7035": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27317,
        27347
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "7038": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27276,
        27347
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7039": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27276,
        27347
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7040": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27276,
        27347
      ],
      "op": "AND",
      "path": "5"
    },
    "7041": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27317,
        27347
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7042": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27317,
        27347
      ],
      "op": "AND",
      "path": "5"
    },
    "7043": {
      "branch": 224,
      "fn": "PolicyManager.verifyState",
      "offset": [
        27276,
        27347
      ],
      "op": "EQ",
      "path": "5"
    },
    "7044": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27114,
        27347
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7045": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27106,
        27348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B8D"
    },
    "7048": {
      "branch": 224,
      "fn": "PolicyManager.verifyState",
      "offset": [
        27106,
        27348
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7051": {
      "op": "DUP1"
    },
    "7052": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27106,
        27348
      ],
      "op": "REVERT",
      "path": "5"
    },
    "7053": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27106,
        27348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7054": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26845,
        27359
      ],
      "op": "POP",
      "path": "5"
    },
    "7055": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26845,
        27359
      ],
      "op": "POP",
      "path": "5"
    },
    "7056": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        26845,
        27359
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7057": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27369,
        27394
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7059": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27397,
        27417
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7060": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27397,
        27417
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7061": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27397,
        27402
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "7063": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27397,
        27417
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7065": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27397,
        27417
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7066": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27397,
        27417
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BC"
    },
    "7099": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27427,
        27458
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BC2"
    },
    "7102": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27427,
        27458
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3411"
    },
    "7105": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        27427,
        27458
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7106": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27427,
        27458
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7107": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27461,
        27508
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BCD"
    },
    "7110": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27481,
        27492
      ],
      "op": "DUP7",
      "path": "5"
    },
    "7111": {
      "offset": [
        2764,
        2765
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7113": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27461,
        27480
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2981"
    },
    "7116": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        27461,
        27508
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7117": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27461,
        27508
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7118": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27549,
        27561
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 72
    },
    "7119": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27549,
        27561
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7120": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27545
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7121": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27545
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7122": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27427,
        27508
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7123": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27427,
        27508
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7124": {
      "op": "POP"
    },
    "7125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7129": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7131": {
      "op": "SHL"
    },
    "7132": {
      "op": "SUB"
    },
    "7133": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27561
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7134": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27561
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7135": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27561
      ],
      "op": "AND",
      "path": "5"
    },
    "7136": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27549,
        27561
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7137": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27549,
        27561
      ],
      "op": "AND",
      "path": "5"
    },
    "7138": {
      "branch": 225,
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27561
      ],
      "op": "EQ",
      "path": "5"
    },
    "7139": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27620
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7140": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27620
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7141": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27620
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BF5"
    },
    "7144": {
      "branch": 225,
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27620
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7145": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27620
      ],
      "op": "POP",
      "path": "5"
    },
    "7146": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27604,
        27612
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7147": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27604,
        27620
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "7149": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27604,
        27620
      ],
      "op": "ADD",
      "path": "5"
    },
    "7150": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27604,
        27620
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7151": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27577,
        27592
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7152": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27577,
        27600
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7154": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27577,
        27600
      ],
      "op": "ADD",
      "path": "5"
    },
    "7155": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27577,
        27600
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7156": {
      "branch": 226,
      "fn": "PolicyManager.verifyState",
      "offset": [
        27577,
        27620
      ],
      "op": "EQ",
      "path": "5"
    },
    "7157": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27620
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7158": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27699
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7159": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27699
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7160": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27699
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C14"
    },
    "7163": {
      "branch": 226,
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27699
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7164": {
      "op": "POP"
    },
    "7165": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27673,
        27699
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7166": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27673,
        27699
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7167": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27636,
        27669
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7169": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27636,
        27669
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7170": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27636,
        27669
      ],
      "op": "ADD",
      "path": "5"
    },
    "7171": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27636,
        27669
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7172": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27673,
        27699
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "7175": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27636,
        27699
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7176": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27636,
        27699
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7177": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27636,
        27699
      ],
      "op": "AND",
      "path": "5"
    },
    "7178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7180": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7182": {
      "op": "SHL"
    },
    "7183": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27673,
        27699
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7184": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27673,
        27699
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7185": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27673,
        27699
      ],
      "op": "DIV",
      "path": "5"
    },
    "7186": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27673,
        27699
      ],
      "op": "AND",
      "path": "5"
    },
    "7187": {
      "branch": 227,
      "fn": "PolicyManager.verifyState",
      "offset": [
        27636,
        27699
      ],
      "op": "EQ",
      "path": "5"
    },
    "7188": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27699
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7189": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27764
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7190": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27764
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7191": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27764
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C27"
    },
    "7194": {
      "branch": 227,
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27764
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7195": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27764
      ],
      "op": "POP",
      "path": "5"
    },
    "7196": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27745,
        27753
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7197": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27745,
        27764
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "7199": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27745,
        27764
      ],
      "op": "ADD",
      "path": "5"
    },
    "7200": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27745,
        27764
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7201": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27715,
        27730
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7202": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27715,
        27741
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "7204": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27715,
        27741
      ],
      "op": "ADD",
      "path": "5"
    },
    "7205": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27715,
        27741
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7206": {
      "branch": 228,
      "fn": "PolicyManager.verifyState",
      "offset": [
        27715,
        27764
      ],
      "op": "EQ",
      "path": "5"
    },
    "7207": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27526,
        27764
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7208": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27518,
        27765
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C30"
    },
    "7211": {
      "branch": 228,
      "fn": "PolicyManager.verifyState",
      "offset": [
        27518,
        27765
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7214": {
      "op": "DUP1"
    },
    "7215": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27518,
        27765
      ],
      "op": "REVERT",
      "path": "5"
    },
    "7216": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27518,
        27765
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7217": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27936,
        27938
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 73,
      "value": "0xB"
    },
    "7219": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27918,
        27939
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7221": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27918,
        27939
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7222": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27918,
        27939
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7223": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27918,
        27939
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7224": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27918,
        27935
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "7226": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27918,
        27935
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7227": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27918,
        27935
      ],
      "op": "ADD",
      "path": "5"
    },
    "7228": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27918,
        27939
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7230": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27918,
        27939
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7231": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27918,
        27939
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7233": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27918,
        27939
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7234": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27918,
        27939
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7235": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27918,
        27939
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7236": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27918,
        27939
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7237": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27791,
        27913
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C59"
    },
    "7240": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27791,
        27913
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7241": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27803,
        27814
      ],
      "op": "DUP10",
      "path": "5"
    },
    "7242": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27803,
        27814
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7243": {
      "op": "PUSH4",
      "value": "0x4740E52D"
    },
    "7248": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7250": {
      "op": "SHL"
    },
    "7251": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27816,
        27845
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7252": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27918,
        27939
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7253": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27791,
        27802
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29A9"
    },
    "7256": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        27791,
        27913
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7257": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27791,
        27913
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7258": {
      "branch": 229,
      "fn": "PolicyManager.verifyState",
      "offset": [
        27784,
        27939
      ],
      "op": "EQ",
      "path": "5"
    },
    "7259": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27776,
        27940
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C63"
    },
    "7262": {
      "branch": 229,
      "fn": "PolicyManager.verifyState",
      "offset": [
        27776,
        27940
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7265": {
      "op": "DUP1"
    },
    "7266": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27776,
        27940
      ],
      "op": "REVERT",
      "path": "5"
    },
    "7267": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        27776,
        27940
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7268": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "POP",
      "path": "5"
    },
    "7269": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "POP",
      "path": "5"
    },
    "7270": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "POP",
      "path": "5"
    },
    "7271": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "POP",
      "path": "5"
    },
    "7272": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "POP",
      "path": "5"
    },
    "7273": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        25828,
        27947
      ],
      "op": "POP",
      "path": "5"
    },
    "7274": {
      "fn": "PolicyManager.verifyState",
      "jump": "o",
      "offset": [
        25828,
        27947
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7275": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20268,
        20459
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7276": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 74,
      "value": "0x40"
    },
    "7278": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7279": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7286": {
      "op": "SHL"
    },
    "7287": {
      "op": "SUB"
    },
    "7288": {
      "op": "NOT"
    },
    "7289": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7290": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "AND",
      "path": "5"
    },
    "7291": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7293": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7294": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "ADD",
      "path": "5"
    },
    "7295": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7296": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7309": {
      "op": "NOT"
    },
    "7310": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "7312": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7313": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7314": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "SHL",
      "path": "5"
    },
    "7315": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "AND",
      "path": "5"
    },
    "7316": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x30"
    },
    "7318": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7319": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "ADD",
      "path": "5"
    },
    "7320": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7321": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7322": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7323": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7325": {
      "op": "DUP2"
    },
    "7326": {
      "op": "DUP4"
    },
    "7327": {
      "op": "SUB"
    },
    "7328": {
      "op": "ADD"
    },
    "7329": {
      "op": "DUP2"
    },
    "7330": {
      "op": "MSTORE"
    },
    "7331": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "7333": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7334": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7335": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "ADD",
      "path": "5"
    },
    "7336": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7337": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7338": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20405,
        20439
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7339": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20350,
        20357
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7341": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20350,
        20357
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7342": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20376,
        20452
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xED2"
    },
    "7345": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20376,
        20452
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7346": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "7348": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7350": {
      "op": "SHL"
    },
    "7351": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        20376,
        20404
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29C5"
    },
    "7354": {
      "fn": "PolicyManager.getRevocationHash",
      "jump": "i",
      "offset": [
        20376,
        20452
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7355": {
      "offset": [
        859,
        880
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7356": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        859,
        880
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "7358": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        859,
        880
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7365": {
      "op": "SHL"
    },
    "7366": {
      "op": "SUB"
    },
    "7367": {
      "offset": [
        859,
        880
      ],
      "op": "AND",
      "path": "15"
    },
    "7368": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        859,
        880
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7369": {
      "fn": "PolicyManager.getRevocationHash",
      "jump": "o",
      "offset": [
        859,
        880
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7370": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7375": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7377": {
      "op": "SHL"
    },
    "7378": {
      "op": "SUB"
    },
    "7379": {
      "op": "NOT"
    },
    "7380": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24048
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7381": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24048
      ],
      "op": "AND",
      "path": "5"
    },
    "7382": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23911,
        23923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7384": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24048
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7385": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24048
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7386": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24048
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7387": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7389": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24048
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7391": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24048
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7392": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24048
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7394": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24048
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7395": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24048
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7396": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24061
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "7398": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24061
      ],
      "op": "ADD",
      "path": "5"
    },
    "7399": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7400": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7401": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23911,
        23923
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7402": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23911,
        23923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7403": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23911,
        23923
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7404": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23911,
        23923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7405": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23911,
        23923
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7406": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23911,
        23923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7407": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24061
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7408": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24062,
        24068
      ],
      "op": "DUP7",
      "path": "5"
    },
    "7409": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24062,
        24068
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7410": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7411": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "LT",
      "path": "5"
    },
    "7412": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CF9"
    },
    "7415": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7416": {
      "dev": "Index out of range",
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "INVALID",
      "path": "5"
    },
    "7417": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7418": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7420": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7421": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7422": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7423": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7425": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7426": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7427": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7428": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "7430": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7431": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7432": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "MUL",
      "path": "5"
    },
    "7433": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24029,
        24069
      ],
      "op": "ADD",
      "path": "5"
    },
    "7434": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24086,
        24095
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 75
    },
    "7435": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24086,
        24095
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7436": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24086,
        24095
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "7438": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24130,
        24157
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 76
    },
    "7439": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24130,
        24157
      ],
      "op": "ADD",
      "path": "5"
    },
    "7440": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24130,
        24157
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7441": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24188,
        24211
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 77,
      "value": "0x2"
    },
    "7443": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24188,
        24211
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7444": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24188,
        24211
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7445": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24188,
        24211
      ],
      "op": "ADD",
      "path": "5"
    },
    "7446": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24188,
        24211
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7453": {
      "op": "SHL"
    },
    "7454": {
      "op": "SUB"
    },
    "7455": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24086,
        24095
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7456": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24086,
        24095
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7457": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24086,
        24095
      ],
      "op": "AND",
      "path": "5"
    },
    "7458": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24086,
        24095
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "7459": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24130,
        24157
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7460": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24130,
        24157
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "7461": {
      "op": "POP"
    },
    "7462": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24188,
        24211
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "7465": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24188,
        24211
      ],
      "op": "AND",
      "path": "5"
    },
    "7466": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        24188,
        24211
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "7467": {
      "op": "POP"
    },
    "7468": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        23699,
        24218
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "7469": {
      "op": "POP"
    },
    "7470": {
      "op": "POP"
    },
    "7471": {
      "op": "POP"
    },
    "7472": {
      "op": "POP"
    },
    "7473": {
      "fn": "PolicyManager.getArrangementInfo",
      "jump": "o",
      "offset": [
        23699,
        24218
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7474": {
      "fn": "PolicyManager.refund",
      "offset": [
        21626,
        21864
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7479": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7481": {
      "op": "SHL"
    },
    "7482": {
      "op": "SUB"
    },
    "7483": {
      "op": "NOT"
    },
    "7484": {
      "fn": "PolicyManager.refund",
      "offset": [
        21704,
        21723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7485": {
      "fn": "PolicyManager.refund",
      "offset": [
        21704,
        21723
      ],
      "op": "AND",
      "path": "5"
    },
    "7486": {
      "fn": "PolicyManager.refund",
      "offset": [
        21680,
        21701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7488": {
      "fn": "PolicyManager.refund",
      "offset": [
        21704,
        21723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7489": {
      "fn": "PolicyManager.refund",
      "offset": [
        21704,
        21723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7490": {
      "fn": "PolicyManager.refund",
      "offset": [
        21704,
        21723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7491": {
      "fn": "PolicyManager.refund",
      "offset": [
        21704,
        21712
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7493": {
      "fn": "PolicyManager.refund",
      "offset": [
        21704,
        21723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7495": {
      "fn": "PolicyManager.refund",
      "offset": [
        21704,
        21723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7496": {
      "fn": "PolicyManager.refund",
      "offset": [
        21704,
        21723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7498": {
      "fn": "PolicyManager.refund",
      "offset": [
        21704,
        21723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7499": {
      "fn": "PolicyManager.refund",
      "offset": [
        21704,
        21723
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7500": {
      "fn": "PolicyManager.refund",
      "offset": [
        21741,
        21753
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 78,
      "value": "0x1"
    },
    "7502": {
      "fn": "PolicyManager.refund",
      "offset": [
        21741,
        21753
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7503": {
      "fn": "PolicyManager.refund",
      "offset": [
        21741,
        21753
      ],
      "op": "ADD",
      "path": "5"
    },
    "7504": {
      "fn": "PolicyManager.refund",
      "offset": [
        21741,
        21753
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7511": {
      "op": "SHL"
    },
    "7512": {
      "op": "SUB"
    },
    "7513": {
      "fn": "PolicyManager.refund",
      "offset": [
        21741,
        21753
      ],
      "op": "AND",
      "path": "5"
    },
    "7514": {
      "fn": "PolicyManager.refund",
      "offset": [
        21757,
        21767
      ],
      "op": "CALLER",
      "path": "5"
    },
    "7515": {
      "fn": "PolicyManager.refund",
      "offset": [
        21741,
        21767
      ],
      "op": "EQ",
      "path": "5"
    },
    "7516": {
      "branch": 230,
      "fn": "PolicyManager.refund",
      "offset": [
        21741,
        21767
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7517": {
      "fn": "PolicyManager.refund",
      "offset": [
        21741,
        21799
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D74"
    },
    "7520": {
      "branch": 230,
      "fn": "PolicyManager.refund",
      "offset": [
        21741,
        21799
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7521": {
      "op": "POP"
    },
    "7522": {
      "fn": "PolicyManager.refund",
      "offset": [
        21771,
        21785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7523": {
      "fn": "PolicyManager.refund",
      "offset": [
        21771,
        21785
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7524": {
      "fn": "PolicyManager.refund",
      "offset": [
        21771,
        21785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "7527": {
      "fn": "PolicyManager.refund",
      "offset": [
        21771,
        21785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7528": {
      "fn": "PolicyManager.refund",
      "offset": [
        21771,
        21785
      ],
      "op": "DIV",
      "path": "5"
    },
    "7529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7535": {
      "op": "SHL"
    },
    "7536": {
      "op": "SUB"
    },
    "7537": {
      "fn": "PolicyManager.refund",
      "offset": [
        21771,
        21785
      ],
      "op": "AND",
      "path": "5"
    },
    "7538": {
      "fn": "PolicyManager.refund",
      "offset": [
        21789,
        21799
      ],
      "op": "CALLER",
      "path": "5"
    },
    "7539": {
      "branch": 231,
      "fn": "PolicyManager.refund",
      "offset": [
        21771,
        21799
      ],
      "op": "EQ",
      "path": "5"
    },
    "7540": {
      "fn": "PolicyManager.refund",
      "offset": [
        21741,
        21799
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7541": {
      "fn": "PolicyManager.refund",
      "offset": [
        21733,
        21800
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D7D"
    },
    "7544": {
      "branch": 231,
      "fn": "PolicyManager.refund",
      "offset": [
        21733,
        21800
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7547": {
      "op": "DUP1"
    },
    "7548": {
      "fn": "PolicyManager.refund",
      "offset": [
        21733,
        21800
      ],
      "op": "REVERT",
      "path": "5"
    },
    "7549": {
      "fn": "PolicyManager.refund",
      "offset": [
        21733,
        21800
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7550": {
      "fn": "PolicyManager.refund",
      "offset": [
        21810,
        21857
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 79,
      "value": "0x1957"
    },
    "7553": {
      "fn": "PolicyManager.refund",
      "offset": [
        21825,
        21834
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7554": {
      "offset": [
        2764,
        2765
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7556": {
      "fn": "PolicyManager.refund",
      "offset": [
        21851,
        21856
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7557": {
      "fn": "PolicyManager.refund",
      "offset": [
        21810,
        21824
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20C8"
    },
    "7560": {
      "fn": "PolicyManager.refund",
      "jump": "i",
      "offset": [
        21810,
        21857
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7561": {
      "offset": [
        2965,
        3002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7562": {
      "fn": "PolicyManager.refund",
      "offset": [
        2965,
        3002
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x0"
    },
    "7595": {
      "fn": "PolicyManager.refund",
      "offset": [
        2965,
        3002
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7596": {
      "fn": "PolicyManager.refund",
      "jump": "o",
      "offset": [
        2965,
        3002
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7597": {
      "offset": [
        1132,
        1154
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7598": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "7600": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7605": {
      "op": "SHL"
    },
    "7606": {
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7607": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "DIV",
      "path": "15"
    },
    "7608": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7610": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "AND",
      "path": "15"
    },
    "7611": {
      "fn": "PolicyManager.refund",
      "offset": [
        1132,
        1154
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7612": {
      "fn": "PolicyManager.refund",
      "jump": "o",
      "offset": [
        1132,
        1154
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7613": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22439,
        22622
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7614": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22519,
        22538
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7616": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22561,
        22615
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 80,
      "value": "0x1033"
    },
    "7619": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22590,
        22599
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7620": {
      "offset": [
        2764,
        2765
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7622": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        22561,
        22589
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x276A"
    },
    "7625": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        22561,
        22615
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7626": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28051,
        28807
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7627": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28125,
        28153
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 81,
      "value": "0x1DD3"
    },
    "7630": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28145,
        28152
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7631": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28125,
        28144
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CC4"
    },
    "7634": {
      "fn": "PolicyManager.finishUpgrade",
      "jump": "i",
      "offset": [
        28125,
        28153
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7635": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28125,
        28153
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7636": {
      "op": "POP"
    },
    "7637": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28266,
        28274
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7639": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28266,
        28294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7641": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28266,
        28294
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7642": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28266,
        28294
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7643": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28266,
        28294
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7644": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28266,
        28294
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC"
    },
    "7677": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28304,
        28331
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 82
    },
    "7678": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28304,
        28331
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7679": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28341,
        28353
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 83,
      "value": "0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3ED"
    },
    "7712": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28341,
        28369
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7713": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28341,
        28369
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7714": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28364,
        28368
      ],
      "op": "ADDRESS",
      "path": "5"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7721": {
      "op": "SHL"
    },
    "7722": {
      "op": "SUB"
    },
    "7723": {
      "op": "NOT"
    },
    "7724": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28341,
        28369
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7725": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28341,
        28369
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7726": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28341,
        28369
      ],
      "op": "AND",
      "path": "5"
    },
    "7727": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28341,
        28369
      ],
      "op": "OR",
      "path": "5"
    },
    "7728": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28341,
        28369
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7729": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28341,
        28369
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7730": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28341,
        28369
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7731": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28379,
        28400
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 84,
      "value": "0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EE"
    },
    "7764": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28379,
        28404
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7765": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28379,
        28404
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7766": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28464,
        28465
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 85,
      "value": "0x3"
    },
    "7768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7772": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7774": {
      "op": "SHL"
    },
    "7775": {
      "op": "SUB"
    },
    "7776": {
      "op": "NOT"
    },
    "7777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7779": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7781": {
      "op": "SHL"
    },
    "7782": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7791": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7793": {
      "op": "SHL"
    },
    "7794": {
      "op": "NOT"
    },
    "7795": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28379,
        28404
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7796": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28379,
        28404
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "7797": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28379,
        28404
      ],
      "op": "AND",
      "path": "5"
    },
    "7798": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28379,
        28404
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7799": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28379,
        28404
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7800": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28379,
        28404
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7801": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28379,
        28404
      ],
      "op": "OR",
      "path": "5"
    },
    "7802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7806": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7808": {
      "op": "SHL"
    },
    "7809": {
      "op": "SUB"
    },
    "7810": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28414,
        28437
      ],
      "op": "AND",
      "path": "5",
      "statement": 86
    },
    "7811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7813": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "7815": {
      "op": "SHL"
    },
    "7816": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28414,
        28437
      ],
      "op": "OR",
      "path": "5"
    },
    "7817": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28447,
        28465
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7818": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28447,
        28465
      ],
      "op": "AND",
      "path": "5"
    },
    "7819": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28447,
        28465
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7820": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28447,
        28465
      ],
      "op": "OR",
      "path": "5"
    },
    "7821": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28447,
        28465
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7822": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28447,
        28465
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7823": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28447,
        28465
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7824": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7829": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7831": {
      "op": "SHL"
    },
    "7832": {
      "op": "SUB"
    },
    "7833": {
      "op": "NOT"
    },
    "7834": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28304,
        28331
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7835": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28304,
        28331
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "7836": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28304,
        28331
      ],
      "op": "AND",
      "path": "5"
    },
    "7837": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28321,
        28331
      ],
      "op": "CALLER",
      "path": "5"
    },
    "7838": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28304,
        28331
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "7841": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28304,
        28331
      ],
      "op": "MUL",
      "path": "5"
    },
    "7842": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28304,
        28331
      ],
      "op": "OR",
      "path": "5"
    },
    "7843": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7845": {
      "op": "NOT"
    },
    "7846": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28475,
        28497
      ],
      "op": "AND",
      "path": "5",
      "statement": 87
    },
    "7847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7849": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28475,
        28497
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7850": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28475,
        28497
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7851": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28475,
        28497
      ],
      "op": "OR",
      "path": "5"
    },
    "7852": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28475,
        28497
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7853": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28475,
        28497
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "7854": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28475,
        28497
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7855": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28266,
        28294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7857": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 88
    },
    "7858": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7859": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "7861": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7862": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "ADD",
      "path": "5"
    },
    "7863": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7864": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7867": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7868": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7869": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7870": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28563,
        28565
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xB"
    },
    "7872": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7873": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "DUP10",
      "path": "5"
    },
    "7874": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "ADD",
      "path": "5"
    },
    "7875": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7876": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7877": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7878": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28567,
        28569
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x16"
    },
    "7880": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "7881": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7882": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "ADD",
      "path": "5"
    },
    "7883": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "7884": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7885": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7886": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28526
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3F4"
    },
    "7919": {
      "op": "DUP1"
    },
    "7920": {
      "op": "SLOAD"
    },
    "7921": {
      "op": "SWAP10"
    },
    "7922": {
      "op": "DUP11"
    },
    "7923": {
      "op": "ADD"
    },
    "7924": {
      "op": "DUP2"
    },
    "7925": {
      "op": "SSTORE"
    },
    "7926": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7927": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7928": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7929": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7930": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDAF6A3DF2E7FE032FABA7F1C41811297BB73983780E1888A846F8AA1A8324D27"
    },
    "7963": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "7964": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7965": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "7966": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "MUL",
      "path": "5"
    },
    "7967": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "7968": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "DUP9",
      "path": "5"
    },
    "7969": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "ADD",
      "path": "5"
    },
    "7970": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7971": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7972": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7973": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "7974": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "AND",
      "path": "5"
    },
    "7975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7981": {
      "op": "SHL"
    },
    "7982": {
      "op": "SUB"
    },
    "7983": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7984": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "7985": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "AND",
      "path": "5"
    },
    "7986": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "7987": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7988": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "7989": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "OR",
      "path": "5"
    },
    "7990": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7991": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "7992": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7993": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7994": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDAF6A3DF2E7FE032FABA7F1C41811297BB73983780E1888A846F8AA1A8324D28"
    },
    "8027": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "DUP7",
      "path": "5"
    },
    "8028": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "ADD",
      "path": "5"
    },
    "8029": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8030": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8031": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDAF6A3DF2E7FE032FABA7F1C41811297BB73983780E1888A846F8AA1A8324D29"
    },
    "8064": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8065": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "8066": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "ADD",
      "path": "5"
    },
    "8067": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8068": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8069": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8072": {
      "op": "NOT"
    },
    "8073": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "AND",
      "path": "5"
    },
    "8074": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28532,
        28570
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "8077": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8078": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "8079": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "AND",
      "path": "5"
    },
    "8080": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "8081": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8082": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "8083": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "OR",
      "path": "5"
    },
    "8084": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8085": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "8086": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28507,
        28571
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8087": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28609,
        28629
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BC"
    },
    "8120": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28639,
        28657
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 89
    },
    "8121": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28639,
        28657
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8122": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28686,
        28688
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 90,
      "value": "0x21"
    },
    "8124": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28667,
        28683
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BD"
    },
    "8157": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28667,
        28688
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8158": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28654,
        28657
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "8160": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28639,
        28657
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "8161": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28639,
        28657
      ],
      "op": "AND",
      "path": "5"
    },
    "8162": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28639,
        28657
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8163": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28639,
        28657
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8164": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28639,
        28657
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8165": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28639,
        28657
      ],
      "op": "OR",
      "path": "5"
    },
    "8166": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8169": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8171": {
      "op": "SHL"
    },
    "8172": {
      "op": "NOT"
    },
    "8173": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28698,
        28729
      ],
      "op": "AND",
      "path": "5",
      "statement": 91
    },
    "8174": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "8176": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "8178": {
      "op": "SHL"
    },
    "8179": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28698,
        28729
      ],
      "op": "OR",
      "path": "5"
    },
    "8180": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28698,
        28729
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8181": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28698,
        28729
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8182": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28698,
        28729
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8183": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28739,
        28760
      ],
      "op": "MSTORE",
      "path": "5",
      "statement": 92
    },
    "8184": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28739,
        28756
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BF"
    },
    "8217": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28739,
        28760
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8218": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28739,
        28760
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8219": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28763,
        28765
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x37"
    },
    "8221": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28739,
        28760
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xE98516EEF36AB8324C691EAAE918B396562BBFF0916FAB980BA5F148C2DA4DC8"
    },
    "8254": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28739,
        28765
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8255": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28797,
        28800
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 93,
      "value": "0x309"
    },
    "8258": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28775,
        28794
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BE"
    },
    "8291": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        28775,
        28800
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8292": {
      "fn": "PolicyManager.finishUpgrade",
      "jump": "o",
      "offset": [
        28051,
        28807
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8293": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8294": {
      "offset": [
        864,
        873
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x206D"
    },
    "8297": {
      "offset": [
        864,
        871
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1875"
    },
    "8300": {
      "jump": "i",
      "offset": [
        864,
        873
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8301": {
      "branch": 266,
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        873
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8302": {
      "offset": [
        856,
        874
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2076"
    },
    "8305": {
      "branch": 266,
      "offset": [
        856,
        874
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "8306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8308": {
      "op": "DUP1"
    },
    "8309": {
      "op": "REVERT"
    },
    "8310": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8311": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1728,
        1756
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 94,
      "value": "0x17F4"
    },
    "8314": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1747,
        1755
      ],
      "op": "DUP2",
      "path": "21"
    },
    "8315": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1728,
        1746
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2D1E"
    },
    "8318": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1728,
        1756
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8319": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20693,
        20992
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8320": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20805,
        20817
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8322": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20820,
        20855
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x208B"
    },
    "8325": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20838,
        20847
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8326": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20849,
        20854
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8327": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20820,
        20837
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C6B"
    },
    "8330": {
      "fn": "PolicyManager.checkOwnerSignature",
      "jump": "i",
      "offset": [
        20820,
        20855
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8331": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20820,
        20855
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8332": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20805,
        20855
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8333": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20805,
        20855
      ],
      "op": "POP",
      "path": "5"
    },
    "8334": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20865,
        20882
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8336": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20885,
        20928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2099"
    },
    "8339": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20911,
        20915
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8340": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20917,
        20927
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8341": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20885,
        20910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D8C"
    },
    "8344": {
      "fn": "PolicyManager.checkOwnerSignature",
      "jump": "i",
      "offset": [
        20885,
        20928
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8345": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20885,
        20928
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8346": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20865,
        20928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8347": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20865,
        20928
      ],
      "op": "POP",
      "path": "5"
    },
    "8348": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20975,
        20984
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 95
    },
    "8349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8355": {
      "op": "SHL"
    },
    "8356": {
      "op": "SUB"
    },
    "8357": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20946,
        20984
      ],
      "op": "AND",
      "path": "5"
    },
    "8358": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20946,
        20971
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20AE"
    },
    "8361": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20961,
        20970
      ],
      "op": "DUP7",
      "path": "5"
    },
    "8362": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20946,
        20960
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE82"
    },
    "8365": {
      "fn": "PolicyManager.checkOwnerSignature",
      "jump": "i",
      "offset": [
        20946,
        20971
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8366": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20946,
        20971
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8373": {
      "op": "SHL"
    },
    "8374": {
      "op": "SUB"
    },
    "8375": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20946,
        20984
      ],
      "op": "AND",
      "path": "5"
    },
    "8376": {
      "branch": 232,
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20946,
        20984
      ],
      "op": "EQ",
      "path": "5"
    },
    "8377": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20938,
        20985
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20C1"
    },
    "8380": {
      "branch": 232,
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20938,
        20985
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8383": {
      "op": "DUP1"
    },
    "8384": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20938,
        20985
      ],
      "op": "REVERT",
      "path": "5"
    },
    "8385": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20938,
        20985
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8386": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20693,
        20992
      ],
      "op": "POP",
      "path": "5"
    },
    "8387": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20693,
        20992
      ],
      "op": "POP",
      "path": "5"
    },
    "8388": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20693,
        20992
      ],
      "op": "POP",
      "path": "5"
    },
    "8389": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20693,
        20992
      ],
      "op": "POP",
      "path": "5"
    },
    "8390": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        20693,
        20992
      ],
      "op": "POP",
      "path": "5"
    },
    "8391": {
      "fn": "PolicyManager.checkOwnerSignature",
      "jump": "o",
      "offset": [
        20693,
        20992
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8392": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14606,
        18208
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8397": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8399": {
      "op": "SHL"
    },
    "8400": {
      "op": "SUB"
    },
    "8401": {
      "op": "NOT"
    },
    "8402": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14793,
        14812
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8403": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14793,
        14812
      ],
      "op": "AND",
      "path": "5"
    },
    "8404": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14709,
        14728
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8406": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14793,
        14812
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8407": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14793,
        14812
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8408": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14793,
        14812
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8409": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14793,
        14801
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "8411": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14793,
        14812
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8413": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14793,
        14812
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8414": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14793,
        14812
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8416": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14793,
        14812
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8417": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14793,
        14812
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8418": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14831,
        14846
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 96
    },
    "8419": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14831,
        14846
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8420": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14831,
        14846
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "8422": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14831,
        14846
      ],
      "op": "AND",
      "path": "5"
    },
    "8423": {
      "branch": 233,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14830,
        14846
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8424": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14822,
        14847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20F0"
    },
    "8427": {
      "branch": 233,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14822,
        14847
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8430": {
      "op": "DUP1"
    },
    "8431": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14822,
        14847
      ],
      "op": "REVERT",
      "path": "5"
    },
    "8432": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14822,
        14847
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8433": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14902
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "8435": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14902
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8436": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14902
      ],
      "op": "ADD",
      "path": "5"
    },
    "8437": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14902
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8438": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14857,
        14873
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8440": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14857,
        14873
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8441": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14905,
        14921
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x0"
    },
    "8474": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14921
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "8479": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14921
      ],
      "op": "AND",
      "path": "5"
    },
    "8480": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14921
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8483": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8485": {
      "op": "SHL"
    },
    "8486": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14902
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8487": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14902
      ],
      "op": "DIV",
      "path": "5"
    },
    "8488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8492": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8494": {
      "op": "SHL"
    },
    "8495": {
      "op": "SUB"
    },
    "8496": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14902
      ],
      "op": "AND",
      "path": "5"
    },
    "8497": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14921
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8498": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14921
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2137"
    },
    "8501": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14921
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8502": {
      "dev": "Division by zero",
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14921
      ],
      "op": "INVALID",
      "path": "5"
    },
    "8503": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14921
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8504": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14961,
        14980
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "8506": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14961,
        14980
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8507": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14961,
        14980
      ],
      "op": "ADD",
      "path": "5"
    },
    "8508": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14961,
        14987
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8509": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14921
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8510": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14921
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8511": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14883,
        14921
      ],
      "op": "DIV",
      "path": "5"
    },
    "8512": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14925,
        14926
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "8514": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14876,
        14926
      ],
      "op": "ADD",
      "path": "5"
    },
    "8515": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14876,
        14926
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8516": {
      "op": "POP"
    },
    "8517": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14936,
        14958
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8519": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15020,
        17402
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8520": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15031,
        15050
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "8522": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15031,
        15050
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8523": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15031,
        15050
      ],
      "op": "ADD",
      "path": "5"
    },
    "8524": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15031,
        15057
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8525": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15027,
        15057
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8526": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15027,
        15057
      ],
      "op": "LT",
      "path": "5"
    },
    "8527": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15020,
        17402
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8528": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15020,
        17402
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x24AF"
    },
    "8531": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15020,
        17402
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8532": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15078,
        15113
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8534": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15122
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8535": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15135
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "8537": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15135
      ],
      "op": "ADD",
      "path": "5"
    },
    "8538": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15136,
        15137
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8539": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8540": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8541": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8542": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "LT",
      "path": "5"
    },
    "8543": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2164"
    },
    "8546": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8547": {
      "dev": "Index out of range",
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "INVALID",
      "path": "5"
    },
    "8548": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8549": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8551": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8552": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8553": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8554": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8556": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8557": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8558": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8559": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "8561": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8562": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8563": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "MUL",
      "path": "5"
    },
    "8564": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "ADD",
      "path": "5"
    },
    "8565": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15167,
        15183
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8566": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15167,
        15183
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8567": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8568": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15116,
        15138
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8569": {
      "op": "POP"
    },
    "8570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8576": {
      "op": "SHL"
    },
    "8577": {
      "op": "SUB"
    },
    "8578": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15167,
        15183
      ],
      "op": "AND",
      "path": "5"
    },
    "8579": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15201,
        15222
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8580": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15201,
        15222
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8581": {
      "branch": 234,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15201,
        15222
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8582": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15201,
        15265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21B4"
    },
    "8585": {
      "branch": 234,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15201,
        15265
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8586": {
      "op": "POP"
    },
    "8587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8593": {
      "op": "SHL"
    },
    "8594": {
      "op": "SUB"
    },
    "8595": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15226,
        15248
      ],
      "op": "DUP10",
      "path": "5"
    },
    "8596": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15226,
        15248
      ],
      "op": "AND",
      "path": "5"
    },
    "8597": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15226,
        15248
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8598": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15226,
        15248
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8599": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15226,
        15248
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8600": {
      "branch": 235,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15226,
        15248
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8601": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15226,
        15265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21B4"
    },
    "8604": {
      "branch": 235,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15226,
        15265
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8605": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15226,
        15265
      ],
      "op": "POP",
      "path": "5"
    },
    "8606": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15261,
        15265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8613": {
      "op": "SHL"
    },
    "8614": {
      "op": "SUB"
    },
    "8615": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15252,
        15265
      ],
      "op": "AND",
      "path": "5"
    },
    "8616": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15252,
        15257
      ],
      "op": "DUP10",
      "path": "5"
    },
    "8617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8623": {
      "op": "SHL"
    },
    "8624": {
      "op": "SUB"
    },
    "8625": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15252,
        15265
      ],
      "op": "AND",
      "path": "5"
    },
    "8626": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15252,
        15265
      ],
      "op": "EQ",
      "path": "5"
    },
    "8627": {
      "branch": 236,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15252,
        15265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8628": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15226,
        15265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8629": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15197,
        15342
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8630": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15197,
        15342
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21C7"
    },
    "8633": {
      "branch": 236,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15197,
        15342
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8634": {
      "op": "POP"
    },
    "8635": {
      "op": "POP"
    },
    "8636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8638": {
      "op": "NOT"
    },
    "8639": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15285,
        15301
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 97
    },
    "8640": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15285,
        15301
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8641": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15285,
        15301
      ],
      "op": "ADD",
      "path": "5"
    },
    "8642": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15285,
        15301
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8643": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15319,
        15327
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 98,
      "value": "0x24A7"
    },
    "8646": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15319,
        15327
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8647": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15197,
        15342
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8648": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15355,
        15378
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8650": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15496,
        15537
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 99,
      "value": "0x21D3"
    },
    "8653": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15517,
        15523
      ],
      "op": "DUP8",
      "path": "5"
    },
    "8654": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15525,
        15536
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8655": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15496,
        15516
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E45"
    },
    "8658": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        15496,
        15537
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8659": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15496,
        15537
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8660": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15446,
        15476
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "8662": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15446,
        15476
      ],
      "op": "DUP7",
      "path": "5"
    },
    "8663": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15446,
        15476
      ],
      "op": "ADD",
      "path": "5"
    },
    "8664": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15392,
        15537
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8665": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15392,
        15537
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8666": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8669": {
      "op": "NOT"
    },
    "8670": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15392,
        15537
      ],
      "op": "AND",
      "path": "5"
    },
    "8671": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15392,
        15537
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "8674": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15392,
        15537
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8675": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15392,
        15537
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8676": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15392,
        15537
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8677": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15392,
        15537
      ],
      "op": "AND",
      "path": "5"
    },
    "8678": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15392,
        15537
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8679": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15392,
        15537
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8680": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15392,
        15537
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8681": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15392,
        15537
      ],
      "op": "OR",
      "path": "5"
    },
    "8682": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15392,
        15537
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8683": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15392,
        15537
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8686": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15410,
        15444
      ],
      "op": "DUP6",
      "path": "5"
    },
    "8687": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15410,
        15444
      ],
      "op": "ADD",
      "path": "5"
    },
    "8688": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15392,
        15537
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8689": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15392,
        15537
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8690": {
      "op": "POP"
    },
    "8691": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15551,
        16787
      ],
      "op": "DUP9",
      "path": "5"
    },
    "8692": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15551,
        16787
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8693": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15551,
        16787
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23A2"
    },
    "8696": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15551,
        16787
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8703": {
      "op": "SHL"
    },
    "8704": {
      "op": "SUB"
    },
    "8705": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15615,
        15626
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8706": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15615,
        15626
      ],
      "op": "AND",
      "path": "5"
    },
    "8707": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15587,
        15612
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8709": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15615,
        15626
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8710": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15615,
        15626
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8711": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15615,
        15626
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8712": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15615,
        15620
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "8714": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15615,
        15626
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8716": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15615,
        15626
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8717": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15615,
        15626
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8718": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15615,
        15626
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8719": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15615,
        15626
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8721": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15615,
        15626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8722": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15615,
        15626
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8723": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15615,
        15626
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8724": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "8726": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP8",
      "path": "5"
    },
    "8727": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15725,
        15755
      ],
      "op": "ADD",
      "path": "5"
    },
    "8728": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15725,
        15755
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8729": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "8732": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15725,
        15755
      ],
      "op": "AND",
      "path": "5"
    },
    "8733": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15777,
        15814
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8734": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15777,
        15814
      ],
      "op": "DUP6",
      "path": "5"
    },
    "8735": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15777,
        15814
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8736": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15777,
        15794
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "8738": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15777,
        15794
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8739": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15777,
        15794
      ],
      "op": "ADD",
      "path": "5"
    },
    "8740": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15777,
        15814
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8741": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15777,
        15814
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "8742": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15777,
        15814
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8743": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15777,
        15814
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8744": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15777,
        15814
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8745": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15777,
        15814
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8750": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8752": {
      "op": "SHL"
    },
    "8753": {
      "op": "SUB"
    },
    "8754": {
      "branch": 237,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15777,
        15835
      ],
      "op": "EQ",
      "path": "5"
    },
    "8755": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15773,
        16051
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8756": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15773,
        16051
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2265"
    },
    "8759": {
      "branch": 237,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15773,
        16051
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8760": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15907,
        15921
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 100,
      "value": "0x2"
    },
    "8762": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15907,
        15921
      ],
      "op": "DUP10",
      "path": "5"
    },
    "8763": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15907,
        15921
      ],
      "op": "ADD",
      "path": "5"
    },
    "8764": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15907,
        15921
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8765": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15859,
        15896
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "8768": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15859,
        15896
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8769": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15859,
        15896
      ],
      "op": "AND",
      "path": "5"
    },
    "8770": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15907,
        15921
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8772": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15859,
        15896
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8773": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15859,
        15896
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8774": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15859,
        15896
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8775": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15859,
        15876
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "8777": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15859,
        15876
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8778": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15859,
        15876
      ],
      "op": "ADD",
      "path": "5"
    },
    "8779": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15859,
        15896
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8781": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15859,
        15896
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8782": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15859,
        15896
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8784": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15859,
        15896
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8785": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15859,
        15896
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8790": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8792": {
      "op": "SHL"
    },
    "8793": {
      "op": "SUB"
    },
    "8794": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15907,
        15921
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8795": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15907,
        15921
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8796": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15907,
        15921
      ],
      "op": "AND",
      "path": "5"
    },
    "8797": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15899,
        15922
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8798": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15899,
        15922
      ],
      "op": "SUB",
      "path": "5"
    },
    "8799": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15859,
        15922
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8800": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15859,
        15922
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8801": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15773,
        16051
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2292"
    },
    "8804": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15773,
        16051
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8805": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15773,
        16051
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8806": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16017,
        16031
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 101,
      "value": "0x2"
    },
    "8808": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16017,
        16031
      ],
      "op": "DUP10",
      "path": "5"
    },
    "8809": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16017,
        16031
      ],
      "op": "ADD",
      "path": "5"
    },
    "8810": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16017,
        16031
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8811": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16006
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "8814": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16006
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8815": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16006
      ],
      "op": "AND",
      "path": "5"
    },
    "8816": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16017,
        16031
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8818": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16006
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8819": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16006
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8820": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16006
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8821": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        15986
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "8823": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        15986
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8824": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        15986
      ],
      "op": "ADD",
      "path": "5"
    },
    "8825": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8827": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16006
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8828": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8830": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16006
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8831": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16006
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8832": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16032
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8833": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16032
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8838": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8840": {
      "op": "SHL"
    },
    "8841": {
      "op": "SUB"
    },
    "8842": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16017,
        16031
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8843": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16017,
        16031
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8844": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16017,
        16031
      ],
      "op": "AND",
      "path": "5"
    },
    "8845": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16032
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8846": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16032
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8847": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16032
      ],
      "op": "SUB",
      "path": "5"
    },
    "8848": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16032
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8849": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15969,
        16032
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8850": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15773,
        16051
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8851": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16072,
        16100
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "8854": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16072,
        16100
      ],
      "op": "DUP9",
      "path": "5"
    },
    "8855": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16072,
        16100
      ],
      "op": "AND",
      "path": "5"
    },
    "8856": {
      "offset": [
        2945,
        2946
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8858": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16072,
        16100
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8859": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16072,
        16100
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8860": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16072,
        16100
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8861": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16072,
        16089
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "8863": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16072,
        16089
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8864": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16072,
        16089
      ],
      "op": "ADD",
      "path": "5"
    },
    "8865": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16072,
        16100
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8867": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16072,
        16100
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8868": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16072,
        16100
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8870": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16072,
        16100
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8871": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16072,
        16100
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8872": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16072,
        16100
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8877": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8879": {
      "op": "SHL"
    },
    "8880": {
      "op": "SUB"
    },
    "8881": {
      "branch": 238,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16072,
        16121
      ],
      "op": "EQ",
      "path": "5"
    },
    "8882": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16068,
        16319
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8883": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16068,
        16319
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22E4"
    },
    "8886": {
      "branch": 238,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16068,
        16319
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8887": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16184,
        16198
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 102,
      "value": "0x2"
    },
    "8889": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16184,
        16198
      ],
      "op": "DUP10",
      "path": "5"
    },
    "8890": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16184,
        16198
      ],
      "op": "ADD",
      "path": "5"
    },
    "8891": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16184,
        16198
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8892": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16145,
        16173
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "8895": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16145,
        16173
      ],
      "op": "DUP10",
      "path": "5"
    },
    "8896": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16145,
        16173
      ],
      "op": "AND",
      "path": "5"
    },
    "8897": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16184,
        16198
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8899": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16145,
        16173
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8900": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16145,
        16173
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8901": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16145,
        16173
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8902": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16145,
        16162
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "8904": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16145,
        16162
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8905": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16145,
        16162
      ],
      "op": "ADD",
      "path": "5"
    },
    "8906": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16145,
        16173
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8908": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16145,
        16173
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8909": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16145,
        16173
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8911": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16145,
        16173
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8912": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16145,
        16173
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8917": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8919": {
      "op": "SHL"
    },
    "8920": {
      "op": "SUB"
    },
    "8921": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16184,
        16198
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8922": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16184,
        16198
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8923": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16184,
        16198
      ],
      "op": "AND",
      "path": "5"
    },
    "8924": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16176,
        16199
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8925": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16176,
        16199
      ],
      "op": "SUB",
      "path": "5"
    },
    "8926": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16145,
        16199
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8927": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16145,
        16199
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8928": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16068,
        16319
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2311"
    },
    "8931": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16068,
        16319
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8932": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16068,
        16319
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8933": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16285,
        16299
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 103,
      "value": "0x2"
    },
    "8935": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16285,
        16299
      ],
      "op": "DUP10",
      "path": "5"
    },
    "8936": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16285,
        16299
      ],
      "op": "ADD",
      "path": "5"
    },
    "8937": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16285,
        16299
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8938": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16274
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "8941": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16274
      ],
      "op": "DUP10",
      "path": "5"
    },
    "8942": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16274
      ],
      "op": "AND",
      "path": "5"
    },
    "8943": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16285,
        16299
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8945": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16274
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8946": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16274
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8947": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16274
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8948": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "8950": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16263
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8951": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16263
      ],
      "op": "ADD",
      "path": "5"
    },
    "8952": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16274
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8954": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16274
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8955": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16274
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8957": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16274
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8958": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16274
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8959": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16300
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8960": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16300
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8965": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8967": {
      "op": "SHL"
    },
    "8968": {
      "op": "SUB"
    },
    "8969": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16285,
        16299
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8970": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16285,
        16299
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8971": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16285,
        16299
      ],
      "op": "AND",
      "path": "5"
    },
    "8972": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16300
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8973": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16300
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8974": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16300
      ],
      "op": "ADD",
      "path": "5"
    },
    "8975": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16300
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8976": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16246,
        16300
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8977": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16068,
        16319
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8978": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16393,
        16430
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "8981": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16393,
        16430
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8982": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16393,
        16430
      ],
      "op": "AND",
      "path": "5"
    },
    "8983": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16393,
        16430
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8985": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16393,
        16430
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8986": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16393,
        16430
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8987": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16393,
        16430
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8988": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16393,
        16410
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "8990": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16393,
        16410
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8991": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16393,
        16410
      ],
      "op": "ADD",
      "path": "5"
    },
    "8992": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16393,
        16430
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8994": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16393,
        16430
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8995": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16393,
        16430
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8997": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16393,
        16430
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8998": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16393,
        16430
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8999": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16393,
        16430
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9000": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16389,
        16535
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x234B"
    },
    "9003": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16389,
        16535
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9004": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16459,
        16496
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 104,
      "value": "0xFFFF"
    },
    "9007": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16459,
        16496
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9008": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16459,
        16496
      ],
      "op": "AND",
      "path": "5"
    },
    "9009": {
      "offset": [
        2945,
        2946
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9011": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16459,
        16496
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9012": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16459,
        16496
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9013": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16459,
        16496
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9014": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16459,
        16476
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "9016": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16459,
        16476
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9017": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16459,
        16476
      ],
      "op": "ADD",
      "path": "5"
    },
    "9018": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16459,
        16496
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9020": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16459,
        16496
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9021": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16459,
        16496
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9023": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16459,
        16496
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9024": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16459,
        16496
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9029": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9031": {
      "op": "SHL"
    },
    "9032": {
      "op": "SUB"
    },
    "9033": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16459,
        16516
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9034": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16459,
        16516
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "9035": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16389,
        16535
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9036": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16556,
        16584
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "9039": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16556,
        16584
      ],
      "op": "DUP9",
      "path": "5"
    },
    "9040": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16556,
        16584
      ],
      "op": "AND",
      "path": "5"
    },
    "9041": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16556,
        16584
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9043": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16556,
        16584
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9044": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16556,
        16584
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9045": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16556,
        16584
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9046": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16556,
        16573
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "9048": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16556,
        16573
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9049": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16556,
        16573
      ],
      "op": "ADD",
      "path": "5"
    },
    "9050": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16556,
        16584
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9052": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16556,
        16584
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9053": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16556,
        16584
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9055": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16556,
        16584
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9056": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16556,
        16584
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9057": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16556,
        16584
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9058": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16552,
        16680
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2385"
    },
    "9061": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16552,
        16680
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9062": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16613,
        16641
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 105,
      "value": "0xFFFF"
    },
    "9065": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16613,
        16641
      ],
      "op": "DUP9",
      "path": "5"
    },
    "9066": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16613,
        16641
      ],
      "op": "AND",
      "path": "5"
    },
    "9067": {
      "offset": [
        2945,
        2946
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9069": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16613,
        16641
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9070": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16613,
        16641
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9071": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16613,
        16641
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9072": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16613,
        16630
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "9074": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16613,
        16630
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9075": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16613,
        16630
      ],
      "op": "ADD",
      "path": "5"
    },
    "9076": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16613,
        16641
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9078": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16613,
        16641
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9079": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16613,
        16641
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9081": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16613,
        16641
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9082": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16613,
        16641
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9087": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9089": {
      "op": "SHL"
    },
    "9090": {
      "op": "SUB"
    },
    "9091": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16613,
        16661
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9092": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16613,
        16661
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "9093": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16552,
        16680
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9094": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16758,
        16772
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 106,
      "value": "0x2"
    },
    "9096": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16758,
        16772
      ],
      "op": "DUP10",
      "path": "5"
    },
    "9097": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16758,
        16772
      ],
      "op": "ADD",
      "path": "5"
    },
    "9098": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16758,
        16772
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9103": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9105": {
      "op": "SHL"
    },
    "9106": {
      "op": "SUB"
    },
    "9107": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16758,
        16772
      ],
      "op": "AND",
      "path": "5"
    },
    "9108": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16724,
        16754
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9109": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16724,
        16754
      ],
      "op": "DUP9",
      "path": "5"
    },
    "9110": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16724,
        16754
      ],
      "op": "SUB",
      "path": "5"
    },
    "9111": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16716,
        16755
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "9114": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16716,
        16755
      ],
      "op": "AND",
      "path": "5"
    },
    "9115": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16716,
        16772
      ],
      "op": "MUL",
      "path": "5"
    },
    "9116": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16697,
        16772
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9117": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16697,
        16772
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9118": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16697,
        16772
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9119": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16697,
        16772
      ],
      "op": "ADD",
      "path": "5"
    },
    "9120": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16697,
        16772
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9121": {
      "op": "POP"
    },
    "9122": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15551,
        16787
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9123": {
      "branch": 239,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16804,
        16816
      ],
      "op": "DUP9",
      "path": "5"
    },
    "9124": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16804,
        16863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9125": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16804,
        16863
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23B9"
    },
    "9128": {
      "branch": 239,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16804,
        16863
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9129": {
      "op": "POP"
    },
    "9130": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16820,
        16850
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "9132": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16820,
        16850
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9133": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16820,
        16850
      ],
      "op": "ADD",
      "path": "5"
    },
    "9134": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16820,
        16850
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9135": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16820,
        16863
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "9138": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16820,
        16863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9139": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16820,
        16863
      ],
      "op": "DUP9",
      "path": "5"
    },
    "9140": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16820,
        16863
      ],
      "op": "AND",
      "path": "5"
    },
    "9141": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16820,
        16850
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9142": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16820,
        16850
      ],
      "op": "AND",
      "path": "5"
    },
    "9143": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16820,
        16863
      ],
      "op": "LT",
      "path": "5"
    },
    "9144": {
      "branch": 240,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16820,
        16863
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9145": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16804,
        16863
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9146": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16800,
        17269
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9147": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16800,
        17269
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x243A"
    },
    "9150": {
      "branch": 240,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16800,
        17269
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9151": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16883,
        16915
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 107
    },
    "9152": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16883,
        16915
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9159": {
      "op": "SHL"
    },
    "9160": {
      "op": "SUB"
    },
    "9161": {
      "op": "NOT"
    },
    "9162": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16883,
        16915
      ],
      "op": "AND",
      "path": "5"
    },
    "9163": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16883,
        16915
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9164": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16883,
        16915
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "9165": {
      "offset": [
        2764,
        2765
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9167": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16883,
        16915
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "9169": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16933,
        16967
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 108
    },
    "9170": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16933,
        16967
      ],
      "op": "ADD",
      "path": "5"
    },
    "9171": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16933,
        16971
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "9172": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16989,
        17019
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 109,
      "value": "0x2"
    },
    "9174": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16989,
        17019
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9175": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16989,
        17019
      ],
      "op": "ADD",
      "path": "5"
    },
    "9176": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16989,
        17023
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9177": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16989,
        17023
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9178": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9181": {
      "op": "NOT"
    },
    "9182": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16989,
        17023
      ],
      "op": "AND",
      "path": "5"
    },
    "9183": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16989,
        17023
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9184": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16989,
        17023
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "9185": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 110,
      "value": "0x40"
    },
    "9187": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9188": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9189": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9190": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9191": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9192": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9193": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9196": {
      "op": "NOT"
    },
    "9197": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17041,
        17057
      ],
      "op": "SWAP7",
      "path": "5",
      "statement": 111
    },
    "9198": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17041,
        17057
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9199": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17041,
        17057
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "9200": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17041,
        17057
      ],
      "op": "ADD",
      "path": "5"
    },
    "9201": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17041,
        17057
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "9202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9208": {
      "op": "SHL"
    },
    "9209": {
      "op": "SUB"
    },
    "9210": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9211": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "AND",
      "path": "5"
    },
    "9212": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9213": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17110,
        17120
      ],
      "op": "CALLER",
      "path": "5"
    },
    "9214": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17110,
        17120
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9219": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9221": {
      "op": "SHL"
    },
    "9222": {
      "op": "SUB"
    },
    "9223": {
      "op": "NOT"
    },
    "9224": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "DUP16",
      "path": "5"
    },
    "9225": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "AND",
      "path": "5"
    },
    "9226": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9227": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xF3B13DF5BDD5EFCB090F73617909A6295EE75815920224C512D784B2726812F1"
    },
    "9260": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9261": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9262": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9263": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9264": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "SUB",
      "path": "5"
    },
    "9265": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9267": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "ADD",
      "path": "5"
    },
    "9268": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9269": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17080,
        17144
      ],
      "op": "LOG4",
      "path": "5"
    },
    "9270": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16800,
        17269
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2488"
    },
    "9273": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16800,
        17269
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9274": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16800,
        17269
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9275": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 112,
      "value": "0x40"
    },
    "9277": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9278": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9279": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9280": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9281": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9282": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9283": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9290": {
      "op": "SHL"
    },
    "9291": {
      "op": "SUB"
    },
    "9292": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9293": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "AND",
      "path": "5"
    },
    "9294": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9295": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17220,
        17230
      ],
      "op": "CALLER",
      "path": "5"
    },
    "9296": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17220,
        17230
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9301": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9303": {
      "op": "SHL"
    },
    "9304": {
      "op": "SUB"
    },
    "9305": {
      "op": "NOT"
    },
    "9306": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "DUP16",
      "path": "5"
    },
    "9307": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "AND",
      "path": "5"
    },
    "9308": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9309": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xAB654B569128C88FFCD210806A5E48EE14C541E2C76923F143281F20807090C1"
    },
    "9342": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9343": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9344": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9345": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9346": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "SUB",
      "path": "5"
    },
    "9347": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9349": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "ADD",
      "path": "5"
    },
    "9350": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9351": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17188,
        17254
      ],
      "op": "LOG4",
      "path": "5"
    },
    "9352": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        16800,
        17269
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9353": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17283,
        17313
      ],
      "op": "SWAP7",
      "path": "5",
      "statement": 113
    },
    "9354": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17283,
        17313
      ],
      "op": "DUP8",
      "path": "5"
    },
    "9355": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17283,
        17313
      ],
      "op": "ADD",
      "path": "5"
    },
    "9356": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17283,
        17313
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "9357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9363": {
      "op": "SHL"
    },
    "9364": {
      "op": "SUB"
    },
    "9365": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17331,
        17353
      ],
      "op": "DUP11",
      "path": "5"
    },
    "9366": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17331,
        17353
      ],
      "op": "AND",
      "path": "5"
    },
    "9367": {
      "branch": 241,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17331,
        17353
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9368": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17327,
        17392
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x24A3"
    },
    "9371": {
      "branch": 241,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17327,
        17392
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9372": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17372,
        17377
      ],
      "op": "POP",
      "path": "5",
      "statement": 114
    },
    "9373": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17372,
        17377
      ],
      "op": "POP",
      "path": "5"
    },
    "9374": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17372,
        17377
      ],
      "op": "POP",
      "path": "5"
    },
    "9375": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17372,
        17377
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x24AF"
    },
    "9378": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17372,
        17377
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9379": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17327,
        17392
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9380": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15020,
        17402
      ],
      "op": "POP",
      "path": "5"
    },
    "9381": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15020,
        17402
      ],
      "op": "POP",
      "path": "5"
    },
    "9382": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15020,
        17402
      ],
      "op": "POP",
      "path": "5"
    },
    "9383": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15020,
        17402
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9384": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15059,
        15062
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 115,
      "value": "0x1"
    },
    "9386": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15059,
        15062
      ],
      "op": "ADD",
      "path": "5"
    },
    "9387": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15020,
        17402
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2147"
    },
    "9390": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15020,
        17402
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9391": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        15020,
        17402
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9392": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17443,
        17457
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9393": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17443,
        17457
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9400": {
      "op": "SHL"
    },
    "9401": {
      "op": "SUB"
    },
    "9402": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17443,
        17457
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "9405": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17443,
        17457
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9406": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17443,
        17457
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9407": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17443,
        17457
      ],
      "op": "DIV",
      "path": "5"
    },
    "9408": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17443,
        17457
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9409": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17443,
        17457
      ],
      "op": "AND",
      "path": "5"
    },
    "9410": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17443,
        17457
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9411": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17471,
        17493
      ],
      "op": "DUP9",
      "path": "5"
    },
    "9412": {
      "branch": 242,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17471,
        17493
      ],
      "op": "AND",
      "path": "5"
    },
    "9413": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17467,
        18111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x258B"
    },
    "9416": {
      "branch": 242,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17467,
        18111
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9417": {
      "branch": 243,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17513,
        17532
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9418": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17509,
        17994
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2544"
    },
    "9421": {
      "branch": 243,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17509,
        17994
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9422": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17552,
        17574
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 116
    },
    "9423": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17552,
        17574
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9424": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17570,
        17574
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "9426": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9428": {
      "op": "NOT"
    },
    "9429": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17552,
        17574
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9430": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17552,
        17574
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9431": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17552,
        17574
      ],
      "op": "AND",
      "path": "5"
    },
    "9432": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17552,
        17574
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9433": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17552,
        17574
      ],
      "op": "OR",
      "path": "5"
    },
    "9434": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9439": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9441": {
      "op": "SHL"
    },
    "9442": {
      "op": "SUB"
    },
    "9443": {
      "op": "NOT"
    },
    "9444": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17622,
        17649
      ],
      "op": "AND",
      "path": "5",
      "statement": 117
    },
    "9445": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17622,
        17649
      ],
      "op": "DUP7",
      "path": "5"
    },
    "9446": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17622,
        17649
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "9447": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17667,
        17679
      ],
      "op": "DUP6",
      "path": "5",
      "statement": 118
    },
    "9448": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17667,
        17679
      ],
      "op": "ADD",
      "path": "5"
    },
    "9449": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17667,
        17692
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9450": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17667,
        17692
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9457": {
      "op": "SHL"
    },
    "9458": {
      "op": "SUB"
    },
    "9459": {
      "op": "NOT"
    },
    "9460": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17667,
        17692
      ],
      "op": "AND",
      "path": "5"
    },
    "9461": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17667,
        17692
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9462": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17667,
        17692
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "9463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9465": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17710,
        17724
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 119,
      "value": "0x2"
    },
    "9467": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17710,
        17724
      ],
      "op": "DUP7",
      "path": "5"
    },
    "9468": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17710,
        17724
      ],
      "op": "ADD",
      "path": "5"
    },
    "9469": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17789,
        17812
      ],
      "op": "SSTORE",
      "path": "5",
      "statement": 120
    },
    "9470": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 121,
      "value": "0x40"
    },
    "9472": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9473": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9474": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "DUP8",
      "path": "5"
    },
    "9475": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9476": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9477": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9478": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9479": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17860,
        17870
      ],
      "op": "CALLER",
      "path": "5"
    },
    "9480": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17860,
        17870
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9485": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9487": {
      "op": "SHL"
    },
    "9488": {
      "op": "SUB"
    },
    "9489": {
      "op": "NOT"
    },
    "9490": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "DUP13",
      "path": "5"
    },
    "9491": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "AND",
      "path": "5"
    },
    "9492": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9493": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xD5EA25BA3600C386669C484639012A0AE266ED537F0C4AB71B651024736EFFF4"
    },
    "9526": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9527": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9529": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9530": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9531": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9532": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "SUB",
      "path": "5"
    },
    "9533": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "ADD",
      "path": "5"
    },
    "9534": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9535": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17835,
        17884
      ],
      "op": "LOG3",
      "path": "5"
    },
    "9536": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17509,
        17994
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2586"
    },
    "9539": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17509,
        17994
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9540": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17509,
        17994
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9541": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 122,
      "value": "0x40"
    },
    "9543": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9544": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9545": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "DUP8",
      "path": "5"
    },
    "9546": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9547": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9548": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9549": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9550": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17955,
        17965
      ],
      "op": "CALLER",
      "path": "5"
    },
    "9551": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17955,
        17965
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9556": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9558": {
      "op": "SHL"
    },
    "9559": {
      "op": "SUB"
    },
    "9560": {
      "op": "NOT"
    },
    "9561": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "DUP13",
      "path": "5"
    },
    "9562": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "AND",
      "path": "5"
    },
    "9563": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9564": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x51377F313F8C3404E86D38AE907B443ADA38578FD6B9589D03F79D03FF9303C7"
    },
    "9597": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9598": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9599": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9600": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "SUB",
      "path": "5"
    },
    "9601": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9603": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "ADD",
      "path": "5"
    },
    "9604": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9605": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17928,
        17979
      ],
      "op": "LOG3",
      "path": "5"
    },
    "9606": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17509,
        17994
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9607": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17467,
        18111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x259B"
    },
    "9610": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17467,
        18111
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9611": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        17467,
        18111
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9612": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18073,
        18092
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 123,
      "value": "0x8"
    },
    "9614": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18073,
        18092
      ],
      "op": "DUP6",
      "path": "5"
    },
    "9615": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18073,
        18092
      ],
      "op": "ADD",
      "path": "5"
    },
    "9616": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18073,
        18099
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9617": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18069,
        18099
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9618": {
      "branch": 244,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18069,
        18099
      ],
      "op": "LT",
      "path": "5"
    },
    "9619": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18061,
        18100
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x259B"
    },
    "9622": {
      "branch": 244,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18061,
        18100
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9625": {
      "op": "DUP1"
    },
    "9626": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18061,
        18100
      ],
      "op": "REVERT",
      "path": "5"
    },
    "9627": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18061,
        18100
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9628": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18124,
        18139
      ],
      "op": "DUP6",
      "path": "5"
    },
    "9629": {
      "branch": 245,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18124,
        18139
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9630": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18120,
        18202
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25BA"
    },
    "9633": {
      "branch": 245,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18120,
        18202
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9634": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18155,
        18191
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 124,
      "value": "0x25BA"
    },
    "9637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9643": {
      "op": "SHL"
    },
    "9644": {
      "op": "SUB"
    },
    "9645": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18155,
        18178
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9646": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18155,
        18178
      ],
      "op": "AND",
      "path": "5"
    },
    "9647": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18179,
        18190
      ],
      "op": "DUP8",
      "path": "5"
    },
    "9648": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18155,
        18191
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "9653": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18155,
        18178
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25FA"
    },
    "9656": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18155,
        18191
      ],
      "op": "AND",
      "path": "5"
    },
    "9657": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        18155,
        18191
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9658": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        18155,
        18191
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9659": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14606,
        18208
      ],
      "op": "POP",
      "path": "5"
    },
    "9660": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14606,
        18208
      ],
      "op": "POP",
      "path": "5"
    },
    "9661": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14606,
        18208
      ],
      "op": "POP",
      "path": "5"
    },
    "9662": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14606,
        18208
      ],
      "op": "POP",
      "path": "5"
    },
    "9663": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14606,
        18208
      ],
      "op": "POP",
      "path": "5"
    },
    "9664": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14606,
        18208
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "9665": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14606,
        18208
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9666": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14606,
        18208
      ],
      "op": "POP",
      "path": "5"
    },
    "9667": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14606,
        18208
      ],
      "op": "POP",
      "path": "5"
    },
    "9668": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        14606,
        18208
      ],
      "op": "POP",
      "path": "5"
    },
    "9669": {
      "fn": "PolicyManager.refundInternal",
      "jump": "o",
      "offset": [
        14606,
        18208
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9670": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        639,
        844
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9671": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        702,
        709
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "9673": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        730,
        731
      ],
      "op": "DUP1",
      "path": "8"
    },
    "9674": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        725,
        726
      ],
      "op": "DUP3",
      "path": "8"
    },
    "9675": {
      "branch": 261,
      "fn": "AdditionalMath.addSigned",
      "offset": [
        725,
        731
      ],
      "op": "SLT",
      "path": "8"
    },
    "9676": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        721,
        838
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x25E6"
    },
    "9679": {
      "branch": 261,
      "fn": "AdditionalMath.addSigned",
      "offset": [
        721,
        838
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "9680": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        754,
        771
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 125,
      "value": "0x25DF"
    },
    "9683": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        754,
        755
      ],
      "op": "DUP4",
      "path": "8"
    },
    "9684": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        768,
        769
      ],
      "op": "DUP4",
      "path": "8"
    },
    "9685": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        754,
        771
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "9690": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        754,
        759
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x32A0"
    },
    "9693": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        754,
        771
      ],
      "op": "AND",
      "path": "8"
    },
    "9694": {
      "fn": "AdditionalMath.addSigned",
      "jump": "i",
      "offset": [
        754,
        771
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9695": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        754,
        771
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9696": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        747,
        771
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9697": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        747,
        771
      ],
      "op": "POP",
      "path": "8"
    },
    "9698": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        747,
        771
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1033"
    },
    "9701": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        747,
        771
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9702": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        721,
        838
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9703": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        809,
        827
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 126,
      "value": "0x25DF"
    },
    "9706": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        809,
        810
      ],
      "op": "DUP4",
      "path": "8"
    },
    "9707": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        823,
        825
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "9709": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        823,
        825
      ],
      "op": "DUP5",
      "path": "8"
    },
    "9710": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        823,
        825
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9711": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        823,
        825
      ],
      "op": "SUB",
      "path": "8"
    },
    "9712": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        809,
        827
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "9717": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        809,
        814
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x32B2"
    },
    "9720": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        809,
        827
      ],
      "op": "AND",
      "path": "8"
    },
    "9721": {
      "fn": "AdditionalMath.addSigned",
      "jump": "i",
      "offset": [
        809,
        827
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9722": {
      "fn": "Address.sendValue",
      "offset": [
        2252,
        2618
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "9723": {
      "fn": "Address.sendValue",
      "offset": [
        2366,
        2372
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 127
    },
    "9724": {
      "fn": "Address.sendValue",
      "offset": [
        2341,
        2362
      ],
      "op": "SELFBALANCE",
      "path": "26"
    },
    "9725": {
      "fn": "Address.sendValue",
      "offset": [
        2341,
        2372
      ],
      "op": "LT",
      "path": "26"
    },
    "9726": {
      "branch": 264,
      "fn": "Address.sendValue",
      "offset": [
        2341,
        2372
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "9727": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x264F"
    },
    "9730": {
      "branch": 264,
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "9731": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9733": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9734": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "9735": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9739": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9741": {
      "op": "SHL"
    },
    "9742": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9743": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9744": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "9746": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "9748": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9749": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "ADD",
      "path": "26"
    },
    "9750": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9751": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1D"
    },
    "9753": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x24"
    },
    "9755": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9756": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "ADD",
      "path": "26"
    },
    "9757": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9758": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E6365000000"
    },
    "9791": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x44"
    },
    "9793": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9794": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "ADD",
      "path": "26"
    },
    "9795": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9796": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9797": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "9798": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9799": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9800": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9801": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "SUB",
      "path": "26"
    },
    "9802": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x64"
    },
    "9804": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "ADD",
      "path": "26"
    },
    "9805": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9806": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "REVERT",
      "path": "26"
    },
    "9807": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "9808": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9810": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "9811": {
      "fn": "Address.sendValue",
      "offset": [
        2472,
        2484
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "9813": {
      "fn": "Address.sendValue",
      "offset": [
        2472,
        2484
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9820": {
      "op": "SHL"
    },
    "9821": {
      "op": "SUB"
    },
    "9822": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2504
      ],
      "op": "DUP5",
      "path": "26"
    },
    "9823": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2504
      ],
      "op": "AND",
      "path": "26"
    },
    "9824": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2504
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9825": {
      "fn": "Address.sendValue",
      "offset": [
        2512,
        2518
      ],
      "op": "DUP4",
      "path": "26"
    },
    "9826": {
      "fn": "Address.sendValue",
      "offset": [
        2512,
        2518
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9827": {
      "fn": "Address.sendValue",
      "offset": [
        2472,
        2484
      ],
      "op": "DUP4",
      "path": "26"
    },
    "9828": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9829": {
      "fn": "Address.sendValue",
      "offset": [
        2472,
        2484
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9830": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9831": {
      "fn": "Address.sendValue",
      "offset": [
        2512,
        2518
      ],
      "op": "DUP6",
      "path": "26"
    },
    "9832": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2504
      ],
      "op": "DUP8",
      "path": "26"
    },
    "9833": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "GAS",
      "path": "26"
    },
    "9834": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "CALL",
      "path": "26"
    },
    "9835": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "9836": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "POP",
      "path": "26"
    },
    "9837": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "POP",
      "path": "26"
    },
    "9838": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "POP",
      "path": "26"
    },
    "9839": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "9840": {
      "op": "DUP1"
    },
    "9841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9843": {
      "op": "DUP2"
    },
    "9844": {
      "op": "EQ"
    },
    "9845": {
      "op": "PUSH2",
      "value": "0x269A"
    },
    "9848": {
      "op": "JUMPI"
    },
    "9849": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9851": {
      "op": "MLOAD"
    },
    "9852": {
      "op": "SWAP2"
    },
    "9853": {
      "op": "POP"
    },
    "9854": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9856": {
      "op": "NOT"
    },
    "9857": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "9859": {
      "op": "RETURNDATASIZE"
    },
    "9860": {
      "op": "ADD"
    },
    "9861": {
      "op": "AND"
    },
    "9862": {
      "op": "DUP3"
    },
    "9863": {
      "op": "ADD"
    },
    "9864": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9866": {
      "op": "MSTORE"
    },
    "9867": {
      "op": "RETURNDATASIZE"
    },
    "9868": {
      "op": "DUP3"
    },
    "9869": {
      "op": "MSTORE"
    },
    "9870": {
      "op": "RETURNDATASIZE"
    },
    "9871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9875": {
      "op": "DUP5"
    },
    "9876": {
      "op": "ADD"
    },
    "9877": {
      "op": "RETURNDATACOPY"
    },
    "9878": {
      "op": "PUSH2",
      "value": "0x269F"
    },
    "9881": {
      "op": "JUMP"
    },
    "9882": {
      "op": "JUMPDEST"
    },
    "9883": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9885": {
      "op": "SWAP2"
    },
    "9886": {
      "op": "POP"
    },
    "9887": {
      "op": "JUMPDEST"
    },
    "9888": {
      "op": "POP"
    },
    "9889": {
      "fn": "Address.sendValue",
      "offset": [
        2471,
        2523
      ],
      "op": "POP",
      "path": "26"
    },
    "9890": {
      "fn": "Address.sendValue",
      "offset": [
        2471,
        2523
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9891": {
      "fn": "Address.sendValue",
      "offset": [
        2471,
        2523
      ],
      "op": "POP",
      "path": "26"
    },
    "9892": {
      "branch": 265,
      "fn": "Address.sendValue",
      "offset": [
        2541,
        2548
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 128
    },
    "9893": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1957"
    },
    "9896": {
      "branch": 265,
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "9897": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9899": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "9900": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9904": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9906": {
      "op": "SHL"
    },
    "9907": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9908": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9909": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "9911": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "ADD",
      "path": "26"
    },
    "9912": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9913": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9914": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "9916": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "ADD",
      "path": "26"
    },
    "9917": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9918": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9919": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "SUB",
      "path": "26"
    },
    "9920": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9921": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9922": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3A"
    },
    "9924": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9925": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9926": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "9928": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "ADD",
      "path": "26"
    },
    "9929": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9930": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3486"
    },
    "9933": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3A"
    },
    "9935": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "9936": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "CODECOPY",
      "path": "26"
    },
    "9937": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9939": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "ADD",
      "path": "26"
    },
    "9940": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "9941": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "POP",
      "path": "26"
    },
    "9942": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "POP",
      "path": "26"
    },
    "9943": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9945": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "9946": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9947": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "9948": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "SUB",
      "path": "26"
    },
    "9949": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9950": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "REVERT",
      "path": "26"
    },
    "9951": {
      "fn": "SafeMath.div",
      "offset": [
        783,
        1079
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9952": {
      "fn": "SafeMath.div",
      "offset": [
        841,
        848
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "9954": {
      "fn": "SafeMath.div",
      "offset": [
        938,
        939
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 129
    },
    "9955": {
      "fn": "SafeMath.div",
      "offset": [
        934,
        935
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9956": {
      "branch": 268,
      "fn": "SafeMath.div",
      "offset": [
        934,
        939
      ],
      "op": "GT",
      "path": "20"
    },
    "9957": {
      "fn": "SafeMath.div",
      "offset": [
        926,
        940
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x26ED"
    },
    "9960": {
      "branch": 268,
      "fn": "SafeMath.div",
      "offset": [
        926,
        940
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9963": {
      "op": "DUP1"
    },
    "9964": {
      "fn": "SafeMath.div",
      "offset": [
        926,
        940
      ],
      "op": "REVERT",
      "path": "20"
    },
    "9965": {
      "fn": "SafeMath.div",
      "offset": [
        926,
        940
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9966": {
      "fn": "SafeMath.div",
      "offset": [
        950,
        959
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "9968": {
      "fn": "SafeMath.div",
      "offset": [
        966,
        967
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9969": {
      "fn": "SafeMath.div",
      "offset": [
        962,
        963
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9970": {
      "fn": "SafeMath.div",
      "offset": [
        962,
        967
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9971": {
      "fn": "SafeMath.div",
      "offset": [
        962,
        967
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x26F8"
    },
    "9974": {
      "fn": "SafeMath.div",
      "offset": [
        962,
        967
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9975": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        962,
        967
      ],
      "op": "INVALID",
      "path": "20"
    },
    "9976": {
      "fn": "SafeMath.div",
      "offset": [
        962,
        967
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9977": {
      "fn": "SafeMath.div",
      "offset": [
        962,
        967
      ],
      "op": "DIV",
      "path": "20"
    },
    "9978": {
      "fn": "SafeMath.div",
      "offset": [
        962,
        967
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "9979": {
      "fn": "SafeMath.div",
      "offset": [
        783,
        1079
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "9980": {
      "op": "POP"
    },
    "9981": {
      "op": "POP"
    },
    "9982": {
      "op": "POP"
    },
    "9983": {
      "op": "POP"
    },
    "9984": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        783,
        1079
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9985": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5648,
        6143
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9986": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5722,
        5729
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9988": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5885,
        5894
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9989": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5885,
        5905
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "9991": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5885,
        5905
      ],
      "op": "ADD",
      "path": "5"
    },
    "9992": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5885,
        5905
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9993": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5909,
        5910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9995": {
      "branch": 246,
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5885,
        5910
      ],
      "op": "EQ",
      "path": "5"
    },
    "9996": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5885,
        5965
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9997": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5885,
        5965
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2726"
    },
    "10000": {
      "branch": 246,
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5885,
        5965
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10001": {
      "op": "POP"
    },
    "10002": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5949,
        5961
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "10004": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5949,
        5965
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10005": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5926,
        5946
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "10007": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5926,
        5946
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10008": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5926,
        5946
      ],
      "op": "ADD",
      "path": "5"
    },
    "10009": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5926,
        5946
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10014": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10016": {
      "op": "SHL"
    },
    "10017": {
      "op": "SUB"
    },
    "10018": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5949,
        5965
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10019": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5949,
        5965
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10020": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5949,
        5965
      ],
      "op": "AND",
      "path": "5"
    },
    "10021": {
      "op": "GT"
    },
    "10022": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5885,
        5965
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10023": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5885,
        6020
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10024": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5885,
        6020
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2741"
    },
    "10027": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5885,
        6020
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10028": {
      "op": "POP"
    },
    "10029": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6004,
        6020
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "10031": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6004,
        6020
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10032": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5981,
        6001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "10034": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5981,
        6001
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10035": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5981,
        6001
      ],
      "op": "ADD",
      "path": "5"
    },
    "10036": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5981,
        6001
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10041": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10043": {
      "op": "SHL"
    },
    "10044": {
      "op": "SUB"
    },
    "10045": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6004,
        6020
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10046": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6004,
        6020
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10047": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6004,
        6020
      ],
      "op": "AND",
      "path": "5"
    },
    "10048": {
      "op": "LT"
    },
    "10049": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5885,
        6020
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10050": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5881,
        6137
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10051": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5881,
        6137
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x275F"
    },
    "10054": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5881,
        6137
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10055": {
      "op": "POP"
    },
    "10056": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6043,
        6055
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 130,
      "value": "0x6"
    },
    "10058": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6043,
        6068
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10061": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10063": {
      "op": "SHL"
    },
    "10064": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6043,
        6068
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10065": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6043,
        6068
      ],
      "op": "DIV",
      "path": "5"
    },
    "10066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10070": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10072": {
      "op": "SHL"
    },
    "10073": {
      "op": "SUB"
    },
    "10074": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6043,
        6068
      ],
      "op": "AND",
      "path": "5"
    },
    "10075": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6036,
        6068
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE7D"
    },
    "10078": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6036,
        6068
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10079": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        5881,
        6137
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10080": {
      "op": "POP"
    },
    "10081": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6106,
        6126
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 131,
      "value": "0x2"
    },
    "10083": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6106,
        6126
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10084": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6106,
        6126
      ],
      "op": "ADD",
      "path": "5"
    },
    "10085": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6106,
        6126
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10086": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6099,
        6126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE7D"
    },
    "10089": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        6099,
        6126
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10090": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18372,
        19338
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10095": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10097": {
      "op": "SHL"
    },
    "10098": {
      "op": "SUB"
    },
    "10099": {
      "op": "NOT"
    },
    "10100": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18559,
        18578
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10101": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18559,
        18578
      ],
      "op": "AND",
      "path": "5"
    },
    "10102": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18475,
        18494
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10104": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18559,
        18578
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10105": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18559,
        18578
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10106": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18559,
        18578
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10107": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18559,
        18567
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "10109": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18559,
        18578
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10111": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18559,
        18578
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10112": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18559,
        18578
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10114": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18559,
        18578
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10115": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18559,
        18578
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10116": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18597,
        18609
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 132,
      "value": "0x1"
    },
    "10118": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18597,
        18609
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10119": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18597,
        18609
      ],
      "op": "ADD",
      "path": "5"
    },
    "10120": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18597,
        18609
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10127": {
      "op": "SHL"
    },
    "10128": {
      "op": "SUB"
    },
    "10129": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18597,
        18609
      ],
      "op": "AND",
      "path": "5"
    },
    "10130": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18613,
        18623
      ],
      "op": "CALLER",
      "path": "5"
    },
    "10131": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18597,
        18623
      ],
      "op": "EQ",
      "path": "5"
    },
    "10132": {
      "branch": 247,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18597,
        18623
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10133": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18597,
        18655
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27AC"
    },
    "10136": {
      "branch": 247,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18597,
        18655
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10137": {
      "op": "POP"
    },
    "10138": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18627,
        18641
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10139": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18627,
        18641
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10140": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18627,
        18641
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "10143": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18627,
        18641
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10144": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18627,
        18641
      ],
      "op": "DIV",
      "path": "5"
    },
    "10145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10151": {
      "op": "SHL"
    },
    "10152": {
      "op": "SUB"
    },
    "10153": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18627,
        18641
      ],
      "op": "AND",
      "path": "5"
    },
    "10154": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18645,
        18655
      ],
      "op": "CALLER",
      "path": "5"
    },
    "10155": {
      "branch": 248,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18627,
        18655
      ],
      "op": "EQ",
      "path": "5"
    },
    "10156": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18597,
        18655
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10157": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18596,
        18676
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10158": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18596,
        18676
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10159": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18596,
        18676
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27BA"
    },
    "10162": {
      "branch": 248,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18596,
        18676
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10163": {
      "op": "POP"
    },
    "10164": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18661,
        18676
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10165": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18661,
        18676
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10166": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18661,
        18676
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "10168": {
      "branch": 249,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18661,
        18676
      ],
      "op": "AND",
      "path": "5"
    },
    "10169": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18660,
        18676
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10170": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18596,
        18676
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10171": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18588,
        18677
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27C3"
    },
    "10174": {
      "branch": 249,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18588,
        18677
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10177": {
      "op": "DUP1"
    },
    "10178": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18588,
        18677
      ],
      "op": "REVERT",
      "path": "5"
    },
    "10179": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18588,
        18677
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10180": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18687,
        18696
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10182": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18710,
        19194
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10183": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18721,
        18740
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "10185": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18721,
        18740
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10186": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18721,
        18740
      ],
      "op": "ADD",
      "path": "5"
    },
    "10187": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18721,
        18747
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10188": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18717,
        18747
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10189": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18717,
        18747
      ],
      "op": "LT",
      "path": "5"
    },
    "10190": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18710,
        19194
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10191": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18710,
        19194
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x286D"
    },
    "10194": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18710,
        19194
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10195": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18768,
        18803
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10197": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18812
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10198": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "10200": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18825
      ],
      "op": "ADD",
      "path": "5"
    },
    "10201": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18826,
        18827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10202": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10203": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10204": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10205": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "LT",
      "path": "5"
    },
    "10206": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27E3"
    },
    "10209": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10210": {
      "dev": "Index out of range",
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "INVALID",
      "path": "5"
    },
    "10211": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10212": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10214": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10215": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10216": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10217": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10219": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10220": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10221": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10222": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "10224": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10225": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10226": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "MUL",
      "path": "5"
    },
    "10227": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "ADD",
      "path": "5"
    },
    "10228": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18846,
        18862
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10229": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18846,
        18862
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10230": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10231": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18806,
        18828
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10232": {
      "op": "POP"
    },
    "10233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10239": {
      "op": "SHL"
    },
    "10240": {
      "op": "SUB"
    },
    "10241": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18846,
        18862
      ],
      "op": "AND",
      "path": "5"
    },
    "10242": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18846,
        18879
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10243": {
      "branch": 250,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18846,
        18879
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10244": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18846,
        18934
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x282D"
    },
    "10247": {
      "branch": 250,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18846,
        18934
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10248": {
      "op": "POP"
    },
    "10249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10255": {
      "op": "SHL"
    },
    "10256": {
      "op": "SUB"
    },
    "10257": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18883,
        18905
      ],
      "op": "DUP6",
      "path": "5"
    },
    "10258": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18883,
        18905
      ],
      "op": "AND",
      "path": "5"
    },
    "10259": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18883,
        18905
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10260": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18883,
        18905
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10261": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18883,
        18905
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10262": {
      "branch": 251,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18883,
        18905
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10263": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18883,
        18934
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x282D"
    },
    "10266": {
      "branch": 251,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18883,
        18934
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10267": {
      "op": "POP"
    },
    "10268": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18918,
        18934
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10269": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18918,
        18934
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10276": {
      "op": "SHL"
    },
    "10277": {
      "op": "SUB"
    },
    "10278": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18909,
        18934
      ],
      "op": "DUP7",
      "path": "5"
    },
    "10279": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18909,
        18934
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10280": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18909,
        18934
      ],
      "op": "AND",
      "path": "5"
    },
    "10281": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18918,
        18934
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10282": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18918,
        18934
      ],
      "op": "AND",
      "path": "5"
    },
    "10283": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18909,
        18934
      ],
      "op": "EQ",
      "path": "5"
    },
    "10284": {
      "branch": 252,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18909,
        18934
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10285": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18883,
        18934
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10286": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18842,
        18977
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10287": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18842,
        18977
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2838"
    },
    "10290": {
      "branch": 252,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18842,
        18977
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10291": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18954,
        18962
      ],
      "op": "POP",
      "path": "5",
      "statement": 133
    },
    "10292": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18954,
        18962
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2865"
    },
    "10295": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18954,
        18962
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10296": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18842,
        18977
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10297": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18991,
        19014
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10299": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19020,
        19061
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2844"
    },
    "10302": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19041,
        19047
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10303": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19049,
        19060
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10304": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19020,
        19040
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E45"
    },
    "10307": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "jump": "i",
      "offset": [
        19020,
        19061
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10308": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19020,
        19061
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10309": {
      "op": "POP"
    },
    "10310": {
      "op": "POP"
    },
    "10311": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19075,
        19105
      ],
      "op": "SWAP5",
      "path": "5",
      "statement": 134
    },
    "10312": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19075,
        19105
      ],
      "op": "DUP6",
      "path": "5"
    },
    "10313": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19075,
        19105
      ],
      "op": "ADD",
      "path": "5"
    },
    "10314": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19075,
        19105
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "10315": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18990,
        19061
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10316": {
      "op": "POP"
    },
    "10317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10323": {
      "op": "SHL"
    },
    "10324": {
      "op": "SUB"
    },
    "10325": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19123,
        19145
      ],
      "op": "DUP7",
      "path": "5"
    },
    "10326": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19123,
        19145
      ],
      "op": "AND",
      "path": "5"
    },
    "10327": {
      "branch": 253,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19123,
        19145
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10328": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19119,
        19184
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2862"
    },
    "10331": {
      "branch": 253,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19119,
        19184
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10332": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19164,
        19169
      ],
      "op": "POP",
      "path": "5",
      "statement": 135
    },
    "10333": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19164,
        19169
      ],
      "op": "POP",
      "path": "5"
    },
    "10334": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19164,
        19169
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x286D"
    },
    "10337": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19164,
        19169
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10338": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19119,
        19184
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10339": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18710,
        19194
      ],
      "op": "POP",
      "path": "5"
    },
    "10340": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18710,
        19194
      ],
      "op": "POP",
      "path": "5"
    },
    "10341": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18710,
        19194
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10342": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18749,
        18752
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 136,
      "value": "0x1"
    },
    "10344": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18749,
        18752
      ],
      "op": "ADD",
      "path": "5"
    },
    "10345": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18710,
        19194
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27C6"
    },
    "10348": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18710,
        19194
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10349": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18710,
        19194
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10356": {
      "op": "SHL"
    },
    "10357": {
      "op": "SUB"
    },
    "10358": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19207,
        19229
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10359": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19207,
        19229
      ],
      "op": "AND",
      "path": "5"
    },
    "10360": {
      "branch": 254,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19207,
        19229
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10361": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19203,
        19332
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x288C"
    },
    "10364": {
      "branch": 254,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19203,
        19332
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10365": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19294,
        19313
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 137,
      "value": "0x8"
    },
    "10367": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19294,
        19313
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10368": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19294,
        19313
      ],
      "op": "ADD",
      "path": "5"
    },
    "10369": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19294,
        19320
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10370": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19290,
        19320
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10371": {
      "branch": 255,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19290,
        19320
      ],
      "op": "LT",
      "path": "5"
    },
    "10372": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19282,
        19321
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x288C"
    },
    "10375": {
      "branch": 255,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19282,
        19321
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10378": {
      "op": "DUP1"
    },
    "10379": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19282,
        19321
      ],
      "op": "REVERT",
      "path": "5"
    },
    "10380": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        19282,
        19321
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10381": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18372,
        19338
      ],
      "op": "POP",
      "path": "5"
    },
    "10382": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18372,
        19338
      ],
      "op": "POP",
      "path": "5"
    },
    "10383": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18372,
        19338
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "10384": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18372,
        19338
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10385": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18372,
        19338
      ],
      "op": "POP",
      "path": "5"
    },
    "10386": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        18372,
        19338
      ],
      "op": "POP",
      "path": "5"
    },
    "10387": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "jump": "o",
      "offset": [
        18372,
        19338
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10388": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1770,
        1906
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10389": {
      "offset": [
        1384,
        1385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "10391": {
      "offset": [
        1586,
        1595
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10392": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1586,
        1595
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "10393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10397": {
      "op": "SHL"
    },
    "10398": {
      "offset": [
        1586,
        1595
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10399": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1586,
        1595
      ],
      "op": "DIV",
      "path": "15"
    },
    "10400": {
      "offset": [
        1586,
        1611
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "10402": {
      "offset": [
        1586,
        1595
      ],
      "op": "AND",
      "path": "15"
    },
    "10403": {
      "offset": [
        1586,
        1611
      ],
      "op": "EQ",
      "path": "15"
    },
    "10404": {
      "offset": [
        1578,
        1612
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x28AC"
    },
    "10407": {
      "offset": [
        1578,
        1612
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10410": {
      "op": "DUP1"
    },
    "10411": {
      "op": "REVERT"
    },
    "10412": {
      "offset": [
        1578,
        1612
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10413": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 138,
      "value": "0x40"
    },
    "10415": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10416": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10417": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1888,
        1898
      ],
      "op": "CALLER",
      "path": "15"
    },
    "10418": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10419": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10420": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10421": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10428": {
      "op": "SHL"
    },
    "10429": {
      "op": "SUB"
    },
    "10430": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10431": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "AND",
      "path": "15"
    },
    "10432": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10433": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x1E8D98C1B4A0D9BD2E2371026B632EB2773FCCE41742E41F02F574AB69868D4C"
    },
    "10466": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10467": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10468": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10469": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10470": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "SUB",
      "path": "15"
    },
    "10471": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10473": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "ADD",
      "path": "15"
    },
    "10474": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10475": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "LOG2",
      "path": "15"
    },
    "10476": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1770,
        1906
      ],
      "op": "POP",
      "path": "15"
    },
    "10477": {
      "fn": "Upgradeable.verifyState",
      "jump": "o",
      "offset": [
        1770,
        1906
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10478": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "offset": [
        25470,
        25726
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10479": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "offset": [
        25538,
        25557
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28F6"
    },
    "10482": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "offset": [
        25538,
        25557
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3361"
    },
    "10485": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "jump": "i",
      "offset": [
        25538,
        25557
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10486": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "offset": [
        25538,
        25557
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10487": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "offset": [
        25569,
        25590
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10489": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "offset": [
        25593,
        25654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xED2"
    },
    "10492": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "offset": [
        25609,
        25616
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10493": {
      "op": "PUSH4",
      "value": "0x65AF62C3"
    },
    "10498": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10500": {
      "op": "SHL"
    },
    "10501": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "offset": [
        25569,
        25590
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10502": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "offset": [
        25569,
        25590
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10503": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "offset": [
        25569,
        25590
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10504": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "offset": [
        25593,
        25608
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32C7"
    },
    "10507": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "jump": "i",
      "offset": [
        25593,
        25654
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10508": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        24288,
        24583
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10509": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        24377,
        24397
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2914"
    },
    "10512": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        24377,
        24397
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3381"
    },
    "10515": {
      "fn": "PolicyManager.delegateGetPolicy",
      "jump": "i",
      "offset": [
        24377,
        24397
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10516": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        24377,
        24397
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10517": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        24413,
        24434
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10519": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        24437,
        24511
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2935"
    },
    "10522": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        24453,
        24460
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10523": {
      "op": "PUSH4",
      "value": "0x713C0E57"
    },
    "10528": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10530": {
      "op": "SHL"
    },
    "10531": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        24486,
        24487
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "10533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10537": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10539": {
      "op": "SHL"
    },
    "10540": {
      "op": "SUB"
    },
    "10541": {
      "op": "NOT"
    },
    "10542": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        24489,
        24507
      ],
      "op": "DUP8",
      "path": "5"
    },
    "10543": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        24489,
        24507
      ],
      "op": "AND",
      "path": "5"
    },
    "10544": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        24413,
        24434
      ],
      "op": "DUP6",
      "path": "5"
    },
    "10545": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        24437,
        24452
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32C7"
    },
    "10548": {
      "fn": "PolicyManager.delegateGetPolicy",
      "jump": "i",
      "offset": [
        24437,
        24511
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10549": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        24437,
        24511
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10550": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        24413,
        24511
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "10551": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        24530,
        24577
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "10552": {
      "op": "POP"
    },
    "10553": {
      "op": "POP"
    },
    "10554": {
      "op": "POP"
    },
    "10555": {
      "op": "POP"
    },
    "10556": {
      "fn": "PolicyManager.delegateGetPolicy",
      "jump": "o",
      "offset": [
        24530,
        24577
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10557": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3897,
        4183
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10558": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3998,
        4012
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10560": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3998,
        4012
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10561": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4052,
        4104
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x294E"
    },
    "10564": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4068,
        4075
      ],
      "op": "DUP6",
      "path": "15"
    },
    "10565": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4077,
        4086
      ],
      "op": "DUP6",
      "path": "15"
    },
    "10566": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4088,
        4089
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "10568": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4091,
        4100
      ],
      "op": "DUP7",
      "path": "15"
    },
    "10569": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3998,
        4012
      ],
      "op": "DUP6",
      "path": "15"
    },
    "10570": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4052,
        4067
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32C7"
    },
    "10573": {
      "fn": "Upgradeable.delegateGet",
      "jump": "i",
      "offset": [
        4052,
        4104
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10574": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4052,
        4104
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10575": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4147,
        4167
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10576": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4147,
        4167
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "10577": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4123,
        4177
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "10578": {
      "op": "POP"
    },
    "10579": {
      "op": "POP"
    },
    "10580": {
      "op": "POP"
    },
    "10581": {
      "op": "POP"
    },
    "10582": {
      "op": "POP"
    },
    "10583": {
      "fn": "Upgradeable.delegateGet",
      "jump": "o",
      "offset": [
        4123,
        4177
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10584": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        24661,
        25027
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10585": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        24775,
        24804
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2960"
    },
    "10588": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        24775,
        24804
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3361"
    },
    "10591": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "jump": "i",
      "offset": [
        24775,
        24804
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10592": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        24775,
        24804
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10593": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        24820,
        24841
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10595": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        24844,
        24955
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB44"
    },
    "10598": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        24873,
        24880
      ],
      "op": "DUP6",
      "path": "5"
    },
    "10599": {
      "op": "PUSH4",
      "value": "0xD845F4FB"
    },
    "10604": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10606": {
      "op": "SHL"
    },
    "10607": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        24916,
        24917
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "10609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10613": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10615": {
      "op": "SHL"
    },
    "10616": {
      "op": "SUB"
    },
    "10617": {
      "op": "NOT"
    },
    "10618": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        24919,
        24937
      ],
      "op": "DUP9",
      "path": "5"
    },
    "10619": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        24919,
        24937
      ],
      "op": "AND",
      "path": "5"
    },
    "10620": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        24947,
        24953
      ],
      "op": "DUP8",
      "path": "5"
    },
    "10621": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        24844,
        24859
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32C7"
    },
    "10624": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "jump": "i",
      "offset": [
        24844,
        24955
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10625": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        25098,
        25395
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10626": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        25185,
        25207
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2989"
    },
    "10629": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        25185,
        25207
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3411"
    },
    "10632": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "jump": "i",
      "offset": [
        25185,
        25207
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10633": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        25185,
        25207
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10634": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        25223,
        25244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10636": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        25247,
        25323
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2935"
    },
    "10639": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        25263,
        25270
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10640": {
      "op": "PUSH4",
      "value": "0x189A5A17"
    },
    "10645": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10647": {
      "op": "SHL"
    },
    "10648": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        25293,
        25294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "10650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10656": {
      "op": "SHL"
    },
    "10657": {
      "op": "SUB"
    },
    "10658": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        25304,
        25318
      ],
      "op": "DUP8",
      "path": "5"
    },
    "10659": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        25304,
        25318
      ],
      "op": "AND",
      "path": "5"
    },
    "10660": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        25223,
        25244
      ],
      "op": "DUP6",
      "path": "5"
    },
    "10661": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        25247,
        25262
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32C7"
    },
    "10664": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "jump": "i",
      "offset": [
        25247,
        25323
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10665": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4290,
        4645
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10666": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4450,
        4464
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10668": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4480,
        4501
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10669": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4504,
        4566
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29BA"
    },
    "10672": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4520,
        4527
      ],
      "op": "DUP7",
      "path": "15"
    },
    "10673": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4529,
        4538
      ],
      "op": "DUP7",
      "path": "15"
    },
    "10674": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4540,
        4541
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "10676": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4543,
        4553
      ],
      "op": "DUP8",
      "path": "15"
    },
    "10677": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4555,
        4565
      ],
      "op": "DUP8",
      "path": "15"
    },
    "10678": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4504,
        4519
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32C7"
    },
    "10681": {
      "fn": "Upgradeable.delegateGet",
      "jump": "i",
      "offset": [
        4504,
        4566
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10682": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4504,
        4566
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10683": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4609,
        4629
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10684": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4609,
        4629
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "10685": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4585,
        4639
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "10686": {
      "op": "POP"
    },
    "10687": {
      "op": "POP"
    },
    "10688": {
      "op": "POP"
    },
    "10689": {
      "op": "POP"
    },
    "10690": {
      "op": "POP"
    },
    "10691": {
      "op": "POP"
    },
    "10692": {
      "fn": "Upgradeable.delegateGet",
      "jump": "o",
      "offset": [
        4585,
        4639
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10693": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3019,
        4261
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10694": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3146,
        3160
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "10696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10700": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10702": {
      "op": "SHL"
    },
    "10703": {
      "op": "SUB"
    },
    "10704": {
      "op": "NOT"
    },
    "10705": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3179,
        3201
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10706": {
      "branch": 271,
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3179,
        3201
      ],
      "op": "AND",
      "path": "11"
    },
    "10707": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3176,
        4255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A78"
    },
    "10710": {
      "branch": 271,
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3176,
        4255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "10711": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 139,
      "value": "0x40"
    },
    "10713": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10714": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "10716": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10718": {
      "op": "SHL"
    },
    "10719": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "10721": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "DUP1",
      "path": "11"
    },
    "10722": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "DUP4",
      "path": "11"
    },
    "10723": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "ADD",
      "path": "11"
    },
    "10724": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10725": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10726": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10727": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3260,
        3277
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "10729": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x21"
    },
    "10731": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "DUP6",
      "path": "11"
    },
    "10732": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "ADD",
      "path": "11"
    },
    "10733": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10734": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10735": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10736": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3288,
        3292
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "10737": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "10739": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10740": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10741": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "SHL",
      "path": "11"
    },
    "10742": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x22"
    },
    "10744": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "DUP8",
      "path": "11"
    },
    "10745": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "ADD",
      "path": "11"
    },
    "10746": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10747": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "DUP9",
      "path": "11"
    },
    "10748": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10749": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3288,
        3292
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10750": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3288,
        3292
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "10751": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3260,
        3277
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10752": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3260,
        3277
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "10753": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3288,
        3292
      ],
      "op": "DUP7",
      "path": "11"
    },
    "10754": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3288,
        3292
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "10755": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3376,
        3384
      ],
      "op": "DUP11",
      "path": "11"
    },
    "10756": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3376,
        3384
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "10757": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10758": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "10759": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x36"
    },
    "10761": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10762": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10763": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "ADD",
      "path": "11"
    },
    "10764": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10765": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "DUP5",
      "path": "11"
    },
    "10766": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "ADD",
      "path": "11"
    },
    "10767": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10768": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "DUP1",
      "path": "11"
    },
    "10769": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "DUP4",
      "path": "11"
    },
    "10770": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "DUP4",
      "path": "11"
    },
    "10771": {
      "op": "JUMPDEST"
    },
    "10772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10774": {
      "op": "DUP4"
    },
    "10775": {
      "op": "LT"
    },
    "10776": {
      "op": "PUSH2",
      "value": "0x2A32"
    },
    "10779": {
      "op": "JUMPI"
    },
    "10780": {
      "op": "DUP1"
    },
    "10781": {
      "op": "MLOAD"
    },
    "10782": {
      "op": "DUP3"
    },
    "10783": {
      "op": "MSTORE"
    },
    "10784": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10786": {
      "op": "NOT"
    },
    "10787": {
      "op": "SWAP1"
    },
    "10788": {
      "op": "SWAP3"
    },
    "10789": {
      "op": "ADD"
    },
    "10790": {
      "op": "SWAP2"
    },
    "10791": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10793": {
      "op": "SWAP2"
    },
    "10794": {
      "op": "DUP3"
    },
    "10795": {
      "op": "ADD"
    },
    "10796": {
      "op": "SWAP2"
    },
    "10797": {
      "op": "ADD"
    },
    "10798": {
      "op": "PUSH2",
      "value": "0x2A13"
    },
    "10801": {
      "op": "JUMP"
    },
    "10802": {
      "op": "JUMPDEST"
    },
    "10803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10805": {
      "op": "DUP4"
    },
    "10806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10808": {
      "op": "SUB"
    },
    "10809": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10812": {
      "op": "EXP"
    },
    "10813": {
      "op": "SUB"
    },
    "10814": {
      "op": "DUP1"
    },
    "10815": {
      "op": "NOT"
    },
    "10816": {
      "op": "DUP3"
    },
    "10817": {
      "op": "MLOAD"
    },
    "10818": {
      "op": "AND"
    },
    "10819": {
      "op": "DUP2"
    },
    "10820": {
      "op": "DUP5"
    },
    "10821": {
      "op": "MLOAD"
    },
    "10822": {
      "op": "AND"
    },
    "10823": {
      "op": "DUP1"
    },
    "10824": {
      "op": "DUP3"
    },
    "10825": {
      "op": "OR"
    },
    "10826": {
      "op": "DUP6"
    },
    "10827": {
      "op": "MSTORE"
    },
    "10828": {
      "op": "POP"
    },
    "10829": {
      "op": "POP"
    },
    "10830": {
      "op": "POP"
    },
    "10831": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "POP",
      "path": "11"
    },
    "10832": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "POP",
      "path": "11"
    },
    "10833": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "POP",
      "path": "11"
    },
    "10834": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10835": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "POP",
      "path": "11"
    },
    "10836": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "ADD",
      "path": "11"
    },
    "10837": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "10838": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "POP",
      "path": "11"
    },
    "10839": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "POP",
      "path": "11"
    },
    "10840": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "POP",
      "path": "11"
    },
    "10841": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "POP",
      "path": "11"
    },
    "10842": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "POP",
      "path": "11"
    },
    "10843": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "10845": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10848": {
      "op": "DUP2"
    },
    "10849": {
      "op": "DUP4"
    },
    "10850": {
      "op": "SUB"
    },
    "10851": {
      "op": "SUB"
    },
    "10852": {
      "op": "DUP2"
    },
    "10853": {
      "op": "MSTORE"
    },
    "10854": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10855": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "10857": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3324,
        3385
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10858": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3314,
        3386
      ],
      "op": "DUP1",
      "path": "11"
    },
    "10859": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3314,
        3386
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10860": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3314,
        3386
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10861": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3314,
        3386
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "10863": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3314,
        3386
      ],
      "op": "ADD",
      "path": "11"
    },
    "10864": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3314,
        3386
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "10865": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3307,
        3386
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10866": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3307,
        3386
      ],
      "op": "POP",
      "path": "11"
    },
    "10867": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3307,
        3386
      ],
      "op": "POP",
      "path": "11"
    },
    "10868": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3307,
        3386
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1033"
    },
    "10871": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3307,
        3386
      ],
      "op": "JUMP",
      "path": "11"
    },
    "10872": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3176,
        4255
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10877": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10879": {
      "op": "SHL"
    },
    "10880": {
      "op": "SUB"
    },
    "10881": {
      "op": "NOT"
    },
    "10882": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3407,
        3429
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10883": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3407,
        3429
      ],
      "op": "AND",
      "path": "11"
    },
    "10884": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "10886": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10888": {
      "op": "SHL"
    },
    "10889": {
      "branch": 272,
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3407,
        3429
      ],
      "op": "EQ",
      "path": "11"
    },
    "10890": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3403,
        4255
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "10891": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3403,
        4255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2C77"
    },
    "10894": {
      "branch": 272,
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3403,
        4255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "10895": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3499,
        3514
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10896": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3499,
        3514
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10897": {
      "branch": 273,
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3536,
        3546
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 140
    },
    "10898": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2ACC"
    },
    "10901": {
      "branch": 273,
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "10902": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "10904": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10905": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10909": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10911": {
      "op": "SHL"
    },
    "10912": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10913": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10914": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "10916": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "ADD",
      "path": "11"
    },
    "10917": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "DUP1",
      "path": "11"
    },
    "10918": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "DUP1",
      "path": "11"
    },
    "10919": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "10921": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "ADD",
      "path": "11"
    },
    "10922": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10923": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10924": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "SUB",
      "path": "11"
    },
    "10925": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10926": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10927": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x27"
    },
    "10929": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10930": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10931": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "10933": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "ADD",
      "path": "11"
    },
    "10934": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "DUP1",
      "path": "11"
    },
    "10935": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x34C0"
    },
    "10938": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x27"
    },
    "10940": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10941": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "CODECOPY",
      "path": "11"
    },
    "10942": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "10944": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "ADD",
      "path": "11"
    },
    "10945": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10946": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "POP",
      "path": "11"
    },
    "10947": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "POP",
      "path": "11"
    },
    "10948": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "10950": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10951": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "DUP1",
      "path": "11"
    },
    "10952": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10953": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "SUB",
      "path": "11"
    },
    "10954": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10955": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "REVERT",
      "path": "11"
    },
    "10956": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3528,
        3590
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10957": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3659,
        3673
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "10959": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3691,
        3782
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10960": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3698,
        3709
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10961": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3698,
        3709
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "10962": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3691,
        3782
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2AE3"
    },
    "10965": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3691,
        3782
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "10966": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3729,
        3737
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 141,
      "value": "0x1"
    },
    "10968": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3729,
        3737
      ],
      "op": "ADD",
      "path": "11"
    },
    "10969": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3765,
        3767
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 142,
      "value": "0xA"
    },
    "10971": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3755,
        3767
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10972": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3755,
        3767
      ],
      "op": "DIV",
      "path": "11"
    },
    "10973": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3755,
        3767
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10974": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3755,
        3767
      ],
      "op": "POP",
      "path": "11"
    },
    "10975": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3691,
        3782
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2ACF"
    },
    "10978": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3691,
        3782
      ],
      "op": "JUMP",
      "path": "11"
    },
    "10979": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3691,
        3782
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10980": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3795,
        3820
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "10982": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3833,
        3839
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10987": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10989": {
      "op": "SHL"
    },
    "10990": {
      "op": "SUB"
    },
    "10991": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10992": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "GT",
      "path": "11"
    },
    "10993": {
      "op": "DUP1"
    },
    "10994": {
      "op": "ISZERO"
    },
    "10995": {
      "op": "PUSH2",
      "value": "0x2AFB"
    },
    "10998": {
      "op": "JUMPI"
    },
    "10999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11001": {
      "op": "DUP1"
    },
    "11002": {
      "op": "REVERT"
    },
    "11003": {
      "op": "JUMPDEST"
    },
    "11004": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "POP",
      "path": "11"
    },
    "11005": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "11007": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11008": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11009": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11010": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11011": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11012": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11013": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "11015": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "ADD",
      "path": "11"
    },
    "11016": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "11018": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "NOT",
      "path": "11"
    },
    "11019": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "AND",
      "path": "11"
    },
    "11020": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11022": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "ADD",
      "path": "11"
    },
    "11023": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11024": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "ADD",
      "path": "11"
    },
    "11025": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "11027": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11028": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11029": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "11030": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2B26"
    },
    "11033": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "11034": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11036": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11037": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "ADD",
      "path": "11"
    },
    "11038": {
      "op": "DUP2"
    },
    "11039": {
      "op": "DUP1"
    },
    "11040": {
      "op": "CALLDATASIZE"
    },
    "11041": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "DUP4",
      "path": "11"
    },
    "11042": {
      "op": "CALLDATACOPY"
    },
    "11043": {
      "op": "ADD"
    },
    "11044": {
      "op": "SWAP1"
    },
    "11045": {
      "op": "POP"
    },
    "11046": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3823,
        3840
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11047": {
      "op": "POP"
    },
    "11048": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3863,
        3878
      ],
      "op": "DUP7",
      "path": "11",
      "statement": 143
    },
    "11049": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3863,
        3878
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11050": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3863,
        3878
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "11051": {
      "op": "POP"
    },
    "11052": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3795,
        3840
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11053": {
      "op": "POP"
    },
    "11054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11056": {
      "op": "NOT"
    },
    "11057": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3908,
        3918
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11058": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3908,
        3918
      ],
      "op": "ADD",
      "path": "11"
    },
    "11059": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3932,
        4068
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11060": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3939,
        3950
      ],
      "op": "DUP4",
      "path": "11"
    },
    "11061": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3939,
        3950
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "11062": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3932,
        4068
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2B78"
    },
    "11065": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3932,
        4068
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "11066": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4019,
        4021
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 144,
      "value": "0xA"
    },
    "11068": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4010,
        4016
      ],
      "op": "DUP5",
      "path": "11"
    },
    "11069": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4010,
        4021
      ],
      "op": "MOD",
      "path": "11"
    },
    "11070": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4005,
        4007
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x30"
    },
    "11072": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4005,
        4021
      ],
      "op": "ADD",
      "path": "11"
    },
    "11073": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3994,
        4023
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xF8"
    },
    "11075": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3994,
        4023
      ],
      "op": "SHL",
      "path": "11"
    },
    "11076": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        3982
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11077": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3983,
        3990
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11078": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3983,
        3990
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11079": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3983,
        3990
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "11081": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3983,
        3990
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11082": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3983,
        3990
      ],
      "op": "SUB",
      "path": "11"
    },
    "11083": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3983,
        3990
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "11084": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3983,
        3990
      ],
      "op": "POP",
      "path": "11"
    },
    "11085": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        3991
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11086": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        3991
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11087": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        3991
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11088": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        3991
      ],
      "op": "LT",
      "path": "11"
    },
    "11089": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        3991
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2B56"
    },
    "11092": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        3991
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "11093": {
      "dev": "Index out of range",
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        3991
      ],
      "op": "INVALID",
      "path": "11"
    },
    "11094": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        3991
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11095": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        3991
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11097": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        3991
      ],
      "op": "ADD",
      "path": "11"
    },
    "11098": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        3991
      ],
      "op": "ADD",
      "path": "11"
    },
    "11099": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        4023
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11104": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11106": {
      "op": "SHL"
    },
    "11107": {
      "op": "SUB"
    },
    "11108": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        4023
      ],
      "op": "NOT",
      "path": "11"
    },
    "11109": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        4023
      ],
      "op": "AND",
      "path": "11"
    },
    "11110": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        4023
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11111": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        4023
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11112": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        4023
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "11114": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        4023
      ],
      "op": "BYTE",
      "path": "11"
    },
    "11115": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        4023
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11116": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3970,
        4023
      ],
      "op": "MSTORE8",
      "path": "11"
    },
    "11117": {
      "op": "POP"
    },
    "11118": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4051,
        4053
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 145,
      "value": "0xA"
    },
    "11120": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4041,
        4053
      ],
      "op": "DUP5",
      "path": "11"
    },
    "11121": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4041,
        4053
      ],
      "op": "DIV",
      "path": "11"
    },
    "11122": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4041,
        4053
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "11123": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4041,
        4053
      ],
      "op": "POP",
      "path": "11"
    },
    "11124": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3932,
        4068
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2B33"
    },
    "11127": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3932,
        4068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11128": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3932,
        4068
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11129": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 146,
      "value": "0x40"
    },
    "11131": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11132": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "11134": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11136": {
      "op": "SHL"
    },
    "11137": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11139": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11140": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "DUP4",
      "path": "11"
    },
    "11141": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "ADD",
      "path": "11"
    },
    "11142": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11143": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11144": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11145": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4128,
        4151
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x457468657265756D205369676E6564204D6573736167653A0A00000000000000"
    },
    "11178": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x21"
    },
    "11180": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "DUP6",
      "path": "11"
    },
    "11181": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "ADD",
      "path": "11"
    },
    "11182": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11183": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11184": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11185": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "DUP7",
      "path": "11"
    },
    "11186": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11187": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4116,
        4126
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "11188": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4116,
        4126
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "11189": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4128,
        4151
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11190": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4128,
        4151
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "11191": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4153,
        4165
      ],
      "op": "DUP8",
      "path": "11"
    },
    "11192": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4153,
        4165
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "11193": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4167,
        4175
      ],
      "op": "DUP14",
      "path": "11"
    },
    "11194": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4167,
        4175
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "11195": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "11196": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3A"
    },
    "11198": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "ADD",
      "path": "11"
    },
    "11199": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "11200": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11201": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "DUP6",
      "path": "11"
    },
    "11202": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "ADD",
      "path": "11"
    },
    "11203": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11204": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11205": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "DUP4",
      "path": "11"
    },
    "11206": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "DUP4",
      "path": "11"
    },
    "11207": {
      "op": "JUMPDEST"
    },
    "11208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11210": {
      "op": "DUP4"
    },
    "11211": {
      "op": "LT"
    },
    "11212": {
      "op": "PUSH2",
      "value": "0x2BE6"
    },
    "11215": {
      "op": "JUMPI"
    },
    "11216": {
      "op": "DUP1"
    },
    "11217": {
      "op": "MLOAD"
    },
    "11218": {
      "op": "DUP3"
    },
    "11219": {
      "op": "MSTORE"
    },
    "11220": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11222": {
      "op": "NOT"
    },
    "11223": {
      "op": "SWAP1"
    },
    "11224": {
      "op": "SWAP3"
    },
    "11225": {
      "op": "ADD"
    },
    "11226": {
      "op": "SWAP2"
    },
    "11227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11229": {
      "op": "SWAP2"
    },
    "11230": {
      "op": "DUP3"
    },
    "11231": {
      "op": "ADD"
    },
    "11232": {
      "op": "SWAP2"
    },
    "11233": {
      "op": "ADD"
    },
    "11234": {
      "op": "PUSH2",
      "value": "0x2BC7"
    },
    "11237": {
      "op": "JUMP"
    },
    "11238": {
      "op": "JUMPDEST"
    },
    "11239": {
      "op": "MLOAD"
    },
    "11240": {
      "op": "DUP2"
    },
    "11241": {
      "op": "MLOAD"
    },
    "11242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11244": {
      "op": "SWAP4"
    },
    "11245": {
      "op": "DUP5"
    },
    "11246": {
      "op": "SUB"
    },
    "11247": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11250": {
      "op": "EXP"
    },
    "11251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11253": {
      "op": "NOT"
    },
    "11254": {
      "op": "ADD"
    },
    "11255": {
      "op": "DUP1"
    },
    "11256": {
      "op": "NOT"
    },
    "11257": {
      "op": "SWAP1"
    },
    "11258": {
      "op": "SWAP3"
    },
    "11259": {
      "op": "AND"
    },
    "11260": {
      "op": "SWAP2"
    },
    "11261": {
      "op": "AND"
    },
    "11262": {
      "op": "OR"
    },
    "11263": {
      "op": "SWAP1"
    },
    "11264": {
      "op": "MSTORE"
    },
    "11265": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "DUP6",
      "path": "11"
    },
    "11266": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11267": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "11268": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11269": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "11270": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "ADD",
      "path": "11"
    },
    "11271": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "11272": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "DUP6",
      "path": "11"
    },
    "11273": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "ADD",
      "path": "11"
    },
    "11274": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "11275": {
      "op": "POP"
    },
    "11276": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11277": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "DUP4",
      "path": "11"
    },
    "11278": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "DUP4",
      "path": "11"
    },
    "11279": {
      "op": "JUMPDEST"
    },
    "11280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11282": {
      "op": "DUP4"
    },
    "11283": {
      "op": "LT"
    },
    "11284": {
      "op": "PUSH2",
      "value": "0x2C2E"
    },
    "11287": {
      "op": "JUMPI"
    },
    "11288": {
      "op": "DUP1"
    },
    "11289": {
      "op": "MLOAD"
    },
    "11290": {
      "op": "DUP3"
    },
    "11291": {
      "op": "MSTORE"
    },
    "11292": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11294": {
      "op": "NOT"
    },
    "11295": {
      "op": "SWAP1"
    },
    "11296": {
      "op": "SWAP3"
    },
    "11297": {
      "op": "ADD"
    },
    "11298": {
      "op": "SWAP2"
    },
    "11299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11301": {
      "op": "SWAP2"
    },
    "11302": {
      "op": "DUP3"
    },
    "11303": {
      "op": "ADD"
    },
    "11304": {
      "op": "SWAP2"
    },
    "11305": {
      "op": "ADD"
    },
    "11306": {
      "op": "PUSH2",
      "value": "0x2C0F"
    },
    "11309": {
      "op": "JUMP"
    },
    "11310": {
      "op": "JUMPDEST"
    },
    "11311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11313": {
      "op": "DUP4"
    },
    "11314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11316": {
      "op": "SUB"
    },
    "11317": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11320": {
      "op": "EXP"
    },
    "11321": {
      "op": "SUB"
    },
    "11322": {
      "op": "DUP1"
    },
    "11323": {
      "op": "NOT"
    },
    "11324": {
      "op": "DUP3"
    },
    "11325": {
      "op": "MLOAD"
    },
    "11326": {
      "op": "AND"
    },
    "11327": {
      "op": "DUP2"
    },
    "11328": {
      "op": "DUP5"
    },
    "11329": {
      "op": "MLOAD"
    },
    "11330": {
      "op": "AND"
    },
    "11331": {
      "op": "DUP1"
    },
    "11332": {
      "op": "DUP3"
    },
    "11333": {
      "op": "OR"
    },
    "11334": {
      "op": "DUP6"
    },
    "11335": {
      "op": "MSTORE"
    },
    "11336": {
      "op": "POP"
    },
    "11337": {
      "op": "POP"
    },
    "11338": {
      "op": "POP"
    },
    "11339": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "POP",
      "path": "11"
    },
    "11340": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "POP",
      "path": "11"
    },
    "11341": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "POP",
      "path": "11"
    },
    "11342": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11343": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "POP",
      "path": "11"
    },
    "11344": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "ADD",
      "path": "11"
    },
    "11345": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "11346": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "POP",
      "path": "11"
    },
    "11347": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "POP",
      "path": "11"
    },
    "11348": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "POP",
      "path": "11"
    },
    "11349": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "POP",
      "path": "11"
    },
    "11350": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "POP",
      "path": "11"
    },
    "11351": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "11353": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11356": {
      "op": "DUP2"
    },
    "11357": {
      "op": "DUP4"
    },
    "11358": {
      "op": "SUB"
    },
    "11359": {
      "op": "SUB"
    },
    "11360": {
      "op": "DUP2"
    },
    "11361": {
      "op": "MSTORE"
    },
    "11362": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11363": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "11365": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4099,
        4176
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11366": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4089,
        4177
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11367": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4089,
        4177
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11368": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4089,
        4177
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11369": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4089,
        4177
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11371": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4089,
        4177
      ],
      "op": "ADD",
      "path": "11"
    },
    "11372": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4089,
        4177
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "11373": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4082,
        4177
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "11374": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4082,
        4177
      ],
      "op": "POP",
      "path": "11"
    },
    "11375": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4082,
        4177
      ],
      "op": "POP",
      "path": "11"
    },
    "11376": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4082,
        4177
      ],
      "op": "POP",
      "path": "11"
    },
    "11377": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4082,
        4177
      ],
      "op": "POP",
      "path": "11"
    },
    "11378": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4082,
        4177
      ],
      "op": "POP",
      "path": "11"
    },
    "11379": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4082,
        4177
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1033"
    },
    "11382": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4082,
        4177
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11383": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3403,
        4255
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11384": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 147,
      "value": "0x40"
    },
    "11386": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11387": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11388": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11392": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11394": {
      "op": "SHL"
    },
    "11395": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11396": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11397": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11399": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "11401": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11402": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "ADD",
      "path": "11"
    },
    "11403": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11404": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1A"
    },
    "11406": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "11408": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11409": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "ADD",
      "path": "11"
    },
    "11410": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11411": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x556E737570706F72746564204549503139312076657273696F6E000000000000"
    },
    "11444": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x44"
    },
    "11446": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11447": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "ADD",
      "path": "11"
    },
    "11448": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11449": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11450": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11451": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11452": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11453": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11454": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "SUB",
      "path": "11"
    },
    "11455": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x64"
    },
    "11457": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "ADD",
      "path": "11"
    },
    "11458": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11459": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4208,
        4244
      ],
      "op": "REVERT",
      "path": "11"
    },
    "11460": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2042,
        2174
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11461": {
      "offset": [
        1384,
        1385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "11463": {
      "offset": [
        1586,
        1595
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11464": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        1586,
        1595
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11469": {
      "op": "SHL"
    },
    "11470": {
      "offset": [
        1586,
        1595
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11471": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        1586,
        1595
      ],
      "op": "DIV",
      "path": "15"
    },
    "11472": {
      "offset": [
        1586,
        1611
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11474": {
      "offset": [
        1586,
        1595
      ],
      "op": "AND",
      "path": "15"
    },
    "11475": {
      "offset": [
        1586,
        1611
      ],
      "op": "EQ",
      "path": "15"
    },
    "11476": {
      "offset": [
        1578,
        1612
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2CDC"
    },
    "11479": {
      "offset": [
        1578,
        1612
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11482": {
      "op": "DUP1"
    },
    "11483": {
      "op": "REVERT"
    },
    "11484": {
      "offset": [
        1578,
        1612
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11485": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 148,
      "value": "0x40"
    },
    "11487": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11488": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11489": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2156,
        2166
      ],
      "op": "CALLER",
      "path": "15"
    },
    "11490": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11491": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11492": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11493": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11500": {
      "op": "SHL"
    },
    "11501": {
      "op": "SUB"
    },
    "11502": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11503": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "AND",
      "path": "15"
    },
    "11504": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11505": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xD55EC27C5C6316913ED8803C18CFD1BFEFEA953DB909DCBA6140744A9D8B0D1F"
    },
    "11538": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11539": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11540": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11541": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11542": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "SUB",
      "path": "15"
    },
    "11543": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11545": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "ADD",
      "path": "15"
    },
    "11546": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11547": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "LOG2",
      "path": "15"
    },
    "11548": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2042,
        2174
      ],
      "op": "POP",
      "path": "15"
    },
    "11549": {
      "fn": "Upgradeable.finishUpgrade",
      "jump": "o",
      "offset": [
        2042,
        2174
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11550": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1907,
        2090
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "11551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11557": {
      "op": "SHL"
    },
    "11558": {
      "op": "SUB"
    },
    "11559": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1980,
        2002
      ],
      "op": "DUP2",
      "path": "21",
      "statement": 149
    },
    "11560": {
      "branch": 267,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1980,
        2002
      ],
      "op": "AND",
      "path": "21"
    },
    "11561": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1972,
        2003
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2D31"
    },
    "11564": {
      "branch": 267,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1972,
        2003
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "11565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11567": {
      "op": "DUP1"
    },
    "11568": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1972,
        2003
      ],
      "op": "REVERT",
      "path": "21"
    },
    "11569": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1972,
        2003
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "11570": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 150,
      "value": "0x0"
    },
    "11572": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "DUP1",
      "path": "21"
    },
    "11573": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "11574": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "11576": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "11577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11583": {
      "op": "SHL"
    },
    "11584": {
      "op": "SUB"
    },
    "11585": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "DUP1",
      "path": "21"
    },
    "11586": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "DUP6",
      "path": "21"
    },
    "11587": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "AND",
      "path": "21"
    },
    "11588": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "11589": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "11590": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "AND",
      "path": "21"
    },
    "11591": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "11592": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "11625": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "11626": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "LOG3",
      "path": "21"
    },
    "11627": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2072
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 151,
      "value": "0x0"
    },
    "11629": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "DUP1",
      "path": "21"
    },
    "11630": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "11631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11637": {
      "op": "SHL"
    },
    "11638": {
      "op": "SUB"
    },
    "11639": {
      "op": "NOT"
    },
    "11640": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "AND",
      "path": "21"
    },
    "11641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11647": {
      "op": "SHL"
    },
    "11648": {
      "op": "SUB"
    },
    "11649": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "11650": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "11651": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "11652": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "AND",
      "path": "21"
    },
    "11653": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "11654": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "11655": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "11656": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "OR",
      "path": "21"
    },
    "11657": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "11658": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "11659": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        1907,
        2090
      ],
      "op": "JUMP",
      "path": "21"
    },
    "11660": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        603,
        1219
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11661": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        707,
        714
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "11663": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        738,
        748
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 152
    },
    "11664": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        738,
        755
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11665": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        759,
        761
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x41"
    },
    "11667": {
      "branch": 274,
      "fn": "SignatureVerifier.recover",
      "offset": [
        738,
        761
      ],
      "op": "EQ",
      "path": "11"
    },
    "11668": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        730,
        762
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D9C"
    },
    "11671": {
      "branch": 274,
      "fn": "SignatureVerifier.recover",
      "offset": [
        730,
        762
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "11672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11674": {
      "op": "DUP1"
    },
    "11675": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        730,
        762
      ],
      "op": "REVERT",
      "path": "11"
    },
    "11676": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        730,
        762
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11677": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        878,
        880
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11679": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        862,
        881
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11680": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        862,
        881
      ],
      "op": "ADD",
      "path": "11"
    },
    "11681": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        856,
        882
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11682": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        922,
        924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "11684": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        906,
        925
      ],
      "op": "DUP4",
      "path": "11"
    },
    "11685": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        906,
        925
      ],
      "op": "ADD",
      "path": "11"
    },
    "11686": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        900,
        926
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11687": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        974,
        976
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "11689": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        958,
        977
      ],
      "op": "DUP5",
      "path": "11"
    },
    "11690": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        958,
        977
      ],
      "op": "ADD",
      "path": "11"
    },
    "11691": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        952,
        978
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11692": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        773,
        782
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "11694": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        944,
        979
      ],
      "op": "BYTE",
      "path": "11"
    },
    "11695": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1098,
        1100
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1B"
    },
    "11697": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1094,
        1100
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11698": {
      "branch": 275,
      "fn": "SignatureVerifier.recover",
      "offset": [
        1094,
        1100
      ],
      "op": "LT",
      "path": "11"
    },
    "11699": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1090,
        1134
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "11700": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1090,
        1134
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DBB"
    },
    "11703": {
      "branch": 275,
      "fn": "SignatureVerifier.recover",
      "offset": [
        1090,
        1134
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "11704": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1121,
        1123
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 153,
      "value": "0x1B"
    },
    "11706": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1116,
        1123
      ],
      "op": "ADD",
      "path": "11"
    },
    "11707": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1090,
        1134
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11708": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1151,
        1152
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 154
    },
    "11709": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1151,
        1158
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "11711": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1151,
        1158
      ],
      "op": "AND",
      "path": "11"
    },
    "11712": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1156,
        1158
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1B"
    },
    "11714": {
      "branch": 276,
      "fn": "SignatureVerifier.recover",
      "offset": [
        1151,
        1158
      ],
      "op": "EQ",
      "path": "11"
    },
    "11715": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1151,
        1169
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11716": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1151,
        1169
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DD0"
    },
    "11719": {
      "branch": 276,
      "fn": "SignatureVerifier.recover",
      "offset": [
        1151,
        1169
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "11720": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1151,
        1169
      ],
      "op": "POP",
      "path": "11"
    },
    "11721": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1162,
        1163
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11722": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1162,
        1169
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "11724": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1162,
        1169
      ],
      "op": "AND",
      "path": "11"
    },
    "11725": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1167,
        1169
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1C"
    },
    "11727": {
      "branch": 277,
      "fn": "SignatureVerifier.recover",
      "offset": [
        1162,
        1169
      ],
      "op": "EQ",
      "path": "11"
    },
    "11728": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1151,
        1169
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11729": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1143,
        1170
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DD9"
    },
    "11732": {
      "branch": 277,
      "fn": "SignatureVerifier.recover",
      "offset": [
        1143,
        1170
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "11733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11735": {
      "op": "DUP1"
    },
    "11736": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1143,
        1170
      ],
      "op": "REVERT",
      "path": "11"
    },
    "11737": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1143,
        1170
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11738": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 155,
      "value": "0x40"
    },
    "11740": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11741": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11742": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "11744": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11745": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11746": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11748": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11749": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11750": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "ADD",
      "path": "11"
    },
    "11751": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11752": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP5",
      "path": "11"
    },
    "11753": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11754": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP10",
      "path": "11"
    },
    "11755": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11756": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11757": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "11759": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP5",
      "path": "11"
    },
    "11760": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "AND",
      "path": "11"
    },
    "11761": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11762": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP5",
      "path": "11"
    },
    "11763": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "ADD",
      "path": "11"
    },
    "11764": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11765": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "11767": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11768": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "ADD",
      "path": "11"
    },
    "11769": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP7",
      "path": "11"
    },
    "11770": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11771": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11772": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "11774": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11775": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "ADD",
      "path": "11"
    },
    "11776": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP6",
      "path": "11"
    },
    "11777": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11778": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11779": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "11780": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11781": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "11783": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "11784": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "11786": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11787": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP5",
      "path": "11"
    },
    "11788": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "ADD",
      "path": "11"
    },
    "11789": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "11790": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "11791": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "11792": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11794": {
      "op": "NOT"
    },
    "11795": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11796": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "ADD",
      "path": "11"
    },
    "11797": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "11798": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11799": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11800": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "SUB",
      "path": "11"
    },
    "11801": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11802": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "11803": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "ADD",
      "path": "11"
    },
    "11804": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11805": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP6",
      "path": "11"
    },
    "11806": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "GAS",
      "path": "11"
    },
    "11807": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "11808": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "11809": {
      "op": "DUP1"
    },
    "11810": {
      "op": "ISZERO"
    },
    "11811": {
      "op": "PUSH2",
      "value": "0x2E30"
    },
    "11814": {
      "op": "JUMPI"
    },
    "11815": {
      "op": "RETURNDATASIZE"
    },
    "11816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11818": {
      "op": "DUP1"
    },
    "11819": {
      "op": "RETURNDATACOPY"
    },
    "11820": {
      "op": "RETURNDATASIZE"
    },
    "11821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11823": {
      "op": "REVERT"
    },
    "11824": {
      "op": "JUMPDEST"
    },
    "11825": {
      "op": "POP"
    },
    "11826": {
      "op": "POP"
    },
    "11827": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "11829": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11830": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11832": {
      "op": "NOT"
    },
    "11833": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "ADD",
      "path": "11"
    },
    "11834": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11835": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1187,
        1212
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "11836": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        603,
        1219
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "11837": {
      "op": "POP"
    },
    "11838": {
      "op": "POP"
    },
    "11839": {
      "op": "POP"
    },
    "11840": {
      "op": "POP"
    },
    "11841": {
      "op": "POP"
    },
    "11842": {
      "op": "POP"
    },
    "11843": {
      "op": "POP"
    },
    "11844": {
      "fn": "SignatureVerifier.recover",
      "jump": "o",
      "offset": [
        603,
        1219
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11845": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12191,
        14339
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11846": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12314,
        12333
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "11848": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12335,
        12365
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11849": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12367,
        12392
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "11851": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12408,
        12432
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11852": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12467,
        12483
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x0"
    },
    "11885": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12483
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "11890": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12483
      ],
      "op": "AND",
      "path": "5"
    },
    "11891": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12449
      ],
      "op": "DUP7",
      "path": "5"
    },
    "11892": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12464
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "11894": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12464
      ],
      "op": "ADD",
      "path": "5"
    },
    "11895": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12464
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x10"
    },
    "11897": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12464
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11898": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12464
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "11899": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12464
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11900": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12464
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "11903": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12464
      ],
      "op": "EXP",
      "path": "5"
    },
    "11904": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12464
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11905": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12464
      ],
      "op": "DIV",
      "path": "5"
    },
    "11906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11910": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11912": {
      "op": "SHL"
    },
    "11913": {
      "op": "SUB"
    },
    "11914": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12464
      ],
      "op": "AND",
      "path": "5"
    },
    "11915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11919": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11921": {
      "op": "SHL"
    },
    "11922": {
      "op": "SUB"
    },
    "11923": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12483
      ],
      "op": "AND",
      "path": "5"
    },
    "11924": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12483
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11925": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12483
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E9A"
    },
    "11928": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12483
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "11929": {
      "dev": "Division by zero",
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12483
      ],
      "op": "INVALID",
      "path": "5"
    },
    "11930": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12483
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11931": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12442,
        12483
      ],
      "op": "DIV",
      "path": "5"
    },
    "11932": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12408,
        12484
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11933": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12408,
        12484
      ],
      "op": "POP",
      "path": "5"
    },
    "11934": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12494,
        12510
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "11936": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12513,
        12602
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2EF4"
    },
    "11939": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12534,
        12552
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2EAA"
    },
    "11942": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12534,
        12550
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB4D"
    },
    "11945": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        12534,
        12552
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11946": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12534,
        12552
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11947": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12561,
        12581
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "11949": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12561,
        12581
      ],
      "op": "DUP10",
      "path": "5"
    },
    "11950": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12561,
        12581
      ],
      "op": "ADD",
      "path": "5"
    },
    "11951": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12561,
        12581
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "11952": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12584,
        12600
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x0"
    },
    "11985": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12561,
        12600
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "11990": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12561,
        12600
      ],
      "op": "AND",
      "path": "5"
    },
    "11991": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12561,
        12600
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11994": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11996": {
      "op": "SHL"
    },
    "11997": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12561,
        12581
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11998": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12561,
        12581
      ],
      "op": "DIV",
      "path": "5"
    },
    "11999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12003": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12005": {
      "op": "SHL"
    },
    "12006": {
      "op": "SUB"
    },
    "12007": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12561,
        12581
      ],
      "op": "AND",
      "path": "5"
    },
    "12008": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12561,
        12600
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12009": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12561,
        12600
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2EEE"
    },
    "12012": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12561,
        12600
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12013": {
      "dev": "Division by zero",
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12561,
        12600
      ],
      "op": "INVALID",
      "path": "5"
    },
    "12014": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12561,
        12600
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12015": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12561,
        12600
      ],
      "op": "DIV",
      "path": "5"
    },
    "12016": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12513,
        12533
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3317"
    },
    "12019": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        12513,
        12602
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12020": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12513,
        12602
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12021": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12671,
        12702
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12023": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12671,
        12702
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12024": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12671,
        12702
      ],
      "op": "ADD",
      "path": "5"
    },
    "12025": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12671,
        12702
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12026": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12494,
        12602
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12027": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12494,
        12602
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12028": {
      "op": "POP"
    },
    "12029": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12612,
        12628
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12031": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12612,
        12628
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12032": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12631,
        12703
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F0E"
    },
    "12035": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12631,
        12703
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12036": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12652,
        12669
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12037": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12652,
        12669
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12038": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12671,
        12702
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "12041": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12671,
        12702
      ],
      "op": "AND",
      "path": "5"
    },
    "12042": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12631,
        12651
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3335"
    },
    "12045": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        12631,
        12703
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12046": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12631,
        12703
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12047": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12795,
        12812
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12048": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12795,
        12812
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12049": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12051": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12052": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12053": {
      "op": "PUSH4",
      "value": "0x90DCB51F"
    },
    "12058": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12060": {
      "op": "SHL"
    },
    "12061": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12062": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12069": {
      "op": "SHL"
    },
    "12070": {
      "op": "SUB"
    },
    "12071": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12795,
        12812
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12072": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12795,
        12812
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12073": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12795,
        12812
      ],
      "op": "AND",
      "path": "5"
    },
    "12074": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12076": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12077": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "ADD",
      "path": "5"
    },
    "12078": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12079": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12080": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12081": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12612,
        12703
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12082": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12612,
        12703
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12083": {
      "op": "POP"
    },
    "12084": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12713,
        12735
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12086": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12713,
        12735
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12087": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12713,
        12735
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12088": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12713,
        12735
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12089": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12772
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x0"
    },
    "12122": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12794
      ],
      "op": "AND",
      "path": "5"
    },
    "12123": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12794
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12124": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12794
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x90DCB51F"
    },
    "12129": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12794
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12130": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "12132": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12133": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12134": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "ADD",
      "path": "5"
    },
    "12135": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12136": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12138": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12139": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12140": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12141": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12142": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12143": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "SUB",
      "path": "5"
    },
    "12144": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "ADD",
      "path": "5"
    },
    "12145": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12146": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12794
      ],
      "op": "DUP7",
      "path": "5"
    },
    "12147": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12148": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "12149": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12150": {
      "op": "DUP1"
    },
    "12151": {
      "op": "ISZERO"
    },
    "12152": {
      "op": "PUSH2",
      "value": "0x2F80"
    },
    "12155": {
      "op": "JUMPI"
    },
    "12156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12158": {
      "op": "DUP1"
    },
    "12159": {
      "op": "REVERT"
    },
    "12160": {
      "op": "JUMPDEST"
    },
    "12161": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "POP",
      "path": "5"
    },
    "12162": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "GAS",
      "path": "5"
    },
    "12163": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "12164": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12165": {
      "op": "DUP1"
    },
    "12166": {
      "op": "ISZERO"
    },
    "12167": {
      "op": "PUSH2",
      "value": "0x2F94"
    },
    "12170": {
      "op": "JUMPI"
    },
    "12171": {
      "op": "RETURNDATASIZE"
    },
    "12172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12174": {
      "op": "DUP1"
    },
    "12175": {
      "op": "RETURNDATACOPY"
    },
    "12176": {
      "op": "RETURNDATASIZE"
    },
    "12177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12179": {
      "op": "REVERT"
    },
    "12180": {
      "op": "JUMPDEST"
    },
    "12181": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "POP",
      "path": "5"
    },
    "12182": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "POP",
      "path": "5"
    },
    "12183": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "POP",
      "path": "5"
    },
    "12184": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "POP",
      "path": "5"
    },
    "12185": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12187": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12188": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "12189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12191": {
      "op": "DUP2"
    },
    "12192": {
      "op": "LT"
    },
    "12193": {
      "op": "ISZERO"
    },
    "12194": {
      "op": "PUSH2",
      "value": "0x2FAA"
    },
    "12197": {
      "op": "JUMPI"
    },
    "12198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12200": {
      "op": "DUP1"
    },
    "12201": {
      "op": "REVERT"
    },
    "12202": {
      "op": "JUMPDEST"
    },
    "12203": {
      "op": "POP"
    },
    "12204": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12205": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12874,
        12905
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12207": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12874,
        12905
      ],
      "op": "DUP11",
      "path": "5"
    },
    "12208": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12874,
        12905
      ],
      "op": "ADD",
      "path": "5"
    },
    "12209": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12874,
        12905
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12210": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12211": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12766,
        12813
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12212": {
      "op": "POP"
    },
    "12213": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12823,
        12860
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12215": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12823,
        12860
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12216": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12874,
        12905
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "12219": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12874,
        12905
      ],
      "op": "AND",
      "path": "5"
    },
    "12220": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12870,
        13135
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3069"
    },
    "12223": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12870,
        13135
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12224": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12989,
        13006
      ],
      "op": "DUP10",
      "path": "5",
      "statement": 156
    },
    "12225": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12989,
        13006
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12226": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12228": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12229": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12230": {
      "op": "PUSH4",
      "value": "0x4789D02D"
    },
    "12235": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12237": {
      "op": "SHL"
    },
    "12238": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12239": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12246": {
      "op": "SHL"
    },
    "12247": {
      "op": "SUB"
    },
    "12248": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12989,
        13006
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12249": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12989,
        13006
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12250": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12989,
        13006
      ],
      "op": "AND",
      "path": "5"
    },
    "12251": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12253": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12254": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "ADD",
      "path": "5"
    },
    "12255": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12256": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "12259": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "DUP10",
      "path": "5"
    },
    "12260": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "AND",
      "path": "5"
    },
    "12261": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "12263": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12264": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "ADD",
      "path": "5"
    },
    "12265": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12266": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12267": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12268": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        12964
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x0"
    },
    "12301": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        12988
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12302": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        12988
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12303": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        12988
      ],
      "op": "AND",
      "path": "5"
    },
    "12304": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        12988
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12305": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        12988
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4789D02D"
    },
    "12310": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        12988
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12311": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "12313": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12314": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12315": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "ADD",
      "path": "5"
    },
    "12316": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12317": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12319": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12320": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12321": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12322": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12323": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12324": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12325": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "SUB",
      "path": "5"
    },
    "12326": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "ADD",
      "path": "5"
    },
    "12327": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12328": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        12988
      ],
      "op": "DUP7",
      "path": "5"
    },
    "12329": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12330": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "12331": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12332": {
      "op": "DUP1"
    },
    "12333": {
      "op": "ISZERO"
    },
    "12334": {
      "op": "PUSH2",
      "value": "0x3036"
    },
    "12337": {
      "op": "JUMPI"
    },
    "12338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12340": {
      "op": "DUP1"
    },
    "12341": {
      "op": "REVERT"
    },
    "12342": {
      "op": "JUMPDEST"
    },
    "12343": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "POP",
      "path": "5"
    },
    "12344": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "GAS",
      "path": "5"
    },
    "12345": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "12346": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12347": {
      "op": "DUP1"
    },
    "12348": {
      "op": "ISZERO"
    },
    "12349": {
      "op": "PUSH2",
      "value": "0x304A"
    },
    "12352": {
      "op": "JUMPI"
    },
    "12353": {
      "op": "RETURNDATASIZE"
    },
    "12354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12356": {
      "op": "DUP1"
    },
    "12357": {
      "op": "RETURNDATACOPY"
    },
    "12358": {
      "op": "RETURNDATASIZE"
    },
    "12359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12361": {
      "op": "REVERT"
    },
    "12362": {
      "op": "JUMPDEST"
    },
    "12363": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "POP",
      "path": "5"
    },
    "12364": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "POP",
      "path": "5"
    },
    "12365": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "POP",
      "path": "5"
    },
    "12366": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "POP",
      "path": "5"
    },
    "12367": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12369": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12370": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "12371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12373": {
      "op": "DUP2"
    },
    "12374": {
      "op": "LT"
    },
    "12375": {
      "op": "ISZERO"
    },
    "12376": {
      "op": "PUSH2",
      "value": "0x3060"
    },
    "12379": {
      "op": "JUMPI"
    },
    "12380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12382": {
      "op": "DUP1"
    },
    "12383": {
      "op": "REVERT"
    },
    "12384": {
      "op": "JUMPDEST"
    },
    "12385": {
      "op": "POP"
    },
    "12386": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12387": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12958,
        13026
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12388": {
      "op": "POP"
    },
    "12389": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12870,
        13135
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3070"
    },
    "12392": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12870,
        13135
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12393": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12870,
        13135
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12394": {
      "op": "POP"
    },
    "12395": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13089,
        13124
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 157,
      "value": "0x1"
    },
    "12397": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13089,
        13124
      ],
      "op": "DUP10",
      "path": "5"
    },
    "12398": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13089,
        13124
      ],
      "op": "ADD",
      "path": "5"
    },
    "12399": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13089,
        13124
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12400": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12870,
        13135
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12401": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13175,
        13204
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 158
    },
    "12402": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13150,
        13204
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "12403": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13150,
        13204
      ],
      "op": "POP",
      "path": "5"
    },
    "12404": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13145,
        13827
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12405": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13244,
        13250
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12406": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13219,
        13241
      ],
      "op": "DUP9",
      "path": "5"
    },
    "12407": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13219,
        13250
      ],
      "op": "LT",
      "path": "5"
    },
    "12408": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13145,
        13827
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12409": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13145,
        13827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31A7"
    },
    "12412": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13145,
        13827
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12413": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13393,
        13410
      ],
      "op": "DUP10",
      "path": "5"
    },
    "12414": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13393,
        13410
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12415": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12417": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12418": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12419": {
      "op": "PUSH4",
      "value": "0x8FA95A15"
    },
    "12424": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12426": {
      "op": "SHL"
    },
    "12427": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12428": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12435": {
      "op": "SHL"
    },
    "12436": {
      "op": "SUB"
    },
    "12437": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13393,
        13410
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12438": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13393,
        13410
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12439": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13393,
        13410
      ],
      "op": "AND",
      "path": "5"
    },
    "12440": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12442": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12443": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "ADD",
      "path": "5"
    },
    "12444": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12445": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "12447": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12448": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "ADD",
      "path": "5"
    },
    "12449": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "DUP12",
      "path": "5"
    },
    "12450": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12451": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12452": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12453": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12456": {
      "op": "SWAP4"
    },
    "12457": {
      "op": "DUP5"
    },
    "12458": {
      "op": "SWAP4"
    },
    "12459": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13376
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x0"
    },
    "12492": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13392
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12493": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13392
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12494": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13392
      ],
      "op": "AND",
      "path": "5"
    },
    "12495": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13392
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12496": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13392
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8FA95A15"
    },
    "12501": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13392
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12502": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "12504": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12505": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12506": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "ADD",
      "path": "5"
    },
    "12507": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12508": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12509": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12510": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12511": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "SUB",
      "path": "5"
    },
    "12512": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "ADD",
      "path": "5"
    },
    "12513": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12514": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13392
      ],
      "op": "DUP7",
      "path": "5"
    },
    "12515": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12516": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "12517": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12518": {
      "op": "DUP1"
    },
    "12519": {
      "op": "ISZERO"
    },
    "12520": {
      "op": "PUSH2",
      "value": "0x30F0"
    },
    "12523": {
      "op": "JUMPI"
    },
    "12524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12526": {
      "op": "DUP1"
    },
    "12527": {
      "op": "REVERT"
    },
    "12528": {
      "op": "JUMPDEST"
    },
    "12529": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "POP",
      "path": "5"
    },
    "12530": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "GAS",
      "path": "5"
    },
    "12531": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "12532": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12533": {
      "op": "DUP1"
    },
    "12534": {
      "op": "ISZERO"
    },
    "12535": {
      "op": "PUSH2",
      "value": "0x3104"
    },
    "12538": {
      "op": "JUMPI"
    },
    "12539": {
      "op": "RETURNDATASIZE"
    },
    "12540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12542": {
      "op": "DUP1"
    },
    "12543": {
      "op": "RETURNDATACOPY"
    },
    "12544": {
      "op": "RETURNDATASIZE"
    },
    "12545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12547": {
      "op": "REVERT"
    },
    "12548": {
      "op": "JUMPDEST"
    },
    "12549": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "POP",
      "path": "5"
    },
    "12550": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "POP",
      "path": "5"
    },
    "12551": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "POP",
      "path": "5"
    },
    "12552": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "POP",
      "path": "5"
    },
    "12553": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12555": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12556": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "12557": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12559": {
      "op": "DUP2"
    },
    "12560": {
      "op": "LT"
    },
    "12561": {
      "op": "ISZERO"
    },
    "12562": {
      "op": "PUSH2",
      "value": "0x311A"
    },
    "12565": {
      "op": "JUMPI"
    },
    "12566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12568": {
      "op": "DUP1"
    },
    "12569": {
      "op": "REVERT"
    },
    "12570": {
      "op": "JUMPDEST"
    },
    "12571": {
      "op": "POP"
    },
    "12572": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12573": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12574": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12576": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12577": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12578": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "ADD",
      "path": "5"
    },
    "12579": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12580": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12581": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12582": {
      "op": "POP"
    },
    "12583": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13370,
        13435
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12584": {
      "op": "POP"
    },
    "12585": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13453,
        13476
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "12588": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13453,
        13476
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12589": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13453,
        13476
      ],
      "op": "DUP9",
      "path": "5"
    },
    "12590": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13453,
        13476
      ],
      "op": "AND",
      "path": "5"
    },
    "12591": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13453,
        13476
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12592": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13453,
        13476
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12593": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13453,
        13476
      ],
      "op": "AND",
      "path": "5"
    },
    "12594": {
      "branch": 256,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13453,
        13476
      ],
      "op": "GT",
      "path": "5"
    },
    "12595": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13449,
        13590
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12596": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13449,
        13590
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x313E"
    },
    "12599": {
      "branch": 256,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13449,
        13590
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12600": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13496,
        13501
      ],
      "op": "POP",
      "path": "5",
      "statement": 159
    },
    "12601": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13496,
        13501
      ],
      "op": "POP",
      "path": "5"
    },
    "12602": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13496,
        13501
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31A7"
    },
    "12605": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13496,
        13501
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12606": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13449,
        13590
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12607": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13538,
        13547
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12608": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13526,
        13547
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "12611": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13526,
        13547
      ],
      "op": "AND",
      "path": "5"
    },
    "12612": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13526,
        13535
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12613": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13526,
        13547
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "12616": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13526,
        13547
      ],
      "op": "AND",
      "path": "5"
    },
    "12617": {
      "branch": 257,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13526,
        13547
      ],
      "op": "LT",
      "path": "5"
    },
    "12618": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13522,
        13590
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12619": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13522,
        13590
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3155"
    },
    "12622": {
      "branch": 257,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13522,
        13590
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12623": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13567,
        13575
      ],
      "op": "POP",
      "path": "5",
      "statement": 160
    },
    "12624": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13567,
        13575
      ],
      "op": "POP",
      "path": "5"
    },
    "12625": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13567,
        13575
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x319C"
    },
    "12628": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13567,
        13575
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12629": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13522,
        13590
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12630": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13622,
        13733
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 161,
      "value": "0x317C"
    },
    "12633": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13688,
        13732
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3162"
    },
    "12636": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13709,
        13718
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12637": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13720,
        13731
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12638": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13688,
        13708
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3335"
    },
    "12641": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        13688,
        13732
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12642": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13688,
        13732
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12643": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13622,
        13664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x316C"
    },
    "12646": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13643,
        13652
      ],
      "op": "DUP10",
      "path": "5"
    },
    "12647": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13654,
        13663
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12648": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13622,
        13642
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3317"
    },
    "12651": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        13622,
        13664
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12652": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13622,
        13664
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12653": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13622,
        13687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "12656": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13622,
        13687
      ],
      "op": "AND",
      "path": "5"
    },
    "12657": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13622,
        13687
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12658": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13622,
        13733
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "12663": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13622,
        13687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x334D"
    },
    "12666": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13622,
        13733
      ],
      "op": "AND",
      "path": "5"
    },
    "12667": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        13622,
        13733
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12668": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13622,
        13733
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12669": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13736,
        13737
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "12671": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13622,
        13737
      ],
      "op": "ADD",
      "path": "5"
    },
    "12672": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13603,
        13737
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12673": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13603,
        13737
      ],
      "op": "ADD",
      "path": "5"
    },
    "12674": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13603,
        13737
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "12675": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13603,
        13737
      ],
      "op": "POP",
      "path": "5"
    },
    "12676": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13768,
        13777
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12677": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13755,
        13777
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "12680": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13755,
        13777
      ],
      "op": "AND",
      "path": "5"
    },
    "12681": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13755,
        13764
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12682": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13755,
        13777
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "12685": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13755,
        13777
      ],
      "op": "AND",
      "path": "5"
    },
    "12686": {
      "branch": 258,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13755,
        13777
      ],
      "op": "GT",
      "path": "5"
    },
    "12687": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13751,
        13817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3199"
    },
    "12690": {
      "branch": 258,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13751,
        13817
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12691": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13797,
        13802
      ],
      "op": "POP",
      "path": "5",
      "statement": 162
    },
    "12692": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13797,
        13802
      ],
      "op": "POP",
      "path": "5"
    },
    "12693": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13797,
        13802
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31A7"
    },
    "12696": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13797,
        13802
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12697": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13751,
        13817
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12698": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13145,
        13827
      ],
      "op": "POP",
      "path": "5"
    },
    "12699": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13145,
        13827
      ],
      "op": "POP",
      "path": "5"
    },
    "12700": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13145,
        13827
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12701": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13265,
        13289
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 163,
      "value": "0x1"
    },
    "12703": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13265,
        13289
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12704": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13265,
        13289
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "12705": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13265,
        13289
      ],
      "op": "ADD",
      "path": "5"
    },
    "12706": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13265,
        13289
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "12707": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13145,
        13827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3074"
    },
    "12710": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13145,
        13827
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12711": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13145,
        13827
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12712": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13896,
        13913
      ],
      "op": "DUP10",
      "path": "5"
    },
    "12713": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13896,
        13913
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12714": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12716": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12717": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12718": {
      "op": "PUSH4",
      "value": "0x51F5E0C1"
    },
    "12723": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12725": {
      "op": "SHL"
    },
    "12726": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12727": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12734": {
      "op": "SHL"
    },
    "12735": {
      "op": "SUB"
    },
    "12736": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13896,
        13913
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12737": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13896,
        13913
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12738": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13896,
        13913
      ],
      "op": "AND",
      "path": "5"
    },
    "12739": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12741": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12742": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "ADD",
      "path": "5"
    },
    "12743": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12744": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12745": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12746": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13837,
        13863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12748": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13837,
        13863
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12749": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13872
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x0"
    },
    "12782": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13895
      ],
      "op": "AND",
      "path": "5"
    },
    "12783": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13895
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12784": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13895
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA3EBC182"
    },
    "12789": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13895
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12790": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "12792": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12793": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12794": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "ADD",
      "path": "5"
    },
    "12795": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12796": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12798": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12799": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12800": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12801": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12802": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12803": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "SUB",
      "path": "5"
    },
    "12804": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "ADD",
      "path": "5"
    },
    "12805": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12806": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13895
      ],
      "op": "DUP7",
      "path": "5"
    },
    "12807": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12808": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "12809": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12810": {
      "op": "DUP1"
    },
    "12811": {
      "op": "ISZERO"
    },
    "12812": {
      "op": "PUSH2",
      "value": "0x3214"
    },
    "12815": {
      "op": "JUMPI"
    },
    "12816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12818": {
      "op": "DUP1"
    },
    "12819": {
      "op": "REVERT"
    },
    "12820": {
      "op": "JUMPDEST"
    },
    "12821": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "POP",
      "path": "5"
    },
    "12822": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "GAS",
      "path": "5"
    },
    "12823": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "12824": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12825": {
      "op": "DUP1"
    },
    "12826": {
      "op": "ISZERO"
    },
    "12827": {
      "op": "PUSH2",
      "value": "0x3228"
    },
    "12830": {
      "op": "JUMPI"
    },
    "12831": {
      "op": "RETURNDATASIZE"
    },
    "12832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12834": {
      "op": "DUP1"
    },
    "12835": {
      "op": "RETURNDATACOPY"
    },
    "12836": {
      "op": "RETURNDATASIZE"
    },
    "12837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12839": {
      "op": "REVERT"
    },
    "12840": {
      "op": "JUMPDEST"
    },
    "12841": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "POP",
      "path": "5"
    },
    "12842": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "POP",
      "path": "5"
    },
    "12843": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "POP",
      "path": "5"
    },
    "12844": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "POP",
      "path": "5"
    },
    "12845": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12847": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12848": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "12849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12851": {
      "op": "DUP2"
    },
    "12852": {
      "op": "LT"
    },
    "12853": {
      "op": "ISZERO"
    },
    "12854": {
      "op": "PUSH2",
      "value": "0x323E"
    },
    "12857": {
      "op": "JUMPI"
    },
    "12858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12860": {
      "op": "DUP1"
    },
    "12861": {
      "op": "REVERT"
    },
    "12862": {
      "op": "JUMPDEST"
    },
    "12863": {
      "op": "POP"
    },
    "12864": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12865": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13866,
        13914
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12866": {
      "op": "POP"
    },
    "12867": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13928,
        13960
      ],
      "op": "DUP9",
      "path": "5"
    },
    "12868": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13928,
        13960
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12869": {
      "branch": 259,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13928,
        13960
      ],
      "op": "EQ",
      "path": "5"
    },
    "12870": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13928,
        13995
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12871": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13928,
        13995
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12872": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13928,
        13995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3258"
    },
    "12875": {
      "branch": 259,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13928,
        13995
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12876": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13928,
        13995
      ],
      "op": "POP",
      "path": "5"
    },
    "12877": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13986,
        13995
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12878": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13964,
        13995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "12881": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13964,
        13995
      ],
      "op": "AND",
      "path": "5"
    },
    "12882": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13964,
        13983
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12883": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13964,
        13995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "12886": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13964,
        13995
      ],
      "op": "AND",
      "path": "5"
    },
    "12887": {
      "branch": 260,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13964,
        13995
      ],
      "op": "LT",
      "path": "5"
    },
    "12888": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13928,
        13995
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12889": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13924,
        14231
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12890": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13924,
        14231
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3271"
    },
    "12893": {
      "branch": 260,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13924,
        14231
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12894": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14164,
        14220
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 164,
      "value": "0x326A"
    },
    "12897": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14197,
        14198
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "12899": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14185,
        14194
      ],
      "op": "DUP7",
      "path": "5"
    },
    "12900": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14185,
        14198
      ],
      "op": "SUB",
      "path": "5"
    },
    "12901": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14200,
        14219
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12902": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14164,
        14184
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3335"
    },
    "12905": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        14164,
        14220
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12906": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14164,
        14220
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12907": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14152,
        14161
      ],
      "op": "DUP7",
      "path": "5"
    },
    "12908": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14152,
        14220
      ],
      "op": "SUB",
      "path": "5"
    },
    "12909": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14133,
        14220
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12910": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14133,
        14220
      ],
      "op": "ADD",
      "path": "5"
    },
    "12911": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14133,
        14220
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12912": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14133,
        14220
      ],
      "op": "POP",
      "path": "5"
    },
    "12913": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        13924,
        14231
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12914": {
      "op": "POP"
    },
    "12915": {
      "op": "POP"
    },
    "12916": {
      "op": "POP"
    },
    "12917": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14255,
        14270
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 165,
      "value": "0x2"
    },
    "12919": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14255,
        14270
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "12920": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14255,
        14270
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12921": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14255,
        14270
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "12922": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14255,
        14270
      ],
      "op": "ADD",
      "path": "5"
    },
    "12923": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14255,
        14270
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12924": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14255,
        14288
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "12927": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14255,
        14288
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12928": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14255,
        14288
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "12929": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14255,
        14288
      ],
      "op": "AND",
      "path": "5"
    },
    "12930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12934": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12936": {
      "op": "SHL"
    },
    "12937": {
      "op": "SUB"
    },
    "12938": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14255,
        14270
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "12939": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14255,
        14270
      ],
      "op": "DUP10",
      "path": "5"
    },
    "12940": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14255,
        14270
      ],
      "op": "AND",
      "path": "5"
    },
    "12941": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14255,
        14288
      ],
      "op": "MUL",
      "path": "5"
    },
    "12942": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14241,
        14288
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12943": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14241,
        14288
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "12944": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14241,
        14288
      ],
      "op": "AND",
      "path": "5"
    },
    "12945": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14241,
        14288
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "12946": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12191,
        14339
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12947": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        12191,
        14339
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "12948": {
      "op": "POP"
    },
    "12949": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14255,
        14270
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "12951": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14319,
        14332
      ],
      "op": "ADD",
      "path": "5",
      "statement": 166
    },
    "12952": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14319,
        14332
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "12953": {
      "op": "POP"
    },
    "12954": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14241,
        14288
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12955": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        14241,
        14288
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12956": {
      "op": "POP"
    },
    "12957": {
      "op": "POP"
    },
    "12958": {
      "op": "POP"
    },
    "12959": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "o",
      "offset": [
        12191,
        14339
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12960": {
      "fn": "SafeMath.add",
      "offset": [
        1440,
        1585
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12961": {
      "fn": "SafeMath.add",
      "offset": [
        1498,
        1505
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12963": {
      "fn": "SafeMath.add",
      "offset": [
        1529,
        1534
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12964": {
      "fn": "SafeMath.add",
      "offset": [
        1529,
        1534
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12965": {
      "fn": "SafeMath.add",
      "offset": [
        1529,
        1534
      ],
      "op": "ADD",
      "path": "20"
    },
    "12966": {
      "fn": "SafeMath.add",
      "offset": [
        1552,
        1558
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 167
    },
    "12967": {
      "fn": "SafeMath.add",
      "offset": [
        1552,
        1558
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12968": {
      "fn": "SafeMath.add",
      "offset": [
        1552,
        1558
      ],
      "op": "LT",
      "path": "20"
    },
    "12969": {
      "branch": 269,
      "fn": "SafeMath.add",
      "offset": [
        1552,
        1558
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12970": {
      "fn": "SafeMath.add",
      "offset": [
        1544,
        1559
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xED2"
    },
    "12973": {
      "branch": 269,
      "fn": "SafeMath.add",
      "offset": [
        1544,
        1559
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12976": {
      "op": "DUP1"
    },
    "12977": {
      "op": "REVERT"
    },
    "12978": {
      "fn": "SafeMath.sub",
      "offset": [
        1212,
        1357
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12979": {
      "fn": "SafeMath.sub",
      "offset": [
        1270,
        1277
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12981": {
      "fn": "SafeMath.sub",
      "offset": [
        1302,
        1303
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 168
    },
    "12982": {
      "fn": "SafeMath.sub",
      "offset": [
        1297,
        1298
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12983": {
      "fn": "SafeMath.sub",
      "offset": [
        1297,
        1303
      ],
      "op": "GT",
      "path": "20"
    },
    "12984": {
      "branch": 270,
      "fn": "SafeMath.sub",
      "offset": [
        1297,
        1303
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12985": {
      "fn": "SafeMath.sub",
      "offset": [
        1289,
        1304
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x32C1"
    },
    "12988": {
      "branch": 270,
      "fn": "SafeMath.sub",
      "offset": [
        1289,
        1304
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12991": {
      "op": "DUP1"
    },
    "12992": {
      "fn": "SafeMath.sub",
      "offset": [
        1289,
        1304
      ],
      "op": "REVERT",
      "path": "20"
    },
    "12993": {
      "fn": "SafeMath.sub",
      "offset": [
        1289,
        1304
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12994": {
      "op": "POP"
    },
    "12995": {
      "fn": "SafeMath.sub",
      "offset": [
        1326,
        1331
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12996": {
      "fn": "SafeMath.sub",
      "offset": [
        1326,
        1331
      ],
      "op": "SUB",
      "path": "20"
    },
    "12997": {
      "fn": "SafeMath.sub",
      "offset": [
        1326,
        1331
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12998": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1212,
        1357
      ],
      "op": "JUMP",
      "path": "20"
    },
    "12999": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2527,
        3426
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13000": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2808,
        2812
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13002": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2802,
        2813
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13003": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2826,
        2858
      ],
      "op": "DUP5",
      "path": "15"
    },
    "13004": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2826,
        2858
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13005": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2826,
        2858
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13006": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2874,
        2899
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13007": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2874,
        2899
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13008": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2871,
        2873
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32DA"
    },
    "13011": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2871,
        2873
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13012": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2951,
        2961
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13013": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2944,
        2948
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13015": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2929,
        2942
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13016": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2925,
        2949
      ],
      "op": "ADD",
      "path": "15"
    },
    "13017": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2918,
        2962
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13018": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2871,
        2873
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13019": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3015,
        3016
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "13021": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2995,
        3013
      ],
      "op": "DUP5",
      "path": "15"
    },
    "13022": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2992,
        3017
      ],
      "op": "GT",
      "path": "15"
    },
    "13023": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2989,
        2991
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13024": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2989,
        2991
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32EA"
    },
    "13027": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2989,
        2991
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13028": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3069,
        3079
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13029": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3062,
        3066
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "13031": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3047,
        3060
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13032": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3043,
        3067
      ],
      "op": "ADD",
      "path": "15"
    },
    "13033": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3036,
        3080
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13034": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2989,
        2991
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13035": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3203,
        3204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13037": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3200,
        3201
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13038": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3178,
        3196
      ],
      "op": "DUP6",
      "path": "15"
    },
    "13039": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3172,
        3176
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13041": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3168,
        3197
      ],
      "op": "MUL",
      "path": "15"
    },
    "13042": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3162,
        3166
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13044": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3158,
        3198
      ],
      "op": "ADD",
      "path": "15"
    },
    "13045": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3143,
        3156
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13046": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3134,
        3141
      ],
      "op": "DUP10",
      "path": "15"
    },
    "13047": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3127,
        3132
      ],
      "op": "GAS",
      "path": "15"
    },
    "13048": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3114,
        3205
      ],
      "op": "DELEGATECALL",
      "path": "15"
    },
    "13049": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3222,
        3293
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13050": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3222,
        3293
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13051": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3222,
        3293
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3308"
    },
    "13054": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3222,
        3293
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13055": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3375,
        3391
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "13056": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3370,
        3373
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13058": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3355,
        3368
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13059": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3340,
        3392
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "13060": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3107,
        3410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x330D"
    },
    "13063": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3107,
        3410
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13064": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3222,
        3293
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13065": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3273,
        3274
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13067": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3258,
        3271
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13068": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3251,
        3275
      ],
      "op": "REVERT",
      "path": "15"
    },
    "13069": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3107,
        3410
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13070": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3107,
        3410
      ],
      "op": "POP",
      "path": "15"
    },
    "13071": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "13072": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "13073": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "POP",
      "path": "15"
    },
    "13074": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "POP",
      "path": "15"
    },
    "13075": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "POP",
      "path": "15"
    },
    "13076": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "POP",
      "path": "15"
    },
    "13077": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "POP",
      "path": "15"
    },
    "13078": {
      "fn": "Upgradeable.delegateGetData",
      "jump": "o",
      "offset": [
        2771,
        3420
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13079": {
      "fn": "AdditionalMath.min16",
      "offset": [
        281,
        384
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "13080": {
      "fn": "AdditionalMath.min16",
      "offset": [
        339,
        345
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "13082": {
      "fn": "AdditionalMath.min16",
      "offset": [
        368,
        369
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 169
    },
    "13083": {
      "fn": "AdditionalMath.min16",
      "offset": [
        364,
        369
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFFFF"
    },
    "13086": {
      "fn": "AdditionalMath.min16",
      "offset": [
        364,
        369
      ],
      "op": "AND",
      "path": "8"
    },
    "13087": {
      "fn": "AdditionalMath.min16",
      "offset": [
        364,
        365
      ],
      "op": "DUP4",
      "path": "8"
    },
    "13088": {
      "fn": "AdditionalMath.min16",
      "offset": [
        364,
        369
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFFFF"
    },
    "13091": {
      "fn": "AdditionalMath.min16",
      "offset": [
        364,
        369
      ],
      "op": "AND",
      "path": "8"
    },
    "13092": {
      "branch": 262,
      "fn": "AdditionalMath.min16",
      "offset": [
        364,
        369
      ],
      "op": "LT",
      "path": "8"
    },
    "13093": {
      "fn": "AdditionalMath.min16",
      "offset": [
        364,
        377
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x332E"
    },
    "13096": {
      "branch": 262,
      "fn": "AdditionalMath.min16",
      "offset": [
        364,
        377
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "13097": {
      "fn": "AdditionalMath.min16",
      "offset": [
        376,
        377
      ],
      "op": "DUP2",
      "path": "8"
    },
    "13098": {
      "fn": "AdditionalMath.min16",
      "offset": [
        364,
        377
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xED2"
    },
    "13101": {
      "fn": "AdditionalMath.min16",
      "offset": [
        364,
        377
      ],
      "op": "JUMP",
      "path": "8"
    },
    "13102": {
      "fn": "AdditionalMath.min16",
      "offset": [
        364,
        377
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "13103": {
      "op": "POP"
    },
    "13104": {
      "fn": "AdditionalMath.min16",
      "offset": [
        372,
        373
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "13105": {
      "fn": "AdditionalMath.min16",
      "offset": [
        372,
        373
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "13106": {
      "fn": "AdditionalMath.min16",
      "offset": [
        281,
        384
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "13107": {
      "op": "POP"
    },
    "13108": {
      "fn": "AdditionalMath.min16",
      "jump": "o",
      "offset": [
        281,
        384
      ],
      "op": "JUMP",
      "path": "8"
    },
    "13109": {
      "fn": "AdditionalMath.max16",
      "offset": [
        171,
        275
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "13110": {
      "fn": "AdditionalMath.max16",
      "offset": [
        229,
        235
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "13112": {
      "fn": "AdditionalMath.max16",
      "offset": [
        259,
        260
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 170
    },
    "13113": {
      "fn": "AdditionalMath.max16",
      "offset": [
        254,
        260
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFFFF"
    },
    "13116": {
      "fn": "AdditionalMath.max16",
      "offset": [
        254,
        260
      ],
      "op": "AND",
      "path": "8"
    },
    "13117": {
      "fn": "AdditionalMath.max16",
      "offset": [
        254,
        255
      ],
      "op": "DUP4",
      "path": "8"
    },
    "13118": {
      "fn": "AdditionalMath.max16",
      "offset": [
        254,
        260
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFFFF"
    },
    "13121": {
      "fn": "AdditionalMath.max16",
      "offset": [
        254,
        260
      ],
      "op": "AND",
      "path": "8"
    },
    "13122": {
      "fn": "AdditionalMath.max16",
      "offset": [
        254,
        260
      ],
      "op": "LT",
      "path": "8"
    },
    "13123": {
      "branch": 263,
      "fn": "AdditionalMath.max16",
      "offset": [
        254,
        260
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "13124": {
      "fn": "AdditionalMath.max16",
      "offset": [
        254,
        268
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x332E"
    },
    "13127": {
      "branch": 263,
      "fn": "AdditionalMath.max16",
      "offset": [
        254,
        268
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "13128": {
      "fn": "AdditionalMath.max16",
      "offset": [
        267,
        268
      ],
      "op": "DUP2",
      "path": "8"
    },
    "13129": {
      "fn": "AdditionalMath.max16",
      "offset": [
        254,
        268
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xED2"
    },
    "13132": {
      "fn": "AdditionalMath.max16",
      "offset": [
        254,
        268
      ],
      "op": "JUMP",
      "path": "8"
    },
    "13133": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1751,
        1870
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "13134": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1809,
        1815
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "13136": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1839,
        1840
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 171
    },
    "13137": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1834,
        1840
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFFFF"
    },
    "13140": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1834,
        1840
      ],
      "op": "AND",
      "path": "8"
    },
    "13141": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1834,
        1835
      ],
      "op": "DUP3",
      "path": "8"
    },
    "13142": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1834,
        1840
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFFFF"
    },
    "13145": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1834,
        1840
      ],
      "op": "AND",
      "path": "8"
    },
    "13146": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1834,
        1840
      ],
      "op": "GT",
      "path": "8"
    },
    "13147": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1834,
        1840
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "13148": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1827,
        1841
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x32C1"
    },
    "13151": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1827,
        1841
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "13152": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1827,
        1841
      ],
      "op": "INVALID",
      "path": "8"
    },
    "13153": {
      "offset": [
        495,
        28809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13154": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13156": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13157": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13158": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "13160": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13161": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13162": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13163": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13166": {
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13167": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13168": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13169": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13171": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13172": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13173": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13174": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13175": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13176": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13177": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13178": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13179": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13180": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13181": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13182": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13183": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13184": {
      "fn": "AdditionalMath.sub16",
      "jump": "o",
      "offset": [
        495,
        28809
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13185": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13186": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13188": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13189": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13190": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x180"
    },
    "13193": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13194": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13196": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13197": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13198": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13200": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "13201": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "13202": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13203": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13204": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13206": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13207": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13215": {
      "op": "SHL"
    },
    "13216": {
      "op": "SUB"
    },
    "13217": {
      "offset": [
        495,
        28809
      ],
      "op": "AND",
      "path": "5"
    },
    "13218": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13219": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13220": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13222": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13223": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13231": {
      "op": "SHL"
    },
    "13232": {
      "op": "SUB"
    },
    "13233": {
      "offset": [
        495,
        28809
      ],
      "op": "AND",
      "path": "5"
    },
    "13234": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13235": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13236": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13238": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13239": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13245": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13247": {
      "op": "SHL"
    },
    "13248": {
      "op": "SUB"
    },
    "13249": {
      "offset": [
        495,
        28809
      ],
      "op": "AND",
      "path": "5"
    },
    "13250": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13251": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13252": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13254": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13255": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13261": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13263": {
      "op": "SHL"
    },
    "13264": {
      "op": "SUB"
    },
    "13265": {
      "offset": [
        495,
        28809
      ],
      "op": "AND",
      "path": "5"
    },
    "13266": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13267": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13268": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13270": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13271": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13277": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13279": {
      "op": "SHL"
    },
    "13280": {
      "op": "SUB"
    },
    "13281": {
      "offset": [
        495,
        28809
      ],
      "op": "AND",
      "path": "5"
    },
    "13282": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13283": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13284": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13286": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13287": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13289": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13290": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13291": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13293": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13294": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13296": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13297": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13298": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13300": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13301": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13303": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13304": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13305": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13307": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13308": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13310": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13311": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13312": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13314": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13315": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13317": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13318": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13319": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13321": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13322": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "13324": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13325": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13326": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "POP",
      "path": "5"
    },
    "13327": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13328": {
      "fn": "AdditionalMath.sub16",
      "jump": "o",
      "offset": [
        495,
        28809
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13329": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13330": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13332": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13333": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13334": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "13336": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13337": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13339": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13340": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13341": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13347": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13349": {
      "op": "SHL"
    },
    "13350": {
      "op": "SUB"
    },
    "13351": {
      "offset": [
        495,
        28809
      ],
      "op": "AND",
      "path": "5"
    },
    "13352": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13353": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13354": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13356": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13357": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13359": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "13362": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "AND",
      "path": "5"
    },
    "13363": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13364": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13365": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13367": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13368": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13370": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13371": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13372": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13374": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "ADD",
      "path": "5"
    },
    "13375": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13377": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13378": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13379": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "POP",
      "path": "5"
    },
    "13380": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        495,
        28809
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13381": {
      "fn": "AdditionalMath.sub16",
      "jump": "o",
      "offset": [
        495,
        28809
      ],
      "op": "JUMP",
      "path": "5"
    }
  },
  "sha1": "84b5e5a679e62e142a0ef99d76b2b6d7f27c07e3",
  "source": "pragma solidity ^0.6.5;\n\n\nimport \"zeppelin/token/ERC20/SafeERC20.sol\";\nimport \"zeppelin/math/SafeMath.sol\";\nimport \"zeppelin/math/Math.sol\";\nimport \"zeppelin/utils/Address.sol\";\nimport \"nucypher/lib/AdditionalMath.sol\";\nimport \"nucypher/lib/SignatureVerifier.sol\";\nimport \"nucypher/StakingEscrow.sol\";\nimport \"nucypher/NuCypherToken.sol\";\nimport \"nucypher/proxy/Upgradeable.sol\";\n\n\n/**\n* @title PolicyManager\n* @notice Contract holds policy data and locks accrued policy fees\n* @dev |v6.1.1|\n*/\ncontract PolicyManager is Upgradeable {\n    using SafeERC20 for NuCypherToken;\n    using SafeMath for uint256;\n    using AdditionalMath for uint256;\n    using AdditionalMath for int256;\n    using AdditionalMath for uint16;\n    using Address for address payable;\n\n    event PolicyCreated(\n        bytes16 indexed policyId,\n        address indexed sponsor,\n        address indexed owner,\n        uint256 feeRate,\n        uint64 startTimestamp,\n        uint64 endTimestamp,\n        uint256 numberOfNodes\n    );\n    event ArrangementRevoked(\n        bytes16 indexed policyId,\n        address indexed sender,\n        address indexed node,\n        uint256 value\n    );\n    event RefundForArrangement(\n        bytes16 indexed policyId,\n        address indexed sender,\n        address indexed node,\n        uint256 value\n    );\n    event PolicyRevoked(bytes16 indexed policyId, address indexed sender, uint256 value);\n    event RefundForPolicy(bytes16 indexed policyId, address indexed sender, uint256 value);\n    event NodeBrokenState(address indexed node, uint16 period);\n    event MinFeeRateSet(address indexed node, uint256 value);\n    // TODO #1501\n    // Range range\n    event FeeRateRangeSet(address indexed sender, uint256 min, uint256 defaultValue, uint256 max);\n    event Withdrawn(address indexed node, address indexed recipient, uint256 value);\n\n    struct ArrangementInfo {\n        address node;\n        uint256 indexOfDowntimePeriods;\n        uint16 lastRefundedPeriod;\n    }\n\n    struct Policy {\n        bool disabled;\n        address payable sponsor;\n        address owner;\n\n        uint128 feeRate;\n        uint64 startTimestamp;\n        uint64 endTimestamp;\n\n        uint256 reservedSlot1;\n        uint256 reservedSlot2;\n        uint256 reservedSlot3;\n        uint256 reservedSlot4;\n        uint256 reservedSlot5;\n\n        ArrangementInfo[] arrangements;\n    }\n\n    struct NodeInfo {\n        uint128 fee;\n        uint16 previousFeePeriod;\n        uint256 feeRate;\n        uint256 minFeeRate;\n        mapping (uint16 => int256) feeDelta;\n    }\n\n    struct Range {\n        uint128 min;\n        uint128 defaultValue;\n        uint128 max;\n    }\n\n    bytes16 internal constant RESERVED_POLICY_ID = bytes16(0);\n    address internal constant RESERVED_NODE = address(0);\n    uint256 internal constant MAX_BALANCE = uint256(uint128(0) - 1);\n    // controlled overflow to get max int256\n    int256 public constant DEFAULT_FEE_DELTA = int256((uint256(0) - 1) >> 1);\n\n    StakingEscrow public immutable escrow;\n    uint32 public immutable secondsPerPeriod;\n\n    mapping (bytes16 => Policy) public policies;\n    mapping (address => NodeInfo) public nodes;\n    Range public feeRateRange;\n\n    /**\n    * @notice Constructor sets address of the escrow contract\n    * @param _escrow Escrow contract\n    */\n    constructor(StakingEscrow _escrow) public {\n        // if the input address is not the StakingEscrow then calling `secondsPerPeriod` will throw error\n        uint32 localSecondsPerPeriod = _escrow.secondsPerPeriod();\n        require(localSecondsPerPeriod > 0);\n        secondsPerPeriod = localSecondsPerPeriod;\n        escrow = _escrow;\n    }\n\n    /**\n    * @dev Checks that sender is the StakingEscrow contract\n    */\n    modifier onlyEscrowContract()\n    {\n        require(msg.sender == address(escrow));\n        _;\n    }\n\n    /**\n    * @return Number of current period\n    */\n    function getCurrentPeriod() public view returns (uint16) {\n        return uint16(block.timestamp / secondsPerPeriod);\n    }\n\n    /**\n    * @notice Register a node\n    * @param _node Node address\n    * @param _period Initial period\n    */\n    function register(address _node, uint16 _period) external onlyEscrowContract {\n        NodeInfo storage nodeInfo = nodes[_node];\n        require(nodeInfo.previousFeePeriod == 0 && _period < getCurrentPeriod());\n        nodeInfo.previousFeePeriod = _period;\n    }\n\n    /**\n    * @notice Set minimum, default & maximum fee rate for all stakers and all policies ('global fee range')\n    */\n    // TODO # 1501\n    // function setFeeRateRange(Range calldata _range) external onlyOwner {\n    function setFeeRateRange(uint128 _min, uint128 _default, uint128 _max) external onlyOwner {\n        require(_min <= _default && _default <= _max);\n        feeRateRange = Range(_min, _default, _max);\n        emit FeeRateRangeSet(msg.sender, _min, _default, _max);\n    }\n\n    /**\n    * @notice Set the minimum acceptable fee rate (set by staker for their associated worker)\n    * @dev Input value must fall within `feeRateRange` (global fee range)\n    */\n    function setMinFeeRate(uint256 _minFeeRate) external {\n        require(_minFeeRate >= feeRateRange.min &&\n            _minFeeRate <= feeRateRange.max,\n            \"The staker's min fee rate must fall within the global fee range\");\n        NodeInfo storage nodeInfo = nodes[msg.sender];\n        if (nodeInfo.minFeeRate == _minFeeRate) {\n            return;\n        }\n        nodeInfo.minFeeRate = _minFeeRate;\n        emit MinFeeRateSet(msg.sender, _minFeeRate);\n    }\n\n    /**\n    * @notice Get the minimum acceptable fee rate (set by staker for their associated worker)\n    */\n    function getMinFeeRate(NodeInfo storage _nodeInfo) internal view returns (uint256) {\n        // if minFeeRate has not been set or chosen value falls outside the global fee range\n        // a default value is returned instead\n        if (_nodeInfo.minFeeRate == 0 ||\n            _nodeInfo.minFeeRate < feeRateRange.min ||\n            _nodeInfo.minFeeRate > feeRateRange.max) {\n            return feeRateRange.defaultValue;\n        } else {\n            return _nodeInfo.minFeeRate;\n        }\n    }\n\n    /**\n    * @notice Get the minimum acceptable fee rate (set by staker for their associated worker)\n    */\n    function getMinFeeRate(address _node) public view returns (uint256) {\n        NodeInfo storage nodeInfo = nodes[_node];\n        return getMinFeeRate(nodeInfo);\n    }\n\n    /**\n    * @notice Create policy\n    * @dev Generate policy id before creation\n    * @param _policyId Policy id\n    * @param _policyOwner Policy owner. Zero address means sender is owner\n    * @param _endTimestamp End timestamp of the policy in seconds\n    * @param _nodes Nodes that will handle policy\n    */\n    function createPolicy(\n        bytes16 _policyId,\n        address _policyOwner,\n        uint64 _endTimestamp,\n        address[] calldata _nodes\n    )\n        external payable\n    {\n        Policy storage policy = policies[_policyId];\n        require(\n            _policyId != RESERVED_POLICY_ID &&\n            policy.feeRate == 0 &&\n            !policy.disabled &&\n            _endTimestamp > block.timestamp &&\n            msg.value > 0\n        );\n        require(address(this).balance <= MAX_BALANCE);\n        uint16 currentPeriod = getCurrentPeriod();\n        uint16 endPeriod = uint16(_endTimestamp / secondsPerPeriod) + 1;\n        uint256 numberOfPeriods = endPeriod - currentPeriod;\n\n        policy.sponsor = msg.sender;\n        policy.startTimestamp = uint64(block.timestamp);\n        policy.endTimestamp = _endTimestamp;\n        policy.feeRate = uint128(msg.value.div(_nodes.length) / numberOfPeriods);\n        require(policy.feeRate > 0 && policy.feeRate * numberOfPeriods * _nodes.length  == msg.value);\n        if (_policyOwner != msg.sender && _policyOwner != address(0)) {\n            policy.owner = _policyOwner;\n        }\n\n        for (uint256 i = 0; i < _nodes.length; i++) {\n            address node = _nodes[i];\n            require(node != RESERVED_NODE);\n            NodeInfo storage nodeInfo = nodes[node];\n            require(nodeInfo.previousFeePeriod != 0 &&\n                nodeInfo.previousFeePeriod < currentPeriod &&\n                policy.feeRate >= getMinFeeRate(nodeInfo));\n            // Check default value for feeDelta\n            if (nodeInfo.feeDelta[currentPeriod] == DEFAULT_FEE_DELTA) {\n                nodeInfo.feeDelta[currentPeriod] = int256(policy.feeRate);\n            } else {\n                // Overflow protection removed, because ETH total supply less than uint255/int256\n                nodeInfo.feeDelta[currentPeriod] += int256(policy.feeRate);\n            }\n            if (nodeInfo.feeDelta[endPeriod] == DEFAULT_FEE_DELTA) {\n                nodeInfo.feeDelta[endPeriod] = -int256(policy.feeRate);\n            } else {\n                nodeInfo.feeDelta[endPeriod] -= int256(policy.feeRate);\n            }\n            // Reset to default value if needed\n            if (nodeInfo.feeDelta[currentPeriod] == 0) {\n                nodeInfo.feeDelta[currentPeriod] = DEFAULT_FEE_DELTA;\n            }\n            if (nodeInfo.feeDelta[endPeriod] == 0) {\n                nodeInfo.feeDelta[endPeriod] = DEFAULT_FEE_DELTA;\n            }\n            policy.arrangements.push(ArrangementInfo(node, 0, 0));\n        }\n\n        emit PolicyCreated(\n            _policyId,\n            msg.sender,\n            _policyOwner == address(0) ? msg.sender : _policyOwner,\n            policy.feeRate,\n            policy.startTimestamp,\n            policy.endTimestamp,\n            _nodes.length\n        );\n    }\n\n    /**\n    * @notice Get policy owner\n    */\n    function getPolicyOwner(bytes16 _policyId) public view returns (address) {\n        Policy storage policy = policies[_policyId];\n        return policy.owner == address(0) ? policy.sponsor : policy.owner;\n    }\n\n    /**\n    * @notice Set default `feeDelta` value for specified period\n    * @dev This method increases gas cost for node in trade of decreasing cost for policy sponsor\n    * @param _node Node address\n    * @param _period Period to set\n    */\n    function setDefaultFeeDelta(address _node, uint16 _period) external onlyEscrowContract {\n        NodeInfo storage node = nodes[_node];\n        if (node.feeDelta[_period] == 0) {\n            node.feeDelta[_period] = DEFAULT_FEE_DELTA;\n        }\n    }\n\n    /**\n    * @notice Update node fee\n    * @param _node Node address\n    * @param _period Processed period\n    */\n    function updateFee(address _node, uint16 _period) external onlyEscrowContract {\n        NodeInfo storage node = nodes[_node];\n        if (node.previousFeePeriod == 0 || _period <= node.previousFeePeriod) {\n            return;\n        }\n        for (uint16 i = node.previousFeePeriod + 1; i <= _period; i++) {\n            int256 delta = node.feeDelta[i];\n            if (delta == DEFAULT_FEE_DELTA) {\n                // gas refund\n                node.feeDelta[i] = 0;\n                continue;\n            }\n\n            // broken state\n            if (delta < 0 && uint256(-delta) > node.feeRate) {\n                node.feeDelta[i] += int256(node.feeRate);\n                node.feeRate = 0;\n                emit NodeBrokenState(_node, _period);\n            // good state\n            } else {\n                node.feeRate = node.feeRate.addSigned(delta);\n                // gas refund\n                node.feeDelta[i] = 0;\n            }\n        }\n        node.previousFeePeriod = _period;\n        node.fee += uint128(node.feeRate);\n    }\n\n    /**\n    * @notice Withdraw fee by node\n    */\n    function withdraw() external returns (uint256) {\n        return withdraw(msg.sender);\n    }\n\n    /**\n    * @notice Withdraw fee by node\n    * @param _recipient Recipient of the fee\n    */\n    function withdraw(address payable _recipient) public returns (uint256) {\n        NodeInfo storage node = nodes[msg.sender];\n        uint256 fee = node.fee;\n        require(fee != 0);\n        node.fee = 0;\n        _recipient.sendValue(fee);\n        emit Withdrawn(msg.sender, _recipient, fee);\n        return fee;\n    }\n\n    /**\n    * @notice Calculate amount of refund\n    * @param _policy Policy\n    * @param _arrangement Arrangement\n    */\n    function calculateRefundValue(Policy storage _policy, ArrangementInfo storage _arrangement)\n        internal view returns (uint256 refundValue, uint256 indexOfDowntimePeriods, uint16 lastRefundedPeriod)\n    {\n        uint16 policyStartPeriod = uint16(_policy.startTimestamp / secondsPerPeriod);\n        uint16 maxPeriod = AdditionalMath.min16(getCurrentPeriod(), uint16(_policy.endTimestamp / secondsPerPeriod));\n        uint16 minPeriod = AdditionalMath.max16(policyStartPeriod, _arrangement.lastRefundedPeriod);\n        uint16 downtimePeriods = 0;\n        uint256 length = escrow.getPastDowntimeLength(_arrangement.node);\n        uint256 initialIndexOfDowntimePeriods;\n        if (_arrangement.lastRefundedPeriod == 0) {\n            initialIndexOfDowntimePeriods = escrow.findIndexOfPastDowntime(_arrangement.node, policyStartPeriod);\n        } else {\n            initialIndexOfDowntimePeriods = _arrangement.indexOfDowntimePeriods;\n        }\n\n        for (indexOfDowntimePeriods = initialIndexOfDowntimePeriods;\n             indexOfDowntimePeriods < length;\n             indexOfDowntimePeriods++)\n        {\n            (uint16 startPeriod, uint16 endPeriod) =\n                escrow.getPastDowntime(_arrangement.node, indexOfDowntimePeriods);\n            if (startPeriod > maxPeriod) {\n                break;\n            } else if (endPeriod < minPeriod) {\n                continue;\n            }\n            downtimePeriods += AdditionalMath.min16(maxPeriod, endPeriod)\n                .sub16(AdditionalMath.max16(minPeriod, startPeriod)) + 1;\n            if (maxPeriod <= endPeriod) {\n                break;\n            }\n        }\n\n        uint16 lastCommittedPeriod = escrow.getLastCommittedPeriod(_arrangement.node);\n        if (indexOfDowntimePeriods == length && lastCommittedPeriod < maxPeriod) {\n            // Overflow protection removed:\n            // lastCommittedPeriod < maxPeriod and minPeriod <= maxPeriod + 1\n            downtimePeriods += maxPeriod - AdditionalMath.max16(minPeriod - 1, lastCommittedPeriod);\n        }\n\n        refundValue = _policy.feeRate * downtimePeriods;\n        lastRefundedPeriod = maxPeriod + 1;\n    }\n\n    /**\n    * @notice Revoke/refund arrangement/policy by the sponsor\n    * @param _policyId Policy id\n    * @param _node Node that will be excluded or RESERVED_NODE if full policy should be used\n    ( @param _forceRevoke Force revoke arrangement/policy\n    */\n    function refundInternal(bytes16 _policyId, address _node, bool _forceRevoke)\n        internal returns (uint256 refundValue)\n    {\n        refundValue = 0;\n        Policy storage policy = policies[_policyId];\n        require(!policy.disabled);\n        uint16 endPeriod = uint16(policy.endTimestamp / secondsPerPeriod) + 1;\n        uint256 numberOfActive = policy.arrangements.length;\n        uint256 i = 0;\n        for (; i < policy.arrangements.length; i++) {\n            ArrangementInfo storage arrangement = policy.arrangements[i];\n            address node = arrangement.node;\n            if (node == RESERVED_NODE || _node != RESERVED_NODE && _node != node) {\n                numberOfActive--;\n                continue;\n            }\n            uint256 nodeRefundValue;\n            (nodeRefundValue, arrangement.indexOfDowntimePeriods, arrangement.lastRefundedPeriod) =\n                calculateRefundValue(policy, arrangement);\n            if (_forceRevoke) {\n                NodeInfo storage nodeInfo = nodes[node];\n\n                // Check default value for feeDelta\n                uint16 lastRefundedPeriod = arrangement.lastRefundedPeriod;\n                if (nodeInfo.feeDelta[lastRefundedPeriod] == DEFAULT_FEE_DELTA) {\n                    nodeInfo.feeDelta[lastRefundedPeriod] = -int256(policy.feeRate);\n                } else {\n                    nodeInfo.feeDelta[lastRefundedPeriod] -= int256(policy.feeRate);\n                }\n                if (nodeInfo.feeDelta[endPeriod] == DEFAULT_FEE_DELTA) {\n                    nodeInfo.feeDelta[endPeriod] = -int256(policy.feeRate);\n                } else {\n                    nodeInfo.feeDelta[endPeriod] += int256(policy.feeRate);\n                }\n\n                // Reset to default value if needed\n                if (nodeInfo.feeDelta[lastRefundedPeriod] == 0) {\n                    nodeInfo.feeDelta[lastRefundedPeriod] = DEFAULT_FEE_DELTA;\n                }\n                if (nodeInfo.feeDelta[endPeriod] == 0) {\n                    nodeInfo.feeDelta[endPeriod] = DEFAULT_FEE_DELTA;\n                }\n                nodeRefundValue += uint256(endPeriod - lastRefundedPeriod) * policy.feeRate;\n            }\n            if (_forceRevoke || arrangement.lastRefundedPeriod >= endPeriod) {\n                arrangement.node = RESERVED_NODE;\n                arrangement.indexOfDowntimePeriods = 0;\n                arrangement.lastRefundedPeriod = 0;\n                numberOfActive--;\n                emit ArrangementRevoked(_policyId, msg.sender, node, nodeRefundValue);\n            } else {\n                emit RefundForArrangement(_policyId, msg.sender, node, nodeRefundValue);\n            }\n\n            refundValue += nodeRefundValue;\n            if (_node != RESERVED_NODE) {\n               break;\n            }\n        }\n        address payable policySponsor = policy.sponsor;\n        if (_node == RESERVED_NODE) {\n            if (numberOfActive == 0) {\n                policy.disabled = true;\n                // gas refund\n                policy.sponsor = address(0);\n                policy.owner = address(0);\n                policy.feeRate = 0;\n                policy.startTimestamp = 0;\n                policy.endTimestamp = 0;\n                emit PolicyRevoked(_policyId, msg.sender, refundValue);\n            } else {\n                emit RefundForPolicy(_policyId, msg.sender, refundValue);\n            }\n        } else {\n            // arrangement not found\n            require(i < policy.arrangements.length);\n        }\n        if (refundValue > 0) {\n            policySponsor.sendValue(refundValue);\n        }\n    }\n\n    /**\n    * @notice Calculate amount of refund\n    * @param _policyId Policy id\n    * @param _node Node or RESERVED_NODE if all nodes should be used\n    */\n    function calculateRefundValueInternal(bytes16 _policyId, address _node)\n        internal view returns (uint256 refundValue)\n    {\n        refundValue = 0;\n        Policy storage policy = policies[_policyId];\n        require((policy.owner == msg.sender || policy.sponsor == msg.sender) && !policy.disabled);\n        uint256 i = 0;\n        for (; i < policy.arrangements.length; i++) {\n            ArrangementInfo storage arrangement = policy.arrangements[i];\n            if (arrangement.node == RESERVED_NODE || _node != RESERVED_NODE && _node != arrangement.node) {\n                continue;\n            }\n            (uint256 nodeRefundValue,,) = calculateRefundValue(policy, arrangement);\n            refundValue += nodeRefundValue;\n            if (_node != RESERVED_NODE) {\n               break;\n            }\n        }\n        if (_node != RESERVED_NODE) {\n            // arrangement not found\n            require(i < policy.arrangements.length);\n        }\n    }\n\n    /**\n    * @notice Revoke policy by the sponsor\n    * @param _policyId Policy id\n    */\n    function revokePolicy(bytes16 _policyId) external returns (uint256 refundValue) {\n        require(getPolicyOwner(_policyId) == msg.sender);\n        return refundInternal(_policyId, RESERVED_NODE, true);\n    }\n\n    /**\n    * @notice Revoke arrangement by the sponsor\n    * @param _policyId Policy id\n    * @param _node Node that will be excluded\n    */\n    function revokeArrangement(bytes16 _policyId, address _node)\n        external returns (uint256 refundValue)\n    {\n        require(_node != RESERVED_NODE);\n        require(getPolicyOwner(_policyId) == msg.sender);\n        return refundInternal(_policyId, _node, true);\n    }\n\n    /**\n    * @notice Get unsigned hash for revocation\n    * @param _policyId Policy id\n    * @param _node Node that will be excluded\n    * @return Revocation hash, EIP191 version 0x45 ('E')\n    */\n    function getRevocationHash(bytes16 _policyId, address _node) public view returns (bytes32) {\n        return SignatureVerifier.hashEIP191(abi.encodePacked(_policyId, _node), byte(0x45));\n    }\n\n    /**\n    * @notice Check correctness of signature\n    * @param _policyId Policy id\n    * @param _node Node that will be excluded, zero address if whole policy will be revoked\n    * @param _signature Signature of owner\n    */\n    function checkOwnerSignature(bytes16 _policyId, address _node, bytes memory _signature) internal view {\n        bytes32 hash = getRevocationHash(_policyId, _node);\n        address recovered = SignatureVerifier.recover(hash, _signature);\n        require(getPolicyOwner(_policyId) == recovered);\n    }\n\n    /**\n    * @notice Revoke policy or arrangement using owner's signature\n    * @param _policyId Policy id\n    * @param _node Node that will be excluded, zero address if whole policy will be revoked\n    * @param _signature Signature of owner, EIP191 version 0x45 ('E')\n    */\n    function revoke(bytes16 _policyId, address _node, bytes calldata _signature)\n        external returns (uint256 refundValue)\n    {\n        checkOwnerSignature(_policyId, _node, _signature);\n        return refundInternal(_policyId, _node, true);\n    }\n\n    /**\n    * @notice Refund part of fee by the sponsor\n    * @param _policyId Policy id\n    */\n    function refund(bytes16 _policyId) external {\n        Policy storage policy = policies[_policyId];\n        require(policy.owner == msg.sender || policy.sponsor == msg.sender);\n        refundInternal(_policyId, RESERVED_NODE, false);\n    }\n\n    /**\n    * @notice Refund part of one node's fee by the sponsor\n    * @param _policyId Policy id\n    * @param _node Node address\n    */\n    function refund(bytes16 _policyId, address _node)\n        external returns (uint256 refundValue)\n    {\n        require(_node != RESERVED_NODE);\n        Policy storage policy = policies[_policyId];\n        require(policy.owner == msg.sender || policy.sponsor == msg.sender);\n        return refundInternal(_policyId, _node, false);\n    }\n\n    /**\n    * @notice Calculate amount of refund\n    * @param _policyId Policy id\n    */\n    function calculateRefundValue(bytes16 _policyId)\n        external view returns (uint256 refundValue)\n    {\n        return calculateRefundValueInternal(_policyId, RESERVED_NODE);\n    }\n\n    /**\n    * @notice Calculate amount of refund\n    * @param _policyId Policy id\n    * @param _node Node\n    */\n    function calculateRefundValue(bytes16 _policyId, address _node)\n        external view returns (uint256 refundValue)\n    {\n        require(_node != RESERVED_NODE);\n        return calculateRefundValueInternal(_policyId, _node);\n    }\n\n    /**\n    * @notice Get number of arrangements in the policy\n    * @param _policyId Policy id\n    */\n    function getArrangementsLength(bytes16 _policyId) external view returns (uint256) {\n        return policies[_policyId].arrangements.length;\n    }\n\n    /**\n    * @notice Get information about staker's fee rate\n    * @param _node Address of staker\n    * @param _period Period to get fee delta\n    */\n    function getNodeFeeDelta(address _node, uint16 _period)\n        // TODO \"virtual\" only for tests, probably will be removed after #1512\n        external view virtual returns (int256)\n    {\n        return nodes[_node].feeDelta[_period];\n    }\n\n    /**\n    * @notice Return the information about arrangement\n    */\n    function getArrangementInfo(bytes16 _policyId, uint256 _index)\n    // TODO change to structure when ABIEncoderV2 is released (#1501)\n//        public view returns (ArrangementInfo)\n        external view returns (address node, uint256 indexOfDowntimePeriods, uint16 lastRefundedPeriod)\n    {\n        ArrangementInfo storage info = policies[_policyId].arrangements[_index];\n        node = info.node;\n        indexOfDowntimePeriods = info.indexOfDowntimePeriods;\n        lastRefundedPeriod = info.lastRefundedPeriod;\n    }\n\n\n    /**\n    * @dev Get Policy structure by delegatecall\n    */\n    function delegateGetPolicy(address _target, bytes16 _policyId)\n        internal returns (Policy memory result)\n    {\n        bytes32 memoryAddress = delegateGetData(_target, this.policies.selector, 1, bytes32(_policyId), 0);\n        assembly {\n            result := memoryAddress\n        }\n    }\n\n    /**\n    * @dev Get ArrangementInfo structure by delegatecall\n    */\n    function delegateGetArrangementInfo(address _target, bytes16 _policyId, uint256 _index)\n        internal returns (ArrangementInfo memory result)\n    {\n        bytes32 memoryAddress = delegateGetData(\n            _target, this.getArrangementInfo.selector, 2, bytes32(_policyId), bytes32(_index));\n        assembly {\n            result := memoryAddress\n        }\n    }\n\n    /**\n    * @dev Get NodeInfo structure by delegatecall\n    */\n    function delegateGetNodeInfo(address _target, address _node)\n        internal returns (NodeInfo memory result)\n    {\n        bytes32 memoryAddress = delegateGetData(_target, this.nodes.selector, 1, bytes32(uint256(_node)), 0);\n        assembly {\n            result := memoryAddress\n        }\n    }\n\n    /**\n    * @dev Get feeRateRange structure by delegatecall\n    */\n    function delegateGetFeeRateRange(address _target) internal returns (Range memory result) {\n        bytes32 memoryAddress = delegateGetData(_target, this.feeRateRange.selector, 0, 0, 0);\n        assembly {\n            result := memoryAddress\n        }\n    }\n\n    /// @dev the `onlyWhileUpgrading` modifier works through a call to the parent `verifyState`\n    function verifyState(address _testTarget) public override virtual {\n        super.verifyState(_testTarget);\n        Range memory rangeToCheck = delegateGetFeeRateRange(_testTarget);\n        require(feeRateRange.min == rangeToCheck.min &&\n            feeRateRange.defaultValue == rangeToCheck.defaultValue &&\n            feeRateRange.max == rangeToCheck.max);\n        Policy storage policy = policies[RESERVED_POLICY_ID];\n        Policy memory policyToCheck = delegateGetPolicy(_testTarget, RESERVED_POLICY_ID);\n        require(policyToCheck.sponsor == policy.sponsor &&\n            policyToCheck.owner == policy.owner &&\n            policyToCheck.feeRate == policy.feeRate &&\n            policyToCheck.startTimestamp == policy.startTimestamp &&\n            policyToCheck.endTimestamp == policy.endTimestamp &&\n            policyToCheck.disabled == policy.disabled);\n\n        require(delegateGet(_testTarget, this.getArrangementsLength.selector, RESERVED_POLICY_ID) ==\n            policy.arrangements.length);\n        if (policy.arrangements.length > 0) {\n            ArrangementInfo storage arrangement = policy.arrangements[0];\n            ArrangementInfo memory arrangementToCheck = delegateGetArrangementInfo(\n                _testTarget, RESERVED_POLICY_ID, 0);\n            require(arrangementToCheck.node == arrangement.node &&\n                arrangementToCheck.indexOfDowntimePeriods == arrangement.indexOfDowntimePeriods &&\n                arrangementToCheck.lastRefundedPeriod == arrangement.lastRefundedPeriod);\n        }\n\n        NodeInfo storage nodeInfo = nodes[RESERVED_NODE];\n        NodeInfo memory nodeInfoToCheck = delegateGetNodeInfo(_testTarget, RESERVED_NODE);\n        require(nodeInfoToCheck.fee == nodeInfo.fee &&\n            nodeInfoToCheck.feeRate == nodeInfo.feeRate &&\n            nodeInfoToCheck.previousFeePeriod == nodeInfo.previousFeePeriod &&\n            nodeInfoToCheck.minFeeRate == nodeInfo.minFeeRate);\n\n        require(int256(delegateGet(_testTarget, this.getNodeFeeDelta.selector,\n            bytes32(bytes20(RESERVED_NODE)), bytes32(uint256(11)))) == nodeInfo.feeDelta[11]);\n    }\n\n    /// @dev the `onlyWhileUpgrading` modifier works through a call to the parent `finishUpgrade`\n    function finishUpgrade(address _target) public override virtual {\n        super.finishUpgrade(_target);\n        // Create fake Policy and NodeInfo to use them in verifyState(address)\n        Policy storage policy = policies[RESERVED_POLICY_ID];\n        policy.sponsor = msg.sender;\n        policy.owner = address(this);\n        policy.startTimestamp = 1;\n        policy.endTimestamp = 2;\n        policy.feeRate = 3;\n        policy.disabled = true;\n        policy.arrangements.push(ArrangementInfo(RESERVED_NODE, 11, 22));\n        NodeInfo storage nodeInfo = nodes[RESERVED_NODE];\n        nodeInfo.fee = 100;\n        nodeInfo.feeRate = 33;\n        nodeInfo.previousFeePeriod = 44;\n        nodeInfo.feeDelta[11] = 55;\n        nodeInfo.minFeeRate = 777;\n    }\n}\n",
  "sourceMap": "495:28314:5:-:0;;;3298:342;5:9:-1;2:2;;;27:1;24;17:12;2:2;3298:342:5;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3298:342:5;516:6:21;:19;;-1:-1:-1;;;;;;516:19:21;525:10;516:19;;;;550:40;;-1:-1:-1;;;;;583:6:21;;;;;516;550:40;;516:6;;550:40;3456:28:5;3487:7;-1:-1:-1;;;;;3487:24:5;;:26;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3487:26:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3487:26:5;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3487:26:5;;-1:-1:-1;3531:25:5;;;3523:34;;12:1:-1;9;2:12;3523:34:5;3567:40;;;;-1:-1:-1;;;;;;3567:40:5;;;3617:16;;;;-1:-1:-1;;;;;;3617:16:5;;;-1:-1:-1;;;;;495:28314:5;;;;;;;;;;;;;;",
  "sourcePath": "../../nucypher/blockchain/eth/sol/source/contracts/PolicyManager.sol",
  "type": "contract"
}