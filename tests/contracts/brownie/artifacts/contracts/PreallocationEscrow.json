{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract StakingInterfaceRouter",
          "name": "_router",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ETHWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "TokensDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "endLockTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLockedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "initialDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFallbackAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockedValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "receiveApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "contract StakingInterfaceRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingEscrow",
      "outputs": [
        {
          "internalType": "contract StakingEscrow",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract NuCypherToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "16": "../../nucypher/blockchain/eth/sol/source/contracts/staking_contracts/AbstractStakingContract.sol",
    "17": "../../nucypher/blockchain/eth/sol/source/contracts/staking_contracts/PreallocationEscrow.sol",
    "20": "../../nucypher/blockchain/eth/sol/source/zeppelin/math/SafeMath.sol",
    "21": "../../nucypher/blockchain/eth/sol/source/zeppelin/ownership/Ownable.sol",
    "25": "../../nucypher/blockchain/eth/sol/source/zeppelin/token/ERC20/SafeERC20.sol",
    "26": "../../nucypher/blockchain/eth/sol/source/zeppelin/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/staking_contracts/PreallocationEscrow.sol",
    "exportedSymbols": {
      "PreallocationEscrow": [
        14627
      ]
    },
    "id": 14628,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14327,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:17"
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/zeppelin/ownership/Ownable.sol",
        "file": "zeppelin/ownership/Ownable.sol",
        "id": 14328,
        "nodeType": "ImportDirective",
        "scope": 14628,
        "sourceUnit": 15600,
        "src": "26:40:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/zeppelin/math/SafeMath.sol",
        "file": "zeppelin/math/SafeMath.sol",
        "id": 14329,
        "nodeType": "ImportDirective",
        "scope": 14628,
        "sourceUnit": 15479,
        "src": "67:36:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "../../nucypher/blockchain/eth/sol/source/contracts/staking_contracts/AbstractStakingContract.sol",
        "file": "nucypher/staking_contracts/AbstractStakingContract.sol",
        "id": 14330,
        "nodeType": "ImportDirective",
        "scope": 14628,
        "sourceUnit": 14326,
        "src": "104:64:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14332,
              "name": "AbstractStakingContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14325,
              "src": "323:23:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractStakingContract_$14325",
                "typeString": "contract AbstractStakingContract"
              }
            },
            "id": 14333,
            "nodeType": "InheritanceSpecifier",
            "src": "323:23:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14334,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15599,
              "src": "348:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$15599",
                "typeString": "contract Ownable"
              }
            },
            "id": 14335,
            "nodeType": "InheritanceSpecifier",
            "src": "348:7:17"
          }
        ],
        "contractDependencies": [
          14325,
          15599
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 14331,
          "nodeType": "StructuredDocumentation",
          "src": "171:119:17",
          "text": "@notice Contract holds tokens for vesting.\nAlso tokens can be used as a stake in the staking escrow contract"
        },
        "fullyImplemented": true,
        "id": 14627,
        "linearizedBaseContracts": [
          14627,
          15599,
          14325
        ],
        "name": "PreallocationEscrow",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14338,
            "libraryName": {
              "contractScope": null,
              "id": 14336,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15478,
              "src": "368:8:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$15478",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "362:27:17",
            "typeName": {
              "id": 14337,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "381:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14346,
            "name": "TokensDeposited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14340,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14346,
                  "src": "417:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "417:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14342,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14346,
                  "src": "441:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14344,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "duration",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14346,
                  "src": "456:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "416:57:17"
            },
            "src": "395:79:17"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14352,
            "name": "TokensWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14348,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14352,
                  "src": "501:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14350,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14352,
                  "src": "524:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "500:38:17"
            },
            "src": "479:60:17"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14358,
            "name": "ETHWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14354,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14358,
                  "src": "563:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14356,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14358,
                  "src": "586:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "562:38:17"
            },
            "src": "544:57:17"
          },
          {
            "constant": false,
            "functionSelector": "36233c5f",
            "id": 14360,
            "mutability": "immutable",
            "name": "stakingEscrow",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14627,
            "src": "607:44:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingEscrow_$8772",
              "typeString": "contract StakingEscrow"
            },
            "typeName": {
              "contractScope": null,
              "id": 14359,
              "name": "StakingEscrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8772,
              "src": "607:13:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                "typeString": "contract StakingEscrow"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d2c46932",
            "id": 14362,
            "mutability": "mutable",
            "name": "lockedValue",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14627,
            "src": "658:26:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14361,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "658:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a030785a",
            "id": 14364,
            "mutability": "mutable",
            "name": "endLockTimestamp",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14627,
            "src": "690:31:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14363,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "690:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14381,
              "nodeType": "Block",
              "src": "895:58:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14373,
                      "name": "stakingEscrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14360,
                      "src": "905:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                        "typeString": "contract StakingEscrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 14374,
                              "name": "_router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14367,
                              "src": "921:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingInterfaceRouter_$14210",
                                "typeString": "contract StakingInterfaceRouter"
                              }
                            },
                            "id": 14375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "target",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14157,
                            "src": "921:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_BaseStakingInterface_$14750_$",
                              "typeString": "function () view external returns (contract BaseStakingInterface)"
                            }
                          },
                          "id": 14376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "921:16:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BaseStakingInterface_$14750",
                            "typeString": "contract BaseStakingInterface"
                          }
                        },
                        "id": 14377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "escrow",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14641,
                        "src": "921:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_StakingEscrow_$8772_$",
                          "typeString": "function () view external returns (contract StakingEscrow)"
                        }
                      },
                      "id": 14378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "921:25:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                        "typeString": "contract StakingEscrow"
                      }
                    },
                    "src": "905:41:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                      "typeString": "contract StakingEscrow"
                    }
                  },
                  "id": 14380,
                  "nodeType": "ExpressionStatement",
                  "src": "905:41:17"
                }
              ]
            },
            "documentation": {
              "id": 14365,
              "nodeType": "StructuredDocumentation",
              "src": "728:78:17",
              "text": "@param _router Address of the StakingInterfaceRouter contract"
            },
            "id": 14382,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 14370,
                    "name": "_router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14367,
                    "src": "886:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingInterfaceRouter_$14210",
                      "typeString": "contract StakingInterfaceRouter"
                    }
                  }
                ],
                "id": 14371,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14369,
                  "name": "AbstractStakingContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14325,
                  "src": "862:23:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AbstractStakingContract_$14325_$",
                    "typeString": "type(contract AbstractStakingContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "862:32:17"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14367,
                  "mutability": "mutable",
                  "name": "_router",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14382,
                  "src": "823:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StakingInterfaceRouter_$14210",
                    "typeString": "contract StakingInterfaceRouter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 14366,
                    "name": "StakingInterfaceRouter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 14210,
                    "src": "823:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingInterfaceRouter_$14210",
                      "typeString": "contract StakingInterfaceRouter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "822:32:17"
            },
            "returnParameters": {
              "id": 14372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:0:17"
            },
            "scope": 14627,
            "src": "811:142:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14431,
              "nodeType": "Block",
              "src": "1227:267:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 14393,
                            "name": "lockedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14362,
                            "src": "1245:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 14394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1260:1:17",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1245:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 14396,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14387,
                            "src": "1265:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 14397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1274:1:17",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1265:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1245:30:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1237:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1237:39:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14401,
                  "nodeType": "ExpressionStatement",
                  "src": "1237:39:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14402,
                      "name": "endLockTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14364,
                      "src": "1286:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 14406,
                          "name": "_duration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14389,
                          "src": "1325:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 14403,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1305:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 14404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1305:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 14405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15456,
                        "src": "1305:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 14407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1305:30:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1286:49:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14409,
                  "nodeType": "ExpressionStatement",
                  "src": "1286:49:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14410,
                      "name": "lockedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14362,
                      "src": "1345:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 14411,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14387,
                      "src": "1359:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1345:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14413,
                  "nodeType": "ExpressionStatement",
                  "src": "1345:20:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14417,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14385,
                        "src": "1398:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 14420,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1415:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PreallocationEscrow_$14627",
                              "typeString": "contract PreallocationEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PreallocationEscrow_$14627",
                              "typeString": "contract PreallocationEscrow"
                            }
                          ],
                          "id": 14419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1407:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14418,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1407:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 14421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1407:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14422,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14387,
                        "src": "1422:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14414,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14224,
                        "src": "1375:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 14416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16203,
                      "src": "1375:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16156_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16156_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 14423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1375:54:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14424,
                  "nodeType": "ExpressionStatement",
                  "src": "1375:54:17"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14426,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14385,
                        "src": "1460:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14427,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14387,
                        "src": "1469:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14428,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14389,
                        "src": "1477:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14425,
                      "name": "TokensDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14346,
                      "src": "1444:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 14429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1444:43:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14430,
                  "nodeType": "EmitStatement",
                  "src": "1439:48:17"
                }
              ]
            },
            "documentation": {
              "id": 14383,
              "nodeType": "StructuredDocumentation",
              "src": "959:178:17",
              "text": "@notice Initial tokens deposit\n@param _sender Token sender\n@param _value Amount of token to deposit\n@param _duration Duration of tokens locking"
            },
            "id": 14432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialDeposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14385,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14432,
                  "src": "1166:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14387,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14432,
                  "src": "1183:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1183:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14389,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14432,
                  "src": "1199:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1199:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1165:52:17"
            },
            "returnParameters": {
              "id": 14391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1227:0:17"
            },
            "scope": 14627,
            "src": "1142:352:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14447,
              "nodeType": "Block",
              "src": "1717:62:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 14441,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1742:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1742:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14443,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14435,
                        "src": "1754:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14444,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14437,
                        "src": "1762:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14440,
                      "name": "initialDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14432,
                      "src": "1727:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 14445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1727:45:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14446,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:45:17"
                }
              ]
            },
            "documentation": {
              "id": 14433,
              "nodeType": "StructuredDocumentation",
              "src": "1500:144:17",
              "text": "@notice Initial tokens deposit\n@param _value Amount of token to deposit\n@param _duration Duration of tokens locking"
            },
            "functionSelector": "3a6ce248",
            "id": 14448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialDeposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14435,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14448,
                  "src": "1673:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1673:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14437,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14448,
                  "src": "1689:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1689:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1672:35:17"
            },
            "returnParameters": {
              "id": 14439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1717:0:17"
            },
            "scope": 14627,
            "src": "1649:130:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14501,
              "nodeType": "Block",
              "src": "2332:1023:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 14466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 14461,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14455,
                            "src": "2350:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 14464,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14224,
                                "src": "2376:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                                  "typeString": "contract NuCypherToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                                  "typeString": "contract NuCypherToken"
                                }
                              ],
                              "id": 14463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2368:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 14462,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2368:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 14465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2368:14:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2350:32:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 14473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 14467,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2386:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 14468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2386:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 14471,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14224,
                                "src": "2408:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                                  "typeString": "contract NuCypherToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                                  "typeString": "contract NuCypherToken"
                                }
                              ],
                              "id": 14470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2400:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 14469,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2400:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 14472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2400:14:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2386:28:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2350:64:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2342:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2342:73:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14476,
                  "nodeType": "ExpressionStatement",
                  "src": "2342:73:17"
                },
                {
                  "assignments": [
                    14478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14478,
                      "mutability": "mutable",
                      "name": "payloadSize",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 14501,
                      "src": "3088:19:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14477,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3088:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 14479,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3088:19:17"
                },
                {
                  "assignments": [
                    14481
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14481,
                      "mutability": "mutable",
                      "name": "payload",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 14501,
                      "src": "3117:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14480,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3117:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 14482,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3117:15:17"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3151:99:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3165:33:17",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3193:4:17",
                              "type": "",
                              "value": "0x84"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "3180:12:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3180:18:17"
                        },
                        "variableNames": [
                          {
                            "name": "payloadSize",
                            "nodeType": "YulIdentifier",
                            "src": "3165:11:17"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3211:29:17",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3235:4:17",
                              "type": "",
                              "value": "0xA4"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "3222:12:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3222:18:17"
                        },
                        "variableNames": [
                          {
                            "name": "payload",
                            "nodeType": "YulIdentifier",
                            "src": "3211:7:17"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "berlin",
                  "externalReferences": [
                    {
                      "declaration": 14481,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3211:7:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 14478,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3165:11:17",
                      "valueSize": 1
                    }
                  ],
                  "id": 14483,
                  "nodeType": "InlineAssembly",
                  "src": "3142:108:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14484,
                      "name": "payload",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14481,
                      "src": "3259:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 14492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 14485,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14481,
                        "src": "3269:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">>",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "38",
                          "id": 14486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3280:1:17",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "value": "8"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 14489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3332",
                                "id": 14487,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3283:2:17",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 14488,
                                "name": "payloadSize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14478,
                                "src": "3288:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3283:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 14490,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3282:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3280:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3269:31:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3259:41:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14494,
                  "nodeType": "ExpressionStatement",
                  "src": "3259:41:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14496,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14451,
                        "src": "3325:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14497,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14453,
                        "src": "3332:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14498,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14481,
                        "src": "3340:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14495,
                      "name": "initialDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14432,
                      "src": "3310:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 14499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3310:38:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14500,
                  "nodeType": "ExpressionStatement",
                  "src": "3310:38:17"
                }
              ]
            },
            "documentation": {
              "id": 14449,
              "nodeType": "StructuredDocumentation",
              "src": "1785:370:17",
              "text": "@notice Implementation of the receiveApproval(address,uint256,address,bytes) method\n(see NuCypherToken contract). Initial tokens deposit\n@param _from Sender\n@param _value Amount of tokens to deposit\n@param _tokenContract Token contract address\n@notice (param _extraData) Amount of seconds during which tokens will be locked"
            },
            "functionSelector": "8f4ffcb1",
            "id": 14502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "receiveApproval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14451,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14502,
                  "src": "2194:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2194:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14453,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14502,
                  "src": "2217:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2217:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14455,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14502,
                  "src": "2241:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2241:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14457,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14502,
                  "src": "2273:14:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14456,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2273:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2184:126:17"
            },
            "returnParameters": {
              "id": 14459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2332:0:17"
            },
            "scope": 14627,
            "src": "2160:1195:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14518,
              "nodeType": "Block",
              "src": "3471:118:17",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 14508,
                      "name": "endLockTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14364,
                      "src": "3485:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 14509,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3505:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 14510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3505:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3485:35:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 14515,
                  "nodeType": "IfStatement",
                  "src": "3481:74:17",
                  "trueBody": {
                    "id": 14514,
                    "nodeType": "Block",
                    "src": "3522:33:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 14512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3543:1:17",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 14507,
                        "id": 14513,
                        "nodeType": "Return",
                        "src": "3536:8:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14516,
                    "name": "lockedValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14362,
                    "src": "3571:11:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14507,
                  "id": 14517,
                  "nodeType": "Return",
                  "src": "3564:18:17"
                }
              ]
            },
            "documentation": {
              "id": 14503,
              "nodeType": "StructuredDocumentation",
              "src": "3361:48:17",
              "text": "@notice Get locked tokens value"
            },
            "functionSelector": "3317bbcc",
            "id": 14519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLockedTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3438:2:17"
            },
            "returnParameters": {
              "id": 14507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14506,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14519,
                  "src": "3462:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3462:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3461:9:17"
            },
            "scope": 14627,
            "src": "3414:175:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14271
            ],
            "body": {
              "id": 14575,
              "nodeType": "Block",
              "src": "3783:481:17",
              "statements": [
                {
                  "assignments": [
                    14529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14529,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 14575,
                      "src": "3793:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14528,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3793:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 14537,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 14534,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3835:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PreallocationEscrow_$14627",
                              "typeString": "contract PreallocationEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PreallocationEscrow_$14627",
                              "typeString": "contract PreallocationEscrow"
                            }
                          ],
                          "id": 14533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3827:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14532,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3827:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 14535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3827:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14530,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14224,
                        "src": "3811:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 14531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15645,
                      "src": "3811:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 14536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3811:30:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3793:48:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 14539,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14529,
                          "src": "3859:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 14540,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14522,
                          "src": "3870:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3859:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3851:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3851:26:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14543,
                  "nodeType": "ExpressionStatement",
                  "src": "3851:26:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 14547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 14545,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14529,
                              "src": "4077:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 14546,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14522,
                              "src": "4087:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4077:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 14552,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "4131:4:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PreallocationEscrow_$14627",
                                      "typeString": "contract PreallocationEscrow"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PreallocationEscrow_$14627",
                                      "typeString": "contract PreallocationEscrow"
                                    }
                                  ],
                                  "id": 14551,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4123:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 14550,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4123:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 14553,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4123:13:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 14548,
                                "name": "stakingEscrow",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14360,
                                "src": "4096:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingEscrow_$8772",
                                  "typeString": "contract StakingEscrow"
                                }
                              },
                              "id": 14549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getAllTokens",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4616,
                              "src": "4096:26:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 14554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4096:41:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4077:60:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 14556,
                            "name": "getLockedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14519,
                            "src": "4141:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 14557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4141:17:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4077:81:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4069:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4069:90:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14560,
                  "nodeType": "ExpressionStatement",
                  "src": "4069:90:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 14564,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4188:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4188:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14566,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14522,
                        "src": "4200:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14561,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14224,
                        "src": "4169:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$1625",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 14563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16182,
                      "src": "4169:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16156_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16156_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 14567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4169:38:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14568,
                  "nodeType": "ExpressionStatement",
                  "src": "4169:38:17"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 14570,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4238:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4238:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14572,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14522,
                        "src": "4250:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14569,
                      "name": "TokensWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14352,
                      "src": "4222:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 14573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4222:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14574,
                  "nodeType": "EmitStatement",
                  "src": "4217:40:17"
                }
              ]
            },
            "documentation": {
              "id": 14520,
              "nodeType": "StructuredDocumentation",
              "src": "3595:117:17",
              "text": "@notice Withdraw available amount of tokens to owner\n@param _value Amount of token to withdraw"
            },
            "functionSelector": "315a095d",
            "id": 14576,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 14526,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14525,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15526,
                  "src": "3773:9:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3773:9:17"
              }
            ],
            "name": "withdrawTokens",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14524,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3764:8:17"
            },
            "parameters": {
              "id": 14523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14522,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14576,
                  "src": "3741:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3741:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3740:16:17"
            },
            "returnParameters": {
              "id": 14527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3783:0:17"
            },
            "scope": 14627,
            "src": "3717:547:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14275
            ],
            "body": {
              "id": 14611,
              "nodeType": "Block",
              "src": "4384:174:17",
              "statements": [
                {
                  "assignments": [
                    14584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14584,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 14611,
                      "src": "4394:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14583,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4394:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 14590,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 14587,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "4420:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PreallocationEscrow_$14627",
                            "typeString": "contract PreallocationEscrow"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PreallocationEscrow_$14627",
                            "typeString": "contract PreallocationEscrow"
                          }
                        ],
                        "id": 14586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4412:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 14585,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4412:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 14588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4412:13:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 14589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4412:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4394:39:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 14592,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14584,
                          "src": "4451:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 14593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4462:1:17",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4451:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4443:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4443:21:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14596,
                  "nodeType": "ExpressionStatement",
                  "src": "4443:21:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14602,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14584,
                        "src": "4495:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 14597,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4474:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4474:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 14601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16366,
                      "src": "4474:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 14603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4474:29:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14604,
                  "nodeType": "ExpressionStatement",
                  "src": "4474:29:17"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 14606,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4531:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4531:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14608,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14584,
                        "src": "4543:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14605,
                      "name": "ETHWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14358,
                      "src": "4518:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 14609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4518:33:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14610,
                  "nodeType": "EmitStatement",
                  "src": "4513:38:17"
                }
              ]
            },
            "documentation": {
              "id": 14577,
              "nodeType": "StructuredDocumentation",
              "src": "4270:60:17",
              "text": "@notice Withdraw available ETH to the owner"
            },
            "functionSelector": "e086e5ec",
            "id": 14612,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 14581,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14580,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15526,
                  "src": "4374:9:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4374:9:17"
              }
            ],
            "name": "withdrawETH",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14579,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4365:8:17"
            },
            "parameters": {
              "id": 14578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4355:2:17"
            },
            "returnParameters": {
              "id": 14582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4384:0:17"
            },
            "scope": 14627,
            "src": "4335:223:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14265
            ],
            "body": {
              "id": 14625,
              "nodeType": "Block",
              "src": "4709:45:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 14623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 14619,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4726:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4726:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 14621,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15516,
                        "src": "4740:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 14622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4740:7:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4726:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14618,
                  "id": 14624,
                  "nodeType": "Return",
                  "src": "4719:28:17"
                }
              ]
            },
            "documentation": {
              "id": 14613,
              "nodeType": "StructuredDocumentation",
              "src": "4564:80:17",
              "text": "@notice Calling fallback function is allowed only for the owner"
            },
            "functionSelector": "bd4bd9ce",
            "id": 14626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isFallbackAllowed",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14615,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4685:8:17"
            },
            "parameters": {
              "id": 14614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4675:2:17"
            },
            "returnParameters": {
              "id": 14618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14617,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14626,
                  "src": "4703:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14616,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4703:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4702:6:17"
            },
            "scope": 14627,
            "src": "4649:105:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 14628,
        "src": "291:4466:17"
      }
    ],
    "src": "0:4758:17"
  },
  "bytecode": "60e060405234801561001057600080fd5b50604051610f72380380610f728339818101604052602081101561003357600080fd5b50516001600160601b0319606082901b1660805260408051636a5c1cc960e11b8152905182916000916001600160a01b0384169163d4b83992916004808301926020929190829003018186803b15801561008c57600080fd5b505afa1580156100a0573d6000803e3d6000fd5b505050506040513d60208110156100b657600080fd5b505160408051637e062a3560e11b815290516001600160a01b039092169163fc0c546a91600480820192602092909190829003018186803b1580156100fa57600080fd5b505afa15801561010e573d6000803e3d6000fd5b505050506040513d602081101561012457600080fd5b505190506001600160a01b03811661013b57600080fd5b60601b6001600160601b03191660a0525060008054336001600160a01b0319909116178082556040516001600160a01b0390911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3806001600160a01b031663d4b839926040518163ffffffff1660e01b815260040160206040518083038186803b1580156101cf57600080fd5b505afa1580156101e3573d6000803e3d6000fd5b505050506040513d60208110156101f957600080fd5b50516040805163e2fdcc1760e01b815290516001600160a01b039092169163e2fdcc1791600480820192602092909190829003018186803b15801561023d57600080fd5b505afa158015610251573d6000803e3d6000fd5b505050506040513d602081101561026757600080fd5b50516001600160601b031960609190911b1660c0525060805160601c60a05160601c60c05160601c610c9d6102d5600039806105b552806106c652508061050b5280610643528061077452806107b952806108bb52806109b552508061010752806108975250610c9d6000f3fe6080604052600436106100e85760003560e01c80638f4ffcb11161008a578063e086e5ec11610059578063e086e5ec14610405578063f2fde38b1461041a578063f887ea401461044d578063fc0c546a14610462576100e8565b80638f4ffcb11461032a578063a030785a146103c6578063bd4bd9ce146103db578063d2c46932146103f0576100e8565b80633a6ce248116100c65780633a6ce248146102a7578063715018a6146102d75780638da5cb5b146102ec5780638f32d59b14610301576100e8565b8063315a095d146102255780633317bbcc1461024f57806336233c5f14610276575b366100f257610223565b6100fa610477565b61010357600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d4b839926040518163ffffffff1660e01b815260040160206040518083038186803b15801561015e57600080fd5b505afa158015610172573d6000803e3d6000fd5b505050506040513d602081101561018857600080fd5b5051905061019e6001600160a01b03821661049b565b6101a757600080fd5b6000816001600160a01b03166000366040518083838082843760405192019450600093509091505080830381855af49150503d8060008114610205576040519150601f19603f3d011682016040523d82523d6000602084013e61020a565b606091505b50509050801561021e573d6000803e3d6000f35b600080fd5b005b34801561023157600080fd5b506102236004803603602081101561024857600080fd5b50356104d7565b34801561025b57600080fd5b506102646106aa565b60408051918252519081900360200190f35b34801561028257600080fd5b5061028b6106c4565b604080516001600160a01b039092168252519081900360200190f35b3480156102b357600080fd5b50610223600480360360408110156102ca57600080fd5b50803590602001356106e8565b3480156102e357600080fd5b506102236106f7565b3480156102f857600080fd5b5061028b610752565b34801561030d57600080fd5b50610316610761565b604080519115158252519081900360200190f35b34801561033657600080fd5b506102236004803603608081101561034d57600080fd5b6001600160a01b03823581169260208101359260408201359092169181019060808101606082013564010000000081111561038757600080fd5b82018360208201111561039957600080fd5b803590602001918460018302840111640100000000831117156103bb57600080fd5b509092509050610772565b3480156103d257600080fd5b50610264610807565b3480156103e757600080fd5b50610316610477565b3480156103fc57600080fd5b5061026461080d565b34801561041157600080fd5b50610223610813565b34801561042657600080fd5b506102236004803603602081101561043d57600080fd5b50356001600160a01b0316610878565b34801561045957600080fd5b5061028b610895565b34801561046e57600080fd5b5061028b6108b9565b6000610481610752565b6001600160a01b0316336001600160a01b03161490505b90565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906104cf57508115155b949350505050565b6104df610761565b6104e857600080fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916370a0823191602480820192602092909190829003018186803b15801561055257600080fd5b505afa158015610566573d6000803e3d6000fd5b505050506040513d602081101561057c57600080fd5b505190508181101561058d57600080fd5b6105956106aa565b60408051630bc5b6f360e11b815230600482015290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163178b6de6916024808301926020929190829003018186803b1580156105fb57600080fd5b505afa15801561060f573d6000803e3d6000fd5b505050506040513d602081101561062557600080fd5b505183830301101561063657600080fd5b6106706001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338463ffffffff6108dd16565b60408051838152905133917f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b919081900360200190a25050565b600042600254116106bd57506000610498565b5060015490565b7f000000000000000000000000000000000000000000000000000000000000000081565b6106f3338383610977565b5050565b6106ff610761565b61070857600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161480156107db5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6107e457600080fd5b60843560a43560086020839003021c6107fe878783610977565b50505050505050565b60025481565b60015481565b61081b610761565b61082457600080fd5b478061082f57600080fd5b61083f338263ffffffff610a2b16565b60408051828152905133917f94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c919081900360200190a250565b610880610761565b61088957600080fd5b61089281610b10565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b826001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561093d57600080fd5b505af1158015610951573d6000803e3d6000fd5b505050506040513d602081101561096757600080fd5b505161097257600080fd5b505050565b6001541580156109875750600082115b61099057600080fd5b6109a0428263ffffffff610b7e16565b60025560018290556109e36001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684308563ffffffff610b9716565b604080518381526020810183905281516001600160a01b038616927ffdfdcf596161b0e81e3161597d46888dcc88bd83b22dcfb341c76377ca3bbc9e928290030190a2505050565b80471015610a80576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114610acb576040519150601f19603f3d011682016040523d82523d6000602084013e610ad0565b606091505b50509050806109725760405162461bcd60e51b815260040180806020018281038252603a815260200180610c2e603a913960400191505060405180910390fd5b6001600160a01b038116610b2357600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600082820183811015610b9057600080fd5b9392505050565b604080516323b872dd60e01b81526001600160a01b0385811660048301528481166024830152604482018490529151918616916323b872dd916064808201926020929091908290030181600087803b158015610bf257600080fd5b505af1158015610c06573d6000803e3d6000fd5b505050506040513d6020811015610c1c57600080fd5b5051610c2757600080fd5b5050505056fe416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564a2646970667358221220e710211ed28d0f81f72a9391226544e4d1605d91a9fdf6174bd9159fb5c17dca64736f6c63430006070033",
  "bytecodeSha1": "edefa4470bb47341a26a4e61fb390418246388d5",
  "compiler": {
    "evm_version": "berlin",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.7"
  },
  "contractName": "PreallocationEscrow",
  "coverageMap": {
    "branches": {
      "16": {
        "AbstractStakingContract.<fallback>": {
          "45": [
            2143,
            2162,
            true
          ],
          "46": [
            2232,
            2251,
            true
          ],
          "47": [
            2386,
            2397,
            false
          ]
        }
      },
      "17": {
        "PreallocationEscrow.getLockedTokens": {
          "39": [
            3485,
            3520,
            false
          ]
        },
        "PreallocationEscrow.initialDeposit": {
          "43": [
            1245,
            1261,
            false
          ],
          "44": [
            1265,
            1275,
            true
          ]
        },
        "PreallocationEscrow.receiveApproval": {
          "40": [
            2350,
            2382,
            false
          ],
          "41": [
            2386,
            2414,
            true
          ]
        },
        "PreallocationEscrow.withdrawETH": {
          "42": [
            4451,
            4463,
            true
          ]
        },
        "PreallocationEscrow.withdrawTokens": {
          "37": [
            3859,
            3876,
            true
          ],
          "38": [
            4077,
            4158,
            true
          ]
        }
      },
      "20": {
        "SafeMath.add": {
          "54": [
            1552,
            1558,
            true
          ]
        }
      },
      "21": {
        "Ownable._transferOwnership": {
          "51": [
            1980,
            2002,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "50": [
            864,
            873,
            true
          ]
        }
      },
      "25": {
        "SafeERC20.safeTransfer": {
          "52": [
            523,
            548,
            true
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "53": [
            670,
            705,
            true
          ]
        }
      },
      "26": {
        "Address.sendValue": {
          "48": [
            2341,
            2372,
            true
          ],
          "49": [
            2541,
            2548,
            true
          ]
        }
      }
    },
    "statements": {
      "16": {
        "AbstractStakingContract.<fallback>": {
          "0": [
            2108,
            2115
          ],
          "1": [
            2135,
            2163
          ],
          "2": [
            2224,
            2252
          ]
        }
      },
      "17": {
        "PreallocationEscrow.getLockedTokens": {
          "9": [
            3536,
            3544
          ],
          "10": [
            3564,
            3582
          ]
        },
        "PreallocationEscrow.initialDeposit": {
          "11": [
            1727,
            1772
          ],
          "24": [
            1237,
            1276
          ],
          "25": [
            1286,
            1335
          ],
          "26": [
            1345,
            1365
          ],
          "27": [
            1375,
            1429
          ],
          "28": [
            1439,
            1487
          ]
        },
        "PreallocationEscrow.isFallbackAllowed": {
          "3": [
            4719,
            4747
          ]
        },
        "PreallocationEscrow.receiveApproval": {
          "16": [
            2342,
            2415
          ],
          "17": [
            3259,
            3300
          ],
          "18": [
            3310,
            3348
          ]
        },
        "PreallocationEscrow.withdrawETH": {
          "19": [
            4443,
            4464
          ],
          "20": [
            4474,
            4503
          ],
          "21": [
            4513,
            4551
          ]
        },
        "PreallocationEscrow.withdrawTokens": {
          "5": [
            3851,
            3877
          ],
          "6": [
            4069,
            4159
          ],
          "7": [
            4169,
            4207
          ],
          "8": [
            4217,
            4257
          ]
        }
      },
      "20": {
        "SafeMath.add": {
          "34": [
            1544,
            1559
          ],
          "35": [
            1570,
            1578
          ]
        }
      },
      "21": {
        "Ownable._transferOwnership": {
          "31": [
            1972,
            2003
          ],
          "32": [
            2013,
            2056
          ],
          "33": [
            2066,
            2083
          ]
        },
        "Ownable.isOwner": {
          "15": [
            1036,
            1063
          ]
        },
        "Ownable.owner": {
          "14": [
            717,
            730
          ]
        },
        "Ownable.renounceOwnership": {
          "12": [
            1404,
            1449
          ],
          "13": [
            1459,
            1478
          ]
        },
        "Ownable.transferOwnership": {
          "22": [
            1728,
            1756
          ]
        }
      },
      "25": {
        "SafeERC20.safeTransfer": {
          "23": [
            515,
            549
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "36": [
            662,
            706
          ]
        }
      },
      "26": {
        "Address.isContract": {
          "4": [
            1237,
            1288
          ]
        },
        "Address.sendValue": {
          "29": [
            2333,
            2406
          ],
          "30": [
            2533,
            2611
          ]
        }
      }
    }
  },
  "dependencies": [
    "AbstractStakingContract",
    "Address",
    "Ownable",
    "SafeERC20",
    "SafeMath"
  ],
  "deployedBytecode": "6080604052600436106100e85760003560e01c80638f4ffcb11161008a578063e086e5ec11610059578063e086e5ec14610405578063f2fde38b1461041a578063f887ea401461044d578063fc0c546a14610462576100e8565b80638f4ffcb11461032a578063a030785a146103c6578063bd4bd9ce146103db578063d2c46932146103f0576100e8565b80633a6ce248116100c65780633a6ce248146102a7578063715018a6146102d75780638da5cb5b146102ec5780638f32d59b14610301576100e8565b8063315a095d146102255780633317bbcc1461024f57806336233c5f14610276575b366100f257610223565b6100fa610477565b61010357600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d4b839926040518163ffffffff1660e01b815260040160206040518083038186803b15801561015e57600080fd5b505afa158015610172573d6000803e3d6000fd5b505050506040513d602081101561018857600080fd5b5051905061019e6001600160a01b03821661049b565b6101a757600080fd5b6000816001600160a01b03166000366040518083838082843760405192019450600093509091505080830381855af49150503d8060008114610205576040519150601f19603f3d011682016040523d82523d6000602084013e61020a565b606091505b50509050801561021e573d6000803e3d6000f35b600080fd5b005b34801561023157600080fd5b506102236004803603602081101561024857600080fd5b50356104d7565b34801561025b57600080fd5b506102646106aa565b60408051918252519081900360200190f35b34801561028257600080fd5b5061028b6106c4565b604080516001600160a01b039092168252519081900360200190f35b3480156102b357600080fd5b50610223600480360360408110156102ca57600080fd5b50803590602001356106e8565b3480156102e357600080fd5b506102236106f7565b3480156102f857600080fd5b5061028b610752565b34801561030d57600080fd5b50610316610761565b604080519115158252519081900360200190f35b34801561033657600080fd5b506102236004803603608081101561034d57600080fd5b6001600160a01b03823581169260208101359260408201359092169181019060808101606082013564010000000081111561038757600080fd5b82018360208201111561039957600080fd5b803590602001918460018302840111640100000000831117156103bb57600080fd5b509092509050610772565b3480156103d257600080fd5b50610264610807565b3480156103e757600080fd5b50610316610477565b3480156103fc57600080fd5b5061026461080d565b34801561041157600080fd5b50610223610813565b34801561042657600080fd5b506102236004803603602081101561043d57600080fd5b50356001600160a01b0316610878565b34801561045957600080fd5b5061028b610895565b34801561046e57600080fd5b5061028b6108b9565b6000610481610752565b6001600160a01b0316336001600160a01b03161490505b90565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906104cf57508115155b949350505050565b6104df610761565b6104e857600080fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916370a0823191602480820192602092909190829003018186803b15801561055257600080fd5b505afa158015610566573d6000803e3d6000fd5b505050506040513d602081101561057c57600080fd5b505190508181101561058d57600080fd5b6105956106aa565b60408051630bc5b6f360e11b815230600482015290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163178b6de6916024808301926020929190829003018186803b1580156105fb57600080fd5b505afa15801561060f573d6000803e3d6000fd5b505050506040513d602081101561062557600080fd5b505183830301101561063657600080fd5b6106706001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338463ffffffff6108dd16565b60408051838152905133917f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b919081900360200190a25050565b600042600254116106bd57506000610498565b5060015490565b7f000000000000000000000000000000000000000000000000000000000000000081565b6106f3338383610977565b5050565b6106ff610761565b61070857600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161480156107db5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6107e457600080fd5b60843560a43560086020839003021c6107fe878783610977565b50505050505050565b60025481565b60015481565b61081b610761565b61082457600080fd5b478061082f57600080fd5b61083f338263ffffffff610a2b16565b60408051828152905133917f94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c919081900360200190a250565b610880610761565b61088957600080fd5b61089281610b10565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b826001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561093d57600080fd5b505af1158015610951573d6000803e3d6000fd5b505050506040513d602081101561096757600080fd5b505161097257600080fd5b505050565b6001541580156109875750600082115b61099057600080fd5b6109a0428263ffffffff610b7e16565b60025560018290556109e36001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684308563ffffffff610b9716565b604080518381526020810183905281516001600160a01b038616927ffdfdcf596161b0e81e3161597d46888dcc88bd83b22dcfb341c76377ca3bbc9e928290030190a2505050565b80471015610a80576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114610acb576040519150601f19603f3d011682016040523d82523d6000602084013e610ad0565b606091505b50509050806109725760405162461bcd60e51b815260040180806020018281038252603a815260200180610c2e603a913960400191505060405180910390fd5b6001600160a01b038116610b2357600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600082820183811015610b9057600080fd5b9392505050565b604080516323b872dd60e01b81526001600160a01b0385811660048301528481166024830152604482018490529151918616916323b872dd916064808201926020929091908290030181600087803b158015610bf257600080fd5b505af1158015610c06573d6000803e3d6000fd5b505050506040513d6020811015610c1c57600080fd5b5051610c2757600080fd5b5050505056fe416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564a2646970667358221220e710211ed28d0f81f72a9391226544e4d1605d91a9fdf6174bd9159fb5c17dca64736f6c63430006070033",
  "deployedSourceMap": "291:4466:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:8:16;2068:57;;2108:7;;2068:57;2143:19;:17;:19::i;:::-;2135:28;;12:1:-1;9;2:12;2135:28:16;2173:14;2198:6;-1:-1:-1;;;;;2198:13:16;;:15;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2198:15:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2198:15:16;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2198:15:16;;-1:-1:-1;2232:19:16;-1:-1:-1;;;;;2232:17:16;;;:19::i;:::-;2224:28;;12:1:-1;9;2:12;2224:28:16;2322:16;2343:6;-1:-1:-1;;;;;2343:19:16;2363:8;;2343:29;;;;;30:3:-1;22:6;14;1:33;2343:29:16;;45:16:-1;;;-1:-1;2343:29:16;;-1:-1:-1;2343:29:16;;-1:-1:-1;;2343:29:16;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;2321:51:16;;;2386:11;2382:408;;;2664:16;2659:3;;2639:42;2710:16;2659:3;2698:29;2621:120;12:1:-1;9;2:12;2030:766:16;291:4466:17;3717:547;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3717:547:17;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3717:547:17;;:::i;3414:175::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3414:175:17;;;:::i;:::-;;;;;;;;;;;;;;;;607:44;;5:9:-1;2:2;;;27:1;24;17:12;2:2;607:44:17;;;:::i;:::-;;;;-1:-1:-1;;;;;607:44:17;;;;;;;;;;;;;;1649:130;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1649:130:17;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1649:130:17;;;;;;;:::i;1348:137:21:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1348:137:21;;;:::i;660:77::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;660:77:21;;;:::i;980:90::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;980:90:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;2160:1195:17;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2160:1195:17;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;2160:1195:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;2160:1195:17;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2160:1195:17;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;2160:1195:17;;-1:-1:-1;2160:1195:17;-1:-1:-1;2160:1195:17;:::i;690:31::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;690:31:17;;;:::i;4649:105::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4649:105:17;;;:::i;658:26::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;658:26:17;;;:::i;4335:223::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4335:223:17;;;:::i;1656:107:21:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1656:107:21;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1656:107:21;-1:-1:-1;;;;;1656:107:21;;:::i;1170:46:16:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1170:46:16;;;:::i;1222:36::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1222:36:16;;;:::i;4649:105:17:-;4703:4;4740:7;:5;:7::i;:::-;-1:-1:-1;;;;;4726:21:17;:10;-1:-1:-1;;;;;4726:21:17;;4719:28;;4649:105;;:::o;685:610:26:-;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;1272:15:26;;;1245:42;1237:51;685:610;-1:-1:-1;;;;685:610:26:o;3717:547:17:-;864:9:21;:7;:9::i;:::-;856:18;;12:1:-1;9;2:12;856:18:21;3811:30:17::1;::::0;;-1:-1:-1;;;3811:30:17;;3835:4:::1;3811:30;::::0;::::1;::::0;;;3793:15:::1;::::0;-1:-1:-1;;;;;3811:5:17::1;:15;::::0;::::1;::::0;:30;;;;;::::1;::::0;;;;;;;;;:15;:30;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;3811:30:17;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3811:30:17;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;3811:30:17;;-1:-1:-1;3859:17:17;;::::1;;3851:26;;12:1:-1;9::::0;2:12:::1;3851:26:17;4141:17;:15;:17::i;:::-;4096:41;::::0;;-1:-1:-1;;;4096:41:17;;4131:4:::1;4096:41;::::0;::::1;::::0;;;-1:-1:-1;;;;;4096:13:17::1;:26;::::0;::::1;::::0;:41;;;;;::::1;::::0;;;;;;;;:26;:41;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;4096:41:17;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;4096:41:17;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;4096:41:17;4077:16;;::::1;:60;:81;;4069:90;;12:1:-1;9::::0;2:12:::1;4069:90:17;4169:38;-1:-1:-1::0;;;;;4169:5:17::1;:18;4188:10;4200:6:::0;4169:38:::1;:18;:38;:::i;:::-;4222:35;::::0;;;;;;;4238:10:::1;::::0;4222:35:::1;::::0;;;;;::::1;::::0;;::::1;884:1:21;3717:547:17::0;:::o;3414:175::-;3462:7;3505:15;3485:16;;:35;3481:74;;-1:-1:-1;3543:1:17;3536:8;;3481:74;-1:-1:-1;3571:11:17;;3414:175;:::o;607:44::-;;;:::o;1649:130::-;1727:45;1742:10;1754:6;1762:9;1727:14;:45::i;:::-;1649:130;;:::o;1348:137:21:-;864:9;:7;:9::i;:::-;856:18;;12:1:-1;9;2:12;856:18:21;1446:1:::1;1430:6:::0;;1409:40:::1;::::0;-1:-1:-1;;;;;1430:6:21;;::::1;::::0;1409:40:::1;::::0;1446:1;;1409:40:::1;1476:1;1459:19:::0;;-1:-1:-1;;;;;;1459:19:21::1;::::0;;1348:137::o;660:77::-;698:7;724:6;-1:-1:-1;;;;;724:6:21;660:77;:::o;980:90::-;1020:4;1057:6;-1:-1:-1;;;;;1057:6:21;1043:10;:20;;980:90::o;2160:1195:17:-;2376:5;-1:-1:-1;;;;;2350:32:17;:14;-1:-1:-1;;;;;2350:32:17;;:64;;;;-1:-1:-1;2386:10:17;-1:-1:-1;;;;;2408:5:17;2386:28;;2350:64;2342:73;;12:1:-1;9;2:12;2342:73:17;3193:4;3180:18;3235:4;3222:18;3280:1;3283:2;:16;;;3280:20;3269:31;3310:38;3325:5;3332:6;3269:31;3310:14;:38::i;:::-;2160:1195;;;;;;;:::o;690:31::-;;;;:::o;658:26::-;;;;:::o;4335:223::-;864:9:21;:7;:9::i;:::-;856:18;;12:1:-1;9;2:12;856:18:21;4412:21:17::1;4451:12:::0;4443:21:::1;;12:1:-1;9::::0;2:12:::1;4443:21:17;4474:29;:10;4495:7:::0;4474:29:::1;:20;:29;:::i;:::-;4518:33;::::0;;;;;;;4531:10:::1;::::0;4518:33:::1;::::0;;;;;::::1;::::0;;::::1;884:1:21;4335:223:17:o:0;1656:107:21:-;864:9;:7;:9::i;:::-;856:18;;12:1:-1;9;2:12;856:18:21;1728:28:::1;1747:8;1728:18;:28::i;:::-;1656:107:::0;:::o;1170:46:16:-;;;:::o;1222:36::-;;;:::o;433:123:25:-;523:5;-1:-1:-1;;;;;523:14:25;;538:2;542:5;523:25;;;;;;;;;;;;;-1:-1:-1;;;;;523:25:25;-1:-1:-1;;;;;523:25:25;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;523:25:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;523:25:25;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;523:25:25;515:34;;12:1:-1;9;2:12;515:34:25;433:123;;;:::o;1142:352:17:-;1245:11;;:16;:30;;;;;1274:1;1265:6;:10;1245:30;1237:39;;12:1:-1;9;2:12;1237:39:17;1305:30;:15;1325:9;1305:30;:19;:30;:::i;:::-;1286:16;:49;1345:11;:20;;;1375:54;-1:-1:-1;;;;;1375:5:17;:22;1398:7;1415:4;1359:6;1375:54;:22;:54;:::i;:::-;1444:43;;;;;;;;;;;;;;-1:-1:-1;;;;;1444:43:17;;;;;;;;;;;1142:352;;;:::o;2252:366:26:-;2366:6;2341:21;:31;;2333:73;;;;;-1:-1:-1;;;2333:73:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;2490:33;;2472:12;;-1:-1:-1;;;;;2490:14:26;;;2512:6;;2472:12;2490:33;2472:12;2490:33;2512:6;2490:14;:33;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;2471:52:26;;;2541:7;2533:78;;;;-1:-1:-1;;;2533:78:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1907:183:21;-1:-1:-1;;;;;1980:22:21;;1972:31;;12:1:-1;9;2:12;1972:31:21;2039:6;;;2018:38;;-1:-1:-1;;;;;2018:38:21;;;;2039:6;;;2018:38;;;2066:6;:17;;-1:-1:-1;;;;;;2066:17:21;-1:-1:-1;;;;;2066:17:21;;;;;;;;;;1907:183::o;1440:145:20:-;1498:7;1529:5;;;1552:6;;;;1544:15;;12:1:-1;9;2:12;1544:15:20;1577:1;1440:145;-1:-1:-1;;;1440:145:20:o;562:151:25:-;670:35;;;-1:-1:-1;;;670:35:25;;-1:-1:-1;;;;;670:35:25;;;;;;;;;;;;;;;;;;;;;;:18;;;;;;:35;;;;;;;;;;;;;;;-1:-1:-1;670:18:25;:35;;;2:2:-1;;;;27:1;24;17:12;2:2;670:35:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;670:35:25;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;670:35:25;662:44;;12:1:-1;9;2:12;662:44:25;562:151;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "constructor": {
        "params": {
          "_router": "Address of the StakingInterfaceRouter contract"
        }
      },
      "getLockedTokens()": {
        "notice": "Get locked tokens value"
      },
      "initialDeposit(uint256,uint256)": {
        "notice": "Initial tokens deposit",
        "params": {
          "_duration": "Duration of tokens locking",
          "_value": "Amount of token to deposit"
        }
      },
      "isFallbackAllowed()": {
        "notice": "Calling fallback function is allowed only for the owner"
      },
      "receiveApproval(address,uint256,address,bytes)": {
        "notice": "Implementation of the receiveApproval(address,uint256,address,bytes) method (see NuCypherToken contract). Initial tokens deposit(param _extraData) Amount of seconds during which tokens will be locked",
        "params": {
          "_from": "Sender",
          "_tokenContract": "Token contract address",
          "_value": "Amount of tokens to deposit"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.",
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "withdrawETH()": {
        "notice": "Withdraw available ETH to the owner"
      },
      "withdrawTokens(uint256)": {
        "notice": "Withdraw available amount of tokens to owner",
        "params": {
          "_value": "Amount of token to withdraw"
        }
      }
    },
    "notice": "Contract holds tokens for vesting. Also tokens can be used as a stake in the staking escrow contract"
  },
  "offset": [
    291,
    4757
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F4FFCB1 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE086E5EC GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x462 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xA030785A EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xBD4BD9CE EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xD2C46932 EQ PUSH2 0x3F0 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x3A6CE248 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x3A6CE248 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x301 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x315A095D EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x3317BBCC EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x36233C5F EQ PUSH2 0x276 JUMPI JUMPDEST CALLDATASIZE PUSH2 0xF2 JUMPI PUSH2 0x223 JUMP JUMPDEST PUSH2 0xFA PUSH2 0x477 JUMP JUMPDEST PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD4B83992 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x172 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x19E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x49B JUMP JUMPDEST PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x205 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 ISZERO PUSH2 0x21E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x4D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x223 PUSH2 0x6F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH2 0x752 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x772 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH2 0x807 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0x477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH2 0x80D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x223 PUSH2 0x813 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x878 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH2 0x895 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x4CF JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4DF PUSH2 0x761 JUMP JUMPDEST PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x566 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x595 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xBC5B6F3 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0x178B6DE6 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP4 DUP4 SUB ADD LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x670 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP5 PUSH4 0xFFFFFFFF PUSH2 0x8DD AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH1 0x2 SLOAD GT PUSH2 0x6BD JUMPI POP PUSH1 0x0 PUSH2 0x498 JUMP JUMPDEST POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x6F3 CALLER DUP4 DUP4 PUSH2 0x977 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6FF PUSH2 0x761 JUMP JUMPDEST PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x7DB JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ JUMPDEST PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0xA4 CALLDATALOAD PUSH1 0x8 PUSH1 0x20 DUP4 SWAP1 SUB MUL SHR PUSH2 0x7FE DUP8 DUP8 DUP4 PUSH2 0x977 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x81B PUSH2 0x761 JUMP JUMPDEST PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SELFBALANCE DUP1 PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x83F CALLER DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA2B AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x880 PUSH2 0x761 JUMP JUMPDEST PUSH2 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x892 DUP2 PUSH2 0xB10 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x93D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x951 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x967 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD ISZERO DUP1 ISZERO PUSH2 0x987 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x990 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A0 TIMESTAMP DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB7E AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 DUP3 SWAP1 SSTORE PUSH2 0x9E3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP5 ADDRESS DUP6 PUSH4 0xFFFFFFFF PUSH2 0xB97 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 PUSH32 0xFDFDCF596161B0E81E3161597D46888DCC88BD83B22DCFB341C76377CA3BBC9E SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xA80 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x972 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC2E PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP7 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xC27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH22 0x6E61626C6520746F2073656E642076616C75652C2072 PUSH6 0x63697069656E PUSH21 0x206D61792068617665207265766572746564A26469 PUSH17 0x667358221220E710211ED28D0F81F72A93 SWAP2 0x22 PUSH6 0x44E4D1605D91 0xA9 REVERT 0xF6 OR 0x4B 0xD9 ISZERO SWAP16 0xB5 0xC1 PUSH30 0xCA64736F6C63430006070033000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        291,
        4757
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "8": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "LT",
      "path": "17"
    },
    "9": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE8"
    },
    "12": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "13": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "16": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "SHR",
      "path": "17"
    },
    "19": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "20": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8F4FFCB1"
    },
    "25": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "GT",
      "path": "17"
    },
    "26": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8A"
    },
    "29": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "30": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "31": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xE086E5EC"
    },
    "36": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "GT",
      "path": "17"
    },
    "37": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "41": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "42": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xE086E5EC"
    },
    "47": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "EQ",
      "path": "17"
    },
    "48": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x405"
    },
    "51": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "52": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "53": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xF2FDE38B"
    },
    "58": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "EQ",
      "path": "17"
    },
    "59": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x41A"
    },
    "62": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "63": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "64": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xF887EA40"
    },
    "69": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "EQ",
      "path": "17"
    },
    "70": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x44D"
    },
    "73": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "74": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "75": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFC0C546A"
    },
    "80": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "EQ",
      "path": "17"
    },
    "81": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x462"
    },
    "84": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "85": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE8"
    },
    "88": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMP",
      "path": "17"
    },
    "89": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "90": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "91": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8F4FFCB1"
    },
    "96": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "EQ",
      "path": "17"
    },
    "97": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x32A"
    },
    "100": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "101": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "102": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xA030785A"
    },
    "107": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "EQ",
      "path": "17"
    },
    "108": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3C6"
    },
    "111": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "112": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "113": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xBD4BD9CE"
    },
    "118": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "EQ",
      "path": "17"
    },
    "119": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3DB"
    },
    "122": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "123": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "124": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xD2C46932"
    },
    "129": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "EQ",
      "path": "17"
    },
    "130": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3F0"
    },
    "133": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "134": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE8"
    },
    "137": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMP",
      "path": "17"
    },
    "138": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "139": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "140": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x3A6CE248"
    },
    "145": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "GT",
      "path": "17"
    },
    "146": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC6"
    },
    "149": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "150": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "151": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x3A6CE248"
    },
    "156": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "EQ",
      "path": "17"
    },
    "157": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A7"
    },
    "160": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "161": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "162": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x715018A6"
    },
    "167": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "EQ",
      "path": "17"
    },
    "168": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2D7"
    },
    "171": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "172": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "173": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8DA5CB5B"
    },
    "178": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "EQ",
      "path": "17"
    },
    "179": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2EC"
    },
    "182": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "183": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "184": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8F32D59B"
    },
    "189": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "EQ",
      "path": "17"
    },
    "190": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x301"
    },
    "193": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "194": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE8"
    },
    "197": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMP",
      "path": "17"
    },
    "198": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "199": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "200": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x315A095D"
    },
    "205": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "EQ",
      "path": "17"
    },
    "206": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x225"
    },
    "209": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "210": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "211": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x3317BBCC"
    },
    "216": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "EQ",
      "path": "17"
    },
    "217": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x24F"
    },
    "220": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "221": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "DUP1",
      "path": "17"
    },
    "222": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x36233C5F"
    },
    "227": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "EQ",
      "path": "17"
    },
    "228": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x276"
    },
    "231": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "232": {
      "fn": null,
      "offset": [
        291,
        4757
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "233": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2072,
        2080
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "234": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2068,
        2125
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF2"
    },
    "237": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2068,
        2125
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "238": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2108,
        2115
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 0,
      "value": "0x223"
    },
    "241": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2108,
        2115
      ],
      "op": "JUMP",
      "path": "16"
    },
    "242": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2068,
        2125
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "243": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2143,
        2162
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 1,
      "value": "0xFA"
    },
    "246": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2143,
        2160
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x477"
    },
    "249": {
      "fn": "AbstractStakingContract.<fallback>",
      "jump": "i",
      "offset": [
        2143,
        2162
      ],
      "op": "JUMP",
      "path": "16"
    },
    "250": {
      "branch": 45,
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2143,
        2162
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "251": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2135,
        2163
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x103"
    },
    "254": {
      "branch": 45,
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2135,
        2163
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "257": {
      "op": "DUP1"
    },
    "258": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2135,
        2163
      ],
      "op": "REVERT",
      "path": "16"
    },
    "259": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2135,
        2163
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "260": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2173,
        2187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "262": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2204
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "301": {
      "op": "SHL"
    },
    "302": {
      "op": "SUB"
    },
    "303": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2211
      ],
      "op": "AND",
      "path": "16"
    },
    "304": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2211
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD4B83992"
    },
    "309": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "311": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "312": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "DUP2",
      "path": "16"
    },
    "313": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "318": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "AND",
      "path": "16"
    },
    "319": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "321": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "SHL",
      "path": "16"
    },
    "322": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "DUP2",
      "path": "16"
    },
    "323": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "324": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "326": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "ADD",
      "path": "16"
    },
    "327": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "329": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "331": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "332": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "DUP1",
      "path": "16"
    },
    "333": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "DUP4",
      "path": "16"
    },
    "334": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "SUB",
      "path": "16"
    },
    "335": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "DUP2",
      "path": "16"
    },
    "336": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "DUP7",
      "path": "16"
    },
    "337": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "DUP1",
      "path": "16"
    },
    "338": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "339": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "340": {
      "op": "DUP1"
    },
    "341": {
      "op": "ISZERO"
    },
    "342": {
      "op": "PUSH2",
      "value": "0x15E"
    },
    "345": {
      "op": "JUMPI"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "348": {
      "op": "DUP1"
    },
    "349": {
      "op": "REVERT"
    },
    "350": {
      "op": "JUMPDEST"
    },
    "351": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "POP",
      "path": "16"
    },
    "352": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "GAS",
      "path": "16"
    },
    "353": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "354": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "355": {
      "op": "DUP1"
    },
    "356": {
      "op": "ISZERO"
    },
    "357": {
      "op": "PUSH2",
      "value": "0x172"
    },
    "360": {
      "op": "JUMPI"
    },
    "361": {
      "op": "RETURNDATASIZE"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "364": {
      "op": "DUP1"
    },
    "365": {
      "op": "RETURNDATACOPY"
    },
    "366": {
      "op": "RETURNDATASIZE"
    },
    "367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "369": {
      "op": "REVERT"
    },
    "370": {
      "op": "JUMPDEST"
    },
    "371": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "POP",
      "path": "16"
    },
    "372": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "POP",
      "path": "16"
    },
    "373": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "POP",
      "path": "16"
    },
    "374": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "POP",
      "path": "16"
    },
    "375": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "377": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "378": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "381": {
      "op": "DUP2"
    },
    "382": {
      "op": "LT"
    },
    "383": {
      "op": "ISZERO"
    },
    "384": {
      "op": "PUSH2",
      "value": "0x188"
    },
    "387": {
      "op": "JUMPI"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "390": {
      "op": "DUP1"
    },
    "391": {
      "op": "REVERT"
    },
    "392": {
      "op": "JUMPDEST"
    },
    "393": {
      "op": "POP"
    },
    "394": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "395": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2198,
        2213
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "396": {
      "op": "POP"
    },
    "397": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2232,
        2251
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 2,
      "value": "0x19E"
    },
    "400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "406": {
      "op": "SHL"
    },
    "407": {
      "op": "SUB"
    },
    "408": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2232,
        2249
      ],
      "op": "DUP3",
      "path": "16"
    },
    "409": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2232,
        2249
      ],
      "op": "AND",
      "path": "16"
    },
    "410": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2232,
        2249
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x49B"
    },
    "413": {
      "fn": "AbstractStakingContract.<fallback>",
      "jump": "i",
      "offset": [
        2232,
        2251
      ],
      "op": "JUMP",
      "path": "16"
    },
    "414": {
      "branch": 46,
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2232,
        2251
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "415": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2224,
        2252
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A7"
    },
    "418": {
      "branch": 46,
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2224,
        2252
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "421": {
      "op": "DUP1"
    },
    "422": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2224,
        2252
      ],
      "op": "REVERT",
      "path": "16"
    },
    "423": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2224,
        2252
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "424": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2322,
        2338
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "426": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2349
      ],
      "op": "DUP2",
      "path": "16"
    },
    "427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "433": {
      "op": "SHL"
    },
    "434": {
      "op": "SUB"
    },
    "435": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2362
      ],
      "op": "AND",
      "path": "16"
    },
    "436": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2363,
        2371
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "438": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2363,
        2371
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "439": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "441": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "442": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "DUP1",
      "path": "16"
    },
    "443": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "DUP4",
      "path": "16"
    },
    "444": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "DUP4",
      "path": "16"
    },
    "445": {
      "op": "DUP1"
    },
    "446": {
      "op": "DUP3"
    },
    "447": {
      "op": "DUP5"
    },
    "448": {
      "op": "CALLDATACOPY"
    },
    "449": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "451": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "452": {
      "op": "SWAP3"
    },
    "453": {
      "op": "ADD"
    },
    "454": {
      "op": "SWAP5"
    },
    "455": {
      "op": "POP"
    },
    "456": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "458": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "459": {
      "op": "POP"
    },
    "460": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "461": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "462": {
      "op": "POP"
    },
    "463": {
      "op": "POP"
    },
    "464": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "DUP1",
      "path": "16"
    },
    "465": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "DUP4",
      "path": "16"
    },
    "466": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "SUB",
      "path": "16"
    },
    "467": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "DUP2",
      "path": "16"
    },
    "468": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "DUP6",
      "path": "16"
    },
    "469": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "GAS",
      "path": "16"
    },
    "470": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "DELEGATECALL",
      "path": "16"
    },
    "471": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "472": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "POP",
      "path": "16"
    },
    "473": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "POP",
      "path": "16"
    },
    "474": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2343,
        2372
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "475": {
      "op": "DUP1"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "478": {
      "op": "DUP2"
    },
    "479": {
      "op": "EQ"
    },
    "480": {
      "op": "PUSH2",
      "value": "0x205"
    },
    "483": {
      "op": "JUMPI"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "486": {
      "op": "MLOAD"
    },
    "487": {
      "op": "SWAP2"
    },
    "488": {
      "op": "POP"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "491": {
      "op": "NOT"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "494": {
      "op": "RETURNDATASIZE"
    },
    "495": {
      "op": "ADD"
    },
    "496": {
      "op": "AND"
    },
    "497": {
      "op": "DUP3"
    },
    "498": {
      "op": "ADD"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "501": {
      "op": "MSTORE"
    },
    "502": {
      "op": "RETURNDATASIZE"
    },
    "503": {
      "op": "DUP3"
    },
    "504": {
      "op": "MSTORE"
    },
    "505": {
      "op": "RETURNDATASIZE"
    },
    "506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "510": {
      "op": "DUP5"
    },
    "511": {
      "op": "ADD"
    },
    "512": {
      "op": "RETURNDATACOPY"
    },
    "513": {
      "op": "PUSH2",
      "value": "0x20A"
    },
    "516": {
      "op": "JUMP"
    },
    "517": {
      "op": "JUMPDEST"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "520": {
      "op": "SWAP2"
    },
    "521": {
      "op": "POP"
    },
    "522": {
      "op": "JUMPDEST"
    },
    "523": {
      "op": "POP"
    },
    "524": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2321,
        2372
      ],
      "op": "POP",
      "path": "16"
    },
    "525": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2321,
        2372
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "526": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2321,
        2372
      ],
      "op": "POP",
      "path": "16"
    },
    "527": {
      "branch": 47,
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2386,
        2397
      ],
      "op": "DUP1",
      "path": "16"
    },
    "528": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2382,
        2790
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "529": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2382,
        2790
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21E"
    },
    "532": {
      "branch": 47,
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2382,
        2790
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "533": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2664,
        2680
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "534": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2659,
        2662
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "536": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2659,
        2662
      ],
      "op": "DUP1",
      "path": "16"
    },
    "537": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2639,
        2681
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "538": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2710,
        2726
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "539": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2659,
        2662
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "541": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2698,
        2727
      ],
      "op": "RETURN",
      "path": "16"
    },
    "542": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2621,
        2741
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "545": {
      "op": "DUP1"
    },
    "546": {
      "op": "REVERT"
    },
    "547": {
      "fn": "AbstractStakingContract.<fallback>",
      "offset": [
        2030,
        2796
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "548": {
      "offset": [
        291,
        4757
      ],
      "op": "STOP",
      "path": "17"
    },
    "549": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3717,
        4264
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "550": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3717,
        4264
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "551": {
      "op": "DUP1"
    },
    "552": {
      "op": "ISZERO"
    },
    "553": {
      "op": "PUSH2",
      "value": "0x231"
    },
    "556": {
      "op": "JUMPI"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "559": {
      "op": "DUP1"
    },
    "560": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3717,
        4264
      ],
      "op": "REVERT",
      "path": "17"
    },
    "561": {
      "op": "JUMPDEST"
    },
    "562": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3717,
        4264
      ],
      "op": "POP",
      "path": "17"
    },
    "563": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3717,
        4264
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x223"
    },
    "566": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3717,
        4264
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "568": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3717,
        4264
      ],
      "op": "DUP1",
      "path": "17"
    },
    "569": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3717,
        4264
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "570": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3717,
        4264
      ],
      "op": "SUB",
      "path": "17"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "573": {
      "op": "DUP2"
    },
    "574": {
      "op": "LT"
    },
    "575": {
      "op": "ISZERO"
    },
    "576": {
      "op": "PUSH2",
      "value": "0x248"
    },
    "579": {
      "op": "JUMPI"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "582": {
      "op": "DUP1"
    },
    "583": {
      "op": "REVERT"
    },
    "584": {
      "op": "JUMPDEST"
    },
    "585": {
      "op": "POP"
    },
    "586": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3717,
        4264
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "587": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3717,
        4264
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4D7"
    },
    "590": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "jump": "i",
      "offset": [
        3717,
        4264
      ],
      "op": "JUMP",
      "path": "17"
    },
    "591": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "592": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "593": {
      "op": "DUP1"
    },
    "594": {
      "op": "ISZERO"
    },
    "595": {
      "op": "PUSH2",
      "value": "0x25B"
    },
    "598": {
      "op": "JUMPI"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "601": {
      "op": "DUP1"
    },
    "602": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "REVERT",
      "path": "17"
    },
    "603": {
      "op": "JUMPDEST"
    },
    "604": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "POP",
      "path": "17"
    },
    "605": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x264"
    },
    "608": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6AA"
    },
    "611": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "jump": "i",
      "offset": [
        3414,
        3589
      ],
      "op": "JUMP",
      "path": "17"
    },
    "612": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "613": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "615": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "DUP1",
      "path": "17"
    },
    "616": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "617": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "618": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "DUP3",
      "path": "17"
    },
    "619": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "620": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "621": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "622": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "DUP2",
      "path": "17"
    },
    "623": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "624": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "SUB",
      "path": "17"
    },
    "625": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "627": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "ADD",
      "path": "17"
    },
    "628": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "629": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "RETURN",
      "path": "17"
    },
    "630": {
      "offset": [
        607,
        651
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "631": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "632": {
      "op": "DUP1"
    },
    "633": {
      "op": "ISZERO"
    },
    "634": {
      "op": "PUSH2",
      "value": "0x282"
    },
    "637": {
      "op": "JUMPI"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "640": {
      "op": "DUP1"
    },
    "641": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "REVERT",
      "path": "17"
    },
    "642": {
      "op": "JUMPDEST"
    },
    "643": {
      "offset": [
        607,
        651
      ],
      "op": "POP",
      "path": "17"
    },
    "644": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x28B"
    },
    "647": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6C4"
    },
    "650": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "jump": "i",
      "offset": [
        607,
        651
      ],
      "op": "JUMP",
      "path": "17"
    },
    "651": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "652": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "654": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "DUP1",
      "path": "17"
    },
    "655": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "662": {
      "op": "SHL"
    },
    "663": {
      "op": "SUB"
    },
    "664": {
      "offset": [
        607,
        651
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "665": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "666": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "AND",
      "path": "17"
    },
    "667": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "DUP3",
      "path": "17"
    },
    "668": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "669": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "670": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "671": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "DUP2",
      "path": "17"
    },
    "672": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "673": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "SUB",
      "path": "17"
    },
    "674": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "676": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "ADD",
      "path": "17"
    },
    "677": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "678": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "RETURN",
      "path": "17"
    },
    "679": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "680": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "681": {
      "op": "DUP1"
    },
    "682": {
      "op": "ISZERO"
    },
    "683": {
      "op": "PUSH2",
      "value": "0x2B3"
    },
    "686": {
      "op": "JUMPI"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "689": {
      "op": "DUP1"
    },
    "690": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "REVERT",
      "path": "17"
    },
    "691": {
      "op": "JUMPDEST"
    },
    "692": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "POP",
      "path": "17"
    },
    "693": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x223"
    },
    "696": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "698": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "DUP1",
      "path": "17"
    },
    "699": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "700": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "SUB",
      "path": "17"
    },
    "701": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "703": {
      "op": "DUP2"
    },
    "704": {
      "op": "LT"
    },
    "705": {
      "op": "ISZERO"
    },
    "706": {
      "op": "PUSH2",
      "value": "0x2CA"
    },
    "709": {
      "op": "JUMPI"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "712": {
      "op": "DUP1"
    },
    "713": {
      "op": "REVERT"
    },
    "714": {
      "op": "JUMPDEST"
    },
    "715": {
      "op": "POP"
    },
    "716": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "DUP1",
      "path": "17"
    },
    "717": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "718": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "719": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "721": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "ADD",
      "path": "17"
    },
    "722": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "723": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6E8"
    },
    "726": {
      "fn": "PreallocationEscrow.initialDeposit",
      "jump": "i",
      "offset": [
        1649,
        1779
      ],
      "op": "JUMP",
      "path": "17"
    },
    "727": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "728": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "729": {
      "op": "DUP1"
    },
    "730": {
      "op": "ISZERO"
    },
    "731": {
      "op": "PUSH2",
      "value": "0x2E3"
    },
    "734": {
      "op": "JUMPI"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "737": {
      "op": "DUP1"
    },
    "738": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "REVERT",
      "path": "21"
    },
    "739": {
      "op": "JUMPDEST"
    },
    "740": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "POP",
      "path": "21"
    },
    "741": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x223"
    },
    "744": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x6F7"
    },
    "747": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1348,
        1485
      ],
      "op": "JUMP",
      "path": "21"
    },
    "748": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "749": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "750": {
      "op": "DUP1"
    },
    "751": {
      "op": "ISZERO"
    },
    "752": {
      "op": "PUSH2",
      "value": "0x2F8"
    },
    "755": {
      "op": "JUMPI"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "758": {
      "op": "DUP1"
    },
    "759": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "REVERT",
      "path": "21"
    },
    "760": {
      "op": "JUMPDEST"
    },
    "761": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "POP",
      "path": "21"
    },
    "762": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x28B"
    },
    "765": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x752"
    },
    "768": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        660,
        737
      ],
      "op": "JUMP",
      "path": "21"
    },
    "769": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "770": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "771": {
      "op": "DUP1"
    },
    "772": {
      "op": "ISZERO"
    },
    "773": {
      "op": "PUSH2",
      "value": "0x30D"
    },
    "776": {
      "op": "JUMPI"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "779": {
      "op": "DUP1"
    },
    "780": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "REVERT",
      "path": "21"
    },
    "781": {
      "op": "JUMPDEST"
    },
    "782": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "POP",
      "path": "21"
    },
    "783": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x316"
    },
    "786": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x761"
    },
    "789": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        980,
        1070
      ],
      "op": "JUMP",
      "path": "21"
    },
    "790": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "791": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "793": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "DUP1",
      "path": "21"
    },
    "794": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "795": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "796": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "797": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "798": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "DUP3",
      "path": "21"
    },
    "799": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "800": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "801": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "802": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "DUP2",
      "path": "21"
    },
    "803": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "804": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SUB",
      "path": "21"
    },
    "805": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "807": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "ADD",
      "path": "21"
    },
    "808": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "809": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "RETURN",
      "path": "21"
    },
    "810": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "811": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "812": {
      "op": "DUP1"
    },
    "813": {
      "op": "ISZERO"
    },
    "814": {
      "op": "PUSH2",
      "value": "0x336"
    },
    "817": {
      "op": "JUMPI"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "820": {
      "op": "DUP1"
    },
    "821": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "REVERT",
      "path": "17"
    },
    "822": {
      "op": "JUMPDEST"
    },
    "823": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "POP",
      "path": "17"
    },
    "824": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x223"
    },
    "827": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "829": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "DUP1",
      "path": "17"
    },
    "830": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "831": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "SUB",
      "path": "17"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "834": {
      "op": "DUP2"
    },
    "835": {
      "op": "LT"
    },
    "836": {
      "op": "ISZERO"
    },
    "837": {
      "op": "PUSH2",
      "value": "0x34D"
    },
    "840": {
      "op": "JUMPI"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "843": {
      "op": "DUP1"
    },
    "844": {
      "op": "REVERT"
    },
    "845": {
      "op": "JUMPDEST"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "852": {
      "op": "SHL"
    },
    "853": {
      "op": "SUB"
    },
    "854": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "DUP3",
      "path": "17"
    },
    "855": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "856": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "DUP2",
      "path": "17"
    },
    "857": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "AND",
      "path": "17"
    },
    "858": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "859": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "861": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "DUP2",
      "path": "17"
    },
    "862": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "ADD",
      "path": "17"
    },
    "863": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "864": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "865": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "867": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "DUP3",
      "path": "17"
    },
    "868": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "ADD",
      "path": "17"
    },
    "869": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "870": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "871": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "872": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "AND",
      "path": "17"
    },
    "873": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "874": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "DUP2",
      "path": "17"
    },
    "875": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "ADD",
      "path": "17"
    },
    "876": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "877": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "879": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "DUP2",
      "path": "17"
    },
    "880": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "ADD",
      "path": "17"
    },
    "881": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "883": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "DUP3",
      "path": "17"
    },
    "884": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "ADD",
      "path": "17"
    },
    "885": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "886": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "892": {
      "op": "DUP2"
    },
    "893": {
      "op": "GT"
    },
    "894": {
      "op": "ISZERO"
    },
    "895": {
      "op": "PUSH2",
      "value": "0x387"
    },
    "898": {
      "op": "JUMPI"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "901": {
      "op": "DUP1"
    },
    "902": {
      "op": "REVERT"
    },
    "903": {
      "op": "JUMPDEST"
    },
    "904": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "DUP3",
      "path": "17"
    },
    "905": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "ADD",
      "path": "17"
    },
    "906": {
      "op": "DUP4"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "909": {
      "op": "DUP3"
    },
    "910": {
      "op": "ADD"
    },
    "911": {
      "op": "GT"
    },
    "912": {
      "op": "ISZERO"
    },
    "913": {
      "op": "PUSH2",
      "value": "0x399"
    },
    "916": {
      "op": "JUMPI"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "919": {
      "op": "DUP1"
    },
    "920": {
      "op": "REVERT"
    },
    "921": {
      "op": "JUMPDEST"
    },
    "922": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "DUP1",
      "path": "17"
    },
    "923": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "924": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "925": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "927": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "ADD",
      "path": "17"
    },
    "928": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "929": {
      "op": "DUP5"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "932": {
      "op": "DUP4"
    },
    "933": {
      "op": "MUL"
    },
    "934": {
      "op": "DUP5"
    },
    "935": {
      "op": "ADD"
    },
    "936": {
      "op": "GT"
    },
    "937": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "943": {
      "op": "DUP4"
    },
    "944": {
      "op": "GT"
    },
    "945": {
      "op": "OR"
    },
    "946": {
      "op": "ISZERO"
    },
    "947": {
      "op": "PUSH2",
      "value": "0x3BB"
    },
    "950": {
      "op": "JUMPI"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "953": {
      "op": "DUP1"
    },
    "954": {
      "op": "REVERT"
    },
    "955": {
      "op": "JUMPDEST"
    },
    "956": {
      "op": "POP"
    },
    "957": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "958": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "959": {
      "op": "POP"
    },
    "960": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "961": {
      "op": "POP"
    },
    "962": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x772"
    },
    "965": {
      "fn": "PreallocationEscrow.receiveApproval",
      "jump": "i",
      "offset": [
        2160,
        3355
      ],
      "op": "JUMP",
      "path": "17"
    },
    "966": {
      "offset": [
        690,
        721
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "967": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        690,
        721
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "968": {
      "op": "DUP1"
    },
    "969": {
      "op": "ISZERO"
    },
    "970": {
      "op": "PUSH2",
      "value": "0x3D2"
    },
    "973": {
      "op": "JUMPI"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "976": {
      "op": "DUP1"
    },
    "977": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        690,
        721
      ],
      "op": "REVERT",
      "path": "17"
    },
    "978": {
      "op": "JUMPDEST"
    },
    "979": {
      "offset": [
        690,
        721
      ],
      "op": "POP",
      "path": "17"
    },
    "980": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        690,
        721
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x264"
    },
    "983": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        690,
        721
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x807"
    },
    "986": {
      "fn": "PreallocationEscrow.receiveApproval",
      "jump": "i",
      "offset": [
        690,
        721
      ],
      "op": "JUMP",
      "path": "17"
    },
    "987": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4649,
        4754
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "988": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4649,
        4754
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "989": {
      "op": "DUP1"
    },
    "990": {
      "op": "ISZERO"
    },
    "991": {
      "op": "PUSH2",
      "value": "0x3E7"
    },
    "994": {
      "op": "JUMPI"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "997": {
      "op": "DUP1"
    },
    "998": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4649,
        4754
      ],
      "op": "REVERT",
      "path": "17"
    },
    "999": {
      "op": "JUMPDEST"
    },
    "1000": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4649,
        4754
      ],
      "op": "POP",
      "path": "17"
    },
    "1001": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4649,
        4754
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x316"
    },
    "1004": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4649,
        4754
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x477"
    },
    "1007": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "jump": "i",
      "offset": [
        4649,
        4754
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1008": {
      "offset": [
        658,
        684
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1009": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        658,
        684
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "1010": {
      "op": "DUP1"
    },
    "1011": {
      "op": "ISZERO"
    },
    "1012": {
      "op": "PUSH2",
      "value": "0x3FC"
    },
    "1015": {
      "op": "JUMPI"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1018": {
      "op": "DUP1"
    },
    "1019": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        658,
        684
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1020": {
      "op": "JUMPDEST"
    },
    "1021": {
      "offset": [
        658,
        684
      ],
      "op": "POP",
      "path": "17"
    },
    "1022": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x264"
    },
    "1025": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x80D"
    },
    "1028": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "jump": "i",
      "offset": [
        658,
        684
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1029": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4335,
        4558
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1030": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4335,
        4558
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "1031": {
      "op": "DUP1"
    },
    "1032": {
      "op": "ISZERO"
    },
    "1033": {
      "op": "PUSH2",
      "value": "0x411"
    },
    "1036": {
      "op": "JUMPI"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1039": {
      "op": "DUP1"
    },
    "1040": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4335,
        4558
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1041": {
      "op": "JUMPDEST"
    },
    "1042": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4335,
        4558
      ],
      "op": "POP",
      "path": "17"
    },
    "1043": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4335,
        4558
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x223"
    },
    "1046": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4335,
        4558
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x813"
    },
    "1049": {
      "fn": "PreallocationEscrow.withdrawETH",
      "jump": "i",
      "offset": [
        4335,
        4558
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1050": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1051": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1052": {
      "op": "DUP1"
    },
    "1053": {
      "op": "ISZERO"
    },
    "1054": {
      "op": "PUSH2",
      "value": "0x426"
    },
    "1057": {
      "op": "JUMPI"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1060": {
      "op": "DUP1"
    },
    "1061": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1062": {
      "op": "JUMPDEST"
    },
    "1063": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "POP",
      "path": "21"
    },
    "1064": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x223"
    },
    "1067": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1069": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1070": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1071": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "SUB",
      "path": "21"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1074": {
      "op": "DUP2"
    },
    "1075": {
      "op": "LT"
    },
    "1076": {
      "op": "ISZERO"
    },
    "1077": {
      "op": "PUSH2",
      "value": "0x43D"
    },
    "1080": {
      "op": "JUMPI"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1083": {
      "op": "DUP1"
    },
    "1084": {
      "op": "REVERT"
    },
    "1085": {
      "op": "JUMPDEST"
    },
    "1086": {
      "op": "POP"
    },
    "1087": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "CALLDATALOAD",
      "path": "21"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1094": {
      "op": "SHL"
    },
    "1095": {
      "op": "SUB"
    },
    "1096": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "AND",
      "path": "21"
    },
    "1097": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x878"
    },
    "1100": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1656,
        1763
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1101": {
      "offset": [
        1170,
        1216
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1102": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1170,
        1216
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1103": {
      "op": "DUP1"
    },
    "1104": {
      "op": "ISZERO"
    },
    "1105": {
      "op": "PUSH2",
      "value": "0x459"
    },
    "1108": {
      "op": "JUMPI"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1111": {
      "op": "DUP1"
    },
    "1112": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.transferOwnership",
      "offset": [
        1170,
        1216
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1113": {
      "op": "JUMPDEST"
    },
    "1114": {
      "offset": [
        1170,
        1216
      ],
      "op": "POP",
      "path": "16"
    },
    "1115": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1170,
        1216
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x28B"
    },
    "1118": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1170,
        1216
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x895"
    },
    "1121": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1170,
        1216
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1122": {
      "offset": [
        1222,
        1258
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1123": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1222,
        1258
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1124": {
      "op": "DUP1"
    },
    "1125": {
      "op": "ISZERO"
    },
    "1126": {
      "op": "PUSH2",
      "value": "0x46E"
    },
    "1129": {
      "op": "JUMPI"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1132": {
      "op": "DUP1"
    },
    "1133": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.transferOwnership",
      "offset": [
        1222,
        1258
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1134": {
      "op": "JUMPDEST"
    },
    "1135": {
      "offset": [
        1222,
        1258
      ],
      "op": "POP",
      "path": "16"
    },
    "1136": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1222,
        1258
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x28B"
    },
    "1139": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1222,
        1258
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8B9"
    },
    "1142": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1222,
        1258
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1143": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4649,
        4754
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1144": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4703,
        4707
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1146": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4740,
        4747
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 3,
      "value": "0x481"
    },
    "1149": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4740,
        4745
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x752"
    },
    "1152": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "jump": "i",
      "offset": [
        4740,
        4747
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1153": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4740,
        4747
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1160": {
      "op": "SHL"
    },
    "1161": {
      "op": "SUB"
    },
    "1162": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4726,
        4747
      ],
      "op": "AND",
      "path": "17"
    },
    "1163": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4726,
        4736
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1170": {
      "op": "SHL"
    },
    "1171": {
      "op": "SUB"
    },
    "1172": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4726,
        4747
      ],
      "op": "AND",
      "path": "17"
    },
    "1173": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4726,
        4747
      ],
      "op": "EQ",
      "path": "17"
    },
    "1174": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4719,
        4747
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1175": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4719,
        4747
      ],
      "op": "POP",
      "path": "17"
    },
    "1176": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4649,
        4754
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1177": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "offset": [
        4649,
        4754
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1178": {
      "fn": "PreallocationEscrow.isFallbackAllowed",
      "jump": "o",
      "offset": [
        4649,
        4754
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1179": {
      "fn": "Address.isContract",
      "offset": [
        685,
        1295
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1180": {
      "fn": "Address.isContract",
      "offset": [
        745,
        749
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1182": {
      "fn": "Address.isContract",
      "offset": [
        1206,
        1226
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1183": {
      "fn": "Address.isContract",
      "offset": [
        1206,
        1226
      ],
      "op": "EXTCODEHASH",
      "path": "26"
    },
    "1184": {
      "fn": "Address.isContract",
      "offset": [
        1051,
        1117
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "1217": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "DUP2",
      "path": "26",
      "statement": 4
    },
    "1218": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1219": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "EQ",
      "path": "26"
    },
    "1220": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1221": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "1222": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1223": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1287
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4CF"
    },
    "1226": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1287
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "1227": {
      "op": "POP"
    },
    "1228": {
      "fn": "Address.isContract",
      "offset": [
        1272,
        1287
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1229": {
      "fn": "Address.isContract",
      "offset": [
        1272,
        1287
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "1230": {
      "fn": "Address.isContract",
      "offset": [
        1272,
        1287
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "1231": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1287
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1232": {
      "fn": "Address.isContract",
      "offset": [
        1237,
        1288
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "1233": {
      "fn": "Address.isContract",
      "offset": [
        685,
        1295
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "1234": {
      "op": "POP"
    },
    "1235": {
      "op": "POP"
    },
    "1236": {
      "op": "POP"
    },
    "1237": {
      "op": "POP"
    },
    "1238": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        685,
        1295
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1239": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3717,
        4264
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1240": {
      "offset": [
        864,
        873
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4DF"
    },
    "1243": {
      "offset": [
        864,
        871
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x761"
    },
    "1246": {
      "jump": "i",
      "offset": [
        864,
        873
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1247": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        864,
        873
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1248": {
      "offset": [
        856,
        874
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4E8"
    },
    "1251": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1254": {
      "op": "DUP1"
    },
    "1255": {
      "op": "REVERT"
    },
    "1256": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1257": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1259": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1260": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1261": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1268": {
      "op": "SHL"
    },
    "1269": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1270": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1271": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3835,
        3839
      ],
      "op": "ADDRESS",
      "path": "17"
    },
    "1272": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1274": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1275": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "ADD",
      "path": "17"
    },
    "1276": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1277": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1278": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1279": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3793,
        3808
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1281": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3793,
        3808
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1288": {
      "op": "SHL"
    },
    "1289": {
      "op": "SUB"
    },
    "1290": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3816
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "1323": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3826
      ],
      "op": "AND",
      "path": "17"
    },
    "1324": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3826
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1325": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3826
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x70A08231"
    },
    "1330": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3826
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1331": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x24"
    },
    "1333": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1334": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1335": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "ADD",
      "path": "17"
    },
    "1336": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1337": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1339": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1340": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1341": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1342": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1343": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1344": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1345": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "SUB",
      "path": "17"
    },
    "1346": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "ADD",
      "path": "17"
    },
    "1347": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1348": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3826
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1349": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1350": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "1351": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1352": {
      "op": "DUP1"
    },
    "1353": {
      "op": "ISZERO"
    },
    "1354": {
      "op": "PUSH2",
      "value": "0x552"
    },
    "1357": {
      "op": "JUMPI"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1360": {
      "op": "DUP1"
    },
    "1361": {
      "op": "REVERT"
    },
    "1362": {
      "op": "JUMPDEST"
    },
    "1363": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "POP",
      "path": "17"
    },
    "1364": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "GAS",
      "path": "17"
    },
    "1365": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "1366": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1367": {
      "op": "DUP1"
    },
    "1368": {
      "op": "ISZERO"
    },
    "1369": {
      "op": "PUSH2",
      "value": "0x566"
    },
    "1372": {
      "op": "JUMPI"
    },
    "1373": {
      "op": "RETURNDATASIZE"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1376": {
      "op": "DUP1"
    },
    "1377": {
      "op": "RETURNDATACOPY"
    },
    "1378": {
      "op": "RETURNDATASIZE"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1381": {
      "op": "REVERT"
    },
    "1382": {
      "op": "JUMPDEST"
    },
    "1383": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "POP",
      "path": "17"
    },
    "1384": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "POP",
      "path": "17"
    },
    "1385": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "POP",
      "path": "17"
    },
    "1386": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "POP",
      "path": "17"
    },
    "1387": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1389": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1390": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1393": {
      "op": "DUP2"
    },
    "1394": {
      "op": "LT"
    },
    "1395": {
      "op": "ISZERO"
    },
    "1396": {
      "op": "PUSH2",
      "value": "0x57C"
    },
    "1399": {
      "op": "JUMPI"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1402": {
      "op": "DUP1"
    },
    "1403": {
      "op": "REVERT"
    },
    "1404": {
      "op": "JUMPDEST"
    },
    "1405": {
      "op": "POP"
    },
    "1406": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1407": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3811,
        3841
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1408": {
      "op": "POP"
    },
    "1409": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3859,
        3876
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 5
    },
    "1410": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3859,
        3876
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1411": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3859,
        3876
      ],
      "op": "LT",
      "path": "17"
    },
    "1412": {
      "branch": 37,
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3859,
        3876
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1413": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3851,
        3877
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x58D"
    },
    "1416": {
      "branch": 37,
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3851,
        3877
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1419": {
      "op": "DUP1"
    },
    "1420": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3851,
        3877
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1421": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3851,
        3877
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1422": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4141,
        4158
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 6,
      "value": "0x595"
    },
    "1425": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4141,
        4156
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6AA"
    },
    "1428": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "jump": "i",
      "offset": [
        4141,
        4158
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1429": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4141,
        4158
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1430": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1432": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1433": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1434": {
      "op": "PUSH4",
      "value": "0xBC5B6F3"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1441": {
      "op": "SHL"
    },
    "1442": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1443": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1444": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4131,
        4135
      ],
      "op": "ADDRESS",
      "path": "17"
    },
    "1445": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1447": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1448": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "ADD",
      "path": "17"
    },
    "1449": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1450": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1451": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1458": {
      "op": "SHL"
    },
    "1459": {
      "op": "SUB"
    },
    "1460": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4109
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "1493": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4122
      ],
      "op": "AND",
      "path": "17"
    },
    "1494": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4122
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1495": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4122
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x178B6DE6"
    },
    "1500": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4122
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1501": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x24"
    },
    "1503": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1504": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1505": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "ADD",
      "path": "17"
    },
    "1506": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1507": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1509": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1510": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1511": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1512": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1513": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1514": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "SUB",
      "path": "17"
    },
    "1515": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "ADD",
      "path": "17"
    },
    "1516": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1517": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4122
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1518": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1519": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "1520": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1521": {
      "op": "DUP1"
    },
    "1522": {
      "op": "ISZERO"
    },
    "1523": {
      "op": "PUSH2",
      "value": "0x5FB"
    },
    "1526": {
      "op": "JUMPI"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1529": {
      "op": "DUP1"
    },
    "1530": {
      "op": "REVERT"
    },
    "1531": {
      "op": "JUMPDEST"
    },
    "1532": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "POP",
      "path": "17"
    },
    "1533": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "GAS",
      "path": "17"
    },
    "1534": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "1535": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1536": {
      "op": "DUP1"
    },
    "1537": {
      "op": "ISZERO"
    },
    "1538": {
      "op": "PUSH2",
      "value": "0x60F"
    },
    "1541": {
      "op": "JUMPI"
    },
    "1542": {
      "op": "RETURNDATASIZE"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1545": {
      "op": "DUP1"
    },
    "1546": {
      "op": "RETURNDATACOPY"
    },
    "1547": {
      "op": "RETURNDATASIZE"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1550": {
      "op": "REVERT"
    },
    "1551": {
      "op": "JUMPDEST"
    },
    "1552": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "POP",
      "path": "17"
    },
    "1553": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "POP",
      "path": "17"
    },
    "1554": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "POP",
      "path": "17"
    },
    "1555": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "POP",
      "path": "17"
    },
    "1556": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1558": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1559": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1562": {
      "op": "DUP2"
    },
    "1563": {
      "op": "LT"
    },
    "1564": {
      "op": "ISZERO"
    },
    "1565": {
      "op": "PUSH2",
      "value": "0x625"
    },
    "1568": {
      "op": "JUMPI"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1571": {
      "op": "DUP1"
    },
    "1572": {
      "op": "REVERT"
    },
    "1573": {
      "op": "JUMPDEST"
    },
    "1574": {
      "op": "POP"
    },
    "1575": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4096,
        4137
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1576": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4077,
        4093
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1577": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4077,
        4093
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1578": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4077,
        4093
      ],
      "op": "SUB",
      "path": "17"
    },
    "1579": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4077,
        4137
      ],
      "op": "ADD",
      "path": "17"
    },
    "1580": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4077,
        4158
      ],
      "op": "LT",
      "path": "17"
    },
    "1581": {
      "branch": 38,
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4077,
        4158
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1582": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4069,
        4159
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x636"
    },
    "1585": {
      "branch": 38,
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4069,
        4159
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1588": {
      "op": "DUP1"
    },
    "1589": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4069,
        4159
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1590": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4069,
        4159
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1591": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4169,
        4207
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 7,
      "value": "0x670"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1600": {
      "op": "SHL"
    },
    "1601": {
      "op": "SUB"
    },
    "1602": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4169,
        4174
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "1635": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4169,
        4187
      ],
      "op": "AND",
      "path": "17"
    },
    "1636": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4188,
        4198
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1637": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4200,
        4206
      ],
      "op": "DUP5",
      "path": "17"
    },
    "1638": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4169,
        4207
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "1643": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4169,
        4187
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8DD"
    },
    "1646": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4169,
        4207
      ],
      "op": "AND",
      "path": "17"
    },
    "1647": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "jump": "i",
      "offset": [
        4169,
        4207
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1648": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4169,
        4207
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1649": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 8,
      "value": "0x40"
    },
    "1651": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1652": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1653": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1654": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1655": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1656": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1657": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1658": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4238,
        4248
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1659": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4238,
        4248
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1660": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B"
    },
    "1693": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1694": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1695": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1696": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1697": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "SUB",
      "path": "17"
    },
    "1698": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1700": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "ADD",
      "path": "17"
    },
    "1701": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1702": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        4222,
        4257
      ],
      "op": "LOG2",
      "path": "17"
    },
    "1703": {
      "offset": [
        884,
        885
      ],
      "op": "POP",
      "path": "21"
    },
    "1704": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "offset": [
        3717,
        4264
      ],
      "op": "POP",
      "path": "17"
    },
    "1705": {
      "fn": "PreallocationEscrow.withdrawTokens",
      "jump": "o",
      "offset": [
        3717,
        4264
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1706": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1707": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3462,
        3469
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1709": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3505,
        3520
      ],
      "op": "TIMESTAMP",
      "path": "17"
    },
    "1710": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3485,
        3501
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "1712": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3485,
        3501
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1713": {
      "branch": 39,
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3485,
        3520
      ],
      "op": "GT",
      "path": "17"
    },
    "1714": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3481,
        3555
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6BD"
    },
    "1717": {
      "branch": 39,
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3481,
        3555
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1718": {
      "op": "POP"
    },
    "1719": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3543,
        3544
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 9,
      "value": "0x0"
    },
    "1721": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3536,
        3544
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x498"
    },
    "1724": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3536,
        3544
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1725": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3481,
        3555
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1726": {
      "op": "POP"
    },
    "1727": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3571,
        3582
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 10,
      "value": "0x1"
    },
    "1729": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3571,
        3582
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1730": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        3414,
        3589
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1731": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "jump": "o",
      "offset": [
        3414,
        3589
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1732": {
      "offset": [
        607,
        651
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1733": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "1766": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "offset": [
        607,
        651
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1767": {
      "fn": "PreallocationEscrow.getLockedTokens",
      "jump": "o",
      "offset": [
        607,
        651
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1768": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1769": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1727,
        1772
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 11,
      "value": "0x6F3"
    },
    "1772": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1742,
        1752
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1773": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1754,
        1760
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1774": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1762,
        1771
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1775": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1727,
        1741
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x977"
    },
    "1778": {
      "fn": "PreallocationEscrow.initialDeposit",
      "jump": "i",
      "offset": [
        1727,
        1772
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1779": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1727,
        1772
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1780": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "POP",
      "path": "17"
    },
    "1781": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1649,
        1779
      ],
      "op": "POP",
      "path": "17"
    },
    "1782": {
      "fn": "PreallocationEscrow.initialDeposit",
      "jump": "o",
      "offset": [
        1649,
        1779
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1783": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1784": {
      "offset": [
        864,
        873
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x6FF"
    },
    "1787": {
      "offset": [
        864,
        871
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x761"
    },
    "1790": {
      "jump": "i",
      "offset": [
        864,
        873
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1791": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        864,
        873
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1792": {
      "offset": [
        856,
        874
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x708"
    },
    "1795": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1798": {
      "op": "DUP1"
    },
    "1799": {
      "op": "REVERT"
    },
    "1800": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1801": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1446,
        1447
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 12,
      "value": "0x0"
    },
    "1803": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1804": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1805": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1807": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1814": {
      "op": "SHL"
    },
    "1815": {
      "op": "SUB"
    },
    "1816": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1817": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1818": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "AND",
      "path": "21"
    },
    "1819": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1820": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1853": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1854": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1446,
        1447
      ],
      "op": "DUP4",
      "path": "21"
    },
    "1855": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1446,
        1447
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1856": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "LOG3",
      "path": "21"
    },
    "1857": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1476,
        1477
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 13,
      "value": "0x0"
    },
    "1859": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1860": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1867": {
      "op": "SHL"
    },
    "1868": {
      "op": "SUB"
    },
    "1869": {
      "op": "NOT"
    },
    "1870": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "AND",
      "path": "21"
    },
    "1871": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1872": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "1873": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1348,
        1485
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1874": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1875": {
      "fn": "Ownable.owner",
      "offset": [
        698,
        705
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1877": {
      "fn": "Ownable.owner",
      "offset": [
        724,
        730
      ],
      "op": "SLOAD",
      "path": "21",
      "statement": 14
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1884": {
      "op": "SHL"
    },
    "1885": {
      "op": "SUB"
    },
    "1886": {
      "fn": "Ownable.owner",
      "offset": [
        724,
        730
      ],
      "op": "AND",
      "path": "21"
    },
    "1887": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1888": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        660,
        737
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1889": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1890": {
      "fn": "Ownable.isOwner",
      "offset": [
        1020,
        1024
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1892": {
      "fn": "Ownable.isOwner",
      "offset": [
        1057,
        1063
      ],
      "op": "SLOAD",
      "path": "21",
      "statement": 15
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1899": {
      "op": "SHL"
    },
    "1900": {
      "op": "SUB"
    },
    "1901": {
      "fn": "Ownable.isOwner",
      "offset": [
        1057,
        1063
      ],
      "op": "AND",
      "path": "21"
    },
    "1902": {
      "fn": "Ownable.isOwner",
      "offset": [
        1043,
        1053
      ],
      "op": "CALLER",
      "path": "21"
    },
    "1903": {
      "fn": "Ownable.isOwner",
      "offset": [
        1043,
        1063
      ],
      "op": "EQ",
      "path": "21"
    },
    "1904": {
      "fn": "Ownable.isOwner",
      "offset": [
        1043,
        1063
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1905": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        980,
        1070
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1906": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1907": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2376,
        2381
      ],
      "op": "PUSH32",
      "path": "17",
      "statement": 16,
      "value": "0x0"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1946": {
      "op": "SHL"
    },
    "1947": {
      "op": "SUB"
    },
    "1948": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2350,
        2382
      ],
      "op": "AND",
      "path": "17"
    },
    "1949": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2350,
        2364
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1956": {
      "op": "SHL"
    },
    "1957": {
      "op": "SUB"
    },
    "1958": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2350,
        2382
      ],
      "op": "AND",
      "path": "17"
    },
    "1959": {
      "branch": 40,
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2350,
        2382
      ],
      "op": "EQ",
      "path": "17"
    },
    "1960": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2350,
        2414
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1961": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2350,
        2414
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1962": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2350,
        2414
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7DB"
    },
    "1965": {
      "branch": 40,
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2350,
        2414
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1966": {
      "op": "POP"
    },
    "1967": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2386,
        2396
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1974": {
      "op": "SHL"
    },
    "1975": {
      "op": "SUB"
    },
    "1976": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2408,
        2413
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "2009": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2386,
        2414
      ],
      "op": "AND",
      "path": "17"
    },
    "2010": {
      "branch": 41,
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2386,
        2414
      ],
      "op": "EQ",
      "path": "17"
    },
    "2011": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2350,
        2414
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2012": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2342,
        2415
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7E4"
    },
    "2015": {
      "branch": 41,
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2342,
        2415
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2018": {
      "op": "DUP1"
    },
    "2019": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2342,
        2415
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2020": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2342,
        2415
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2021": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3193,
        3197
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x84"
    },
    "2023": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3180,
        3198
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "2024": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3235,
        3239
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA4"
    },
    "2026": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3222,
        3240
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "2027": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3280,
        3281
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 17,
      "value": "0x8"
    },
    "2029": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3283,
        3285
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2031": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3283,
        3299
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2032": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3283,
        3299
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2033": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3283,
        3299
      ],
      "op": "SUB",
      "path": "17"
    },
    "2034": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3280,
        3300
      ],
      "op": "MUL",
      "path": "17"
    },
    "2035": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3269,
        3300
      ],
      "op": "SHR",
      "path": "17"
    },
    "2036": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3310,
        3348
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 18,
      "value": "0x7FE"
    },
    "2039": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3325,
        3330
      ],
      "op": "DUP8",
      "path": "17"
    },
    "2040": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3332,
        3338
      ],
      "op": "DUP8",
      "path": "17"
    },
    "2041": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3269,
        3300
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2042": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3310,
        3324
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x977"
    },
    "2045": {
      "fn": "PreallocationEscrow.receiveApproval",
      "jump": "i",
      "offset": [
        3310,
        3348
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2046": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        3310,
        3348
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2047": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "POP",
      "path": "17"
    },
    "2048": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "POP",
      "path": "17"
    },
    "2049": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "POP",
      "path": "17"
    },
    "2050": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "POP",
      "path": "17"
    },
    "2051": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "POP",
      "path": "17"
    },
    "2052": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "POP",
      "path": "17"
    },
    "2053": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        2160,
        3355
      ],
      "op": "POP",
      "path": "17"
    },
    "2054": {
      "fn": "PreallocationEscrow.receiveApproval",
      "jump": "o",
      "offset": [
        2160,
        3355
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2055": {
      "offset": [
        690,
        721
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2056": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        690,
        721
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "2058": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        690,
        721
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2059": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        690,
        721
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2060": {
      "fn": "PreallocationEscrow.receiveApproval",
      "jump": "o",
      "offset": [
        690,
        721
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2061": {
      "offset": [
        658,
        684
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2062": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "2064": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        658,
        684
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2065": {
      "fn": "PreallocationEscrow.receiveApproval",
      "offset": [
        658,
        684
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2066": {
      "fn": "PreallocationEscrow.receiveApproval",
      "jump": "o",
      "offset": [
        658,
        684
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2067": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4335,
        4558
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2068": {
      "offset": [
        864,
        873
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x81B"
    },
    "2071": {
      "offset": [
        864,
        871
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x761"
    },
    "2074": {
      "jump": "i",
      "offset": [
        864,
        873
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2075": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        864,
        873
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2076": {
      "offset": [
        856,
        874
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x824"
    },
    "2079": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2082": {
      "op": "DUP1"
    },
    "2083": {
      "op": "REVERT"
    },
    "2084": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2085": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4412,
        4433
      ],
      "op": "SELFBALANCE",
      "path": "17"
    },
    "2086": {
      "branch": 42,
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4451,
        4463
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 19
    },
    "2087": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4443,
        4464
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x82F"
    },
    "2090": {
      "branch": 42,
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4443,
        4464
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2093": {
      "op": "DUP1"
    },
    "2094": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4443,
        4464
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2095": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4443,
        4464
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2096": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4474,
        4503
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 20,
      "value": "0x83F"
    },
    "2099": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4474,
        4484
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2100": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4495,
        4502
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2101": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4474,
        4503
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2106": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4474,
        4494
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA2B"
    },
    "2109": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4474,
        4503
      ],
      "op": "AND",
      "path": "17"
    },
    "2110": {
      "fn": "PreallocationEscrow.withdrawETH",
      "jump": "i",
      "offset": [
        4474,
        4503
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2111": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4474,
        4503
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2112": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 21,
      "value": "0x40"
    },
    "2114": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2115": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2116": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2117": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2118": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2119": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2120": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2121": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4531,
        4541
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2122": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4531,
        4541
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2123": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C"
    },
    "2156": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2157": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2158": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2159": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2160": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "SUB",
      "path": "17"
    },
    "2161": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2163": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "ADD",
      "path": "17"
    },
    "2164": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2165": {
      "fn": "PreallocationEscrow.withdrawETH",
      "offset": [
        4518,
        4551
      ],
      "op": "LOG2",
      "path": "17"
    },
    "2166": {
      "offset": [
        884,
        885
      ],
      "op": "POP",
      "path": "21"
    },
    "2167": {
      "fn": "PreallocationEscrow.withdrawETH",
      "jump": "o",
      "offset": [
        4335,
        4558
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2168": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2169": {
      "offset": [
        864,
        873
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x880"
    },
    "2172": {
      "offset": [
        864,
        871
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x761"
    },
    "2175": {
      "jump": "i",
      "offset": [
        864,
        873
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2176": {
      "branch": 50,
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        873
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2177": {
      "offset": [
        856,
        874
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x889"
    },
    "2180": {
      "branch": 50,
      "offset": [
        856,
        874
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2183": {
      "op": "DUP1"
    },
    "2184": {
      "op": "REVERT"
    },
    "2185": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2186": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1728,
        1756
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 22,
      "value": "0x892"
    },
    "2189": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1747,
        1755
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2190": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1728,
        1746
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xB10"
    },
    "2193": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1728,
        1756
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2194": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1728,
        1756
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2195": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "POP",
      "path": "21"
    },
    "2196": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1656,
        1763
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2197": {
      "offset": [
        1170,
        1216
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2198": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1170,
        1216
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "2231": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1170,
        1216
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2232": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1170,
        1216
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2233": {
      "offset": [
        1222,
        1258
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2234": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1222,
        1258
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "2267": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1222,
        1258
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2268": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1222,
        1258
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2269": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        433,
        556
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2270": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        528
      ],
      "op": "DUP3",
      "path": "25",
      "statement": 23
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2277": {
      "op": "SHL"
    },
    "2278": {
      "op": "SUB"
    },
    "2279": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        537
      ],
      "op": "AND",
      "path": "25"
    },
    "2280": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        537
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xA9059CBB"
    },
    "2285": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        538,
        540
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2286": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        542,
        547
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2287": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2289": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2290": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2291": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFFFFFFFF"
    },
    "2296": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "AND",
      "path": "25"
    },
    "2297": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "2299": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "SHL",
      "path": "25"
    },
    "2300": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2301": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2302": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2304": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "ADD",
      "path": "25"
    },
    "2305": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2306": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2313": {
      "op": "SHL"
    },
    "2314": {
      "op": "SUB"
    },
    "2315": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "AND",
      "path": "25"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2322": {
      "op": "SHL"
    },
    "2323": {
      "op": "SUB"
    },
    "2324": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "AND",
      "path": "25"
    },
    "2325": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2326": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2327": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2329": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "ADD",
      "path": "25"
    },
    "2330": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2331": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2332": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2333": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2335": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "ADD",
      "path": "25"
    },
    "2336": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "2337": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "POP",
      "path": "25"
    },
    "2338": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "POP",
      "path": "25"
    },
    "2339": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "POP",
      "path": "25"
    },
    "2340": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2342": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2344": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2345": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2346": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2347": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "SUB",
      "path": "25"
    },
    "2348": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2349": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2351": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "DUP8",
      "path": "25"
    },
    "2352": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2353": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "2354": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2355": {
      "op": "DUP1"
    },
    "2356": {
      "op": "ISZERO"
    },
    "2357": {
      "op": "PUSH2",
      "value": "0x93D"
    },
    "2360": {
      "op": "JUMPI"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2363": {
      "op": "DUP1"
    },
    "2364": {
      "op": "REVERT"
    },
    "2365": {
      "op": "JUMPDEST"
    },
    "2366": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "POP",
      "path": "25"
    },
    "2367": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "GAS",
      "path": "25"
    },
    "2368": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "CALL",
      "path": "25"
    },
    "2369": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2370": {
      "op": "DUP1"
    },
    "2371": {
      "op": "ISZERO"
    },
    "2372": {
      "op": "PUSH2",
      "value": "0x951"
    },
    "2375": {
      "op": "JUMPI"
    },
    "2376": {
      "op": "RETURNDATASIZE"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2379": {
      "op": "DUP1"
    },
    "2380": {
      "op": "RETURNDATACOPY"
    },
    "2381": {
      "op": "RETURNDATASIZE"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2384": {
      "op": "REVERT"
    },
    "2385": {
      "op": "JUMPDEST"
    },
    "2386": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "POP",
      "path": "25"
    },
    "2387": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "POP",
      "path": "25"
    },
    "2388": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "POP",
      "path": "25"
    },
    "2389": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "POP",
      "path": "25"
    },
    "2390": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2392": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2393": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2396": {
      "op": "DUP2"
    },
    "2397": {
      "op": "LT"
    },
    "2398": {
      "op": "ISZERO"
    },
    "2399": {
      "op": "PUSH2",
      "value": "0x967"
    },
    "2402": {
      "op": "JUMPI"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2405": {
      "op": "DUP1"
    },
    "2406": {
      "op": "REVERT"
    },
    "2407": {
      "op": "JUMPDEST"
    },
    "2408": {
      "op": "POP"
    },
    "2409": {
      "branch": 52,
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        523,
        548
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2410": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        515,
        549
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x972"
    },
    "2413": {
      "branch": 52,
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        515,
        549
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2416": {
      "op": "DUP1"
    },
    "2417": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        515,
        549
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2418": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        515,
        549
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2419": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        433,
        556
      ],
      "op": "POP",
      "path": "25"
    },
    "2420": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        433,
        556
      ],
      "op": "POP",
      "path": "25"
    },
    "2421": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        433,
        556
      ],
      "op": "POP",
      "path": "25"
    },
    "2422": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        433,
        556
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2423": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1142,
        1494
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2424": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1245,
        1256
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 24,
      "value": "0x1"
    },
    "2426": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1245,
        1256
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2427": {
      "branch": 43,
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1245,
        1261
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2428": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1245,
        1275
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2429": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1245,
        1275
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2430": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1245,
        1275
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x987"
    },
    "2433": {
      "branch": 43,
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1245,
        1275
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2434": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1245,
        1275
      ],
      "op": "POP",
      "path": "17"
    },
    "2435": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1274,
        1275
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2437": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1265,
        1271
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2438": {
      "branch": 44,
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1265,
        1275
      ],
      "op": "GT",
      "path": "17"
    },
    "2439": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1245,
        1275
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2440": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1237,
        1276
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x990"
    },
    "2443": {
      "branch": 44,
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1237,
        1276
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2446": {
      "op": "DUP1"
    },
    "2447": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1237,
        1276
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2448": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1237,
        1276
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2449": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1305,
        1335
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 25,
      "value": "0x9A0"
    },
    "2452": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1305,
        1320
      ],
      "op": "TIMESTAMP",
      "path": "17"
    },
    "2453": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1325,
        1334
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2454": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1305,
        1335
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2459": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1305,
        1324
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB7E"
    },
    "2462": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1305,
        1335
      ],
      "op": "AND",
      "path": "17"
    },
    "2463": {
      "fn": "PreallocationEscrow.initialDeposit",
      "jump": "i",
      "offset": [
        1305,
        1335
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2464": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1305,
        1335
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2465": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1286,
        1302
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "2467": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1286,
        1335
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "2468": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1345,
        1356
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 26,
      "value": "0x1"
    },
    "2470": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1345,
        1365
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2471": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1345,
        1365
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2472": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1345,
        1365
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "2473": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1375,
        1429
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 27,
      "value": "0x9E3"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2482": {
      "op": "SHL"
    },
    "2483": {
      "op": "SUB"
    },
    "2484": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1375,
        1380
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x0"
    },
    "2517": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1375,
        1397
      ],
      "op": "AND",
      "path": "17"
    },
    "2518": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1398,
        1405
      ],
      "op": "DUP5",
      "path": "17"
    },
    "2519": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1415,
        1419
      ],
      "op": "ADDRESS",
      "path": "17"
    },
    "2520": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1359,
        1365
      ],
      "op": "DUP6",
      "path": "17"
    },
    "2521": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1375,
        1429
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2526": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1375,
        1397
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB97"
    },
    "2529": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1375,
        1429
      ],
      "op": "AND",
      "path": "17"
    },
    "2530": {
      "fn": "PreallocationEscrow.initialDeposit",
      "jump": "i",
      "offset": [
        1375,
        1429
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2531": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1375,
        1429
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2532": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 28,
      "value": "0x40"
    },
    "2534": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2535": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2536": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2537": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2538": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2539": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2541": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2542": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "ADD",
      "path": "17"
    },
    "2543": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2544": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2545": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2546": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2547": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2554": {
      "op": "SHL"
    },
    "2555": {
      "op": "SUB"
    },
    "2556": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2557": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "AND",
      "path": "17"
    },
    "2558": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2559": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0xFDFDCF596161B0E81E3161597D46888DCC88BD83B22DCFB341C76377CA3BBC9E"
    },
    "2592": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2593": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2594": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2595": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "SUB",
      "path": "17"
    },
    "2596": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "ADD",
      "path": "17"
    },
    "2597": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2598": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1444,
        1487
      ],
      "op": "LOG2",
      "path": "17"
    },
    "2599": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1142,
        1494
      ],
      "op": "POP",
      "path": "17"
    },
    "2600": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1142,
        1494
      ],
      "op": "POP",
      "path": "17"
    },
    "2601": {
      "fn": "PreallocationEscrow.initialDeposit",
      "offset": [
        1142,
        1494
      ],
      "op": "POP",
      "path": "17"
    },
    "2602": {
      "fn": "PreallocationEscrow.initialDeposit",
      "jump": "o",
      "offset": [
        1142,
        1494
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2603": {
      "fn": "Address.sendValue",
      "offset": [
        2252,
        2618
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2604": {
      "fn": "Address.sendValue",
      "offset": [
        2366,
        2372
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 29
    },
    "2605": {
      "fn": "Address.sendValue",
      "offset": [
        2341,
        2362
      ],
      "op": "SELFBALANCE",
      "path": "26"
    },
    "2606": {
      "fn": "Address.sendValue",
      "offset": [
        2341,
        2372
      ],
      "op": "LT",
      "path": "26"
    },
    "2607": {
      "branch": 48,
      "fn": "Address.sendValue",
      "offset": [
        2341,
        2372
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2608": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA80"
    },
    "2611": {
      "branch": 48,
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2612": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2614": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2615": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2616": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2622": {
      "op": "SHL"
    },
    "2623": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2624": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2625": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2627": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2629": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2630": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "ADD",
      "path": "26"
    },
    "2631": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2632": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1D"
    },
    "2634": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x24"
    },
    "2636": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2637": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "ADD",
      "path": "26"
    },
    "2638": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2639": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E6365000000"
    },
    "2672": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x44"
    },
    "2674": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2675": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "ADD",
      "path": "26"
    },
    "2676": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2677": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2678": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2679": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2680": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2681": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2682": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "SUB",
      "path": "26"
    },
    "2683": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x64"
    },
    "2685": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "ADD",
      "path": "26"
    },
    "2686": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2687": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "REVERT",
      "path": "26"
    },
    "2688": {
      "fn": "Address.sendValue",
      "offset": [
        2333,
        2406
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2689": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2691": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2692": {
      "fn": "Address.sendValue",
      "offset": [
        2472,
        2484
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2694": {
      "fn": "Address.sendValue",
      "offset": [
        2472,
        2484
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2701": {
      "op": "SHL"
    },
    "2702": {
      "op": "SUB"
    },
    "2703": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2504
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2704": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2504
      ],
      "op": "AND",
      "path": "26"
    },
    "2705": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2504
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2706": {
      "fn": "Address.sendValue",
      "offset": [
        2512,
        2518
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2707": {
      "fn": "Address.sendValue",
      "offset": [
        2512,
        2518
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2708": {
      "fn": "Address.sendValue",
      "offset": [
        2472,
        2484
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2709": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2710": {
      "fn": "Address.sendValue",
      "offset": [
        2472,
        2484
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2711": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2712": {
      "fn": "Address.sendValue",
      "offset": [
        2512,
        2518
      ],
      "op": "DUP6",
      "path": "26"
    },
    "2713": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2504
      ],
      "op": "DUP8",
      "path": "26"
    },
    "2714": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "GAS",
      "path": "26"
    },
    "2715": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "CALL",
      "path": "26"
    },
    "2716": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "2717": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "POP",
      "path": "26"
    },
    "2718": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "POP",
      "path": "26"
    },
    "2719": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "POP",
      "path": "26"
    },
    "2720": {
      "fn": "Address.sendValue",
      "offset": [
        2490,
        2523
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2721": {
      "op": "DUP1"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2724": {
      "op": "DUP2"
    },
    "2725": {
      "op": "EQ"
    },
    "2726": {
      "op": "PUSH2",
      "value": "0xACB"
    },
    "2729": {
      "op": "JUMPI"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2732": {
      "op": "MLOAD"
    },
    "2733": {
      "op": "SWAP2"
    },
    "2734": {
      "op": "POP"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2737": {
      "op": "NOT"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2740": {
      "op": "RETURNDATASIZE"
    },
    "2741": {
      "op": "ADD"
    },
    "2742": {
      "op": "AND"
    },
    "2743": {
      "op": "DUP3"
    },
    "2744": {
      "op": "ADD"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2747": {
      "op": "MSTORE"
    },
    "2748": {
      "op": "RETURNDATASIZE"
    },
    "2749": {
      "op": "DUP3"
    },
    "2750": {
      "op": "MSTORE"
    },
    "2751": {
      "op": "RETURNDATASIZE"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2756": {
      "op": "DUP5"
    },
    "2757": {
      "op": "ADD"
    },
    "2758": {
      "op": "RETURNDATACOPY"
    },
    "2759": {
      "op": "PUSH2",
      "value": "0xAD0"
    },
    "2762": {
      "op": "JUMP"
    },
    "2763": {
      "op": "JUMPDEST"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2766": {
      "op": "SWAP2"
    },
    "2767": {
      "op": "POP"
    },
    "2768": {
      "op": "JUMPDEST"
    },
    "2769": {
      "op": "POP"
    },
    "2770": {
      "fn": "Address.sendValue",
      "offset": [
        2471,
        2523
      ],
      "op": "POP",
      "path": "26"
    },
    "2771": {
      "fn": "Address.sendValue",
      "offset": [
        2471,
        2523
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2772": {
      "fn": "Address.sendValue",
      "offset": [
        2471,
        2523
      ],
      "op": "POP",
      "path": "26"
    },
    "2773": {
      "branch": 49,
      "fn": "Address.sendValue",
      "offset": [
        2541,
        2548
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 30
    },
    "2774": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x972"
    },
    "2777": {
      "branch": 49,
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2778": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2780": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2781": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2787": {
      "op": "SHL"
    },
    "2788": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2789": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2790": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2792": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "ADD",
      "path": "26"
    },
    "2793": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2794": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2795": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2797": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "ADD",
      "path": "26"
    },
    "2798": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2799": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2800": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "SUB",
      "path": "26"
    },
    "2801": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2802": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2803": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3A"
    },
    "2805": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2806": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2807": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2809": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "ADD",
      "path": "26"
    },
    "2810": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2811": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xC2E"
    },
    "2814": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3A"
    },
    "2816": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2817": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "CODECOPY",
      "path": "26"
    },
    "2818": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2820": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "ADD",
      "path": "26"
    },
    "2821": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2822": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "POP",
      "path": "26"
    },
    "2823": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "POP",
      "path": "26"
    },
    "2824": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2826": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2827": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2828": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2829": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "SUB",
      "path": "26"
    },
    "2830": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2831": {
      "fn": "Address.sendValue",
      "offset": [
        2533,
        2611
      ],
      "op": "REVERT",
      "path": "26"
    },
    "2832": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1907,
        2090
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2839": {
      "op": "SHL"
    },
    "2840": {
      "op": "SUB"
    },
    "2841": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1980,
        2002
      ],
      "op": "DUP2",
      "path": "21",
      "statement": 31
    },
    "2842": {
      "branch": 51,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1980,
        2002
      ],
      "op": "AND",
      "path": "21"
    },
    "2843": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1972,
        2003
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xB23"
    },
    "2846": {
      "branch": 51,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1972,
        2003
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2849": {
      "op": "DUP1"
    },
    "2850": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1972,
        2003
      ],
      "op": "REVERT",
      "path": "21"
    },
    "2851": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1972,
        2003
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2852": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 32,
      "value": "0x0"
    },
    "2854": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2855": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2856": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2858": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2865": {
      "op": "SHL"
    },
    "2866": {
      "op": "SUB"
    },
    "2867": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2868": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "DUP6",
      "path": "21"
    },
    "2869": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "AND",
      "path": "21"
    },
    "2870": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "2871": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "2872": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "AND",
      "path": "21"
    },
    "2873": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2874": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2907": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2908": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "LOG3",
      "path": "21"
    },
    "2909": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2072
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 33,
      "value": "0x0"
    },
    "2911": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2912": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2919": {
      "op": "SHL"
    },
    "2920": {
      "op": "SUB"
    },
    "2921": {
      "op": "NOT"
    },
    "2922": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "AND",
      "path": "21"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2929": {
      "op": "SHL"
    },
    "2930": {
      "op": "SUB"
    },
    "2931": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "2932": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2933": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "2934": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "AND",
      "path": "21"
    },
    "2935": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2936": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2937": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2938": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "OR",
      "path": "21"
    },
    "2939": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2940": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2941": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        1907,
        2090
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2942": {
      "fn": "SafeMath.add",
      "offset": [
        1440,
        1585
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2943": {
      "fn": "SafeMath.add",
      "offset": [
        1498,
        1505
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2945": {
      "fn": "SafeMath.add",
      "offset": [
        1529,
        1534
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2946": {
      "fn": "SafeMath.add",
      "offset": [
        1529,
        1534
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2947": {
      "fn": "SafeMath.add",
      "offset": [
        1529,
        1534
      ],
      "op": "ADD",
      "path": "20"
    },
    "2948": {
      "fn": "SafeMath.add",
      "offset": [
        1552,
        1558
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 34
    },
    "2949": {
      "fn": "SafeMath.add",
      "offset": [
        1552,
        1558
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2950": {
      "fn": "SafeMath.add",
      "offset": [
        1552,
        1558
      ],
      "op": "LT",
      "path": "20"
    },
    "2951": {
      "branch": 54,
      "fn": "SafeMath.add",
      "offset": [
        1552,
        1558
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2952": {
      "fn": "SafeMath.add",
      "offset": [
        1544,
        1559
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB90"
    },
    "2955": {
      "branch": 54,
      "fn": "SafeMath.add",
      "offset": [
        1544,
        1559
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2958": {
      "op": "DUP1"
    },
    "2959": {
      "fn": "SafeMath.add",
      "offset": [
        1544,
        1559
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2960": {
      "fn": "SafeMath.add",
      "offset": [
        1544,
        1559
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2961": {
      "fn": "SafeMath.add",
      "offset": [
        1577,
        1578
      ],
      "op": "SWAP4",
      "path": "20",
      "statement": 35
    },
    "2962": {
      "fn": "SafeMath.add",
      "offset": [
        1440,
        1585
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2963": {
      "op": "POP"
    },
    "2964": {
      "op": "POP"
    },
    "2965": {
      "op": "POP"
    },
    "2966": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        1440,
        1585
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2967": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        562,
        713
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2968": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 36,
      "value": "0x40"
    },
    "2970": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2971": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2972": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2979": {
      "op": "SHL"
    },
    "2980": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2981": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2988": {
      "op": "SHL"
    },
    "2989": {
      "op": "SUB"
    },
    "2990": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP6",
      "path": "25"
    },
    "2991": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2992": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "AND",
      "path": "25"
    },
    "2993": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2995": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2996": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "ADD",
      "path": "25"
    },
    "2997": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2998": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2999": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3000": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "AND",
      "path": "25"
    },
    "3001": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x24"
    },
    "3003": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP4",
      "path": "25"
    },
    "3004": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "ADD",
      "path": "25"
    },
    "3005": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3006": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x44"
    },
    "3008": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3009": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "ADD",
      "path": "25"
    },
    "3010": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP5",
      "path": "25"
    },
    "3011": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3012": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3013": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3014": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3015": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        688
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3016": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        688
      ],
      "op": "DUP7",
      "path": "25"
    },
    "3017": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        688
      ],
      "op": "AND",
      "path": "25"
    },
    "3018": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        688
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3019": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        688
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x23B872DD"
    },
    "3024": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        688
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3025": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x64"
    },
    "3027": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3028": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3029": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "ADD",
      "path": "25"
    },
    "3030": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "3031": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3033": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "3034": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3035": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3036": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3037": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3038": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3039": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SUB",
      "path": "25"
    },
    "3040": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "ADD",
      "path": "25"
    },
    "3041": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3044": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        688
      ],
      "op": "DUP8",
      "path": "25"
    },
    "3045": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3046": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "3047": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3048": {
      "op": "DUP1"
    },
    "3049": {
      "op": "ISZERO"
    },
    "3050": {
      "op": "PUSH2",
      "value": "0xBF2"
    },
    "3053": {
      "op": "JUMPI"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3056": {
      "op": "DUP1"
    },
    "3057": {
      "op": "REVERT"
    },
    "3058": {
      "op": "JUMPDEST"
    },
    "3059": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "POP",
      "path": "25"
    },
    "3060": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "GAS",
      "path": "25"
    },
    "3061": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "CALL",
      "path": "25"
    },
    "3062": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3063": {
      "op": "DUP1"
    },
    "3064": {
      "op": "ISZERO"
    },
    "3065": {
      "op": "PUSH2",
      "value": "0xC06"
    },
    "3068": {
      "op": "JUMPI"
    },
    "3069": {
      "op": "RETURNDATASIZE"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3072": {
      "op": "DUP1"
    },
    "3073": {
      "op": "RETURNDATACOPY"
    },
    "3074": {
      "op": "RETURNDATASIZE"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3077": {
      "op": "REVERT"
    },
    "3078": {
      "op": "JUMPDEST"
    },
    "3079": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "POP",
      "path": "25"
    },
    "3080": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "POP",
      "path": "25"
    },
    "3081": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "POP",
      "path": "25"
    },
    "3082": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "POP",
      "path": "25"
    },
    "3083": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "3085": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3086": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3089": {
      "op": "DUP2"
    },
    "3090": {
      "op": "LT"
    },
    "3091": {
      "op": "ISZERO"
    },
    "3092": {
      "op": "PUSH2",
      "value": "0xC1C"
    },
    "3095": {
      "op": "JUMPI"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3098": {
      "op": "DUP1"
    },
    "3099": {
      "op": "REVERT"
    },
    "3100": {
      "op": "JUMPDEST"
    },
    "3101": {
      "op": "POP"
    },
    "3102": {
      "branch": 53,
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3103": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        662,
        706
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xC27"
    },
    "3106": {
      "branch": 53,
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        662,
        706
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3109": {
      "op": "DUP1"
    },
    "3110": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        662,
        706
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3111": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        662,
        706
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3112": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        562,
        713
      ],
      "op": "POP",
      "path": "25"
    },
    "3113": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        562,
        713
      ],
      "op": "POP",
      "path": "25"
    },
    "3114": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        562,
        713
      ],
      "op": "POP",
      "path": "25"
    },
    "3115": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        562,
        713
      ],
      "op": "POP",
      "path": "25"
    },
    "3116": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        562,
        713
      ],
      "op": "JUMP",
      "path": "25"
    }
  },
  "sha1": "364bbf551f4c458100621fcdd8cbcaa0f932d2ee",
  "source": "pragma solidity ^0.6.5;\n\n\nimport \"zeppelin/ownership/Ownable.sol\";\nimport \"zeppelin/math/SafeMath.sol\";\nimport \"nucypher/staking_contracts/AbstractStakingContract.sol\";\n\n\n/**\n* @notice Contract holds tokens for vesting.\n* Also tokens can be used as a stake in the staking escrow contract\n*/\ncontract PreallocationEscrow is AbstractStakingContract, Ownable {\n    using SafeMath for uint256;\n\n    event TokensDeposited(address indexed sender, uint256 value, uint256 duration);\n    event TokensWithdrawn(address indexed owner, uint256 value);\n    event ETHWithdrawn(address indexed owner, uint256 value);\n\n    StakingEscrow public immutable stakingEscrow;\n\n    uint256 public lockedValue;\n    uint256 public endLockTimestamp;\n\n    /**\n    * @param _router Address of the StakingInterfaceRouter contract\n    */\n    constructor(StakingInterfaceRouter _router) public AbstractStakingContract(_router) {\n        stakingEscrow = _router.target().escrow();\n    }\n\n    /**\n    * @notice Initial tokens deposit\n    * @param _sender Token sender\n    * @param _value Amount of token to deposit\n    * @param _duration Duration of tokens locking\n    */\n    function initialDeposit(address _sender, uint256 _value, uint256 _duration) internal {\n        require(lockedValue == 0 && _value > 0);\n        endLockTimestamp = block.timestamp.add(_duration);\n        lockedValue = _value;\n        token.safeTransferFrom(_sender, address(this), _value);\n        emit TokensDeposited(_sender, _value, _duration);\n    }\n\n    /**\n    * @notice Initial tokens deposit\n    * @param _value Amount of token to deposit\n    * @param _duration Duration of tokens locking\n    */\n    function initialDeposit(uint256 _value, uint256 _duration) external {\n        initialDeposit(msg.sender, _value, _duration);\n    }\n\n    /**\n    * @notice Implementation of the receiveApproval(address,uint256,address,bytes) method\n    * (see NuCypherToken contract). Initial tokens deposit\n    * @param _from Sender\n    * @param _value Amount of tokens to deposit\n    * @param _tokenContract Token contract address\n    * @notice (param _extraData) Amount of seconds during which tokens will be locked\n    */\n    function receiveApproval(\n        address _from,\n        uint256 _value,\n        address _tokenContract,\n        bytes calldata /* _extraData */\n    )\n        external\n    {\n        require(_tokenContract == address(token) && msg.sender == address(token));\n\n        // Copy first 32 bytes from _extraData, according to calldata memory layout:\n        //\n        // 0x00: method signature      4 bytes\n        // 0x04: _from                 32 bytes after encoding\n        // 0x24: _value                32 bytes after encoding\n        // 0x44: _tokenContract        32 bytes after encoding\n        // 0x64: _extraData pointer    32 bytes. Value must be 0x80 (offset of _extraData wrt to 1st parameter)\n        // 0x84: _extraData length     32 bytes\n        // 0xA4: _extraData data       Length determined by previous variable\n        //\n        // See https://solidity.readthedocs.io/en/latest/abi-spec.html#examples\n\n        uint256 payloadSize;\n        uint256 payload;\n        assembly {\n            payloadSize := calldataload(0x84)\n            payload := calldataload(0xA4)\n        }\n        payload = payload >> 8*(32 - payloadSize);\n        initialDeposit(_from, _value, payload);\n    }\n\n    /**\n    * @notice Get locked tokens value\n    */\n    function getLockedTokens() public view returns (uint256) {\n        if (endLockTimestamp <= block.timestamp) {\n            return 0;\n        }\n        return lockedValue;\n    }\n\n    /**\n    * @notice Withdraw available amount of tokens to owner\n    * @param _value Amount of token to withdraw\n    */\n    function withdrawTokens(uint256 _value) public override onlyOwner {\n        uint256 balance = token.balanceOf(address(this));\n        require(balance >= _value);\n        // Withdrawal invariant for PreallocationEscrow:\n        // After withdrawing, the sum of all escrowed tokens (either here or in StakingEscrow) must exceed the locked amount\n        require(balance - _value + stakingEscrow.getAllTokens(address(this)) >= getLockedTokens());\n        token.safeTransfer(msg.sender, _value);\n        emit TokensWithdrawn(msg.sender, _value);\n    }\n\n    /**\n    * @notice Withdraw available ETH to the owner\n    */\n    function withdrawETH() public override onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance != 0);\n        msg.sender.sendValue(balance);\n        emit ETHWithdrawn(msg.sender, balance);\n    }\n\n    /**\n    * @notice Calling fallback function is allowed only for the owner\n    */\n    function isFallbackAllowed() public override returns (bool) {\n        return msg.sender == owner();\n    }\n\n}\n",
  "sourceMap": "291:4466:17:-:0;;;811:142;5:9:-1;2:2;;;27:1;24;17:12;2:2;811:142:17;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;811:142:17;-1:-1:-1;;;;;;1396:16:16;;;;;;;1449;;;-1:-1:-1;;;1449:16:16;;;;811:142:17;;1422:24:16;;-1:-1:-1;;;;;1396:16:16;;;1449:14;;:16;;;;;811:142:17;;1449:16:16;;;;;;;1396;1449;;;2:2:-1;;;;27:1;24;17:12;2:2;1449:16:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1449:16:16;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1449:16:16;:24;;;-1:-1:-1;;;1449:24:16;;;;-1:-1:-1;;;;;1449:22:16;;;;;;:24;;;;;:16;;:24;;;;;;;;:22;:24;;;2:2:-1;;;;27:1;24;17:12;2:2;1449:24:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1449:24:16;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1449:24:16;;-1:-1:-1;;;;;;1491:33:16;;1483:42;;12:1:-1;9;2:12;1483:42:16;1535:18;;-1:-1:-1;;;;;;1535:18:16;;;-1:-1:-1;516:6:21;:19;;525:10;-1:-1:-1;;;;;;516:19:21;;;;;;;550:40;;-1:-1:-1;;;;;583:6:21;;;;516;550:40;;516:6;;550:40;921:7:17::1;-1:-1:-1::0;;;;;921:14:17::1;;:16;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;921:16:17;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;921:16:17;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;921:16:17;:25:::1;::::0;;-1:-1:-1;;;921:25:17;;;;-1:-1:-1;;;;;921:23:17;;::::1;::::0;::::1;::::0;:25:::1;::::0;;::::1;::::0;:16:::1;::::0;:25;;;;;;;;:23;:25;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;921:25:17;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;921:25:17;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;921:25:17;-1:-1:-1;;;;;;905:41:17::1;::::0;;;;;::::1;::::0;-1:-1:-1;291:4466:17;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "../../nucypher/blockchain/eth/sol/source/contracts/staking_contracts/PreallocationEscrow.sol",
  "type": "contract"
}