{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract NuCypherToken",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_worker",
          "type": "address"
        }
      ],
      "name": "bondWorker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_periods",
          "type": "uint16"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_periods",
          "type": "uint16"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newValue",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_periods",
          "type": "uint16"
        }
      ],
      "name": "divideStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getAllTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "index",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_periods",
          "type": "uint16"
        }
      ],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_lockReStakeUntilPeriod",
          "type": "uint16"
        }
      ],
      "name": "lockReStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockReStakeUntilPeriod",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockedValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "node",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "periods",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_periods",
          "type": "uint16"
        }
      ],
      "name": "prolongStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reStake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondsPerPeriod",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_reStake",
          "type": "bool"
        }
      ],
      "name": "setReStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_windDown",
          "type": "bool"
        }
      ],
      "name": "setWindDown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "value",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "windDown",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "worker",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "32": "contracts/StakingContractsTestSet.sol"
  },
  "ast": {
    "absolutePath": "contracts/StakingContractsTestSet.sol",
    "exportedSymbols": {
      "DestroyableStakingInterface": [
        2222
      ],
      "PolicyManagerForStakingContractMock": [
        2006
      ],
      "SimpleStakingContract": [
        2300
      ],
      "StakingEscrowForStakingContractMock": [
        1945
      ],
      "StakingInterfaceMockV1": [
        2148
      ],
      "StakingInterfaceMockV2": [
        2191
      ],
      "WorkLockForStakingContractMock": [
        2122
      ]
    },
    "id": 2301,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1717,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:32"
      },
      {
        "absolutePath": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/NuCypherToken.sol",
        "file": "contracts/NuCypherToken.sol",
        "id": 1718,
        "nodeType": "ImportDirective",
        "scope": 2301,
        "sourceUnit": 11956,
        "src": "26:37:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/staking_contracts/AbstractStakingContract.sol",
        "file": "contracts/staking_contracts/AbstractStakingContract.sol",
        "id": 1719,
        "nodeType": "ImportDirective",
        "scope": 2301,
        "sourceUnit": 17037,
        "src": "64:65:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1720,
          "nodeType": "StructuredDocumentation",
          "src": "132:62:32",
          "text": "@notice Contract for using in staking contracts tests"
        },
        "fullyImplemented": true,
        "id": 1945,
        "linearizedBaseContracts": [
          1945
        ],
        "name": "StakingEscrowForStakingContractMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1722,
            "mutability": "immutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1945,
            "src": "247:29:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NuCypherToken_$11941",
              "typeString": "contract NuCypherToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 1721,
              "name": "NuCypherToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11941,
              "src": "247:13:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NuCypherToken_$11941",
                "typeString": "contract NuCypherToken"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "407f8001",
            "id": 1725,
            "mutability": "mutable",
            "name": "secondsPerPeriod",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1945,
            "src": "282:34:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 1723,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "282:6:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 1724,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "315:1:32",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d70754ec",
            "id": 1727,
            "mutability": "mutable",
            "name": "node",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1945,
            "src": "322:19:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1726,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "322:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3fa4f245",
            "id": 1729,
            "mutability": "mutable",
            "name": "value",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1945,
            "src": "347:20:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1728,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "347:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d2c46932",
            "id": 1731,
            "mutability": "mutable",
            "name": "lockedValue",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1945,
            "src": "373:26:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1730,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "373:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a4caeb42",
            "id": 1733,
            "mutability": "mutable",
            "name": "periods",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1945,
            "src": "405:21:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 1732,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "405:6:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2986c0e5",
            "id": 1735,
            "mutability": "mutable",
            "name": "index",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1945,
            "src": "432:20:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1734,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "432:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "eba8a266",
            "id": 1737,
            "mutability": "mutable",
            "name": "reStake",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1945,
            "src": "458:19:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1736,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "458:4:32",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "94bab1d2",
            "id": 1739,
            "mutability": "mutable",
            "name": "lockReStakeUntilPeriod",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1945,
            "src": "483:36:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 1738,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "483:6:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4d547ada",
            "id": 1741,
            "mutability": "mutable",
            "name": "worker",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1945,
            "src": "525:21:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1740,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "525:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b85c5145",
            "id": 1743,
            "mutability": "mutable",
            "name": "windDown",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1945,
            "src": "552:20:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1742,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "552:4:32",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1752,
              "nodeType": "Block",
              "src": "620:31:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1748,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1722,
                      "src": "630:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NuCypherToken_$11941",
                        "typeString": "contract NuCypherToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1749,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1745,
                      "src": "638:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NuCypherToken_$11941",
                        "typeString": "contract NuCypherToken"
                      }
                    },
                    "src": "630:14:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NuCypherToken_$11941",
                      "typeString": "contract NuCypherToken"
                    }
                  },
                  "id": 1751,
                  "nodeType": "ExpressionStatement",
                  "src": "630:14:32"
                }
              ]
            },
            "documentation": null,
            "id": 1753,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1745,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1753,
                  "src": "591:20:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NuCypherToken_$11941",
                    "typeString": "contract NuCypherToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1744,
                    "name": "NuCypherToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11941,
                    "src": "591:13:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NuCypherToken_$11941",
                      "typeString": "contract NuCypherToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "590:22:32"
            },
            "returnParameters": {
              "id": 1747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "620:0:32"
            },
            "scope": 1945,
            "src": "579:72:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1767,
              "nodeType": "Block",
              "src": "716:54:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1761,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "734:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "734:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1763,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1755,
                        "src": "746:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1764,
                        "name": "_periods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1757,
                        "src": "754:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1760,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1806,
                      "src": "726:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,uint16)"
                      }
                    },
                    "id": 1765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:37:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1766,
                  "nodeType": "ExpressionStatement",
                  "src": "726:37:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "845603a6",
            "id": 1768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1755,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1768,
                  "src": "674:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1757,
                  "mutability": "mutable",
                  "name": "_periods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1768,
                  "src": "690:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1756,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "673:33:32"
            },
            "returnParameters": {
              "id": 1759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:0:32"
            },
            "scope": 1945,
            "src": "657:113:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1805,
              "nodeType": "Block",
              "src": "848:177:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1777,
                      "name": "node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1727,
                      "src": "858:4:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1778,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1770,
                      "src": "865:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "858:12:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1780,
                  "nodeType": "ExpressionStatement",
                  "src": "858:12:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1781,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1729,
                      "src": "880:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1782,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1772,
                      "src": "889:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "880:15:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1784,
                  "nodeType": "ExpressionStatement",
                  "src": "880:15:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1785,
                      "name": "lockedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1731,
                      "src": "905:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1786,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1772,
                      "src": "920:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "905:21:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1788,
                  "nodeType": "ExpressionStatement",
                  "src": "905:21:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1789,
                      "name": "periods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1733,
                      "src": "936:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1790,
                      "name": "_periods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1774,
                      "src": "947:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "936:19:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1792,
                  "nodeType": "ExpressionStatement",
                  "src": "936:19:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1796,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "984:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "984:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1800,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1004:4:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingEscrowForStakingContractMock_$1945",
                              "typeString": "contract StakingEscrowForStakingContractMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingEscrowForStakingContractMock_$1945",
                              "typeString": "contract StakingEscrowForStakingContractMock"
                            }
                          ],
                          "id": 1799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "996:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1798,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "996:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "996:13:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1802,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1772,
                        "src": "1011:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1793,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1722,
                        "src": "965:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$11941",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 1795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19511,
                      "src": "965:18:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "965:53:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1804,
                  "nodeType": "ExpressionStatement",
                  "src": "965:53:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d2d0e066",
            "id": 1806,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1770,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1806,
                  "src": "793:13:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1772,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1806,
                  "src": "808:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1774,
                  "mutability": "mutable",
                  "name": "_periods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1806,
                  "src": "824:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1773,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "792:48:32"
            },
            "returnParameters": {
              "id": 1776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "848:0:32"
            },
            "scope": 1945,
            "src": "776:249:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1821,
              "nodeType": "Block",
              "src": "1087:67:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1813,
                      "name": "lockedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1731,
                      "src": "1097:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1814,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1808,
                      "src": "1112:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1097:21:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1816,
                  "nodeType": "ExpressionStatement",
                  "src": "1097:21:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1817,
                      "name": "periods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1733,
                      "src": "1128:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1818,
                      "name": "_periods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1810,
                      "src": "1139:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "1128:19:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1820,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:19:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "86f86dde",
            "id": 1822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lock",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1808,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1822,
                  "src": "1045:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1810,
                  "mutability": "mutable",
                  "name": "_periods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1822,
                  "src": "1061:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1809,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1061:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1044:33:32"
            },
            "returnParameters": {
              "id": 1812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1087:0:32"
            },
            "scope": 1945,
            "src": "1031:123:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1843,
              "nodeType": "Block",
              "src": "1242:94:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1831,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1735,
                      "src": "1252:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1832,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1824,
                      "src": "1260:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1252:14:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1834,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:14:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1835,
                      "name": "lockedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1731,
                      "src": "1276:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1836,
                      "name": "_newValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1826,
                      "src": "1291:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1276:24:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1838,
                  "nodeType": "ExpressionStatement",
                  "src": "1276:24:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1839,
                      "name": "periods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1733,
                      "src": "1310:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1840,
                      "name": "_periods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1828,
                      "src": "1321:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "1310:19:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1842,
                  "nodeType": "ExpressionStatement",
                  "src": "1310:19:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d122b794",
            "id": 1844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "divideStake",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1824,
                  "mutability": "mutable",
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1844,
                  "src": "1181:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1181:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1826,
                  "mutability": "mutable",
                  "name": "_newValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1844,
                  "src": "1197:17:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1828,
                  "mutability": "mutable",
                  "name": "_periods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1844,
                  "src": "1216:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1827,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1216:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1180:52:32"
            },
            "returnParameters": {
              "id": 1830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1242:0:32"
            },
            "scope": 1945,
            "src": "1160:176:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1861,
              "nodeType": "Block",
              "src": "1383:76:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1849,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1729,
                      "src": "1393:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1850,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1846,
                      "src": "1402:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1393:15:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1852,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:15:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1856,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1433:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1433:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1858,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1846,
                        "src": "1445:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1853,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1722,
                        "src": "1418:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$11941",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 1855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19438,
                      "src": "1418:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1418:34:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1860,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:34:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2e1a7d4d",
            "id": 1862,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1846,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1862,
                  "src": "1360:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1359:16:32"
            },
            "returnParameters": {
              "id": 1848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1383:0:32"
            },
            "scope": 1945,
            "src": "1342:117:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1869,
              "nodeType": "Block",
              "src": "1497:32:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1866,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1729,
                        "src": "1516:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1865,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "1507:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1868,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:15:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "853828b6",
            "id": 1870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1485:2:32"
            },
            "returnParameters": {
              "id": 1864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1497:0:32"
            },
            "scope": 1945,
            "src": "1465:64:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1877,
              "nodeType": "Block",
              "src": "1560:30:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1873,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1729,
                      "src": "1570:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31303030",
                      "id": 1874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1579:4:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "1570:13:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1876,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:13:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1249c58b",
            "id": 1878,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1548:2:32"
            },
            "returnParameters": {
              "id": 1872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1560:0:32"
            },
            "scope": 1945,
            "src": "1535:55:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1887,
              "nodeType": "Block",
              "src": "1640:35:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1883,
                      "name": "reStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1737,
                      "src": "1650:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1884,
                      "name": "_reStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1880,
                      "src": "1660:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1650:18:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1886,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:18:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "03a94485",
            "id": 1888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setReStake",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1880,
                  "mutability": "mutable",
                  "name": "_reStake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1888,
                  "src": "1616:13:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1879,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1616:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1615:15:32"
            },
            "returnParameters": {
              "id": 1882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1640:0:32"
            },
            "scope": 1945,
            "src": "1596:79:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1897,
              "nodeType": "Block",
              "src": "1743:65:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1893,
                      "name": "lockReStakeUntilPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1739,
                      "src": "1753:22:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1894,
                      "name": "_lockReStakeUntilPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1890,
                      "src": "1778:23:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "1753:48:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1896,
                  "nodeType": "ExpressionStatement",
                  "src": "1753:48:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ee53c8fd",
            "id": 1898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockReStake",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1890,
                  "mutability": "mutable",
                  "name": "_lockReStakeUntilPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1898,
                  "src": "1702:30:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1889,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1702:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1701:32:32"
            },
            "returnParameters": {
              "id": 1892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1743:0:32"
            },
            "scope": 1945,
            "src": "1681:127:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1907,
              "nodeType": "Block",
              "src": "1860:33:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1903,
                      "name": "worker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1741,
                      "src": "1870:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1904,
                      "name": "_worker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1900,
                      "src": "1879:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1870:16:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1906,
                  "nodeType": "ExpressionStatement",
                  "src": "1870:16:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "dad60676",
            "id": 1908,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bondWorker",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1900,
                  "mutability": "mutable",
                  "name": "_worker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1908,
                  "src": "1834:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1833:17:32"
            },
            "returnParameters": {
              "id": 1902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1860:0:32"
            },
            "scope": 1945,
            "src": "1814:79:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1923,
              "nodeType": "Block",
              "src": "1963:60:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1915,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1735,
                      "src": "1973:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1916,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1910,
                      "src": "1981:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1973:14:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1918,
                  "nodeType": "ExpressionStatement",
                  "src": "1973:14:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1919,
                      "name": "periods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1733,
                      "src": "1997:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1920,
                      "name": "_periods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1912,
                      "src": "2008:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "1997:19:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1922,
                  "nodeType": "ExpressionStatement",
                  "src": "1997:19:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b89f66ed",
            "id": 1924,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prolongStake",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1910,
                  "mutability": "mutable",
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1924,
                  "src": "1921:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1912,
                  "mutability": "mutable",
                  "name": "_periods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1924,
                  "src": "1937:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1911,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1937:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1920:33:32"
            },
            "returnParameters": {
              "id": 1914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1963:0:32"
            },
            "scope": 1945,
            "src": "1899:124:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1933,
              "nodeType": "Block",
              "src": "2092:29:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1931,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1729,
                    "src": "2109:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1930,
                  "id": 1932,
                  "nodeType": "Return",
                  "src": "2102:12:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "178b6de6",
            "id": 1934,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1926,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1934,
                  "src": "2051:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2051:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2050:9:32"
            },
            "returnParameters": {
              "id": 1930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1929,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1934,
                  "src": "2083:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2083:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2082:9:32"
            },
            "scope": 1945,
            "src": "2029:92:32",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1943,
              "nodeType": "Block",
              "src": "2173:37:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1939,
                      "name": "windDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1743,
                      "src": "2183:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1940,
                      "name": "_windDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1936,
                      "src": "2194:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2183:20:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1942,
                  "nodeType": "ExpressionStatement",
                  "src": "2183:20:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9d6f2a09",
            "id": 1944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWindDown",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1936,
                  "mutability": "mutable",
                  "name": "_windDown",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1944,
                  "src": "2148:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1935,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2148:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2147:16:32"
            },
            "returnParameters": {
              "id": 1938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2173:0:32"
            },
            "scope": 1945,
            "src": "2127:83:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2301,
        "src": "195:2017:32"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1946,
          "nodeType": "StructuredDocumentation",
          "src": "2215:52:32",
          "text": "@notice Contract for staking contract tests"
        },
        "fullyImplemented": true,
        "id": 2006,
        "linearizedBaseContracts": [
          2006
        ],
        "name": "PolicyManagerForStakingContractMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "407f8001",
            "id": 1949,
            "mutability": "immutable",
            "name": "secondsPerPeriod",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2006,
            "src": "2320:44:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 1947,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "2320:6:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 1948,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2363:1:32",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "de99c51a",
            "id": 1951,
            "mutability": "mutable",
            "name": "minFeeRate",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2006,
            "src": "2370:25:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1950,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2370:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1980,
              "nodeType": "Block",
              "src": "2447:140:32",
              "statements": [
                {
                  "assignments": [
                    1957
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1957,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1980,
                      "src": "2457:13:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1956,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2457:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1963,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1960,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "2481:4:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyManagerForStakingContractMock_$2006",
                            "typeString": "contract PolicyManagerForStakingContractMock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PolicyManagerForStakingContractMock_$2006",
                            "typeString": "contract PolicyManagerForStakingContractMock"
                          }
                        ],
                        "id": 1959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2473:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1958,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2473:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2473:13:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 1962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2473:21:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2457:37:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1965,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1957,
                          "src": "2512:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2520:1:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2512:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1964,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2504:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2504:18:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1969,
                  "nodeType": "ExpressionStatement",
                  "src": "2504:18:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1975,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1957,
                        "src": "2552:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1970,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2532:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2532:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2532:19:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2532:26:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1977,
                  "nodeType": "ExpressionStatement",
                  "src": "2532:26:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1978,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1957,
                    "src": "2575:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1955,
                  "id": 1979,
                  "nodeType": "Return",
                  "src": "2568:12:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3ccfd60b",
            "id": 1981,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2419:2:32"
            },
            "returnParameters": {
              "id": 1955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1954,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1981,
                  "src": "2438:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2438:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2437:9:32"
            },
            "scope": 2006,
            "src": "2402:185:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1990,
              "nodeType": "Block",
              "src": "2644:41:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1986,
                      "name": "minFeeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1951,
                      "src": "2654:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1987,
                      "name": "_minFeeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1983,
                      "src": "2667:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2654:24:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1989,
                  "nodeType": "ExpressionStatement",
                  "src": "2654:24:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8c316b90",
            "id": 1991,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMinFeeRate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1983,
                  "mutability": "mutable",
                  "name": "_minFeeRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1991,
                  "src": "2616:19:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2616:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2615:21:32"
            },
            "returnParameters": {
              "id": 1985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2644:0:32"
            },
            "scope": 2006,
            "src": "2593:92:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2000,
              "nodeType": "Block",
              "src": "2745:41:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1996,
                      "name": "minFeeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1951,
                      "src": "2755:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1997,
                      "name": "_minFeeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1993,
                      "src": "2768:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2755:24:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1999,
                  "nodeType": "ExpressionStatement",
                  "src": "2755:24:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a043f8a2",
            "id": 2001,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "additionalMethod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1993,
                  "mutability": "mutable",
                  "name": "_minFeeRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2001,
                  "src": "2717:19:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2717:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2716:21:32"
            },
            "returnParameters": {
              "id": 1995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2745:0:32"
            },
            "scope": 2006,
            "src": "2691:95:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2004,
              "nodeType": "Block",
              "src": "2874:2:32",
              "statements": []
            },
            "documentation": null,
            "id": 2005,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2854:2:32"
            },
            "returnParameters": {
              "id": 2003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2874:0:32"
            },
            "scope": 2006,
            "src": "2846:30:32",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2301,
        "src": "2268:610:32"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2007,
          "nodeType": "StructuredDocumentation",
          "src": "2881:52:32",
          "text": "@notice Contract for staking contract tests"
        },
        "fullyImplemented": true,
        "id": 2122,
        "linearizedBaseContracts": [
          2122
        ],
        "name": "WorkLockForStakingContractMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5bf997f5",
            "id": 2010,
            "mutability": "immutable",
            "name": "boostingRefund",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2122,
            "src": "2981:43:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2008,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2981:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 2009,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3023:1:32",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e834a834",
            "id": 2012,
            "mutability": "mutable",
            "name": "claimed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2122,
            "src": "3030:22:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2011,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3030:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4ae791c4",
            "id": 2014,
            "mutability": "mutable",
            "name": "depositedETH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2122,
            "src": "3058:27:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2013,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3058:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "40d5ff58",
            "id": 2016,
            "mutability": "mutable",
            "name": "compensation",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2122,
            "src": "3091:27:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2015,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3091:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "12210e8a",
            "id": 2018,
            "mutability": "mutable",
            "name": "refundETH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2122,
            "src": "3124:24:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2017,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3124:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2026,
              "nodeType": "Block",
              "src": "3187:41:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2021,
                      "name": "depositedETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2014,
                      "src": "3197:12:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2022,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3212:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3212:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3197:24:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2025,
                  "nodeType": "ExpressionStatement",
                  "src": "3197:24:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1998aeef",
            "id": 2027,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bid",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3167:2:32"
            },
            "returnParameters": {
              "id": 2020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3187:0:32"
            },
            "scope": 2122,
            "src": "3155:73:32",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2046,
              "nodeType": "Block",
              "src": "3264:107:32",
              "statements": [
                {
                  "assignments": [
                    2031
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2031,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2046,
                      "src": "3274:13:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2030,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3274:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2033,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2032,
                    "name": "depositedETH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2014,
                    "src": "3290:12:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3274:28:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2034,
                      "name": "depositedETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2014,
                      "src": "3312:12:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3327:1:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3312:16:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2037,
                  "nodeType": "ExpressionStatement",
                  "src": "3312:16:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2043,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2031,
                        "src": "3358:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2038,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3338:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3338:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3338:19:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3338:26:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2045,
                  "nodeType": "ExpressionStatement",
                  "src": "3338:26:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9435c887",
            "id": 2047,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelBid",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3252:2:32"
            },
            "returnParameters": {
              "id": 2029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3264:0:32"
            },
            "scope": 2122,
            "src": "3234:137:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2055,
              "nodeType": "Block",
              "src": "3422:41:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2050,
                      "name": "compensation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2016,
                      "src": "3432:12:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2051,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3447:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3447:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3432:24:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2054,
                  "nodeType": "ExpressionStatement",
                  "src": "3432:24:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9ec61002",
            "id": 2056,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendCompensation",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3402:2:32"
            },
            "returnParameters": {
              "id": 2049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3422:0:32"
            },
            "scope": 2122,
            "src": "3377:86:32",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2075,
              "nodeType": "Block",
              "src": "3510:107:32",
              "statements": [
                {
                  "assignments": [
                    2060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2060,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2075,
                      "src": "3520:13:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2059,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3520:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2062,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2061,
                    "name": "compensation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2016,
                    "src": "3536:12:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3520:28:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2063,
                      "name": "compensation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2016,
                      "src": "3558:12:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3573:1:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3558:16:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2066,
                  "nodeType": "ExpressionStatement",
                  "src": "3558:16:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2072,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2060,
                        "src": "3604:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2067,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3584:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3584:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3584:19:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3584:26:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2074,
                  "nodeType": "ExpressionStatement",
                  "src": "3584:26:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "87a15dc9",
            "id": 2076,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawCompensation",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3498:2:32"
            },
            "returnParameters": {
              "id": 2058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3510:0:32"
            },
            "scope": 2122,
            "src": "3469:148:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2087,
              "nodeType": "Block",
              "src": "3667:53:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2081,
                      "name": "claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2012,
                      "src": "3677:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3688:1:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3677:12:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2084,
                  "nodeType": "ExpressionStatement",
                  "src": "3677:12:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2085,
                    "name": "claimed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2012,
                    "src": "3706:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2080,
                  "id": 2086,
                  "nodeType": "Return",
                  "src": "3699:14:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4e71d92d",
            "id": 2088,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3637:2:32"
            },
            "returnParameters": {
              "id": 2080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2079,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2088,
                  "src": "3658:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3658:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3657:9:32"
            },
            "scope": 2122,
            "src": "3623:97:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2096,
              "nodeType": "Block",
              "src": "3765:38:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2091,
                      "name": "refundETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2018,
                      "src": "3775:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2092,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3787:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3787:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3775:21:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2095,
                  "nodeType": "ExpressionStatement",
                  "src": "3775:21:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9205ab3c",
            "id": 2097,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendRefund",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3745:2:32"
            },
            "returnParameters": {
              "id": 2090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3765:0:32"
            },
            "scope": 2122,
            "src": "3726:77:32",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2120,
              "nodeType": "Block",
              "src": "3854:123:32",
              "statements": [
                {
                  "assignments": [
                    2103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2103,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2120,
                      "src": "3864:13:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2102,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3864:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2105,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2104,
                    "name": "refundETH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2018,
                    "src": "3880:9:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3864:25:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2106,
                      "name": "refundETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2018,
                      "src": "3899:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3911:1:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3899:13:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2109,
                  "nodeType": "ExpressionStatement",
                  "src": "3899:13:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2115,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2103,
                        "src": "3942:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2110,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3922:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3922:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3922:19:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3922:26:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2117,
                  "nodeType": "ExpressionStatement",
                  "src": "3922:26:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2118,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2103,
                    "src": "3965:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2101,
                  "id": 2119,
                  "nodeType": "Return",
                  "src": "3958:12:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "590e1ae3",
            "id": 2121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3824:2:32"
            },
            "returnParameters": {
              "id": 2101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2100,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2121,
                  "src": "3845:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3845:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3844:9:32"
            },
            "scope": 2122,
            "src": "3809:168:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2301,
        "src": "2934:1046:32"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2123,
          "nodeType": "StructuredDocumentation",
          "src": "3983:52:32",
          "text": "@notice Contract for staking contract tests"
        },
        "fullyImplemented": true,
        "id": 2148,
        "linearizedBaseContracts": [
          2148
        ],
        "name": "StakingInterfaceMockV1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 2129,
            "mutability": "immutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2148,
            "src": "4075:43:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2124,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4075:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "31",
                  "id": 2127,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4116:1:32",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "id": 2126,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "4108:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 2125,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4108:7:32",
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  }
                }
              },
              "id": 2128,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4108:10:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e2fdcc17",
            "id": 2135,
            "mutability": "immutable",
            "name": "escrow",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2148,
            "src": "4124:44:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2130,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4124:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "31",
                  "id": 2133,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4166:1:32",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "id": 2132,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "4158:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 2131,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4158:7:32",
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  }
                }
              },
              "id": 2134,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4158:10:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2138,
              "nodeType": "Block",
              "src": "4210:2:32",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "86f78e91",
            "id": 2139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "firstMethod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4195:2:32"
            },
            "returnParameters": {
              "id": 2137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4210:0:32"
            },
            "scope": 2148,
            "src": "4175:37:32",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2146,
              "nodeType": "Block",
              "src": "4272:26:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3230",
                    "id": 2144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4289:2:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  "functionReturnParameters": 2143,
                  "id": 2145,
                  "nodeType": "Return",
                  "src": "4282:9:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e46bc602",
            "id": 2147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "secondMethod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4239:2:32"
            },
            "returnParameters": {
              "id": 2143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2142,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2147,
                  "src": "4263:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4263:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4262:9:32"
            },
            "scope": 2148,
            "src": "4218:80:32",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2301,
        "src": "4036:265:32"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2149,
          "nodeType": "StructuredDocumentation",
          "src": "4304:52:32",
          "text": "@notice Contract for staking contract tests"
        },
        "fullyImplemented": true,
        "id": 2191,
        "linearizedBaseContracts": [
          2191
        ],
        "name": "StakingInterfaceMockV2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 2155,
            "mutability": "immutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2191,
            "src": "4396:43:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2150,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4396:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "31",
                  "id": 2153,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4437:1:32",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "id": 2152,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "4429:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 2151,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4429:7:32",
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  }
                }
              },
              "id": 2154,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4429:10:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e2fdcc17",
            "id": 2161,
            "mutability": "immutable",
            "name": "escrow",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2191,
            "src": "4445:44:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2156,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4445:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "31",
                  "id": 2159,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4487:1:32",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "id": 2158,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "4479:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 2157,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4479:7:32",
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  }
                }
              },
              "id": 2160,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4479:10:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2171,
              "nodeType": "Block",
              "src": "4578:72:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2165,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4629:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4629:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4641:1:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4629:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4621:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4621:22:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2170,
                  "nodeType": "ExpressionStatement",
                  "src": "4621:22:32"
                }
              ]
            },
            "documentation": null,
            "id": 2172,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4558:2:32"
            },
            "returnParameters": {
              "id": 2163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4578:0:32"
            },
            "scope": 2191,
            "src": "4550:100:32",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2177,
              "nodeType": "Block",
              "src": "4698:2:32",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "7b9912f9",
            "id": 2178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "firstMethod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2174,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2178,
                  "src": "4677:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4677:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4676:9:32"
            },
            "returnParameters": {
              "id": 2176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4698:0:32"
            },
            "scope": 2191,
            "src": "4656:44:32",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2185,
              "nodeType": "Block",
              "src": "4760:26:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3135",
                    "id": 2183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4777:2:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_15_by_1",
                      "typeString": "int_const 15"
                    },
                    "value": "15"
                  },
                  "functionReturnParameters": 2182,
                  "id": 2184,
                  "nodeType": "Return",
                  "src": "4770:9:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e46bc602",
            "id": 2186,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "secondMethod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4727:2:32"
            },
            "returnParameters": {
              "id": 2182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2181,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2186,
                  "src": "4751:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4751:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4750:9:32"
            },
            "scope": 2191,
            "src": "4706:80:32",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2189,
              "nodeType": "Block",
              "src": "4827:2:32",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "fd81cd4c",
            "id": 2190,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "thirdMethod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4812:2:32"
            },
            "returnParameters": {
              "id": 2188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4827:0:32"
            },
            "scope": 2191,
            "src": "4792:37:32",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2301,
        "src": "4357:475:32"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2192,
          "nodeType": "StructuredDocumentation",
          "src": "4835:63:32",
          "text": "@dev Interface that could be destroyed by selfdestruct"
        },
        "fullyImplemented": true,
        "id": 2222,
        "linearizedBaseContracts": [
          2222
        ],
        "name": "DestroyableStakingInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 2198,
            "mutability": "immutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2222,
            "src": "4943:43:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2193,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4943:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "31",
                  "id": 2196,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4984:1:32",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "id": 2195,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "4976:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 2194,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4976:7:32",
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  }
                }
              },
              "id": 2197,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4976:10:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e2fdcc17",
            "id": 2204,
            "mutability": "immutable",
            "name": "escrow",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2222,
            "src": "4992:44:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2199,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4992:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "31",
                  "id": 2202,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "5034:1:32",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "id": 2201,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "5026:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 2200,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "5026:7:32",
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  }
                }
              },
              "id": 2203,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "5026:10:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2211,
              "nodeType": "Block",
              "src": "5091:26:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3135",
                    "id": 2209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5108:2:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_15_by_1",
                      "typeString": "int_const 15"
                    },
                    "value": "15"
                  },
                  "functionReturnParameters": 2208,
                  "id": 2210,
                  "nodeType": "Return",
                  "src": "5101:9:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2c383a9f",
            "id": 2212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "method",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5058:2:32"
            },
            "returnParameters": {
              "id": 2208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2207,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2212,
                  "src": "5082:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5082:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5081:9:32"
            },
            "scope": 2222,
            "src": "5043:74:32",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2220,
              "nodeType": "Block",
              "src": "5149:41:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5172:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5172:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2215,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "5159:12:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 2218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5159:24:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2219,
                  "nodeType": "ExpressionStatement",
                  "src": "5159:24:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "83197ef0",
            "id": 2221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destroy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5139:2:32"
            },
            "returnParameters": {
              "id": 2214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5149:0:32"
            },
            "scope": 2222,
            "src": "5123:67:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2301,
        "src": "4899:294:32"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2224,
              "name": "AbstractStakingContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17036,
              "src": "5296:23:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractStakingContract_$17036",
                "typeString": "contract AbstractStakingContract"
              }
            },
            "id": 2225,
            "nodeType": "InheritanceSpecifier",
            "src": "5296:23:32"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2226,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18927,
              "src": "5321:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$18927",
                "typeString": "contract Ownable"
              }
            },
            "id": 2227,
            "nodeType": "InheritanceSpecifier",
            "src": "5321:7:32"
          }
        ],
        "contractDependencies": [
          17036,
          18927
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2223,
          "nodeType": "StructuredDocumentation",
          "src": "5196:65:32",
          "text": "@notice Simple implementation of AbstractStakingContract"
        },
        "fullyImplemented": true,
        "id": 2300,
        "linearizedBaseContracts": [
          2300,
          18927,
          17036
        ],
        "name": "SimpleStakingContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2236,
              "nodeType": "Block",
              "src": "5503:2:32",
              "statements": []
            },
            "documentation": {
              "id": 2228,
              "nodeType": "StructuredDocumentation",
              "src": "5336:78:32",
              "text": "@param _router Address of the StakingInterfaceRouter contract"
            },
            "id": 2237,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2233,
                    "name": "_router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2230,
                    "src": "5494:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingInterfaceRouter_$16921",
                      "typeString": "contract StakingInterfaceRouter"
                    }
                  }
                ],
                "id": 2234,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2232,
                  "name": "AbstractStakingContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 17036,
                  "src": "5470:23:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AbstractStakingContract_$17036_$",
                    "typeString": "type(contract AbstractStakingContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5470:32:32"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2230,
                  "mutability": "mutable",
                  "name": "_router",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2237,
                  "src": "5431:30:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StakingInterfaceRouter_$16921",
                    "typeString": "contract StakingInterfaceRouter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2229,
                    "name": "StakingInterfaceRouter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16921,
                    "src": "5431:22:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingInterfaceRouter_$16921",
                      "typeString": "contract StakingInterfaceRouter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5430:32:32"
            },
            "returnParameters": {
              "id": 2235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5503:0:32"
            },
            "scope": 2300,
            "src": "5419:86:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16982
            ],
            "body": {
              "id": 2254,
              "nodeType": "Block",
              "src": "5699:55:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2249,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5728:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5728:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2251,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2240,
                        "src": "5740:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2246,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16935,
                        "src": "5709:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$11941",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 2248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19232,
                      "src": "5709:18:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$20618_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$20618_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5709:38:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2253,
                  "nodeType": "ExpressionStatement",
                  "src": "5709:38:32"
                }
              ]
            },
            "documentation": {
              "id": 2238,
              "nodeType": "StructuredDocumentation",
              "src": "5511:117:32",
              "text": "@notice Withdraw available amount of tokens to owner\n@param _value Amount of token to withdraw"
            },
            "functionSelector": "315a095d",
            "id": 2255,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2244,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2243,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18854,
                  "src": "5689:9:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5689:9:32"
              }
            ],
            "name": "withdrawTokens",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2242,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5680:8:32"
            },
            "parameters": {
              "id": 2241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2240,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2255,
                  "src": "5657:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5657:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5656:16:32"
            },
            "returnParameters": {
              "id": 2245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5699:0:32"
            },
            "scope": 2300,
            "src": "5633:121:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16986
            ],
            "body": {
              "id": 2284,
              "nodeType": "Block",
              "src": "5874:126:32",
              "statements": [
                {
                  "assignments": [
                    2263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2263,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2284,
                      "src": "5884:15:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2262,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5884:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2269,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2266,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "5910:4:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleStakingContract_$2300",
                            "typeString": "contract SimpleStakingContract"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_SimpleStakingContract_$2300",
                            "typeString": "contract SimpleStakingContract"
                          }
                        ],
                        "id": 2265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5902:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2264,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5902:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5902:13:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 2268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5902:21:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5884:39:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2271,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2263,
                          "src": "5941:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5952:1:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5941:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5933:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5933:21:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2275,
                  "nodeType": "ExpressionStatement",
                  "src": "5933:21:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2281,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2263,
                        "src": "5985:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2276,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5964:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5964:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19903,
                      "src": "5964:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 2282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5964:29:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2283,
                  "nodeType": "ExpressionStatement",
                  "src": "5964:29:32"
                }
              ]
            },
            "documentation": {
              "id": 2256,
              "nodeType": "StructuredDocumentation",
              "src": "5760:60:32",
              "text": "@notice Withdraw available ETH to the owner"
            },
            "functionSelector": "e086e5ec",
            "id": 2285,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2260,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2259,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18854,
                  "src": "5864:9:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5864:9:32"
              }
            ],
            "name": "withdrawETH",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2258,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5855:8:32"
            },
            "parameters": {
              "id": 2257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5845:2:32"
            },
            "returnParameters": {
              "id": 2261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5874:0:32"
            },
            "scope": 2300,
            "src": "5825:175:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16976
            ],
            "body": {
              "id": 2298,
              "nodeType": "Block",
              "src": "6151:45:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2292,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6168:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6168:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2294,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18844,
                        "src": "6182:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6182:7:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6168:21:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2291,
                  "id": 2297,
                  "nodeType": "Return",
                  "src": "6161:28:32"
                }
              ]
            },
            "documentation": {
              "id": 2286,
              "nodeType": "StructuredDocumentation",
              "src": "6006:80:32",
              "text": "@notice Calling fallback function is allowed only for the owner"
            },
            "functionSelector": "bd4bd9ce",
            "id": 2299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isFallbackAllowed",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2288,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6127:8:32"
            },
            "parameters": {
              "id": 2287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6117:2:32"
            },
            "returnParameters": {
              "id": 2291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2290,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2299,
                  "src": "6145:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2289,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6145:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6144:6:32"
            },
            "scope": 2300,
            "src": "6091:105:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2301,
        "src": "5262:937:32"
      }
    ],
    "src": "0:6200:32"
  },
  "bytecode": "60a06040526000805463ffffffff1916600117905534801561002057600080fd5b506040516107af3803806107af8339818101604052602081101561004357600080fd5b5051606081901b6001600160601b0319166080526001600160a01b031661073361007c60003980610422528061061752506107336000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806394bab1d2116100c3578063d2c469321161007c578063d2c4693214610331578063d2d0e06614610339578063d70754ec1461036f578063dad6067614610377578063eba8a2661461039d578063ee53c8fd146103a55761014d565b806394bab1d21461027b5780639d6f2a091461029a578063a4caeb42146102b9578063b85c5145146102c1578063b89f66ed146102dd578063d122b794146103045761014d565b80633fa4f245116101155780633fa4f245146101d8578063407f8001146101e05780634d547ada14610201578063845603a614610225578063853828b61461024c57806386f86dde146102545761014d565b806303a94485146101525780631249c58b14610173578063178b6de61461017b5780632986c0e5146101b35780632e1a7d4d146101bb575b600080fd5b6101716004803603602081101561016857600080fd5b503515156103c6565b005b6101716103d9565b6101a16004803603602081101561019157600080fd5b50356001600160a01b03166103e5565b60408051918252519081900360200190f35b6101a16103ec565b610171600480360360208110156101d157600080fd5b50356103f2565b6101a1610499565b6101e861049f565b6040805163ffffffff9092168252519081900360200190f35b6102096104ab565b604080516001600160a01b039092168252519081900360200190f35b6101716004803603604081101561023b57600080fd5b508035906020013561ffff166104c1565b6101716104d0565b6101716004803603604081101561026a57600080fd5b508035906020013561ffff166104dd565b610283610504565b6040805161ffff9092168252519081900360200190f35b610171600480360360208110156102b057600080fd5b50351515610513565b610283610531565b6102c961053b565b604080519115158252519081900360200190f35b610171600480360360408110156102f357600080fd5b508035906020013561ffff1661054b565b6101716004803603606081101561031a57600080fd5b508035906020810135906040013561ffff1661056d565b6101a1610599565b6101716004803603606081101561034f57600080fd5b5080356001600160a01b0316906020810135906040013561ffff1661059f565b610209610693565b6101716004803603602081101561038d57600080fd5b50356001600160a01b03166106aa565b6102c96106d6565b610171600480360360208110156103bb57600080fd5b503561ffff166106df565b6005805460ff1916911515919091179055565b600180546103e8019055565b5060015490565b60045481565b6001805482900390556040805163a9059cbb60e01b81523360048201526024810183905290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163a9059cbb9160448083019260209291908290030181600087803b15801561046a57600080fd5b505af115801561047e573d6000803e3d6000fd5b505050506040513d602081101561049457600080fd5b505050565b60015481565b60005463ffffffff1681565b600554630100000090046001600160a01b031681565b6104cc33838361059f565b5050565b6104db6001546103f2565b565b60028054929092019091556003805461ffff19811661ffff91821690930116919091179055565b600554610100900461ffff1681565b60058054911515600160b81b0260ff60b81b19909216919091179055565b60035461ffff1681565b600554600160b81b900460ff1681565b6004919091556003805461ffff19811661ffff91821690930116919091179055565b600492909255600280549190910190556003805461ffff19811661ffff91821690930116919091179055565b60025481565b600080546001600160a01b0380861664010000000002640100000000600160c01b0319909216919091178255600180548501905560028054850190556003805461ffff80821686011661ffff19909116179055604080516323b872dd60e01b81523360048201523060248201526044810186905290517f0000000000000000000000000000000000000000000000000000000000000000909216926323b872dd926064808401936020939083900390910190829087803b15801561066257600080fd5b505af1158015610676573d6000803e3d6000fd5b505050506040513d602081101561068c57600080fd5b5050505050565b60005464010000000090046001600160a01b031681565b600580546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b60055460ff1681565b6005805461ffff9092166101000262ffff001990921691909117905556fea264697066735822122069a358c0064c8a19cc185bbfd016f7128deef21b09b55dd00e4658ce6cb5678f64736f6c63430006070033",
  "bytecodeSha1": "7bd6ea9c00f5be1e201f1704099ea23805796195",
  "compiler": {
    "evm_version": "berlin",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.7"
  },
  "contractName": "StakingEscrowForStakingContractMock",
  "coverageMap": {
    "branches": {
      "32": {}
    },
    "statements": {
      "32": {
        "StakingEscrowForStakingContractMock.bondWorker": {
          "20": [
            1870,
            1886
          ]
        },
        "StakingEscrowForStakingContractMock.deposit": {
          "5": [
            726,
            763
          ],
          "15": [
            858,
            870
          ],
          "16": [
            880,
            895
          ],
          "17": [
            905,
            926
          ],
          "18": [
            936,
            955
          ],
          "19": [
            965,
            1018
          ]
        },
        "StakingEscrowForStakingContractMock.divideStake": {
          "12": [
            1252,
            1266
          ],
          "13": [
            1276,
            1300
          ],
          "14": [
            1310,
            1329
          ]
        },
        "StakingEscrowForStakingContractMock.getAllTokens": {
          "2": [
            2102,
            2114
          ]
        },
        "StakingEscrowForStakingContractMock.lock": {
          "7": [
            1097,
            1118
          ],
          "8": [
            1128,
            1147
          ]
        },
        "StakingEscrowForStakingContractMock.lockReStake": {
          "21": [
            1753,
            1801
          ]
        },
        "StakingEscrowForStakingContractMock.mint": {
          "1": [
            1570,
            1583
          ]
        },
        "StakingEscrowForStakingContractMock.prolongStake": {
          "10": [
            1973,
            1987
          ],
          "11": [
            1997,
            2016
          ]
        },
        "StakingEscrowForStakingContractMock.setReStake": {
          "0": [
            1650,
            1668
          ]
        },
        "StakingEscrowForStakingContractMock.setWindDown": {
          "9": [
            2183,
            2203
          ]
        },
        "StakingEscrowForStakingContractMock.withdraw": {
          "3": [
            1393,
            1408
          ],
          "4": [
            1418,
            1452
          ]
        },
        "StakingEscrowForStakingContractMock.withdrawAll": {
          "6": [
            1507,
            1522
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061014d5760003560e01c806394bab1d2116100c3578063d2c469321161007c578063d2c4693214610331578063d2d0e06614610339578063d70754ec1461036f578063dad6067614610377578063eba8a2661461039d578063ee53c8fd146103a55761014d565b806394bab1d21461027b5780639d6f2a091461029a578063a4caeb42146102b9578063b85c5145146102c1578063b89f66ed146102dd578063d122b794146103045761014d565b80633fa4f245116101155780633fa4f245146101d8578063407f8001146101e05780634d547ada14610201578063845603a614610225578063853828b61461024c57806386f86dde146102545761014d565b806303a94485146101525780631249c58b14610173578063178b6de61461017b5780632986c0e5146101b35780632e1a7d4d146101bb575b600080fd5b6101716004803603602081101561016857600080fd5b503515156103c6565b005b6101716103d9565b6101a16004803603602081101561019157600080fd5b50356001600160a01b03166103e5565b60408051918252519081900360200190f35b6101a16103ec565b610171600480360360208110156101d157600080fd5b50356103f2565b6101a1610499565b6101e861049f565b6040805163ffffffff9092168252519081900360200190f35b6102096104ab565b604080516001600160a01b039092168252519081900360200190f35b6101716004803603604081101561023b57600080fd5b508035906020013561ffff166104c1565b6101716104d0565b6101716004803603604081101561026a57600080fd5b508035906020013561ffff166104dd565b610283610504565b6040805161ffff9092168252519081900360200190f35b610171600480360360208110156102b057600080fd5b50351515610513565b610283610531565b6102c961053b565b604080519115158252519081900360200190f35b610171600480360360408110156102f357600080fd5b508035906020013561ffff1661054b565b6101716004803603606081101561031a57600080fd5b508035906020810135906040013561ffff1661056d565b6101a1610599565b6101716004803603606081101561034f57600080fd5b5080356001600160a01b0316906020810135906040013561ffff1661059f565b610209610693565b6101716004803603602081101561038d57600080fd5b50356001600160a01b03166106aa565b6102c96106d6565b610171600480360360208110156103bb57600080fd5b503561ffff166106df565b6005805460ff1916911515919091179055565b600180546103e8019055565b5060015490565b60045481565b6001805482900390556040805163a9059cbb60e01b81523360048201526024810183905290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163a9059cbb9160448083019260209291908290030181600087803b15801561046a57600080fd5b505af115801561047e573d6000803e3d6000fd5b505050506040513d602081101561049457600080fd5b505050565b60015481565b60005463ffffffff1681565b600554630100000090046001600160a01b031681565b6104cc33838361059f565b5050565b6104db6001546103f2565b565b60028054929092019091556003805461ffff19811661ffff91821690930116919091179055565b600554610100900461ffff1681565b60058054911515600160b81b0260ff60b81b19909216919091179055565b60035461ffff1681565b600554600160b81b900460ff1681565b6004919091556003805461ffff19811661ffff91821690930116919091179055565b600492909255600280549190910190556003805461ffff19811661ffff91821690930116919091179055565b60025481565b600080546001600160a01b0380861664010000000002640100000000600160c01b0319909216919091178255600180548501905560028054850190556003805461ffff80821686011661ffff19909116179055604080516323b872dd60e01b81523360048201523060248201526044810186905290517f0000000000000000000000000000000000000000000000000000000000000000909216926323b872dd926064808401936020939083900390910190829087803b15801561066257600080fd5b505af1158015610676573d6000803e3d6000fd5b505050506040513d602081101561068c57600080fd5b5050505050565b60005464010000000090046001600160a01b031681565b600580546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b60055460ff1681565b6005805461ffff9092166101000262ffff001990921691909117905556fea264697066735822122069a358c0064c8a19cc185bbfd016f7128deef21b09b55dd00e4658ce6cb5678f64736f6c63430006070033",
  "deployedSourceMap": "195:2017:32:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;195:2017:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1596:79:32;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1596:79:32;;;;:::i;:::-;;1535:55;;;:::i;2029:92::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2029:92:32;-1:-1:-1;;;;;2029:92:32;;:::i;:::-;;;;;;;;;;;;;;;;432:20;;;:::i;1342:117::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1342:117:32;;:::i;347:20::-;;;:::i;282:34::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;525:21;;;:::i;:::-;;;;-1:-1:-1;;;;;525:21:32;;;;;;;;;;;;;;657:113;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;657:113:32;;;;;;;;;:::i;1465:64::-;;;:::i;1031:123::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1031:123:32;;;;;;;;;:::i;483:36::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2127:83;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2127:83:32;;;;:::i;405:21::-;;;:::i;552:20::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;1899:124;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1899:124:32;;;;;;;;;:::i;1160:176::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1160:176:32;;;;;;;;;;;;;;:::i;373:26::-;;;:::i;776:249::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;776:249:32;;-1:-1:-1;;;;;776:249:32;;;;;;;;;;;;;:::i;322:19::-;;;:::i;1814:79::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1814:79:32;-1:-1:-1;;;;;1814:79:32;;:::i;458:19::-;;;:::i;1681:127::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1681:127:32;;;;:::i;1596:79::-;1650:7;:18;;-1:-1:-1;;1650:18:32;;;;;;;;;;1596:79::o;1535:55::-;1570:5;:13;;1579:4;1570:13;;;1535:55::o;2029:92::-;-1:-1:-1;2109:5:32;;;2029:92::o;432:20::-;;;;:::o;1342:117::-;1393:5;:15;;;;;;;1418:34;;;-1:-1:-1;;;1418:34:32;;1433:10;1418:34;;;;;;;;;;;;-1:-1:-1;;;;;1418:5:32;:14;;;;:34;;;;;;;;;;;;;;1393:5;1418:14;:34;;;2:2:-1;;;;27:1;24;17:12;2:2;1418:34:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1418:34:32;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;1342:117:32:o;347:20::-;;;;:::o;282:34::-;;;;;;:::o;525:21::-;;;;;;-1:-1:-1;;;;;525:21:32;;:::o;657:113::-;726:37;734:10;746:6;754:8;726:7;:37::i;:::-;657:113;;:::o;1465:64::-;1507:15;1516:5;;1507:8;:15::i;:::-;1465:64::o;1031:123::-;1097:11;:21;;;;;;;;;1128:7;:19;;-1:-1:-1;;1128:19:32;;;;;;;;;;;;;;;;1031:123::o;483:36::-;;;;;;;;;:::o;2127:83::-;2183:8;:20;;;;;-1:-1:-1;;;2183:20:32;-1:-1:-1;;;;2183:20:32;;;;;;;;;2127:83::o;405:21::-;;;;;;:::o;552:20::-;;;-1:-1:-1;;;552:20:32;;;;;:::o;1899:124::-;1973:5;:14;;;;1997:7;:19;;-1:-1:-1;;1997:19:32;;;;;;;;;;;;;;;;1899:124::o;1160:176::-;1252:5;:14;;;;1276:11;:24;;;;;;;;1310:7;:19;;-1:-1:-1;;1310:19:32;;;;;;;;;;;;;;;;1160:176::o;373:26::-;;;;:::o;776:249::-;858:4;:12;;-1:-1:-1;;;;;858:12:32;;;;;-1:-1:-1;;;;;;858:12:32;;;;;;;;;-1:-1:-1;880:15:32;;;;;;905:11;:21;;;;;;936:7;:19;;;;;;;;;-1:-1:-1;;936:19:32;;;;;;965:53;;;-1:-1:-1;;;965:53:32;;984:10;858:4;965:53;;;1004:4;965:53;;;;;;;;;;;;:5;:18;;;;;;:53;;;;;;;;;;;;;;;;;:18;:53;;;2:2:-1;;;;27:1;24;17:12;2:2;965:53:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;965:53:32;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;776:249:32:o;322:19::-;;;;;;-1:-1:-1;;;;;322:19:32;;:::o;1814:79::-;1870:6;:16;;-1:-1:-1;;;;;1870:16:32;;;;;-1:-1:-1;;;;;;1870:16:32;;;;;;;;;1814:79::o;458:19::-;;;;;;:::o;1681:127::-;1753:22;:48;;;;;;;;-1:-1:-1;;1753:48:32;;;;;;;;;1681:127::o",
  "language": "Solidity",
  "natspec": {
    "methods": {},
    "notice": "Contract for using in staking contracts tests"
  },
  "offset": [
    195,
    2212
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x94BAB1D2 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD2C46932 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD2C46932 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xD2D0E066 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xD70754EC EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xDAD60676 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0xEBA8A266 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xEE53C8FD EQ PUSH2 0x3A5 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x94BAB1D2 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x9D6F2A09 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xA4CAEB42 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xB85C5145 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xB89F66ED EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xD122B794 EQ PUSH2 0x304 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x3FA4F245 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x3FA4F245 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x407F8001 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x4D547ADA EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x845603A6 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x86F86DDE EQ PUSH2 0x254 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x3A94485 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x178B6DE6 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x3C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x3EC JUMP JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x283 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x513 JUMP JUMPDEST PUSH2 0x283 PUSH2 0x531 JUMP JUMPDEST PUSH2 0x2C9 PUSH2 0x53B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x54B JUMP JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x56D JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x599 JUMP JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x59F JUMP JUMPDEST PUSH2 0x209 PUSH2 0x693 JUMP JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x2C9 PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x3E8 ADD SWAP1 SSTORE JUMP JUMPDEST POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x47E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4CC CALLER DUP4 DUP4 PUSH2 0x59F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4DB PUSH1 0x1 SLOAD PUSH2 0x3F2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP3 ADD SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH2 0xFFFF NOT DUP2 AND PUSH2 0xFFFF SWAP2 DUP3 AND SWAP1 SWAP4 ADD AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xB8 SHL MUL PUSH1 0xFF PUSH1 0xB8 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH2 0xFFFF NOT DUP2 AND PUSH2 0xFFFF SWAP2 DUP3 AND SWAP1 SWAP4 ADD AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH2 0xFFFF NOT DUP2 AND PUSH2 0xFFFF SWAP2 DUP3 AND SWAP1 SWAP4 ADD AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH5 0x100000000 MUL PUSH5 0x100000000 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH2 0xFFFF DUP1 DUP3 AND DUP7 ADD AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x0 SWAP1 SWAP3 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x676 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH4 0x1000000 MUL PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH3 0xFFFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xA358C0064C8A19CC185B 0xBF 0xD0 AND 0xF7 SLT DUP14 0xEE CALLCODE SHL MULMOD 0xB5 0x5D 0xD0 0xE CHAINID PC 0xCE PUSH13 0xB5678F64736F6C634300060700 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        195,
        2212
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "CALLVALUE",
      "path": "32"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "REVERT",
      "path": "32"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        195,
        2212
      ],
      "op": "POP",
      "path": "32"
    },
    "18": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "21": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "LT",
      "path": "32"
    },
    "22": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x14D"
    },
    "25": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "26": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "29": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "SHR",
      "path": "32"
    },
    "32": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "33": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x94BAB1D2"
    },
    "38": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "GT",
      "path": "32"
    },
    "39": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "43": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "44": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xD2C46932"
    },
    "49": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "GT",
      "path": "32"
    },
    "50": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "54": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "55": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xD2C46932"
    },
    "60": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "61": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x331"
    },
    "64": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "65": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "66": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xD2D0E066"
    },
    "71": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "72": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x339"
    },
    "75": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "76": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "77": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xD70754EC"
    },
    "82": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "83": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x36F"
    },
    "86": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "87": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "88": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xDAD60676"
    },
    "93": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "94": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x377"
    },
    "97": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "98": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "99": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xEBA8A266"
    },
    "104": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "105": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x39D"
    },
    "108": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "109": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "110": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xEE53C8FD"
    },
    "115": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "116": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3A5"
    },
    "119": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "120": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x14D"
    },
    "123": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMP",
      "path": "32"
    },
    "124": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "125": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "126": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x94BAB1D2"
    },
    "131": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "132": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x27B"
    },
    "135": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "136": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "137": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x9D6F2A09"
    },
    "142": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "143": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x29A"
    },
    "146": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "147": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "148": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xA4CAEB42"
    },
    "153": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "154": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2B9"
    },
    "157": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "158": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "159": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xB85C5145"
    },
    "164": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "165": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2C1"
    },
    "168": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "169": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "170": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xB89F66ED"
    },
    "175": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "176": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2DD"
    },
    "179": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "180": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "181": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xD122B794"
    },
    "186": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "187": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x304"
    },
    "190": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "191": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x14D"
    },
    "194": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMP",
      "path": "32"
    },
    "195": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "196": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "197": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x3FA4F245"
    },
    "202": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "GT",
      "path": "32"
    },
    "203": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "207": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "208": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x3FA4F245"
    },
    "213": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "214": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1D8"
    },
    "217": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "218": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "219": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x407F8001"
    },
    "224": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "225": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1E0"
    },
    "228": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "229": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "230": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x4D547ADA"
    },
    "235": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "236": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x201"
    },
    "239": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "240": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "241": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x845603A6"
    },
    "246": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "247": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x225"
    },
    "250": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "251": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "252": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x853828B6"
    },
    "257": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "258": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x24C"
    },
    "261": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "262": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "263": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x86F86DDE"
    },
    "268": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "269": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x254"
    },
    "272": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "273": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x14D"
    },
    "276": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMP",
      "path": "32"
    },
    "277": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "278": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "279": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x3A94485"
    },
    "284": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "285": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x152"
    },
    "288": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "289": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "290": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x1249C58B"
    },
    "295": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "296": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x173"
    },
    "299": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "300": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "301": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x178B6DE6"
    },
    "306": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "307": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x17B"
    },
    "310": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "311": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "312": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x2986C0E5"
    },
    "317": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "318": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1B3"
    },
    "321": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "322": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "DUP1",
      "path": "32"
    },
    "323": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x2E1A7D4D"
    },
    "328": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "EQ",
      "path": "32"
    },
    "329": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1BB"
    },
    "332": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "333": {
      "fn": null,
      "offset": [
        195,
        2212
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "336": {
      "op": "DUP1"
    },
    "337": {
      "first_revert": true,
      "op": "REVERT"
    },
    "338": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1596,
        1675
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "339": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1596,
        1675
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x171"
    },
    "342": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1596,
        1675
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "344": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1596,
        1675
      ],
      "op": "DUP1",
      "path": "32"
    },
    "345": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1596,
        1675
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "346": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1596,
        1675
      ],
      "op": "SUB",
      "path": "32"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "349": {
      "op": "DUP2"
    },
    "350": {
      "op": "LT"
    },
    "351": {
      "op": "ISZERO"
    },
    "352": {
      "op": "PUSH2",
      "value": "0x168"
    },
    "355": {
      "op": "JUMPI"
    },
    "356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "358": {
      "op": "DUP1"
    },
    "359": {
      "op": "REVERT"
    },
    "360": {
      "op": "JUMPDEST"
    },
    "361": {
      "op": "POP"
    },
    "362": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1596,
        1675
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "363": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1596,
        1675
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "364": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1596,
        1675
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "365": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1596,
        1675
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3C6"
    },
    "368": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "jump": "i",
      "offset": [
        1596,
        1675
      ],
      "op": "JUMP",
      "path": "32"
    },
    "369": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1596,
        1675
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "370": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1596,
        1675
      ],
      "op": "STOP",
      "path": "32"
    },
    "371": {
      "fn": "StakingEscrowForStakingContractMock.mint",
      "offset": [
        1535,
        1590
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "372": {
      "fn": "StakingEscrowForStakingContractMock.mint",
      "offset": [
        1535,
        1590
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x171"
    },
    "375": {
      "fn": "StakingEscrowForStakingContractMock.mint",
      "offset": [
        1535,
        1590
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3D9"
    },
    "378": {
      "fn": "StakingEscrowForStakingContractMock.mint",
      "jump": "i",
      "offset": [
        1535,
        1590
      ],
      "op": "JUMP",
      "path": "32"
    },
    "379": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "380": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1A1"
    },
    "383": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "385": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "DUP1",
      "path": "32"
    },
    "386": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "387": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "SUB",
      "path": "32"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "390": {
      "op": "DUP2"
    },
    "391": {
      "op": "LT"
    },
    "392": {
      "op": "ISZERO"
    },
    "393": {
      "op": "PUSH2",
      "value": "0x191"
    },
    "396": {
      "op": "JUMPI"
    },
    "397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "399": {
      "op": "DUP1"
    },
    "400": {
      "op": "REVERT"
    },
    "401": {
      "op": "JUMPDEST"
    },
    "402": {
      "op": "POP"
    },
    "403": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "410": {
      "op": "SHL"
    },
    "411": {
      "op": "SUB"
    },
    "412": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "AND",
      "path": "32"
    },
    "413": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3E5"
    },
    "416": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "jump": "i",
      "offset": [
        2029,
        2121
      ],
      "op": "JUMP",
      "path": "32"
    },
    "417": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "418": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "420": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "DUP1",
      "path": "32"
    },
    "421": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "422": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "423": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "DUP3",
      "path": "32"
    },
    "424": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "425": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "426": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "427": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "DUP2",
      "path": "32"
    },
    "428": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "429": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "SUB",
      "path": "32"
    },
    "430": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "432": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "ADD",
      "path": "32"
    },
    "433": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "434": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "RETURN",
      "path": "32"
    },
    "435": {
      "offset": [
        432,
        452
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "436": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        432,
        452
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1A1"
    },
    "439": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        432,
        452
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3EC"
    },
    "442": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "jump": "i",
      "offset": [
        432,
        452
      ],
      "op": "JUMP",
      "path": "32"
    },
    "443": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1342,
        1459
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "444": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1342,
        1459
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x171"
    },
    "447": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1342,
        1459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "449": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1342,
        1459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "450": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1342,
        1459
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "451": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1342,
        1459
      ],
      "op": "SUB",
      "path": "32"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "454": {
      "op": "DUP2"
    },
    "455": {
      "op": "LT"
    },
    "456": {
      "op": "ISZERO"
    },
    "457": {
      "op": "PUSH2",
      "value": "0x1D1"
    },
    "460": {
      "op": "JUMPI"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "463": {
      "op": "DUP1"
    },
    "464": {
      "op": "REVERT"
    },
    "465": {
      "op": "JUMPDEST"
    },
    "466": {
      "op": "POP"
    },
    "467": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1342,
        1459
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "468": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1342,
        1459
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3F2"
    },
    "471": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "jump": "i",
      "offset": [
        1342,
        1459
      ],
      "op": "JUMP",
      "path": "32"
    },
    "472": {
      "offset": [
        347,
        367
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "473": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        347,
        367
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1A1"
    },
    "476": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        347,
        367
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x499"
    },
    "479": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "jump": "i",
      "offset": [
        347,
        367
      ],
      "op": "JUMP",
      "path": "32"
    },
    "480": {
      "offset": [
        282,
        316
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "481": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1E8"
    },
    "484": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x49F"
    },
    "487": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "jump": "i",
      "offset": [
        282,
        316
      ],
      "op": "JUMP",
      "path": "32"
    },
    "488": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "489": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "491": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "DUP1",
      "path": "32"
    },
    "492": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "493": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "498": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "499": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "500": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "AND",
      "path": "32"
    },
    "501": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "DUP3",
      "path": "32"
    },
    "502": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "503": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "504": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "505": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "DUP2",
      "path": "32"
    },
    "506": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "507": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "SUB",
      "path": "32"
    },
    "508": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "510": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "ADD",
      "path": "32"
    },
    "511": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "512": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "RETURN",
      "path": "32"
    },
    "513": {
      "offset": [
        525,
        546
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "514": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x209"
    },
    "517": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4AB"
    },
    "520": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "jump": "i",
      "offset": [
        525,
        546
      ],
      "op": "JUMP",
      "path": "32"
    },
    "521": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "522": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "524": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "DUP1",
      "path": "32"
    },
    "525": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "532": {
      "op": "SHL"
    },
    "533": {
      "op": "SUB"
    },
    "534": {
      "offset": [
        525,
        546
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "535": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "536": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "AND",
      "path": "32"
    },
    "537": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "DUP3",
      "path": "32"
    },
    "538": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "539": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "540": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "541": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "DUP2",
      "path": "32"
    },
    "542": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "543": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "SUB",
      "path": "32"
    },
    "544": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "546": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "ADD",
      "path": "32"
    },
    "547": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "548": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "RETURN",
      "path": "32"
    },
    "549": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "550": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x171"
    },
    "553": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "555": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "DUP1",
      "path": "32"
    },
    "556": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "557": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "SUB",
      "path": "32"
    },
    "558": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "560": {
      "op": "DUP2"
    },
    "561": {
      "op": "LT"
    },
    "562": {
      "op": "ISZERO"
    },
    "563": {
      "op": "PUSH2",
      "value": "0x23B"
    },
    "566": {
      "op": "JUMPI"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "569": {
      "op": "DUP1"
    },
    "570": {
      "op": "REVERT"
    },
    "571": {
      "op": "JUMPDEST"
    },
    "572": {
      "op": "POP"
    },
    "573": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "DUP1",
      "path": "32"
    },
    "574": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "575": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "576": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "578": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "ADD",
      "path": "32"
    },
    "579": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "580": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xFFFF"
    },
    "583": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "AND",
      "path": "32"
    },
    "584": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4C1"
    },
    "587": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "jump": "i",
      "offset": [
        657,
        770
      ],
      "op": "JUMP",
      "path": "32"
    },
    "588": {
      "fn": "StakingEscrowForStakingContractMock.withdrawAll",
      "offset": [
        1465,
        1529
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "589": {
      "fn": "StakingEscrowForStakingContractMock.withdrawAll",
      "offset": [
        1465,
        1529
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x171"
    },
    "592": {
      "fn": "StakingEscrowForStakingContractMock.withdrawAll",
      "offset": [
        1465,
        1529
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4D0"
    },
    "595": {
      "fn": "StakingEscrowForStakingContractMock.withdrawAll",
      "jump": "i",
      "offset": [
        1465,
        1529
      ],
      "op": "JUMP",
      "path": "32"
    },
    "596": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1031,
        1154
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "597": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1031,
        1154
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x171"
    },
    "600": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1031,
        1154
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "602": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1031,
        1154
      ],
      "op": "DUP1",
      "path": "32"
    },
    "603": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1031,
        1154
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "604": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1031,
        1154
      ],
      "op": "SUB",
      "path": "32"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "607": {
      "op": "DUP2"
    },
    "608": {
      "op": "LT"
    },
    "609": {
      "op": "ISZERO"
    },
    "610": {
      "op": "PUSH2",
      "value": "0x26A"
    },
    "613": {
      "op": "JUMPI"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "616": {
      "op": "DUP1"
    },
    "617": {
      "op": "REVERT"
    },
    "618": {
      "op": "JUMPDEST"
    },
    "619": {
      "op": "POP"
    },
    "620": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1031,
        1154
      ],
      "op": "DUP1",
      "path": "32"
    },
    "621": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1031,
        1154
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "622": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1031,
        1154
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "623": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1031,
        1154
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "625": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1031,
        1154
      ],
      "op": "ADD",
      "path": "32"
    },
    "626": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1031,
        1154
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "627": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1031,
        1154
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xFFFF"
    },
    "630": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1031,
        1154
      ],
      "op": "AND",
      "path": "32"
    },
    "631": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1031,
        1154
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4DD"
    },
    "634": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "jump": "i",
      "offset": [
        1031,
        1154
      ],
      "op": "JUMP",
      "path": "32"
    },
    "635": {
      "offset": [
        483,
        519
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "636": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x283"
    },
    "639": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x504"
    },
    "642": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "jump": "i",
      "offset": [
        483,
        519
      ],
      "op": "JUMP",
      "path": "32"
    },
    "643": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "644": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "646": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "DUP1",
      "path": "32"
    },
    "647": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "648": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xFFFF"
    },
    "651": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "652": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "653": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "AND",
      "path": "32"
    },
    "654": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "DUP3",
      "path": "32"
    },
    "655": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "656": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "657": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "658": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "DUP2",
      "path": "32"
    },
    "659": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "660": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "SUB",
      "path": "32"
    },
    "661": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "663": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "ADD",
      "path": "32"
    },
    "664": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "665": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "RETURN",
      "path": "32"
    },
    "666": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2127,
        2210
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "667": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2127,
        2210
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x171"
    },
    "670": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2127,
        2210
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "672": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2127,
        2210
      ],
      "op": "DUP1",
      "path": "32"
    },
    "673": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2127,
        2210
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "674": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2127,
        2210
      ],
      "op": "SUB",
      "path": "32"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "677": {
      "op": "DUP2"
    },
    "678": {
      "op": "LT"
    },
    "679": {
      "op": "ISZERO"
    },
    "680": {
      "op": "PUSH2",
      "value": "0x2B0"
    },
    "683": {
      "op": "JUMPI"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "686": {
      "op": "DUP1"
    },
    "687": {
      "op": "REVERT"
    },
    "688": {
      "op": "JUMPDEST"
    },
    "689": {
      "op": "POP"
    },
    "690": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2127,
        2210
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "691": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2127,
        2210
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "692": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2127,
        2210
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "693": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2127,
        2210
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x513"
    },
    "696": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "jump": "i",
      "offset": [
        2127,
        2210
      ],
      "op": "JUMP",
      "path": "32"
    },
    "697": {
      "offset": [
        405,
        426
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "698": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        405,
        426
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x283"
    },
    "701": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        405,
        426
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x531"
    },
    "704": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "jump": "i",
      "offset": [
        405,
        426
      ],
      "op": "JUMP",
      "path": "32"
    },
    "705": {
      "offset": [
        552,
        572
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "706": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2C9"
    },
    "709": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x53B"
    },
    "712": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "jump": "i",
      "offset": [
        552,
        572
      ],
      "op": "JUMP",
      "path": "32"
    },
    "713": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "714": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "716": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "DUP1",
      "path": "32"
    },
    "717": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "718": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "719": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "720": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "721": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "DUP3",
      "path": "32"
    },
    "722": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "723": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "724": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "725": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "DUP2",
      "path": "32"
    },
    "726": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "727": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "SUB",
      "path": "32"
    },
    "728": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "730": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "ADD",
      "path": "32"
    },
    "731": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "732": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "RETURN",
      "path": "32"
    },
    "733": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1899,
        2023
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "734": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1899,
        2023
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x171"
    },
    "737": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1899,
        2023
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "739": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1899,
        2023
      ],
      "op": "DUP1",
      "path": "32"
    },
    "740": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1899,
        2023
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "741": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1899,
        2023
      ],
      "op": "SUB",
      "path": "32"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "744": {
      "op": "DUP2"
    },
    "745": {
      "op": "LT"
    },
    "746": {
      "op": "ISZERO"
    },
    "747": {
      "op": "PUSH2",
      "value": "0x2F3"
    },
    "750": {
      "op": "JUMPI"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "753": {
      "op": "DUP1"
    },
    "754": {
      "op": "REVERT"
    },
    "755": {
      "op": "JUMPDEST"
    },
    "756": {
      "op": "POP"
    },
    "757": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1899,
        2023
      ],
      "op": "DUP1",
      "path": "32"
    },
    "758": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1899,
        2023
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "759": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1899,
        2023
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "760": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1899,
        2023
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "762": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1899,
        2023
      ],
      "op": "ADD",
      "path": "32"
    },
    "763": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1899,
        2023
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "764": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1899,
        2023
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xFFFF"
    },
    "767": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1899,
        2023
      ],
      "op": "AND",
      "path": "32"
    },
    "768": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1899,
        2023
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x54B"
    },
    "771": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "jump": "i",
      "offset": [
        1899,
        2023
      ],
      "op": "JUMP",
      "path": "32"
    },
    "772": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "773": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x171"
    },
    "776": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "778": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "DUP1",
      "path": "32"
    },
    "779": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "780": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "SUB",
      "path": "32"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "783": {
      "op": "DUP2"
    },
    "784": {
      "op": "LT"
    },
    "785": {
      "op": "ISZERO"
    },
    "786": {
      "op": "PUSH2",
      "value": "0x31A"
    },
    "789": {
      "op": "JUMPI"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "792": {
      "op": "DUP1"
    },
    "793": {
      "op": "REVERT"
    },
    "794": {
      "op": "JUMPDEST"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "DUP1",
      "path": "32"
    },
    "797": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "798": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "799": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "801": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "DUP2",
      "path": "32"
    },
    "802": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "ADD",
      "path": "32"
    },
    "803": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "804": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "805": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "807": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "ADD",
      "path": "32"
    },
    "808": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "809": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xFFFF"
    },
    "812": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "AND",
      "path": "32"
    },
    "813": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x56D"
    },
    "816": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "jump": "i",
      "offset": [
        1160,
        1336
      ],
      "op": "JUMP",
      "path": "32"
    },
    "817": {
      "offset": [
        373,
        399
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "818": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        373,
        399
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1A1"
    },
    "821": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        373,
        399
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x599"
    },
    "824": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "jump": "i",
      "offset": [
        373,
        399
      ],
      "op": "JUMP",
      "path": "32"
    },
    "825": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "826": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x171"
    },
    "829": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "831": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "DUP1",
      "path": "32"
    },
    "832": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "833": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "SUB",
      "path": "32"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "836": {
      "op": "DUP2"
    },
    "837": {
      "op": "LT"
    },
    "838": {
      "op": "ISZERO"
    },
    "839": {
      "op": "PUSH2",
      "value": "0x34F"
    },
    "842": {
      "op": "JUMPI"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "845": {
      "op": "DUP1"
    },
    "846": {
      "op": "REVERT"
    },
    "847": {
      "op": "JUMPDEST"
    },
    "848": {
      "op": "POP"
    },
    "849": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "DUP1",
      "path": "32"
    },
    "850": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "857": {
      "op": "SHL"
    },
    "858": {
      "op": "SUB"
    },
    "859": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "AND",
      "path": "32"
    },
    "860": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "861": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "863": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "DUP2",
      "path": "32"
    },
    "864": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "ADD",
      "path": "32"
    },
    "865": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "866": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "867": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "869": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "ADD",
      "path": "32"
    },
    "870": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "871": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xFFFF"
    },
    "874": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "AND",
      "path": "32"
    },
    "875": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x59F"
    },
    "878": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "jump": "i",
      "offset": [
        776,
        1025
      ],
      "op": "JUMP",
      "path": "32"
    },
    "879": {
      "offset": [
        322,
        341
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "880": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        322,
        341
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x209"
    },
    "883": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        322,
        341
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x693"
    },
    "886": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "jump": "i",
      "offset": [
        322,
        341
      ],
      "op": "JUMP",
      "path": "32"
    },
    "887": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1814,
        1893
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "888": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1814,
        1893
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x171"
    },
    "891": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1814,
        1893
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "893": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1814,
        1893
      ],
      "op": "DUP1",
      "path": "32"
    },
    "894": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1814,
        1893
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "895": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1814,
        1893
      ],
      "op": "SUB",
      "path": "32"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "898": {
      "op": "DUP2"
    },
    "899": {
      "op": "LT"
    },
    "900": {
      "op": "ISZERO"
    },
    "901": {
      "op": "PUSH2",
      "value": "0x38D"
    },
    "904": {
      "op": "JUMPI"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "907": {
      "op": "DUP1"
    },
    "908": {
      "op": "REVERT"
    },
    "909": {
      "op": "JUMPDEST"
    },
    "910": {
      "op": "POP"
    },
    "911": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1814,
        1893
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "918": {
      "op": "SHL"
    },
    "919": {
      "op": "SUB"
    },
    "920": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1814,
        1893
      ],
      "op": "AND",
      "path": "32"
    },
    "921": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1814,
        1893
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x6AA"
    },
    "924": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "jump": "i",
      "offset": [
        1814,
        1893
      ],
      "op": "JUMP",
      "path": "32"
    },
    "925": {
      "offset": [
        458,
        477
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "926": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        458,
        477
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2C9"
    },
    "929": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        458,
        477
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x6D6"
    },
    "932": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "jump": "i",
      "offset": [
        458,
        477
      ],
      "op": "JUMP",
      "path": "32"
    },
    "933": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1681,
        1808
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "934": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1681,
        1808
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x171"
    },
    "937": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1681,
        1808
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "939": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1681,
        1808
      ],
      "op": "DUP1",
      "path": "32"
    },
    "940": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1681,
        1808
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "941": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1681,
        1808
      ],
      "op": "SUB",
      "path": "32"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "944": {
      "op": "DUP2"
    },
    "945": {
      "op": "LT"
    },
    "946": {
      "op": "ISZERO"
    },
    "947": {
      "op": "PUSH2",
      "value": "0x3BB"
    },
    "950": {
      "op": "JUMPI"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "953": {
      "op": "DUP1"
    },
    "954": {
      "op": "REVERT"
    },
    "955": {
      "op": "JUMPDEST"
    },
    "956": {
      "op": "POP"
    },
    "957": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1681,
        1808
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "958": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1681,
        1808
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xFFFF"
    },
    "961": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1681,
        1808
      ],
      "op": "AND",
      "path": "32"
    },
    "962": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1681,
        1808
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x6DF"
    },
    "965": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "jump": "i",
      "offset": [
        1681,
        1808
      ],
      "op": "JUMP",
      "path": "32"
    },
    "966": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1596,
        1675
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "967": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1650,
        1657
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 0,
      "value": "0x5"
    },
    "969": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1650,
        1668
      ],
      "op": "DUP1",
      "path": "32"
    },
    "970": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1650,
        1668
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "973": {
      "op": "NOT"
    },
    "974": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1650,
        1668
      ],
      "op": "AND",
      "path": "32"
    },
    "975": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1650,
        1668
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "976": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1650,
        1668
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "977": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1650,
        1668
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "978": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1650,
        1668
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "979": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1650,
        1668
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "980": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1650,
        1668
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "981": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1650,
        1668
      ],
      "op": "OR",
      "path": "32"
    },
    "982": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1650,
        1668
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "983": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "offset": [
        1650,
        1668
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "984": {
      "fn": "StakingEscrowForStakingContractMock.setReStake",
      "jump": "o",
      "offset": [
        1596,
        1675
      ],
      "op": "JUMP",
      "path": "32"
    },
    "985": {
      "fn": "StakingEscrowForStakingContractMock.mint",
      "offset": [
        1535,
        1590
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "986": {
      "fn": "StakingEscrowForStakingContractMock.mint",
      "offset": [
        1570,
        1575
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 1,
      "value": "0x1"
    },
    "988": {
      "fn": "StakingEscrowForStakingContractMock.mint",
      "offset": [
        1570,
        1583
      ],
      "op": "DUP1",
      "path": "32"
    },
    "989": {
      "fn": "StakingEscrowForStakingContractMock.mint",
      "offset": [
        1570,
        1583
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "990": {
      "fn": "StakingEscrowForStakingContractMock.mint",
      "offset": [
        1579,
        1583
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3E8"
    },
    "993": {
      "fn": "StakingEscrowForStakingContractMock.mint",
      "offset": [
        1570,
        1583
      ],
      "op": "ADD",
      "path": "32"
    },
    "994": {
      "fn": "StakingEscrowForStakingContractMock.mint",
      "offset": [
        1570,
        1583
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "995": {
      "fn": "StakingEscrowForStakingContractMock.mint",
      "offset": [
        1570,
        1583
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "996": {
      "fn": "StakingEscrowForStakingContractMock.mint",
      "jump": "o",
      "offset": [
        1535,
        1590
      ],
      "op": "JUMP",
      "path": "32"
    },
    "997": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2029,
        2121
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "998": {
      "op": "POP"
    },
    "999": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2109,
        2114
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 2,
      "value": "0x1"
    },
    "1001": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2109,
        2114
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1002": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        2109,
        2114
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1003": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "jump": "o",
      "offset": [
        2029,
        2121
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1004": {
      "offset": [
        432,
        452
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1005": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        432,
        452
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1007": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        432,
        452
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1008": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "offset": [
        432,
        452
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1009": {
      "fn": "StakingEscrowForStakingContractMock.getAllTokens",
      "jump": "o",
      "offset": [
        432,
        452
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1010": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1342,
        1459
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1011": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1393,
        1398
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 3,
      "value": "0x1"
    },
    "1013": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1393,
        1408
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1014": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1393,
        1408
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1015": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1393,
        1408
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1016": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1393,
        1408
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1017": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1393,
        1408
      ],
      "op": "SUB",
      "path": "32"
    },
    "1018": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1393,
        1408
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1019": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1393,
        1408
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "1020": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 4,
      "value": "0x40"
    },
    "1022": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1023": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "1024": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1031": {
      "op": "SHL"
    },
    "1032": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1033": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1034": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1433,
        1443
      ],
      "op": "CALLER",
      "path": "32"
    },
    "1035": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1037": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1038": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "ADD",
      "path": "32"
    },
    "1039": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1040": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x24"
    },
    "1042": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1043": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "ADD",
      "path": "32"
    },
    "1044": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1045": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1046": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1047": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1048": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1055": {
      "op": "SHL"
    },
    "1056": {
      "op": "SUB"
    },
    "1057": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1423
      ],
      "op": "PUSH32",
      "path": "32",
      "value": "0x0"
    },
    "1090": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1432
      ],
      "op": "AND",
      "path": "32"
    },
    "1091": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1432
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1092": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1432
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xA9059CBB"
    },
    "1097": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1432
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1098": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x44"
    },
    "1100": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1101": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1102": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "ADD",
      "path": "32"
    },
    "1103": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1104": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1106": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1107": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1108": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1109": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1110": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1111": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "SUB",
      "path": "32"
    },
    "1112": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "ADD",
      "path": "32"
    },
    "1113": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1114": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1393,
        1398
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1116": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1432
      ],
      "op": "DUP8",
      "path": "32"
    },
    "1117": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1118": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "EXTCODESIZE",
      "path": "32"
    },
    "1119": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1120": {
      "op": "DUP1"
    },
    "1121": {
      "op": "ISZERO"
    },
    "1122": {
      "op": "PUSH2",
      "value": "0x46A"
    },
    "1125": {
      "op": "JUMPI"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1128": {
      "op": "DUP1"
    },
    "1129": {
      "op": "REVERT"
    },
    "1130": {
      "op": "JUMPDEST"
    },
    "1131": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "POP",
      "path": "32"
    },
    "1132": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "GAS",
      "path": "32"
    },
    "1133": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "CALL",
      "path": "32"
    },
    "1134": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1135": {
      "op": "DUP1"
    },
    "1136": {
      "op": "ISZERO"
    },
    "1137": {
      "op": "PUSH2",
      "value": "0x47E"
    },
    "1140": {
      "op": "JUMPI"
    },
    "1141": {
      "op": "RETURNDATASIZE"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1144": {
      "op": "DUP1"
    },
    "1145": {
      "op": "RETURNDATACOPY"
    },
    "1146": {
      "op": "RETURNDATASIZE"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1149": {
      "op": "REVERT"
    },
    "1150": {
      "op": "JUMPDEST"
    },
    "1151": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "POP",
      "path": "32"
    },
    "1152": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "POP",
      "path": "32"
    },
    "1153": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "POP",
      "path": "32"
    },
    "1154": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "POP",
      "path": "32"
    },
    "1155": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "1157": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "1158": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        1418,
        1452
      ],
      "op": "RETURNDATASIZE",
      "path": "32"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1161": {
      "op": "DUP2"
    },
    "1162": {
      "op": "LT"
    },
    "1163": {
      "op": "ISZERO"
    },
    "1164": {
      "op": "PUSH2",
      "value": "0x494"
    },
    "1167": {
      "op": "JUMPI"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1170": {
      "op": "DUP1"
    },
    "1171": {
      "op": "REVERT"
    },
    "1172": {
      "op": "JUMPDEST"
    },
    "1173": {
      "op": "POP"
    },
    "1174": {
      "op": "POP"
    },
    "1175": {
      "op": "POP"
    },
    "1176": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "jump": "o",
      "offset": [
        1342,
        1459
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1177": {
      "offset": [
        347,
        367
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1178": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        347,
        367
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "1180": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        347,
        367
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1181": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        347,
        367
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1182": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "jump": "o",
      "offset": [
        347,
        367
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1183": {
      "offset": [
        282,
        316
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1184": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1186": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1187": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "1192": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "AND",
      "path": "32"
    },
    "1193": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        282,
        316
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1194": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "jump": "o",
      "offset": [
        282,
        316
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1195": {
      "offset": [
        525,
        546
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1196": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x5"
    },
    "1198": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1199": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x1000000"
    },
    "1204": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1205": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "DIV",
      "path": "32"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1212": {
      "op": "SHL"
    },
    "1213": {
      "op": "SUB"
    },
    "1214": {
      "offset": [
        525,
        546
      ],
      "op": "AND",
      "path": "32"
    },
    "1215": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "offset": [
        525,
        546
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1216": {
      "fn": "StakingEscrowForStakingContractMock.withdraw",
      "jump": "o",
      "offset": [
        525,
        546
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1217": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1218": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        726,
        763
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 5,
      "value": "0x4CC"
    },
    "1221": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        734,
        744
      ],
      "op": "CALLER",
      "path": "32"
    },
    "1222": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        746,
        752
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1223": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        754,
        762
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1224": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        726,
        733
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x59F"
    },
    "1227": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "jump": "i",
      "offset": [
        726,
        763
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1228": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        726,
        763
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1229": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "POP",
      "path": "32"
    },
    "1230": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        657,
        770
      ],
      "op": "POP",
      "path": "32"
    },
    "1231": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "jump": "o",
      "offset": [
        657,
        770
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1232": {
      "fn": "StakingEscrowForStakingContractMock.withdrawAll",
      "offset": [
        1465,
        1529
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1233": {
      "fn": "StakingEscrowForStakingContractMock.withdrawAll",
      "offset": [
        1507,
        1522
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 6,
      "value": "0x4DB"
    },
    "1236": {
      "fn": "StakingEscrowForStakingContractMock.withdrawAll",
      "offset": [
        1516,
        1521
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "1238": {
      "fn": "StakingEscrowForStakingContractMock.withdrawAll",
      "offset": [
        1516,
        1521
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1239": {
      "fn": "StakingEscrowForStakingContractMock.withdrawAll",
      "offset": [
        1507,
        1515
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3F2"
    },
    "1242": {
      "fn": "StakingEscrowForStakingContractMock.withdrawAll",
      "jump": "i",
      "offset": [
        1507,
        1522
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1243": {
      "fn": "StakingEscrowForStakingContractMock.withdrawAll",
      "offset": [
        1507,
        1522
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1244": {
      "fn": "StakingEscrowForStakingContractMock.withdrawAll",
      "jump": "o",
      "offset": [
        1465,
        1529
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1245": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1031,
        1154
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1246": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1097,
        1108
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 7,
      "value": "0x2"
    },
    "1248": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1097,
        1118
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1249": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1097,
        1118
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1250": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1097,
        1118
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1251": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1097,
        1118
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1252": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1097,
        1118
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1253": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1097,
        1118
      ],
      "op": "ADD",
      "path": "32"
    },
    "1254": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1097,
        1118
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1255": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1097,
        1118
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1256": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1097,
        1118
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "1257": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1135
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 8,
      "value": "0x3"
    },
    "1259": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1260": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1261": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "1264": {
      "op": "NOT"
    },
    "1265": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1266": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "AND",
      "path": "32"
    },
    "1267": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xFFFF"
    },
    "1270": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1271": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1272": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "AND",
      "path": "32"
    },
    "1273": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1274": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "1275": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "ADD",
      "path": "32"
    },
    "1276": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "AND",
      "path": "32"
    },
    "1277": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1278": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1279": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1280": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "OR",
      "path": "32"
    },
    "1281": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1282": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        1128,
        1147
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "1283": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "jump": "o",
      "offset": [
        1031,
        1154
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1284": {
      "offset": [
        483,
        519
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1285": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x5"
    },
    "1287": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1288": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x100"
    },
    "1291": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1292": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "DIV",
      "path": "32"
    },
    "1293": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xFFFF"
    },
    "1296": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "AND",
      "path": "32"
    },
    "1297": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "offset": [
        483,
        519
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1298": {
      "fn": "StakingEscrowForStakingContractMock.lock",
      "jump": "o",
      "offset": [
        483,
        519
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1299": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2127,
        2210
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1300": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2183,
        2191
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 9,
      "value": "0x5"
    },
    "1302": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2183,
        2203
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1303": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2183,
        2203
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1304": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2183,
        2203
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1305": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2183,
        2203
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1306": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2183,
        2203
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1311": {
      "op": "SHL"
    },
    "1312": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2183,
        2203
      ],
      "op": "MUL",
      "path": "32"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "op": "NOT"
    },
    "1319": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2183,
        2203
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1320": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2183,
        2203
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1321": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2183,
        2203
      ],
      "op": "AND",
      "path": "32"
    },
    "1322": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2183,
        2203
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1323": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2183,
        2203
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1324": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2183,
        2203
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1325": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2183,
        2203
      ],
      "op": "OR",
      "path": "32"
    },
    "1326": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2183,
        2203
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1327": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        2183,
        2203
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "1328": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "jump": "o",
      "offset": [
        2127,
        2210
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1329": {
      "offset": [
        405,
        426
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1330": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        405,
        426
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x3"
    },
    "1332": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        405,
        426
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1333": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        405,
        426
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xFFFF"
    },
    "1336": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        405,
        426
      ],
      "op": "AND",
      "path": "32"
    },
    "1337": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        405,
        426
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1338": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "jump": "o",
      "offset": [
        405,
        426
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1339": {
      "offset": [
        552,
        572
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1340": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x5"
    },
    "1342": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1347": {
      "op": "SHL"
    },
    "1348": {
      "offset": [
        552,
        572
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1349": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "DIV",
      "path": "32"
    },
    "1350": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xFF"
    },
    "1352": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "AND",
      "path": "32"
    },
    "1353": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "offset": [
        552,
        572
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1354": {
      "fn": "StakingEscrowForStakingContractMock.setWindDown",
      "jump": "o",
      "offset": [
        552,
        572
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1355": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1899,
        2023
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1356": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1973,
        1978
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 10,
      "value": "0x4"
    },
    "1358": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1973,
        1987
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1359": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1973,
        1987
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1360": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1973,
        1987
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1361": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1973,
        1987
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "1362": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2004
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 11,
      "value": "0x3"
    },
    "1364": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1365": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1366": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "1369": {
      "op": "NOT"
    },
    "1370": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1371": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "AND",
      "path": "32"
    },
    "1372": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xFFFF"
    },
    "1375": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1376": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1377": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "AND",
      "path": "32"
    },
    "1378": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1379": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "1380": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "ADD",
      "path": "32"
    },
    "1381": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "AND",
      "path": "32"
    },
    "1382": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1383": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1384": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1385": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "OR",
      "path": "32"
    },
    "1386": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1387": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "offset": [
        1997,
        2016
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "1388": {
      "fn": "StakingEscrowForStakingContractMock.prolongStake",
      "jump": "o",
      "offset": [
        1899,
        2023
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1389": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1160,
        1336
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1390": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1252,
        1257
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 12,
      "value": "0x4"
    },
    "1392": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1252,
        1266
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1393": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1252,
        1266
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1394": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1252,
        1266
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1395": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1252,
        1266
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "1396": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1276,
        1287
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 13,
      "value": "0x2"
    },
    "1398": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1276,
        1300
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1399": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1276,
        1300
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1400": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1276,
        1300
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1401": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1276,
        1300
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1402": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1276,
        1300
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1403": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1276,
        1300
      ],
      "op": "ADD",
      "path": "32"
    },
    "1404": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1276,
        1300
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1405": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1276,
        1300
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "1406": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1317
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 14,
      "value": "0x3"
    },
    "1408": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1409": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1410": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "1413": {
      "op": "NOT"
    },
    "1414": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1415": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "AND",
      "path": "32"
    },
    "1416": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xFFFF"
    },
    "1419": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1420": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1421": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "AND",
      "path": "32"
    },
    "1422": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1423": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "1424": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "ADD",
      "path": "32"
    },
    "1425": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "AND",
      "path": "32"
    },
    "1426": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1427": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1428": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1429": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "OR",
      "path": "32"
    },
    "1430": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1431": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        1310,
        1329
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "1432": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "jump": "o",
      "offset": [
        1160,
        1336
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1433": {
      "offset": [
        373,
        399
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1434": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        373,
        399
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x2"
    },
    "1436": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        373,
        399
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1437": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "offset": [
        373,
        399
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1438": {
      "fn": "StakingEscrowForStakingContractMock.divideStake",
      "jump": "o",
      "offset": [
        373,
        399
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1439": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        776,
        1025
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1440": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        862
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 15,
      "value": "0x0"
    },
    "1442": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        870
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1443": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        870
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1450": {
      "op": "SHL"
    },
    "1451": {
      "op": "SUB"
    },
    "1452": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        870
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1453": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        870
      ],
      "op": "DUP7",
      "path": "32"
    },
    "1454": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        870
      ],
      "op": "AND",
      "path": "32"
    },
    "1455": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        870
      ],
      "op": "PUSH5",
      "path": "32",
      "value": "0x100000000"
    },
    "1461": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        870
      ],
      "op": "MUL",
      "path": "32"
    },
    "1462": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "op": "SUB"
    },
    "1474": {
      "op": "NOT"
    },
    "1475": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        870
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1476": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        870
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1477": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        870
      ],
      "op": "AND",
      "path": "32"
    },
    "1478": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        870
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1479": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        870
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1480": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        870
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1481": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        870
      ],
      "op": "OR",
      "path": "32"
    },
    "1482": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        870
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1483": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        870
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        880,
        895
      ],
      "op": "DUP1",
      "path": "32",
      "statement": 16
    },
    "1487": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        880,
        895
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1488": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        880,
        895
      ],
      "op": "DUP6",
      "path": "32"
    },
    "1489": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        880,
        895
      ],
      "op": "ADD",
      "path": "32"
    },
    "1490": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        880,
        895
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1491": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        880,
        895
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "1492": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        905,
        916
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 17,
      "value": "0x2"
    },
    "1494": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        905,
        926
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1495": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        905,
        926
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1496": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        905,
        926
      ],
      "op": "DUP6",
      "path": "32"
    },
    "1497": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        905,
        926
      ],
      "op": "ADD",
      "path": "32"
    },
    "1498": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        905,
        926
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1499": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        905,
        926
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "1500": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        936,
        943
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 18,
      "value": "0x3"
    },
    "1502": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        936,
        955
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1503": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        936,
        955
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1504": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        936,
        955
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xFFFF"
    },
    "1507": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        936,
        955
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1508": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        936,
        955
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1509": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        936,
        955
      ],
      "op": "AND",
      "path": "32"
    },
    "1510": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        936,
        955
      ],
      "op": "DUP7",
      "path": "32"
    },
    "1511": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        936,
        955
      ],
      "op": "ADD",
      "path": "32"
    },
    "1512": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        936,
        955
      ],
      "op": "AND",
      "path": "32"
    },
    "1513": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "1516": {
      "op": "NOT"
    },
    "1517": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        936,
        955
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1518": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        936,
        955
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1519": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        936,
        955
      ],
      "op": "AND",
      "path": "32"
    },
    "1520": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        936,
        955
      ],
      "op": "OR",
      "path": "32"
    },
    "1521": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        936,
        955
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1522": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        936,
        955
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "1523": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 19,
      "value": "0x40"
    },
    "1525": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1526": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "1527": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1534": {
      "op": "SHL"
    },
    "1535": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1536": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1537": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        984,
        994
      ],
      "op": "CALLER",
      "path": "32"
    },
    "1538": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        858,
        862
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1540": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1541": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "ADD",
      "path": "32"
    },
    "1542": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1543": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        1004,
        1008
      ],
      "op": "ADDRESS",
      "path": "32"
    },
    "1544": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x24"
    },
    "1546": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1547": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "ADD",
      "path": "32"
    },
    "1548": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1549": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x44"
    },
    "1551": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1552": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "ADD",
      "path": "32"
    },
    "1553": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "DUP7",
      "path": "32"
    },
    "1554": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1555": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1556": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1557": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "1558": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        970
      ],
      "op": "PUSH32",
      "path": "32",
      "value": "0x0"
    },
    "1591": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        983
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1592": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        983
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1593": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        983
      ],
      "op": "AND",
      "path": "32"
    },
    "1594": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        983
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1595": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        983
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x23B872DD"
    },
    "1600": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        983
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1601": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x64"
    },
    "1603": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1604": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "DUP5",
      "path": "32"
    },
    "1605": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "ADD",
      "path": "32"
    },
    "1606": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "1607": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1609": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "1610": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1611": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1612": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1613": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "SUB",
      "path": "32"
    },
    "1614": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1615": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1616": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "ADD",
      "path": "32"
    },
    "1617": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1618": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1619": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1620": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        983
      ],
      "op": "DUP8",
      "path": "32"
    },
    "1621": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1622": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "EXTCODESIZE",
      "path": "32"
    },
    "1623": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1624": {
      "op": "DUP1"
    },
    "1625": {
      "op": "ISZERO"
    },
    "1626": {
      "op": "PUSH2",
      "value": "0x662"
    },
    "1629": {
      "op": "JUMPI"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1632": {
      "op": "DUP1"
    },
    "1633": {
      "op": "REVERT"
    },
    "1634": {
      "op": "JUMPDEST"
    },
    "1635": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "POP",
      "path": "32"
    },
    "1636": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "GAS",
      "path": "32"
    },
    "1637": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "CALL",
      "path": "32"
    },
    "1638": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1639": {
      "op": "DUP1"
    },
    "1640": {
      "op": "ISZERO"
    },
    "1641": {
      "op": "PUSH2",
      "value": "0x676"
    },
    "1644": {
      "op": "JUMPI"
    },
    "1645": {
      "op": "RETURNDATASIZE"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1648": {
      "op": "DUP1"
    },
    "1649": {
      "op": "RETURNDATACOPY"
    },
    "1650": {
      "op": "RETURNDATASIZE"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1653": {
      "op": "REVERT"
    },
    "1654": {
      "op": "JUMPDEST"
    },
    "1655": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "POP",
      "path": "32"
    },
    "1656": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "POP",
      "path": "32"
    },
    "1657": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "POP",
      "path": "32"
    },
    "1658": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "POP",
      "path": "32"
    },
    "1659": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "1661": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "1662": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        965,
        1018
      ],
      "op": "RETURNDATASIZE",
      "path": "32"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1665": {
      "op": "DUP2"
    },
    "1666": {
      "op": "LT"
    },
    "1667": {
      "op": "ISZERO"
    },
    "1668": {
      "op": "PUSH2",
      "value": "0x68C"
    },
    "1671": {
      "op": "JUMPI"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1674": {
      "op": "DUP1"
    },
    "1675": {
      "op": "REVERT"
    },
    "1676": {
      "op": "JUMPDEST"
    },
    "1677": {
      "op": "POP"
    },
    "1678": {
      "op": "POP"
    },
    "1679": {
      "op": "POP"
    },
    "1680": {
      "op": "POP"
    },
    "1681": {
      "op": "POP"
    },
    "1682": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "jump": "o",
      "offset": [
        776,
        1025
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1683": {
      "offset": [
        322,
        341
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1684": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        322,
        341
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1686": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        322,
        341
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1687": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        322,
        341
      ],
      "op": "PUSH5",
      "path": "32",
      "value": "0x100000000"
    },
    "1693": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        322,
        341
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1694": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        322,
        341
      ],
      "op": "DIV",
      "path": "32"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1701": {
      "op": "SHL"
    },
    "1702": {
      "op": "SUB"
    },
    "1703": {
      "offset": [
        322,
        341
      ],
      "op": "AND",
      "path": "32"
    },
    "1704": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "offset": [
        322,
        341
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1705": {
      "fn": "StakingEscrowForStakingContractMock.deposit",
      "jump": "o",
      "offset": [
        322,
        341
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1706": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1814,
        1893
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1707": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1876
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 20,
      "value": "0x5"
    },
    "1709": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1886
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1710": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1886
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1717": {
      "op": "SHL"
    },
    "1718": {
      "op": "SUB"
    },
    "1719": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1886
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1720": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1886
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1721": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1886
      ],
      "op": "AND",
      "path": "32"
    },
    "1722": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1886
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x1000000"
    },
    "1727": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1886
      ],
      "op": "MUL",
      "path": "32"
    },
    "1728": {
      "op": "PUSH4",
      "value": "0x1000000"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1737": {
      "op": "SHL"
    },
    "1738": {
      "op": "SUB"
    },
    "1739": {
      "op": "NOT"
    },
    "1740": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1886
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1741": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1886
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1742": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1886
      ],
      "op": "AND",
      "path": "32"
    },
    "1743": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1886
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1744": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1886
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1745": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1886
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1746": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1886
      ],
      "op": "OR",
      "path": "32"
    },
    "1747": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1886
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1748": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        1870,
        1886
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "1749": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "jump": "o",
      "offset": [
        1814,
        1893
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1750": {
      "offset": [
        458,
        477
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1751": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        458,
        477
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x5"
    },
    "1753": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        458,
        477
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1754": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        458,
        477
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xFF"
    },
    "1756": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        458,
        477
      ],
      "op": "AND",
      "path": "32"
    },
    "1757": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "offset": [
        458,
        477
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1758": {
      "fn": "StakingEscrowForStakingContractMock.bondWorker",
      "jump": "o",
      "offset": [
        458,
        477
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1759": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1681,
        1808
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1760": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1775
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 21,
      "value": "0x5"
    },
    "1762": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1763": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1764": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xFFFF"
    },
    "1767": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1768": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1769": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "AND",
      "path": "32"
    },
    "1770": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x100"
    },
    "1773": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "MUL",
      "path": "32"
    },
    "1774": {
      "op": "PUSH3",
      "value": "0xFFFF00"
    },
    "1778": {
      "op": "NOT"
    },
    "1779": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1780": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1781": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "AND",
      "path": "32"
    },
    "1782": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1783": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1784": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1785": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "OR",
      "path": "32"
    },
    "1786": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1787": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "offset": [
        1753,
        1801
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "1788": {
      "fn": "StakingEscrowForStakingContractMock.lockReStake",
      "jump": "o",
      "offset": [
        1681,
        1808
      ],
      "op": "JUMP",
      "path": "32"
    }
  },
  "sha1": "34ecfb28f9ef3da50fadd2e988a617b577f24235",
  "source": "pragma solidity ^0.6.5;\n\n\nimport \"contracts/NuCypherToken.sol\";\nimport \"contracts/staking_contracts/AbstractStakingContract.sol\";\n\n\n/**\n* @notice Contract for using in staking contracts tests\n*/\ncontract StakingEscrowForStakingContractMock {\n\n    NuCypherToken immutable token;\n    uint32 public secondsPerPeriod = 1;\n    address public node;\n    uint256 public value;\n    uint256 public lockedValue;\n    uint16 public periods;\n    uint256 public index;\n    bool public reStake;\n    uint16 public lockReStakeUntilPeriod;\n    address public worker;\n    bool public windDown;\n\n    constructor(NuCypherToken _token) public {\n        token = _token;\n    }\n\n    function deposit(uint256 _value, uint16 _periods) external {\n        deposit(msg.sender, _value, _periods);\n    }\n\n    function deposit(address _node, uint256 _value, uint16 _periods) public {\n        node = _node;\n        value += _value;\n        lockedValue += _value;\n        periods += _periods;\n        token.transferFrom(msg.sender, address(this), _value);\n    }\n\n    function lock(uint256 _value, uint16 _periods) external {\n        lockedValue += _value;\n        periods += _periods;\n    }\n\n    function divideStake(uint256 _index, uint256 _newValue, uint16 _periods) external {\n        index = _index;\n        lockedValue += _newValue;\n        periods += _periods;\n    }\n\n    function withdraw(uint256 _value) public {\n        value -= _value;\n        token.transfer(msg.sender, _value);\n    }\n\n    function withdrawAll() external {\n        withdraw(value);\n    }\n\n    function mint() external {\n        value += 1000;\n    }\n\n    function setReStake(bool _reStake) external {\n        reStake = _reStake;\n    }\n\n    function lockReStake(uint16 _lockReStakeUntilPeriod) external {\n        lockReStakeUntilPeriod = _lockReStakeUntilPeriod;\n    }\n\n    function bondWorker(address _worker) external {\n        worker = _worker;\n    }\n\n    function prolongStake(uint256 _index, uint16 _periods) external {\n        index = _index;\n        periods += _periods;\n    }\n\n    function getAllTokens(address) external view returns (uint256) {\n        return value;\n    }\n\n    function setWindDown(bool _windDown) external {\n        windDown = _windDown;\n    }\n}\n\n\n/**\n* @notice Contract for staking contract tests\n*/\ncontract PolicyManagerForStakingContractMock {\n\n    uint32 public immutable secondsPerPeriod = 1;\n    uint256 public minFeeRate;\n\n    function withdraw() public returns (uint256) {\n        uint256 value = address(this).balance;\n        require(value > 0);\n        msg.sender.transfer(value);\n        return value;\n    }\n\n    function setMinFeeRate(uint256 _minFeeRate) public {\n        minFeeRate = _minFeeRate;\n    }\n\n    function additionalMethod(uint256 _minFeeRate) public {\n        minFeeRate = _minFeeRate;\n    }\n\n    // TODO #1809\n//    receive() external payable {}\n    fallback() external payable {}\n}\n\n\n/**\n* @notice Contract for staking contract tests\n*/\ncontract WorkLockForStakingContractMock {\n\n    uint256 public immutable boostingRefund = 1;\n    uint256 public claimed;\n    uint256 public depositedETH;\n    uint256 public compensation;\n    uint256 public refundETH;\n\n    function bid() external payable {\n        depositedETH = msg.value;\n    }\n\n    function cancelBid() external {\n        uint256 value = depositedETH;\n        depositedETH = 0;\n        msg.sender.transfer(value);\n    }\n\n    function sendCompensation() external payable {\n        compensation = msg.value;\n    }\n\n    function withdrawCompensation() external {\n        uint256 value = compensation;\n        compensation = 0;\n        msg.sender.transfer(value);\n    }\n\n    function claim() external returns (uint256) {\n        claimed += 1;\n        return claimed;\n    }\n\n    function sendRefund() external payable {\n        refundETH = msg.value;\n    }\n\n    function refund() external returns (uint256) {\n        uint256 value = refundETH;\n        refundETH = 0;\n        msg.sender.transfer(value);\n        return value;\n    }\n\n}\n\n\n/**\n* @notice Contract for staking contract tests\n*/\ncontract StakingInterfaceMockV1 {\n\n    address public immutable token = address(1);\n    address public immutable escrow = address(1);\n\n    function firstMethod() public pure {}\n\n    function secondMethod() public pure returns (uint256) {\n        return 20;\n    }\n\n}\n\n\n/**\n* @notice Contract for staking contract tests\n*/\ncontract StakingInterfaceMockV2 {\n\n    address public immutable token = address(1);\n    address public immutable escrow = address(1);\n\n    // TODO #1809\n//    receive() external payable {}\n    fallback() external payable {\n        // can only use with ETH\n        require(msg.value > 0);\n    }\n\n    function firstMethod(uint256) public pure {}\n\n    function secondMethod() public pure returns (uint256) {\n        return 15;\n    }\n\n    function thirdMethod() public pure {}\n\n}\n\n\n/**\n* @dev Interface that could be destroyed by selfdestruct\n*/\ncontract DestroyableStakingInterface {\n\n    address public immutable token = address(1);\n    address public immutable escrow = address(1);\n\n    function method() public pure returns (uint256) {\n        return 15;\n    }\n\n    function destroy() public {\n        selfdestruct(msg.sender);\n    }\n\n}\n\n\n/**\n* @notice Simple implementation of AbstractStakingContract\n*/\ncontract SimpleStakingContract is AbstractStakingContract, Ownable {\n\n    /**\n    * @param _router Address of the StakingInterfaceRouter contract\n    */\n    constructor(StakingInterfaceRouter _router) public AbstractStakingContract(_router) {}\n\n    /**\n    * @notice Withdraw available amount of tokens to owner\n    * @param _value Amount of token to withdraw\n    */\n    function withdrawTokens(uint256 _value) public override onlyOwner {\n        token.safeTransfer(msg.sender, _value);\n    }\n\n    /**\n    * @notice Withdraw available ETH to the owner\n    */\n    function withdrawETH() public override onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance != 0);\n        msg.sender.sendValue(balance);\n    }\n\n    /**\n    * @notice Calling fallback function is allowed only for the owner\n    */\n    function isFallbackAllowed() public override returns (bool) {\n        return msg.sender == owner();\n    }\n\n}\n",
  "sourceMap": "195:2017:32:-:0;;;282:34;;;-1:-1:-1;;282:34:32;315:1;282:34;;;579:72;2:2:-1;;;;27:1;24;17:12;2:2;579:72:32;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;579:72:32;630:14;;;;-1:-1:-1;;;;;;630:14:32;;;-1:-1:-1;;;;;195:2017:32;;;;;;;;",
  "sourcePath": "contracts/StakingContractsTestSet.sol",
  "type": "contract"
}