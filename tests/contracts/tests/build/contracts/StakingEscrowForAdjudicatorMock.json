{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getAllTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewardInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondsPerPeriod",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_worker",
          "type": "address"
        }
      ],
      "name": "setStakerInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_penalty",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_investigator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_reward",
          "type": "uint256"
        }
      ],
      "name": "slashStaker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakerFromWorker",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakerInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "26": "contracts/AdjudicatorTestSet.sol"
  },
  "ast": {
    "absolutePath": "contracts/AdjudicatorTestSet.sol",
    "exportedSymbols": {
      "AdjudicatorBad": [
        104
      ],
      "AdjudicatorV2Mock": [
        171
      ],
      "StakingEscrowForAdjudicatorMock": [
        92
      ]
    },
    "id": 172,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:26"
      },
      {
        "absolutePath": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/Adjudicator.sol",
        "file": "contracts/Adjudicator.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 172,
        "sourceUnit": 6170,
        "src": "26:35:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/StakingEscrow.sol",
        "file": "contracts/StakingEscrow.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 172,
        "sourceUnit": 10826,
        "src": "62:37:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/lib/SignatureVerifier.sol",
        "file": "contracts/lib/SignatureVerifier.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 172,
        "sourceUnit": 11163,
        "src": "100:45:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/proxy/Upgradeable.sol",
        "file": "contracts/proxy/Upgradeable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 172,
        "sourceUnit": 11327,
        "src": "146:41:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "190:62:26",
          "text": "@notice Contract for testing the Adjudicator contract"
        },
        "fullyImplemented": true,
        "id": 92,
        "linearizedBaseContracts": [
          92
        ],
        "name": "StakingEscrowForAdjudicatorMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "407f8001",
            "id": 9,
            "mutability": "immutable",
            "name": "secondsPerPeriod",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 92,
            "src": "301:44:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 7,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "301:6:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 8,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "344:1:26",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4e745f1f",
            "id": 13,
            "mutability": "mutable",
            "name": "stakerInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 92,
            "src": "351:46:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "360:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "351:28:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 11,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "371:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cbecf6b5",
            "id": 17,
            "mutability": "mutable",
            "name": "rewardInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 92,
            "src": "403:46:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "412:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "403:28:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 15,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "423:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b2eeb36e",
            "id": 21,
            "mutability": "mutable",
            "name": "stakerFromWorker",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 92,
            "src": "455:52:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "464:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "455:28:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 19,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "475:7:26",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "595:169:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 30,
                        "name": "stakerInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "605:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 32,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 31,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "616:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "605:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 33,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "627:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "605:29:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "605:29:26"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 36,
                      "name": "_worker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "648:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "667:1:26",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "659:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "659:10:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "648:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 47,
                  "nodeType": "IfStatement",
                  "src": "644:69:26",
                  "trueBody": {
                    "id": 46,
                    "nodeType": "Block",
                    "src": "671:42:26",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 42,
                            "name": "_worker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "685:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 43,
                            "name": "_staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "695:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "685:17:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45,
                        "nodeType": "ExpressionStatement",
                        "src": "685:17:26"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "stakerFromWorker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "722:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 50,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 49,
                        "name": "_worker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "739:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "722:25:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "_staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "750:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "722:35:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "722:35:26"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3d53efb5",
            "id": 55,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStakerInfo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 55,
                  "src": "537:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 55,
                  "src": "554:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "_worker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 55,
                  "src": "571:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "536:51:26"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "595:0:26"
            },
            "scope": 92,
            "src": "514:250:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "839:43:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 62,
                      "name": "stakerInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "856:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 64,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "_staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "867:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "856:19:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 61,
                  "id": 65,
                  "nodeType": "Return",
                  "src": "849:26:26"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "178b6de6",
            "id": 67,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 67,
                  "src": "792:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "791:17:26"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 67,
                  "src": "830:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "829:9:26"
            },
            "scope": 92,
            "src": "770:112:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "1041:94:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 78,
                        "name": "stakerInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1051:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 80,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 79,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1062:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1051:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 81,
                      "name": "_penalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1074:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1051:31:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:31:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 84,
                        "name": "rewardInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1092:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 86,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "_investigator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "1103:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1092:25:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 87,
                      "name": "_reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "1121:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1092:36:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:36:26"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "99cc218c",
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "slashStaker",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 91,
                  "src": "918:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_penalty",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 91,
                  "src": "943:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_investigator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 91,
                  "src": "969:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "_reward",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 91,
                  "src": "1000:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "908:113:26"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:0:26"
            },
            "scope": 92,
            "src": "888:247:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 172,
        "src": "253:885:26"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 94,
              "name": "Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11326,
              "src": "1228:11:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Upgradeable_$11326",
                "typeString": "contract Upgradeable"
              }
            },
            "id": 95,
            "nodeType": "InheritanceSpecifier",
            "src": "1228:11:26"
          }
        ],
        "contractDependencies": [
          11326,
          18927
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 93,
          "nodeType": "StructuredDocumentation",
          "src": "1141:59:26",
          "text": "@notice Upgrade to this contract must lead to fail"
        },
        "fullyImplemented": true,
        "id": 104,
        "linearizedBaseContracts": [
          104,
          11326,
          18927
        ],
        "name": "AdjudicatorBad",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "70535443",
            "id": 99,
            "mutability": "mutable",
            "name": "evaluatedCFrags",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 104,
            "src": "1247:48:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 98,
              "keyType": {
                "id": 96,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1256:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1247:25:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 97,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1267:4:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5d5b6836",
            "id": 103,
            "mutability": "mutable",
            "name": "penaltyHistory",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 104,
            "src": "1301:50:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 102,
              "keyType": {
                "id": 100,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1310:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1301:28:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 101,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1321:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          }
        ],
        "scope": 172,
        "src": "1201:154:26"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 106,
              "name": "Adjudicator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6169,
              "src": "1461:11:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Adjudicator_$6169",
                "typeString": "contract Adjudicator"
              }
            },
            "id": 107,
            "nodeType": "InheritanceSpecifier",
            "src": "1461:11:26"
          }
        ],
        "contractDependencies": [
          6169,
          11326,
          18927
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 105,
          "nodeType": "StructuredDocumentation",
          "src": "1358:72:26",
          "text": "@notice Contract for testing upgrading the Adjudicator contract"
        },
        "fullyImplemented": true,
        "id": 171,
        "linearizedBaseContracts": [
          171,
          6169,
          11326,
          18927
        ],
        "name": "AdjudicatorV2Mock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a3324be9",
            "id": 109,
            "mutability": "mutable",
            "name": "valueToCheck",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 171,
            "src": "1480:27:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 108,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1480:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "1993:7:26",
              "statements": []
            },
            "documentation": null,
            "id": 133,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 124,
                    "name": "_escrow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 111,
                    "src": "1813:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingEscrow_$10825",
                      "typeString": "contract StakingEscrow"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 125,
                    "name": "_hashAlgorithm",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 113,
                    "src": "1834:14:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_HashAlgorithm_$10832",
                      "typeString": "enum SignatureVerifier.HashAlgorithm"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 126,
                    "name": "_basePenalty",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 115,
                    "src": "1862:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 127,
                    "name": "_percentagePenalty",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 117,
                    "src": "1888:18:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 128,
                    "name": "_penaltyHistoryCoefficient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 119,
                    "src": "1920:26:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 129,
                    "name": "_rewardCoefficient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 121,
                    "src": "1960:18:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 130,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 123,
                  "name": "Adjudicator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6169,
                  "src": "1788:11:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Adjudicator_$6169_$",
                    "typeString": "type(contract Adjudicator)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1788:200:26"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "_escrow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 133,
                  "src": "1535:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StakingEscrow_$10825",
                    "typeString": "contract StakingEscrow"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 110,
                    "name": "StakingEscrow",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10825,
                    "src": "1535:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingEscrow_$10825",
                      "typeString": "contract StakingEscrow"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "_hashAlgorithm",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 133,
                  "src": "1566:46:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_HashAlgorithm_$10832",
                    "typeString": "enum SignatureVerifier.HashAlgorithm"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 112,
                    "name": "SignatureVerifier.HashAlgorithm",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10832,
                    "src": "1566:31:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_HashAlgorithm_$10832",
                      "typeString": "enum SignatureVerifier.HashAlgorithm"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "_basePenalty",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 133,
                  "src": "1622:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1622:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "_percentagePenalty",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 133,
                  "src": "1652:26:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1652:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "_penaltyHistoryCoefficient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 133,
                  "src": "1688:34:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "_rewardCoefficient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 133,
                  "src": "1732:26:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1525:239:26"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1993:0:26"
            },
            "scope": 171,
            "src": "1514:486:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "2061:45:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 138,
                      "name": "valueToCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "2071:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 139,
                      "name": "_valueToCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "2086:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2071:28:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2071:28:26"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "18cc313c",
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setValueToCheck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_valueToCheck",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 143,
                  "src": "2031:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2031:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2030:23:26"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2061:0:26"
            },
            "scope": 171,
            "src": "2006:100:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6129
            ],
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "2170:143:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "_testTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "2198:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2180:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AdjudicatorV2Mock_$171",
                          "typeString": "contract super AdjudicatorV2Mock"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verifyState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6129,
                      "src": "2180:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2180:30:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2180:30:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 159,
                                  "name": "_testTarget",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145,
                                  "src": "2248:11:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 160,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2261:4:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AdjudicatorV2Mock_$171",
                                        "typeString": "contract AdjudicatorV2Mock"
                                      }
                                    },
                                    "id": 161,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "valueToCheck",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 109,
                                    "src": "2261:17:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 162,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "2261:26:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "id": 158,
                                "name": "delegateGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  11275,
                                  11299,
                                  11325
                                ],
                                "referencedDeclaration": 11275,
                                "src": "2236:11:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$_t_uint256_$",
                                  "typeString": "function (address,bytes4) returns (uint256)"
                                }
                              },
                              "id": 163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2236:52:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2228:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 156,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2228:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2228:61:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 165,
                          "name": "valueToCheck",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "2293:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2228:77:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2220:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2220:86:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2220:86:26"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b9626d21",
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyState",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 147,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2154:8:26"
            },
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "_testTarget",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 170,
                  "src": "2133:19:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2132:21:26"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2170:0:26"
            },
            "scope": 171,
            "src": "2112:201:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 172,
        "src": "1431:884:26"
      }
    ],
    "src": "0:2316:26"
  },
  "bytecode": "60a0604052600160e01b60805234801561001857600080fd5b5060805160e01c61031f6100366000398061024f525061031f6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80634e745f1f1161005b5780634e745f1f1461011357806399cc218c14610139578063b2eeb36e14610173578063cbecf6b5146101b55761007d565b8063178b6de6146100825780633d53efb5146100ba578063407f8001146100f2575b600080fd5b6100a86004803603602081101561009857600080fd5b50356001600160a01b03166101db565b60408051918252519081900360200190f35b6100f0600480360360608110156100d057600080fd5b506001600160a01b038135811691602081013591604090910135166101f6565b005b6100fa61024d565b6040805163ffffffff9092168252519081900360200190f35b6100a86004803603602081101561012957600080fd5b50356001600160a01b0316610271565b6100f06004803603608081101561014f57600080fd5b506001600160a01b0381358116916020810135916040820135169060600135610283565b6101996004803603602081101561018957600080fd5b50356001600160a01b03166102bc565b604080516001600160a01b039092168252519081900360200190f35b6100a8600480360360208110156101cb57600080fd5b50356001600160a01b03166102d7565b6001600160a01b031660009081526020819052604090205490565b6001600160a01b038084166000908152602081905260409020839055811661021b5750815b6001600160a01b0390811660009081526002602052604090208054919093166001600160a01b03199091161790915550565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020819052908152604090205481565b6001600160a01b039384166000908152602081815260408083208054969096039095559290941684526001909152912080549091019055565b6002602052600090815260409020546001600160a01b031681565b6001602052600090815260409020548156fea26469706673582212204dbda1fb4e68edac45af69e70a8eb304997e6b524745d177d3d7bcb0ec26fabd64736f6c63430006070033",
  "bytecodeSha1": "3902d6fe4c363172c457288da0a2db43bc62d437",
  "compiler": {
    "evm_version": "berlin",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.7"
  },
  "contractName": "StakingEscrowForAdjudicatorMock",
  "coverageMap": {
    "branches": {
      "26": {
        "StakingEscrowForAdjudicatorMock.setStakerInfo": {
          "6": [
            648,
            669,
            false
          ]
        }
      }
    },
    "statements": {
      "26": {
        "StakingEscrowForAdjudicatorMock.getAllTokens": {
          "0": [
            849,
            875
          ]
        },
        "StakingEscrowForAdjudicatorMock.setStakerInfo": {
          "1": [
            605,
            634
          ],
          "2": [
            685,
            702
          ],
          "3": [
            722,
            757
          ]
        },
        "StakingEscrowForAdjudicatorMock.slashStaker": {
          "4": [
            1051,
            1082
          ],
          "5": [
            1092,
            1128
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80634e745f1f1161005b5780634e745f1f1461011357806399cc218c14610139578063b2eeb36e14610173578063cbecf6b5146101b55761007d565b8063178b6de6146100825780633d53efb5146100ba578063407f8001146100f2575b600080fd5b6100a86004803603602081101561009857600080fd5b50356001600160a01b03166101db565b60408051918252519081900360200190f35b6100f0600480360360608110156100d057600080fd5b506001600160a01b038135811691602081013591604090910135166101f6565b005b6100fa61024d565b6040805163ffffffff9092168252519081900360200190f35b6100a86004803603602081101561012957600080fd5b50356001600160a01b0316610271565b6100f06004803603608081101561014f57600080fd5b506001600160a01b0381358116916020810135916040820135169060600135610283565b6101996004803603602081101561018957600080fd5b50356001600160a01b03166102bc565b604080516001600160a01b039092168252519081900360200190f35b6100a8600480360360208110156101cb57600080fd5b50356001600160a01b03166102d7565b6001600160a01b031660009081526020819052604090205490565b6001600160a01b038084166000908152602081905260409020839055811661021b5750815b6001600160a01b0390811660009081526002602052604090208054919093166001600160a01b03199091161790915550565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020819052908152604090205481565b6001600160a01b039384166000908152602081815260408083208054969096039095559290941684526001909152912080549091019055565b6002602052600090815260409020546001600160a01b031681565b6001602052600090815260409020548156fea26469706673582212204dbda1fb4e68edac45af69e70a8eb304997e6b524745d177d3d7bcb0ec26fabd64736f6c63430006070033",
  "deployedSourceMap": "253:885:26:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;253:885:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;770:112:26;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;770:112:26;-1:-1:-1;;;;;770:112:26;;:::i;:::-;;;;;;;;;;;;;;;;514:250;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;514:250:26;;;;;;;;;;;;;;;;;:::i;:::-;;301:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;351:46;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;351:46:26;-1:-1:-1;;;;;351:46:26;;:::i;888:247::-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;;888:247:26;;;;;;;;;;;;;;;;;;;;:::i;455:52::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;455:52:26;-1:-1:-1;;;;;455:52:26;;:::i;:::-;;;;-1:-1:-1;;;;;455:52:26;;;;;;;;;;;;;;403:46;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;403:46:26;-1:-1:-1;;;;;403:46:26;;:::i;770:112::-;-1:-1:-1;;;;;856:19:26;830:7;856:19;;;;;;;;;;;;770:112::o;514:250::-;-1:-1:-1;;;;;605:19:26;;;:10;:19;;;;;;;;;;:29;;;648:21;;644:69;;-1:-1:-1;695:7:26;644:69;-1:-1:-1;;;;;722:25:26;;;;;;;:16;:25;;;;;:35;;;;;;-1:-1:-1;;;;;;722:35:26;;;;;;;-1:-1:-1;514:250:26:o;301:44::-;;;:::o;351:46::-;;;;;;;;;;;;;;:::o;888:247::-;-1:-1:-1;;;;;1051:19:26;;;:10;:19;;;;;;;;;;;:31;;;;;;;;;1092:25;;;;;;-1:-1:-1;1092:25:26;;;;;:36;;;;;;;888:247::o;455:52::-;;;;;;;;;;;;-1:-1:-1;;;;;455:52:26;;:::o;403:46::-;;;;;;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "methods": {},
    "notice": "Contract for testing the Adjudicator contract"
  },
  "offset": [
    253,
    1138
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E745F1F GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E745F1F EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x99CC218C EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xB2EEB36E EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xCBECF6B5 EQ PUSH2 0x1B5 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x178B6DE6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x3D53EFB5 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x407F8001 EQ PUSH2 0xF2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xF0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x1F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFA PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x271 JUMP JUMPDEST PUSH2 0xF0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x283 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 AND PUSH2 0x21B JUMPI POP DUP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP7 SWAP1 SWAP7 SUB SWAP1 SWAP6 SSTORE SWAP3 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xBD LOG1 0xFB 0x4E PUSH9 0xEDAC45AF69E70A8EB3 DIV SWAP10 PUSH31 0x6B524745D177D3D7BCB0EC26FABD64736F6C63430006070033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        253,
        1138
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "REVERT",
      "path": "26"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        253,
        1138
      ],
      "op": "POP",
      "path": "26"
    },
    "18": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "21": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "LT",
      "path": "26"
    },
    "22": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "26": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "29": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "SHR",
      "path": "26"
    },
    "32": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "DUP1",
      "path": "26"
    },
    "33": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x4E745F1F"
    },
    "38": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "GT",
      "path": "26"
    },
    "39": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "43": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "DUP1",
      "path": "26"
    },
    "44": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x4E745F1F"
    },
    "49": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "EQ",
      "path": "26"
    },
    "50": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x113"
    },
    "53": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "54": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "DUP1",
      "path": "26"
    },
    "55": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x99CC218C"
    },
    "60": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "EQ",
      "path": "26"
    },
    "61": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x139"
    },
    "64": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "65": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "DUP1",
      "path": "26"
    },
    "66": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xB2EEB36E"
    },
    "71": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "EQ",
      "path": "26"
    },
    "72": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x173"
    },
    "75": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "76": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "DUP1",
      "path": "26"
    },
    "77": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xCBECF6B5"
    },
    "82": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "EQ",
      "path": "26"
    },
    "83": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1B5"
    },
    "86": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "87": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7D"
    },
    "90": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "JUMP",
      "path": "26"
    },
    "91": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "92": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "DUP1",
      "path": "26"
    },
    "93": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x178B6DE6"
    },
    "98": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "EQ",
      "path": "26"
    },
    "99": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "103": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "DUP1",
      "path": "26"
    },
    "104": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x3D53EFB5"
    },
    "109": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "EQ",
      "path": "26"
    },
    "110": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xBA"
    },
    "113": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "114": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "DUP1",
      "path": "26"
    },
    "115": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x407F8001"
    },
    "120": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "EQ",
      "path": "26"
    },
    "121": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF2"
    },
    "124": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "125": {
      "fn": null,
      "offset": [
        253,
        1138
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "128": {
      "op": "DUP1"
    },
    "129": {
      "first_revert": true,
      "op": "REVERT"
    },
    "130": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "131": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA8"
    },
    "134": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "136": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "DUP1",
      "path": "26"
    },
    "137": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "138": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "SUB",
      "path": "26"
    },
    "139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "141": {
      "op": "DUP2"
    },
    "142": {
      "op": "LT"
    },
    "143": {
      "op": "ISZERO"
    },
    "144": {
      "op": "PUSH2",
      "value": "0x98"
    },
    "147": {
      "op": "JUMPI"
    },
    "148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "150": {
      "op": "DUP1"
    },
    "151": {
      "op": "REVERT"
    },
    "152": {
      "op": "JUMPDEST"
    },
    "153": {
      "op": "POP"
    },
    "154": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "161": {
      "op": "SHL"
    },
    "162": {
      "op": "SUB"
    },
    "163": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "AND",
      "path": "26"
    },
    "164": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1DB"
    },
    "167": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "jump": "i",
      "offset": [
        770,
        882
      ],
      "op": "JUMP",
      "path": "26"
    },
    "168": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "169": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "171": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "DUP1",
      "path": "26"
    },
    "172": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "173": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "174": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "DUP3",
      "path": "26"
    },
    "175": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "176": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "177": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "178": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "DUP2",
      "path": "26"
    },
    "179": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "180": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "SUB",
      "path": "26"
    },
    "181": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "183": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "ADD",
      "path": "26"
    },
    "184": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "185": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "RETURN",
      "path": "26"
    },
    "186": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "187": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF0"
    },
    "190": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "192": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "DUP1",
      "path": "26"
    },
    "193": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "194": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "SUB",
      "path": "26"
    },
    "195": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "197": {
      "op": "DUP2"
    },
    "198": {
      "op": "LT"
    },
    "199": {
      "op": "ISZERO"
    },
    "200": {
      "op": "PUSH2",
      "value": "0xD0"
    },
    "203": {
      "op": "JUMPI"
    },
    "204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "206": {
      "op": "DUP1"
    },
    "207": {
      "op": "REVERT"
    },
    "208": {
      "op": "JUMPDEST"
    },
    "209": {
      "op": "POP"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "216": {
      "op": "SHL"
    },
    "217": {
      "op": "SUB"
    },
    "218": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "DUP2",
      "path": "26"
    },
    "219": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "220": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "DUP2",
      "path": "26"
    },
    "221": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "AND",
      "path": "26"
    },
    "222": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "223": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "225": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "DUP2",
      "path": "26"
    },
    "226": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "ADD",
      "path": "26"
    },
    "227": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "228": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "229": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "231": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "232": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "233": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "ADD",
      "path": "26"
    },
    "234": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "235": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "AND",
      "path": "26"
    },
    "236": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1F6"
    },
    "239": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "jump": "i",
      "offset": [
        514,
        764
      ],
      "op": "JUMP",
      "path": "26"
    },
    "240": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "241": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "STOP",
      "path": "26"
    },
    "242": {
      "offset": [
        301,
        345
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "243": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xFA"
    },
    "246": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24D"
    },
    "249": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "jump": "i",
      "offset": [
        301,
        345
      ],
      "op": "JUMP",
      "path": "26"
    },
    "250": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "251": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "253": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "DUP1",
      "path": "26"
    },
    "254": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "255": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFFFFFFFF"
    },
    "260": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "261": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "262": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "AND",
      "path": "26"
    },
    "263": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "DUP3",
      "path": "26"
    },
    "264": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "265": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "266": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "267": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "DUP2",
      "path": "26"
    },
    "268": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "269": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "SUB",
      "path": "26"
    },
    "270": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "272": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "ADD",
      "path": "26"
    },
    "273": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "274": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "RETURN",
      "path": "26"
    },
    "275": {
      "offset": [
        351,
        397
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "276": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA8"
    },
    "279": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "281": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "DUP1",
      "path": "26"
    },
    "282": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "283": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "SUB",
      "path": "26"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "DUP2"
    },
    "287": {
      "op": "LT"
    },
    "288": {
      "op": "ISZERO"
    },
    "289": {
      "op": "PUSH2",
      "value": "0x129"
    },
    "292": {
      "op": "JUMPI"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "295": {
      "op": "DUP1"
    },
    "296": {
      "op": "REVERT"
    },
    "297": {
      "op": "JUMPDEST"
    },
    "298": {
      "op": "POP"
    },
    "299": {
      "offset": [
        351,
        397
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "306": {
      "op": "SHL"
    },
    "307": {
      "op": "SUB"
    },
    "308": {
      "offset": [
        351,
        397
      ],
      "op": "AND",
      "path": "26"
    },
    "309": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x271"
    },
    "312": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "jump": "i",
      "offset": [
        351,
        397
      ],
      "op": "JUMP",
      "path": "26"
    },
    "313": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "314": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF0"
    },
    "317": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "319": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "DUP1",
      "path": "26"
    },
    "320": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "321": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "SUB",
      "path": "26"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "324": {
      "op": "DUP2"
    },
    "325": {
      "op": "LT"
    },
    "326": {
      "op": "ISZERO"
    },
    "327": {
      "op": "PUSH2",
      "value": "0x14F"
    },
    "330": {
      "op": "JUMPI"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "333": {
      "op": "DUP1"
    },
    "334": {
      "op": "REVERT"
    },
    "335": {
      "op": "JUMPDEST"
    },
    "336": {
      "op": "POP"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "343": {
      "op": "SHL"
    },
    "344": {
      "op": "SUB"
    },
    "345": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "DUP2",
      "path": "26"
    },
    "346": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "347": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "DUP2",
      "path": "26"
    },
    "348": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "AND",
      "path": "26"
    },
    "349": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "350": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "352": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "DUP2",
      "path": "26"
    },
    "353": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "ADD",
      "path": "26"
    },
    "354": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "355": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "356": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "358": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "DUP3",
      "path": "26"
    },
    "359": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "ADD",
      "path": "26"
    },
    "360": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "361": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "AND",
      "path": "26"
    },
    "362": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "363": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "365": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "ADD",
      "path": "26"
    },
    "366": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "367": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x283"
    },
    "370": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "jump": "i",
      "offset": [
        888,
        1135
      ],
      "op": "JUMP",
      "path": "26"
    },
    "371": {
      "offset": [
        455,
        507
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "372": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x199"
    },
    "375": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "377": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "DUP1",
      "path": "26"
    },
    "378": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "379": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "SUB",
      "path": "26"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "382": {
      "op": "DUP2"
    },
    "383": {
      "op": "LT"
    },
    "384": {
      "op": "ISZERO"
    },
    "385": {
      "op": "PUSH2",
      "value": "0x189"
    },
    "388": {
      "op": "JUMPI"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "391": {
      "op": "DUP1"
    },
    "392": {
      "op": "REVERT"
    },
    "393": {
      "op": "JUMPDEST"
    },
    "394": {
      "op": "POP"
    },
    "395": {
      "offset": [
        455,
        507
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "402": {
      "op": "SHL"
    },
    "403": {
      "op": "SUB"
    },
    "404": {
      "offset": [
        455,
        507
      ],
      "op": "AND",
      "path": "26"
    },
    "405": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2BC"
    },
    "408": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "jump": "i",
      "offset": [
        455,
        507
      ],
      "op": "JUMP",
      "path": "26"
    },
    "409": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "410": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "412": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "DUP1",
      "path": "26"
    },
    "413": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "420": {
      "op": "SHL"
    },
    "421": {
      "op": "SUB"
    },
    "422": {
      "offset": [
        455,
        507
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "423": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "424": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "AND",
      "path": "26"
    },
    "425": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "DUP3",
      "path": "26"
    },
    "426": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "427": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "428": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "429": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "DUP2",
      "path": "26"
    },
    "430": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "431": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "SUB",
      "path": "26"
    },
    "432": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "434": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "ADD",
      "path": "26"
    },
    "435": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "436": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "RETURN",
      "path": "26"
    },
    "437": {
      "offset": [
        403,
        449
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "438": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA8"
    },
    "441": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "443": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "DUP1",
      "path": "26"
    },
    "444": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "445": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "SUB",
      "path": "26"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "448": {
      "op": "DUP2"
    },
    "449": {
      "op": "LT"
    },
    "450": {
      "op": "ISZERO"
    },
    "451": {
      "op": "PUSH2",
      "value": "0x1CB"
    },
    "454": {
      "op": "JUMPI"
    },
    "455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "457": {
      "op": "DUP1"
    },
    "458": {
      "op": "REVERT"
    },
    "459": {
      "op": "JUMPDEST"
    },
    "460": {
      "op": "POP"
    },
    "461": {
      "offset": [
        403,
        449
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "468": {
      "op": "SHL"
    },
    "469": {
      "op": "SUB"
    },
    "470": {
      "offset": [
        403,
        449
      ],
      "op": "AND",
      "path": "26"
    },
    "471": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2D7"
    },
    "474": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "jump": "i",
      "offset": [
        403,
        449
      ],
      "op": "JUMP",
      "path": "26"
    },
    "475": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        770,
        882
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "482": {
      "op": "SHL"
    },
    "483": {
      "op": "SUB"
    },
    "484": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        856,
        875
      ],
      "op": "AND",
      "path": "26",
      "statement": 0
    },
    "485": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        830,
        837
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "487": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        856,
        875
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "488": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        856,
        875
      ],
      "op": "DUP2",
      "path": "26"
    },
    "489": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        856,
        875
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "490": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        856,
        875
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "492": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        856,
        875
      ],
      "op": "DUP2",
      "path": "26"
    },
    "493": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        856,
        875
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "494": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        856,
        875
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "495": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        856,
        875
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "497": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        856,
        875
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "498": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        856,
        875
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "499": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        856,
        875
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "500": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "offset": [
        856,
        875
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "501": {
      "fn": "StakingEscrowForAdjudicatorMock.getAllTokens",
      "jump": "o",
      "offset": [
        770,
        882
      ],
      "op": "JUMP",
      "path": "26"
    },
    "502": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        514,
        764
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "509": {
      "op": "SHL"
    },
    "510": {
      "op": "SUB"
    },
    "511": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        624
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 1
    },
    "512": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        624
      ],
      "op": "DUP5",
      "path": "26"
    },
    "513": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        624
      ],
      "op": "AND",
      "path": "26"
    },
    "514": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        615
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "516": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        624
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "517": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        624
      ],
      "op": "DUP2",
      "path": "26"
    },
    "518": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        624
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "519": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        624
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "521": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        624
      ],
      "op": "DUP2",
      "path": "26"
    },
    "522": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        624
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "523": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        624
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "524": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        624
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "526": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        624
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "527": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        624
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "528": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        634
      ],
      "op": "DUP4",
      "path": "26"
    },
    "529": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        634
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "530": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        605,
        634
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "531": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        648,
        669
      ],
      "op": "DUP2",
      "path": "26"
    },
    "532": {
      "branch": 6,
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        648,
        669
      ],
      "op": "AND",
      "path": "26"
    },
    "533": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        644,
        713
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x21B"
    },
    "536": {
      "branch": 6,
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        644,
        713
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "537": {
      "op": "POP"
    },
    "538": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        695,
        702
      ],
      "op": "DUP2",
      "path": "26",
      "statement": 2
    },
    "539": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        644,
        713
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "546": {
      "op": "SHL"
    },
    "547": {
      "op": "SUB"
    },
    "548": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        747
      ],
      "op": "SWAP1",
      "path": "26",
      "statement": 3
    },
    "549": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        747
      ],
      "op": "DUP2",
      "path": "26"
    },
    "550": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        747
      ],
      "op": "AND",
      "path": "26"
    },
    "551": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        747
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "553": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        747
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "554": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        747
      ],
      "op": "DUP2",
      "path": "26"
    },
    "555": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        747
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "556": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        738
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "558": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        747
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "560": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        747
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "561": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        747
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "563": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        747
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "564": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        747
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "565": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        757
      ],
      "op": "DUP1",
      "path": "26"
    },
    "566": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        757
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "567": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        757
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "568": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        757
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "569": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        757
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "570": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        757
      ],
      "op": "AND",
      "path": "26"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "577": {
      "op": "SHL"
    },
    "578": {
      "op": "SUB"
    },
    "579": {
      "op": "NOT"
    },
    "580": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        757
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "581": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        757
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "582": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        757
      ],
      "op": "AND",
      "path": "26"
    },
    "583": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        757
      ],
      "op": "OR",
      "path": "26"
    },
    "584": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        757
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "585": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        757
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "586": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        722,
        757
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "587": {
      "op": "POP"
    },
    "588": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "jump": "o",
      "offset": [
        514,
        764
      ],
      "op": "JUMP",
      "path": "26"
    },
    "589": {
      "offset": [
        301,
        345
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "590": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x0"
    },
    "623": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        301,
        345
      ],
      "op": "DUP2",
      "path": "26"
    },
    "624": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "jump": "o",
      "offset": [
        301,
        345
      ],
      "op": "JUMP",
      "path": "26"
    },
    "625": {
      "offset": [
        351,
        397
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "626": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "628": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "630": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "DUP2",
      "path": "26"
    },
    "631": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "632": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "633": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "634": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "DUP2",
      "path": "26"
    },
    "635": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "636": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "638": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "639": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "640": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "641": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "offset": [
        351,
        397
      ],
      "op": "DUP2",
      "path": "26"
    },
    "642": {
      "fn": "StakingEscrowForAdjudicatorMock.setStakerInfo",
      "jump": "o",
      "offset": [
        351,
        397
      ],
      "op": "JUMP",
      "path": "26"
    },
    "643": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        888,
        1135
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "650": {
      "op": "SHL"
    },
    "651": {
      "op": "SUB"
    },
    "652": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1070
      ],
      "op": "SWAP4",
      "path": "26",
      "statement": 4
    },
    "653": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1070
      ],
      "op": "DUP5",
      "path": "26"
    },
    "654": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1070
      ],
      "op": "AND",
      "path": "26"
    },
    "655": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1061
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "657": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1070
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "658": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1070
      ],
      "op": "DUP2",
      "path": "26"
    },
    "659": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1070
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "660": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1070
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "662": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1070
      ],
      "op": "DUP2",
      "path": "26"
    },
    "663": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1070
      ],
      "op": "DUP2",
      "path": "26"
    },
    "664": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1070
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "665": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1070
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "667": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1070
      ],
      "op": "DUP1",
      "path": "26"
    },
    "668": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1070
      ],
      "op": "DUP4",
      "path": "26"
    },
    "669": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1070
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "670": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1082
      ],
      "op": "DUP1",
      "path": "26"
    },
    "671": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1082
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "672": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1082
      ],
      "op": "SWAP7",
      "path": "26"
    },
    "673": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1082
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "674": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1082
      ],
      "op": "SWAP7",
      "path": "26"
    },
    "675": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1082
      ],
      "op": "SUB",
      "path": "26"
    },
    "676": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1082
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "677": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1082
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "678": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1051,
        1082
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "679": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1117
      ],
      "op": "SWAP3",
      "path": "26",
      "statement": 5
    },
    "680": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1117
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "681": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1117
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "682": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1117
      ],
      "op": "AND",
      "path": "26"
    },
    "683": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1117
      ],
      "op": "DUP5",
      "path": "26"
    },
    "684": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1117
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "687": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1117
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "688": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1117
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "689": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1117
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "690": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1117
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "691": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1117
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "692": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1128
      ],
      "op": "DUP1",
      "path": "26"
    },
    "693": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1128
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "694": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1128
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "695": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1128
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "696": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1128
      ],
      "op": "ADD",
      "path": "26"
    },
    "697": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1128
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "698": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        1092,
        1128
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "699": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "jump": "o",
      "offset": [
        888,
        1135
      ],
      "op": "JUMP",
      "path": "26"
    },
    "700": {
      "offset": [
        455,
        507
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "701": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "703": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "705": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "706": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "708": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "709": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "DUP2",
      "path": "26"
    },
    "710": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "711": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "713": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "714": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "715": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "722": {
      "op": "SHL"
    },
    "723": {
      "op": "SUB"
    },
    "724": {
      "offset": [
        455,
        507
      ],
      "op": "AND",
      "path": "26"
    },
    "725": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        455,
        507
      ],
      "op": "DUP2",
      "path": "26"
    },
    "726": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "jump": "o",
      "offset": [
        455,
        507
      ],
      "op": "JUMP",
      "path": "26"
    },
    "727": {
      "offset": [
        403,
        449
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "728": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "730": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "732": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "733": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "735": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "736": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "DUP2",
      "path": "26"
    },
    "737": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "738": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "740": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "741": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "742": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "743": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "offset": [
        403,
        449
      ],
      "op": "DUP2",
      "path": "26"
    },
    "744": {
      "fn": "StakingEscrowForAdjudicatorMock.slashStaker",
      "jump": "o",
      "offset": [
        403,
        449
      ],
      "op": "JUMP",
      "path": "26"
    }
  },
  "sha1": "2bb6bda66a6d492818c4d87ca09610934f8056d4",
  "source": "pragma solidity ^0.6.5;\n\n\nimport \"contracts/Adjudicator.sol\";\nimport \"contracts/StakingEscrow.sol\";\nimport \"contracts/lib/SignatureVerifier.sol\";\nimport \"contracts/proxy/Upgradeable.sol\";\n\n\n/**\n* @notice Contract for testing the Adjudicator contract\n*/\ncontract StakingEscrowForAdjudicatorMock {\n\n    uint32 public immutable secondsPerPeriod = 1;\n    mapping (address => uint256) public stakerInfo;\n    mapping (address => uint256) public rewardInfo;\n    mapping (address => address) public stakerFromWorker;\n\n    function setStakerInfo(address _staker, uint256 _amount, address _worker) public {\n        stakerInfo[_staker] = _amount;\n        if (_worker == address(0)) {\n            _worker = _staker;\n        }\n        stakerFromWorker[_worker] = _staker;\n    }\n\n    function getAllTokens(address _staker) public view returns (uint256) {\n        return stakerInfo[_staker];\n    }\n\n    function slashStaker(\n        address _staker,\n        uint256 _penalty,\n        address _investigator,\n        uint256 _reward\n    )\n        public\n    {\n        stakerInfo[_staker] -= _penalty;\n        rewardInfo[_investigator] += _reward;\n    }\n\n}\n\n\n/**\n* @notice Upgrade to this contract must lead to fail\n*/\ncontract AdjudicatorBad is Upgradeable {\n\n    mapping (bytes32 => bool) public evaluatedCFrags;\n    mapping (address => uint256) public penaltyHistory;\n\n}\n\n\n/**\n* @notice Contract for testing upgrading the Adjudicator contract\n*/\ncontract AdjudicatorV2Mock is Adjudicator {\n\n    uint256 public valueToCheck;\n\n    constructor(\n        StakingEscrow _escrow,\n        SignatureVerifier.HashAlgorithm _hashAlgorithm,\n        uint256 _basePenalty,\n        uint256 _percentagePenalty,\n        uint256 _penaltyHistoryCoefficient,\n        uint256 _rewardCoefficient\n    )\n        public\n        Adjudicator(\n            _escrow,\n            _hashAlgorithm,\n            _basePenalty,\n            _percentagePenalty,\n            _penaltyHistoryCoefficient,\n            _rewardCoefficient\n        )\n    {\n    }\n\n    function setValueToCheck(uint256 _valueToCheck) public {\n        valueToCheck = _valueToCheck;\n    }\n\n    function verifyState(address _testTarget) override public {\n        super.verifyState(_testTarget);\n        require(uint256(delegateGet(_testTarget, this.valueToCheck.selector)) == valueToCheck);\n    }\n}\n",
  "sourceMap": "253:885:26:-:0;;;-1:-1:-1;;;301:44:26;;253:885;2:2:-1;;;;27:1;24;17:12;2:2;253:885:26;;;;;;;;;;;;",
  "sourcePath": "contracts/AdjudicatorTestSet.sol",
  "type": "contract"
}