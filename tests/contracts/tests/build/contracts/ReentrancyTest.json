{
  "abi": [
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxDepth",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "31": "contracts/ReentrancyTest.sol"
  },
  "ast": {
    "absolutePath": "contracts/ReentrancyTest.sol",
    "exportedSymbols": {
      "ReentrancyTest": [
        1715
      ]
    },
    "id": 1716,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1645,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:31"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1646,
          "nodeType": "StructuredDocumentation",
          "src": "26:57:31",
          "text": "@dev Contract for reentrancy protection testing*"
        },
        "fullyImplemented": true,
        "id": 1715,
        "linearizedBaseContracts": [
          1715
        ],
        "name": "ReentrancyTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1649,
            "mutability": "mutable",
            "name": "maxDepth",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1715,
            "src": "115:20:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1647,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "115:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 1648,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "134:1:31",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1651,
            "mutability": "mutable",
            "name": "lockCounter",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1715,
            "src": "141:19:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1650,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "141:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1653,
            "mutability": "mutable",
            "name": "target",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1715,
            "src": "166:14:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1652,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "166:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1655,
            "mutability": "mutable",
            "name": "value",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1715,
            "src": "186:13:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1654,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "186:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1657,
            "mutability": "mutable",
            "name": "data",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1715,
            "src": "205:10:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 1656,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "205:5:31",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1684,
              "nodeType": "Block",
              "src": "322:109:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1668,
                      "name": "maxDepth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1649,
                      "src": "332:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1669,
                      "name": "_maxDepth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1659,
                      "src": "343:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "332:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1671,
                  "nodeType": "ExpressionStatement",
                  "src": "332:20:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1672,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1653,
                      "src": "362:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1673,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1661,
                      "src": "371:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "362:16:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1675,
                  "nodeType": "ExpressionStatement",
                  "src": "362:16:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1676,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1655,
                      "src": "388:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1677,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1663,
                      "src": "396:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "388:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1679,
                  "nodeType": "ExpressionStatement",
                  "src": "388:14:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1680,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1657,
                      "src": "412:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1681,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1665,
                      "src": "419:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "412:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 1683,
                  "nodeType": "ExpressionStatement",
                  "src": "412:12:31"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9345935f",
            "id": 1685,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setData",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1659,
                  "mutability": "mutable",
                  "name": "_maxDepth",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1685,
                  "src": "239:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "239:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1661,
                  "mutability": "mutable",
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1685,
                  "src": "258:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1663,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1685,
                  "src": "275:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "275:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1665,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1685,
                  "src": "291:20:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1664,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "291:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "238:74:31"
            },
            "returnParameters": {
              "id": 1667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "322:0:31"
            },
            "scope": 1715,
            "src": "222:209:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1713,
              "nodeType": "Block",
              "src": "518:259:31",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1688,
                      "name": "lockCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1651,
                      "src": "576:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1689,
                      "name": "maxDepth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1649,
                      "src": "591:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "576:23:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1693,
                  "nodeType": "IfStatement",
                  "src": "572:60:31",
                  "trueBody": {
                    "id": 1692,
                    "nodeType": "Block",
                    "src": "601:31:31",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 1687,
                        "id": 1691,
                        "nodeType": "Return",
                        "src": "615:7:31"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "641:13:31",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 1694,
                      "name": "lockCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1651,
                      "src": "641:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1696,
                  "nodeType": "ExpressionStatement",
                  "src": "641:13:31"
                },
                {
                  "assignments": [
                    1698,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1698,
                      "mutability": "mutable",
                      "name": "callSuccess",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1713,
                      "src": "665:16:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1697,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "665:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1705,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1703,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1657,
                        "src": "712:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1699,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1653,
                          "src": "686:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "686:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 1701,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1655,
                          "src": "705:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "686:25:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "686:31:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "664:53:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1707,
                        "name": "callSuccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1698,
                        "src": "735:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1706,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "727:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "727:20:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1709,
                  "nodeType": "ExpressionStatement",
                  "src": "727:20:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "757:13:31",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 1710,
                      "name": "lockCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1651,
                      "src": "757:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1712,
                  "nodeType": "ExpressionStatement",
                  "src": "757:13:31"
                }
              ]
            },
            "documentation": null,
            "id": 1714,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "498:2:31"
            },
            "returnParameters": {
              "id": 1687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "518:0:31"
            },
            "scope": 1715,
            "src": "490:287:31",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1716,
        "src": "84:696:31"
      }
    ],
    "src": "0:781:31"
  },
  "bytecode": "6080604052600160005534801561001557600080fd5b506102b0806100256000396000f3fe60806040526004361061001e5760003560e01c80639345935f14610112575b6000546001541061002e57610110565b600180548101815560028054600354604051600480546000966001600160a01b03909516959394919383928592600019918116156101000291909101160480156100af5780601f1061008d5761010080835404028352918201916100af565b820191906000526020600020905b81548152906001019060200180831161009b575b505091505060006040518083038185875af1925050503d80600081146100f1576040519150601f19603f3d011682016040523d82523d6000602084013e6100f6565b606091505b505090508061010457600080fd5b50600180546000190190555b005b34801561011e57600080fd5b506101106004803603608081101561013557600080fd5b8135916001600160a01b03602082013516916040820135919081019060808101606082013564010000000081111561016c57600080fd5b82018360208201111561017e57600080fd5b803590602001918460018302840111640100000000831117156101a057600080fd5b5090925090506000859055600280546001600160a01b0319166001600160a01b03861617905560038390556101d7600483836101df565b505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102205782800160ff1982351617855561024d565b8280016001018555821561024d579182015b8281111561024d578235825591602001919060010190610232565b5061025992915061025d565b5090565b61027791905b808211156102595760008155600101610263565b9056fea2646970667358221220806b0577205c1e0045e72803d33e7635a848c9c8b2f77f0b351204f5f74b5de664736f6c63430006070033",
  "bytecodeSha1": "af6d5d8e20b538a8dcbd9a9438a2d064e4955f34",
  "compiler": {
    "evm_version": "berlin",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.7"
  },
  "contractName": "ReentrancyTest",
  "coverageMap": {
    "branches": {
      "31": {
        "ReentrancyTest.<fallback>": {
          "8": [
            576,
            599,
            false
          ],
          "9": [
            735,
            746,
            true
          ]
        }
      }
    },
    "statements": {
      "31": {
        "ReentrancyTest.<fallback>": {
          "0": [
            615,
            622
          ],
          "1": [
            641,
            654
          ],
          "2": [
            727,
            747
          ],
          "3": [
            757,
            770
          ]
        },
        "ReentrancyTest.setData": {
          "4": [
            332,
            352
          ],
          "5": [
            362,
            378
          ],
          "6": [
            388,
            402
          ],
          "7": [
            412,
            424
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "60806040526004361061001e5760003560e01c80639345935f14610112575b6000546001541061002e57610110565b600180548101815560028054600354604051600480546000966001600160a01b03909516959394919383928592600019918116156101000291909101160480156100af5780601f1061008d5761010080835404028352918201916100af565b820191906000526020600020905b81548152906001019060200180831161009b575b505091505060006040518083038185875af1925050503d80600081146100f1576040519150601f19603f3d011682016040523d82523d6000602084013e6100f6565b606091505b505090508061010457600080fd5b50600180546000190190555b005b34801561011e57600080fd5b506101106004803603608081101561013557600080fd5b8135916001600160a01b03602082013516916040820135919081019060808101606082013564010000000081111561016c57600080fd5b82018360208201111561017e57600080fd5b803590602001918460018302840111640100000000831117156101a057600080fd5b5090925090506000859055600280546001600160a01b0319166001600160a01b03861617905560038390556101d7600483836101df565b505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102205782800160ff1982351617855561024d565b8280016001018555821561024d579182015b8281111561024d578235825591602001919060010190610232565b5061025992915061025d565b5090565b61027791905b808211156102595760008155600101610263565b9056fea2646970667358221220806b0577205c1e0045e72803d33e7635a848c9c8b2f77f0b351204f5f74b5de664736f6c63430006070033",
  "deployedSourceMap": "84:696:31:-:0;;;;;;;;;;;;;;;;;;591:8;;576:11;;:23;572:60;;615:7;;572:60;641:11;:13;;;;;;686:6;;;705:5;;686:31;;712:4;686:31;;641:11;;-1:-1:-1;;;;;686:6:31;;;;705:5;;712:4;;686:31;;712:4;;-1:-1:-1;;686:31:31;;;;:6;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;664:53:31;;;735:11;727:20;;12:1:-1;9;2:12;727:20:31;-1:-1:-1;757:11:31;:13;;-1:-1:-1;;757:13:31;;;490:287;84:696;222:209;;5:9:-1;2:2;;;27:1;24;17:12;2:2;222:209:31;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;222:209:31;;;-1:-1:-1;;;;;222:209:31;;;;;;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;222:209:31;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;222:209:31;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;222:209:31;;-1:-1:-1;222:209:31;-1:-1:-1;332:8:31;:20;;;362:6;:16;;-1:-1:-1;;;;;;362:16:31;-1:-1:-1;;;;;362:16:31;;;;;388:5;:14;;;412:12;:4;419:5;;412:12;:::i;:::-;;222:209;;;;;:::o;84:696::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;84:696:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;84:696:31;;;-1:-1:-1;84:696:31;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Contract for reentrancy protection testing*",
    "methods": {}
  },
  "offset": [
    84,
    780
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9345935F EQ PUSH2 0x112 JUMPI JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD LT PUSH2 0x2E JUMPI PUSH2 0x110 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD DUP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP6 SWAP4 SWAP5 SWAP2 SWAP4 DUP4 SWAP3 DUP6 SWAP3 PUSH1 0x0 NOT SWAP2 DUP2 AND ISZERO PUSH2 0x100 MUL SWAP2 SWAP1 SWAP2 ADD AND DIV DUP1 ISZERO PUSH2 0xAF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0xAF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9B JUMPI JUMPDEST POP POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP6 SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE PUSH1 0x3 DUP4 SWAP1 SSTORE PUSH2 0x1D7 PUSH1 0x4 DUP4 DUP4 PUSH2 0x1DF JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x220 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x24D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x24D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x24D JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x232 JUMP JUMPDEST POP PUSH2 0x259 SWAP3 SWAP2 POP PUSH2 0x25D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x277 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x263 JUMP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH12 0x577205C1E0045E72803D33E PUSH23 0x35A848C9C8B2F77F0B351204F5F74B5DE664736F6C6343 STOP MOD SMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "5": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "8": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "LT",
      "path": "31"
    },
    "9": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1E"
    },
    "12": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "13": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "CALLDATALOAD",
      "path": "31"
    },
    "16": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "SHR",
      "path": "31"
    },
    "19": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "DUP1",
      "path": "31"
    },
    "20": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x9345935F"
    },
    "25": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "EQ",
      "path": "31"
    },
    "26": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x112"
    },
    "29": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "30": {
      "fn": null,
      "offset": [
        84,
        780
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "31": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        591,
        599
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "33": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        591,
        599
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "34": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        576,
        587
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "36": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        576,
        587
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "37": {
      "branch": 8,
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        576,
        599
      ],
      "op": "LT",
      "path": "31"
    },
    "38": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        572,
        632
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x2E"
    },
    "41": {
      "branch": 8,
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        572,
        632
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "42": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        615,
        622
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 0,
      "value": "0x110"
    },
    "45": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        615,
        622
      ],
      "op": "JUMP",
      "path": "31"
    },
    "46": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        572,
        632
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "47": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        641,
        652
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 1,
      "value": "0x1"
    },
    "49": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        641,
        654
      ],
      "op": "DUP1",
      "path": "31"
    },
    "50": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        641,
        654
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "51": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        641,
        654
      ],
      "op": "DUP2",
      "path": "31"
    },
    "52": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        641,
        654
      ],
      "op": "ADD",
      "path": "31"
    },
    "53": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        641,
        654
      ],
      "op": "DUP2",
      "path": "31"
    },
    "54": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        641,
        654
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "55": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        692
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x2"
    },
    "57": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        692
      ],
      "op": "DUP1",
      "path": "31"
    },
    "58": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        692
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "59": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        705,
        710
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x3"
    },
    "61": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        705,
        710
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "62": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "64": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "65": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        712,
        716
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "67": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP1",
      "path": "31"
    },
    "68": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "69": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        641,
        652
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "71": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        641,
        652
      ],
      "op": "SWAP7",
      "path": "31"
    },
    "72": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "74": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "76": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "78": {
      "op": "SHL"
    },
    "79": {
      "op": "SUB"
    },
    "80": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        692
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "81": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        692
      ],
      "op": "SWAP6",
      "path": "31"
    },
    "82": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        692
      ],
      "op": "AND",
      "path": "31"
    },
    "83": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        692
      ],
      "op": "SWAP6",
      "path": "31"
    },
    "84": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        705,
        710
      ],
      "op": "SWAP4",
      "path": "31"
    },
    "85": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        705,
        710
      ],
      "op": "SWAP5",
      "path": "31"
    },
    "86": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        712,
        716
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "87": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        712,
        716
      ],
      "op": "SWAP4",
      "path": "31"
    },
    "88": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP4",
      "path": "31"
    },
    "89": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "90": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        712,
        716
      ],
      "op": "DUP6",
      "path": "31"
    },
    "91": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        712,
        716
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "92": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "94": {
      "op": "NOT"
    },
    "95": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "96": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP2",
      "path": "31"
    },
    "97": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "AND",
      "path": "31"
    },
    "98": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "99": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        692
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x100"
    },
    "102": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "MUL",
      "path": "31"
    },
    "103": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "104": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "105": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "106": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "ADD",
      "path": "31"
    },
    "107": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "AND",
      "path": "31"
    },
    "108": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DIV",
      "path": "31"
    },
    "109": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP1",
      "path": "31"
    },
    "110": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "111": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xAF"
    },
    "114": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "115": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP1",
      "path": "31"
    },
    "116": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1F"
    },
    "118": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "LT",
      "path": "31"
    },
    "119": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x8D"
    },
    "122": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "123": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x100"
    },
    "126": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP1",
      "path": "31"
    },
    "127": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP4",
      "path": "31"
    },
    "128": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "129": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DIV",
      "path": "31"
    },
    "130": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "MUL",
      "path": "31"
    },
    "131": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP4",
      "path": "31"
    },
    "132": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "133": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "134": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP3",
      "path": "31"
    },
    "135": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "ADD",
      "path": "31"
    },
    "136": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "137": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xAF"
    },
    "140": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "JUMP",
      "path": "31"
    },
    "141": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "142": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP3",
      "path": "31"
    },
    "143": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "ADD",
      "path": "31"
    },
    "144": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "145": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "146": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "148": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "149": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "151": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "153": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "154": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "155": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "156": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP2",
      "path": "31"
    },
    "157": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "158": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP2",
      "path": "31"
    },
    "159": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "160": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "161": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "163": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "ADD",
      "path": "31"
    },
    "164": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "165": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "167": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "ADD",
      "path": "31"
    },
    "168": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP1",
      "path": "31"
    },
    "169": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP4",
      "path": "31"
    },
    "170": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "GT",
      "path": "31"
    },
    "171": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x9B"
    },
    "174": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "175": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "176": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "POP",
      "path": "31"
    },
    "177": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "POP",
      "path": "31"
    },
    "178": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "179": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "POP",
      "path": "31"
    },
    "180": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "POP",
      "path": "31"
    },
    "181": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "183": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "185": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "186": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP1",
      "path": "31"
    },
    "187": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP4",
      "path": "31"
    },
    "188": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SUB",
      "path": "31"
    },
    "189": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP2",
      "path": "31"
    },
    "190": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP6",
      "path": "31"
    },
    "191": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "DUP8",
      "path": "31"
    },
    "192": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "GAS",
      "path": "31"
    },
    "193": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "CALL",
      "path": "31"
    },
    "194": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "195": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "POP",
      "path": "31"
    },
    "196": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "POP",
      "path": "31"
    },
    "197": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "POP",
      "path": "31"
    },
    "198": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        686,
        717
      ],
      "op": "RETURNDATASIZE",
      "path": "31"
    },
    "199": {
      "op": "DUP1"
    },
    "200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "202": {
      "op": "DUP2"
    },
    "203": {
      "op": "EQ"
    },
    "204": {
      "op": "PUSH2",
      "value": "0xF1"
    },
    "207": {
      "op": "JUMPI"
    },
    "208": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "210": {
      "op": "MLOAD"
    },
    "211": {
      "op": "SWAP2"
    },
    "212": {
      "op": "POP"
    },
    "213": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "215": {
      "op": "NOT"
    },
    "216": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "218": {
      "op": "RETURNDATASIZE"
    },
    "219": {
      "op": "ADD"
    },
    "220": {
      "op": "AND"
    },
    "221": {
      "op": "DUP3"
    },
    "222": {
      "op": "ADD"
    },
    "223": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "225": {
      "op": "MSTORE"
    },
    "226": {
      "op": "RETURNDATASIZE"
    },
    "227": {
      "op": "DUP3"
    },
    "228": {
      "op": "MSTORE"
    },
    "229": {
      "op": "RETURNDATASIZE"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "234": {
      "op": "DUP5"
    },
    "235": {
      "op": "ADD"
    },
    "236": {
      "op": "RETURNDATACOPY"
    },
    "237": {
      "op": "PUSH2",
      "value": "0xF6"
    },
    "240": {
      "op": "JUMP"
    },
    "241": {
      "op": "JUMPDEST"
    },
    "242": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "244": {
      "op": "SWAP2"
    },
    "245": {
      "op": "POP"
    },
    "246": {
      "op": "JUMPDEST"
    },
    "247": {
      "op": "POP"
    },
    "248": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        664,
        717
      ],
      "op": "POP",
      "path": "31"
    },
    "249": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        664,
        717
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "250": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        664,
        717
      ],
      "op": "POP",
      "path": "31"
    },
    "251": {
      "branch": 9,
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        735,
        746
      ],
      "op": "DUP1",
      "path": "31",
      "statement": 2
    },
    "252": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        727,
        747
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x104"
    },
    "255": {
      "branch": 9,
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        727,
        747
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "258": {
      "op": "DUP1"
    },
    "259": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        727,
        747
      ],
      "op": "REVERT",
      "path": "31"
    },
    "260": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        727,
        747
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "261": {
      "op": "POP"
    },
    "262": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        757,
        768
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 3,
      "value": "0x1"
    },
    "264": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        757,
        770
      ],
      "op": "DUP1",
      "path": "31"
    },
    "265": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        757,
        770
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "268": {
      "op": "NOT"
    },
    "269": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        757,
        770
      ],
      "op": "ADD",
      "path": "31"
    },
    "270": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        757,
        770
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "271": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        757,
        770
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "272": {
      "fn": "ReentrancyTest.<fallback>",
      "offset": [
        490,
        777
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "273": {
      "offset": [
        84,
        780
      ],
      "op": "STOP",
      "path": "31"
    },
    "274": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "275": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "CALLVALUE",
      "path": "31"
    },
    "276": {
      "op": "DUP1"
    },
    "277": {
      "op": "ISZERO"
    },
    "278": {
      "op": "PUSH2",
      "value": "0x11E"
    },
    "281": {
      "op": "JUMPI"
    },
    "282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "284": {
      "op": "DUP1"
    },
    "285": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "REVERT",
      "path": "31"
    },
    "286": {
      "op": "JUMPDEST"
    },
    "287": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "POP",
      "path": "31"
    },
    "288": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x110"
    },
    "291": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "293": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "DUP1",
      "path": "31"
    },
    "294": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "295": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "SUB",
      "path": "31"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "298": {
      "op": "DUP2"
    },
    "299": {
      "op": "LT"
    },
    "300": {
      "op": "ISZERO"
    },
    "301": {
      "op": "PUSH2",
      "value": "0x135"
    },
    "304": {
      "op": "JUMPI"
    },
    "305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "307": {
      "op": "DUP1"
    },
    "308": {
      "op": "REVERT"
    },
    "309": {
      "op": "JUMPDEST"
    },
    "310": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "DUP2",
      "path": "31"
    },
    "311": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "CALLDATALOAD",
      "path": "31"
    },
    "312": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "319": {
      "op": "SHL"
    },
    "320": {
      "op": "SUB"
    },
    "321": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "323": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "DUP3",
      "path": "31"
    },
    "324": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "ADD",
      "path": "31"
    },
    "325": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "CALLDATALOAD",
      "path": "31"
    },
    "326": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "AND",
      "path": "31"
    },
    "327": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "328": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "330": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "DUP3",
      "path": "31"
    },
    "331": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "ADD",
      "path": "31"
    },
    "332": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "CALLDATALOAD",
      "path": "31"
    },
    "333": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "334": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "335": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "DUP2",
      "path": "31"
    },
    "336": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "ADD",
      "path": "31"
    },
    "337": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "338": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x80"
    },
    "340": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "DUP2",
      "path": "31"
    },
    "341": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "ADD",
      "path": "31"
    },
    "342": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x60"
    },
    "344": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "DUP3",
      "path": "31"
    },
    "345": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "ADD",
      "path": "31"
    },
    "346": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "CALLDATALOAD",
      "path": "31"
    },
    "347": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "353": {
      "op": "DUP2"
    },
    "354": {
      "op": "GT"
    },
    "355": {
      "op": "ISZERO"
    },
    "356": {
      "op": "PUSH2",
      "value": "0x16C"
    },
    "359": {
      "op": "JUMPI"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "362": {
      "op": "DUP1"
    },
    "363": {
      "op": "REVERT"
    },
    "364": {
      "op": "JUMPDEST"
    },
    "365": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "DUP3",
      "path": "31"
    },
    "366": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "ADD",
      "path": "31"
    },
    "367": {
      "op": "DUP4"
    },
    "368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "370": {
      "op": "DUP3"
    },
    "371": {
      "op": "ADD"
    },
    "372": {
      "op": "GT"
    },
    "373": {
      "op": "ISZERO"
    },
    "374": {
      "op": "PUSH2",
      "value": "0x17E"
    },
    "377": {
      "op": "JUMPI"
    },
    "378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "380": {
      "op": "DUP1"
    },
    "381": {
      "op": "REVERT"
    },
    "382": {
      "op": "JUMPDEST"
    },
    "383": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "DUP1",
      "path": "31"
    },
    "384": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "CALLDATALOAD",
      "path": "31"
    },
    "385": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "386": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "388": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "ADD",
      "path": "31"
    },
    "389": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "390": {
      "op": "DUP5"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "DUP4"
    },
    "394": {
      "op": "MUL"
    },
    "395": {
      "op": "DUP5"
    },
    "396": {
      "op": "ADD"
    },
    "397": {
      "op": "GT"
    },
    "398": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "404": {
      "op": "DUP4"
    },
    "405": {
      "op": "GT"
    },
    "406": {
      "op": "OR"
    },
    "407": {
      "op": "ISZERO"
    },
    "408": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "411": {
      "op": "JUMPI"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "414": {
      "op": "DUP1"
    },
    "415": {
      "op": "REVERT"
    },
    "416": {
      "op": "JUMPDEST"
    },
    "417": {
      "op": "POP"
    },
    "418": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "419": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "420": {
      "op": "POP"
    },
    "421": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "422": {
      "op": "POP"
    },
    "423": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        332,
        340
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 4,
      "value": "0x0"
    },
    "425": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        332,
        352
      ],
      "op": "DUP6",
      "path": "31"
    },
    "426": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        332,
        352
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "427": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        332,
        352
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "428": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        362,
        368
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 5,
      "value": "0x2"
    },
    "430": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        362,
        378
      ],
      "op": "DUP1",
      "path": "31"
    },
    "431": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        362,
        378
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "438": {
      "op": "SHL"
    },
    "439": {
      "op": "SUB"
    },
    "440": {
      "op": "NOT"
    },
    "441": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        362,
        378
      ],
      "op": "AND",
      "path": "31"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "448": {
      "op": "SHL"
    },
    "449": {
      "op": "SUB"
    },
    "450": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        362,
        378
      ],
      "op": "DUP7",
      "path": "31"
    },
    "451": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        362,
        378
      ],
      "op": "AND",
      "path": "31"
    },
    "452": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        362,
        378
      ],
      "op": "OR",
      "path": "31"
    },
    "453": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        362,
        378
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "454": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        362,
        378
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "455": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        388,
        393
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 6,
      "value": "0x3"
    },
    "457": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        388,
        402
      ],
      "op": "DUP4",
      "path": "31"
    },
    "458": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        388,
        402
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "459": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        388,
        402
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "460": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        412,
        424
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 7,
      "value": "0x1D7"
    },
    "463": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        412,
        416
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "465": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        419,
        424
      ],
      "op": "DUP4",
      "path": "31"
    },
    "466": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        419,
        424
      ],
      "op": "DUP4",
      "path": "31"
    },
    "467": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        412,
        424
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1DF"
    },
    "470": {
      "fn": "ReentrancyTest.setData",
      "jump": "i",
      "offset": [
        412,
        424
      ],
      "op": "JUMP",
      "path": "31"
    },
    "471": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        412,
        424
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "472": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        412,
        424
      ],
      "op": "POP",
      "path": "31"
    },
    "473": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "POP",
      "path": "31"
    },
    "474": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "POP",
      "path": "31"
    },
    "475": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "POP",
      "path": "31"
    },
    "476": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "POP",
      "path": "31"
    },
    "477": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        222,
        431
      ],
      "op": "POP",
      "path": "31"
    },
    "478": {
      "fn": "ReentrancyTest.setData",
      "jump": "o",
      "offset": [
        222,
        431
      ],
      "op": "JUMP",
      "path": "31"
    },
    "479": {
      "offset": [
        84,
        780
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "480": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP3",
      "path": "31"
    },
    "481": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP1",
      "path": "31"
    },
    "482": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "483": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "485": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP2",
      "path": "31"
    },
    "486": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "488": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "AND",
      "path": "31"
    },
    "489": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "490": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x100"
    },
    "493": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "MUL",
      "path": "31"
    },
    "494": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SUB",
      "path": "31"
    },
    "495": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "AND",
      "path": "31"
    },
    "496": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x2"
    },
    "498": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "499": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DIV",
      "path": "31"
    },
    "500": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "501": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "503": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "504": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "506": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "508": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "509": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "510": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1F"
    },
    "512": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "ADD",
      "path": "31"
    },
    "513": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "515": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "516": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DIV",
      "path": "31"
    },
    "517": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP2",
      "path": "31"
    },
    "518": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "ADD",
      "path": "31"
    },
    "519": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "520": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP3",
      "path": "31"
    },
    "521": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1F"
    },
    "523": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "LT",
      "path": "31"
    },
    "524": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x220"
    },
    "527": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "528": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP3",
      "path": "31"
    },
    "529": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP1",
      "path": "31"
    },
    "530": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "ADD",
      "path": "31"
    },
    "531": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "533": {
      "op": "NOT"
    },
    "534": {
      "offset": [
        84,
        780
      ],
      "op": "DUP3",
      "path": "31"
    },
    "535": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "CALLDATALOAD",
      "path": "31"
    },
    "536": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "AND",
      "path": "31"
    },
    "537": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "OR",
      "path": "31"
    },
    "538": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP6",
      "path": "31"
    },
    "539": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "540": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x24D"
    },
    "543": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "JUMP",
      "path": "31"
    },
    "544": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "545": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP3",
      "path": "31"
    },
    "546": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP1",
      "path": "31"
    },
    "547": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "ADD",
      "path": "31"
    },
    "548": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "550": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "ADD",
      "path": "31"
    },
    "551": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP6",
      "path": "31"
    },
    "552": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "553": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP3",
      "path": "31"
    },
    "554": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "555": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x24D"
    },
    "558": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "559": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "560": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP3",
      "path": "31"
    },
    "561": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "ADD",
      "path": "31"
    },
    "562": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "563": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP3",
      "path": "31"
    },
    "564": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP2",
      "path": "31"
    },
    "565": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "GT",
      "path": "31"
    },
    "566": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "567": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x24D"
    },
    "570": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "571": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP3",
      "path": "31"
    },
    "572": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "CALLDATALOAD",
      "path": "31"
    },
    "573": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP3",
      "path": "31"
    },
    "574": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "575": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "576": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "578": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "ADD",
      "path": "31"
    },
    "579": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "580": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "581": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "583": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "ADD",
      "path": "31"
    },
    "584": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "585": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x232"
    },
    "588": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "JUMP",
      "path": "31"
    },
    "589": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "590": {
      "op": "POP"
    },
    "591": {
      "offset": [
        84,
        780
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x259"
    },
    "594": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "595": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "596": {
      "op": "POP"
    },
    "597": {
      "offset": [
        84,
        780
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x25D"
    },
    "600": {
      "fn": "ReentrancyTest.setData",
      "jump": "i",
      "offset": [
        84,
        780
      ],
      "op": "JUMP",
      "path": "31"
    },
    "601": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "602": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "POP",
      "path": "31"
    },
    "603": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "604": {
      "fn": "ReentrancyTest.setData",
      "jump": "o",
      "offset": [
        84,
        780
      ],
      "op": "JUMP",
      "path": "31"
    },
    "605": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "606": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x277"
    },
    "609": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "610": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "611": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "612": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP1",
      "path": "31"
    },
    "613": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP3",
      "path": "31"
    },
    "614": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "GT",
      "path": "31"
    },
    "615": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "616": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x259"
    },
    "619": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "620": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "622": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "DUP2",
      "path": "31"
    },
    "623": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "624": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "626": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "ADD",
      "path": "31"
    },
    "627": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x263"
    },
    "630": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "JUMP",
      "path": "31"
    },
    "631": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "632": {
      "fn": "ReentrancyTest.setData",
      "offset": [
        84,
        780
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "633": {
      "fn": "ReentrancyTest.setData",
      "jump": "o",
      "offset": [
        84,
        780
      ],
      "op": "JUMP",
      "path": "31"
    }
  },
  "sha1": "de1fdf45645a02f98a82e6c7ab8e56166bac9956",
  "source": "pragma solidity ^0.6.1;\n\n\n/**\n* @dev Contract for reentrancy protection testing\n**/\ncontract ReentrancyTest {\n\n    uint256 maxDepth = 1;\n    uint256 lockCounter;\n    address target;\n    uint256 value;\n    bytes data;\n\n    function setData(uint256 _maxDepth, address _target, uint256 _value, bytes calldata _data) external {\n        maxDepth = _maxDepth;\n        target = _target;\n        value = _value;\n        data = _data;\n    }\n\n    // TODO #1809\n//    receive() external payable {\n    fallback() external payable {\n        // call no more than maxDepth times\n        if (lockCounter >= maxDepth) {\n            return;\n        }\n        lockCounter++;\n        (bool callSuccess,) = target.call{value: value}(data);\n        require(callSuccess);\n        lockCounter--;\n    }\n\n}\n",
  "sourceMap": "84:696:31:-:0;;;134:1;115:20;;84:696;5:9:-1;2:2;;;27:1;24;17:12;2:2;84:696:31;;;;;;;",
  "sourcePath": "contracts/ReentrancyTest.sol",
  "type": "contract"
}