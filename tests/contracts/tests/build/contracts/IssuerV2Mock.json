{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract NuCypherToken",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_hoursPerPeriod",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_issuanceDecayCoefficient",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lockDurationCoefficient1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lockDurationCoefficient2",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_maximumRewardedPeriods",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_firstPhaseTotalSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_firstPhaseMaxIssuance",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Donated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reservedReward",
          "type": "uint256"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "testTarget",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "StateVerified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "UpgradeFinished",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "currentMintingPeriod",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentPeriodSupply",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "donate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "finishUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "firstPhaseMaxIssuance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "firstPhaseTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentPeriod",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReservedReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reservedReward",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isUpgrade",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockDurationCoefficient1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockDurationCoefficient2",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maximumRewardedPeriods",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintingCoefficient",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "previousPeriodSupply",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "previousTarget",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondsPerPeriod",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_valueToCheck",
          "type": "uint256"
        }
      ],
      "name": "setValueToCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract NuCypherToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "valueToCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_testTarget",
          "type": "address"
        }
      ],
      "name": "verifyState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "13": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/proxy/Upgradeable.sol",
    "17": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/zeppelin/math/SafeMath.sol",
    "18": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/zeppelin/ownership/Ownable.sol",
    "2": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/Issuer.sol",
    "22": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/zeppelin/token/ERC20/SafeERC20.sol",
    "27": "contracts/IssuerTestSet.sol",
    "7": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/lib/AdditionalMath.sol"
  },
  "ast": {
    "absolutePath": "contracts/IssuerTestSet.sol",
    "exportedSymbols": {
      "IssuerBad": [
        249
      ],
      "IssuerMock": [
        241
      ],
      "IssuerV2Mock": [
        319
      ]
    },
    "id": 320,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 173,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:27"
      },
      {
        "absolutePath": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/Issuer.sol",
        "file": "contracts/Issuer.sol",
        "id": 174,
        "nodeType": "ImportDirective",
        "scope": 320,
        "sourceUnit": 11882,
        "src": "26:30:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/NuCypherToken.sol",
        "file": "contracts/NuCypherToken.sol",
        "id": 175,
        "nodeType": "ImportDirective",
        "scope": 320,
        "sourceUnit": 11956,
        "src": "57:37:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/proxy/Upgradeable.sol",
        "file": "contracts/proxy/Upgradeable.sol",
        "id": 176,
        "nodeType": "ImportDirective",
        "scope": 320,
        "sourceUnit": 11327,
        "src": "95:41:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 178,
              "name": "Issuer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11881,
              "src": "237:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Issuer_$11881",
                "typeString": "contract Issuer"
              }
            },
            "id": 179,
            "nodeType": "InheritanceSpecifier",
            "src": "237:6:27"
          }
        ],
        "contractDependencies": [
          11326,
          11881,
          18927
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 177,
          "nodeType": "StructuredDocumentation",
          "src": "139:74:27",
          "text": "@dev Contract for testing internal methods in the Issuer contract"
        },
        "fullyImplemented": true,
        "id": 241,
        "linearizedBaseContracts": [
          241,
          11881,
          11326,
          18927
        ],
        "name": "IssuerMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "899:7:27",
              "statements": []
            },
            "documentation": null,
            "id": 209,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 198,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 181,
                    "src": "623:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NuCypherToken_$11941",
                      "typeString": "contract NuCypherToken"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 199,
                    "name": "_hoursPerPeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 183,
                    "src": "643:15:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 200,
                    "name": "_issuanceDecayCoefficient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 185,
                    "src": "672:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 201,
                    "name": "_lockDurationCoefficient1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 187,
                    "src": "711:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 202,
                    "name": "_lockDurationCoefficient2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 189,
                    "src": "750:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 203,
                    "name": "_maximumRewardedPeriods",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 191,
                    "src": "789:23:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 204,
                    "name": "_firstPhaseTotalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 193,
                    "src": "826:22:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 205,
                    "name": "_firstPhaseMaxIssuance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 195,
                    "src": "862:22:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 206,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 197,
                  "name": "Issuer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11881,
                  "src": "603:6:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Issuer_$11881_$",
                    "typeString": "type(contract Issuer)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "603:291:27"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 209,
                  "src": "272:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NuCypherToken_$11941",
                    "typeString": "contract NuCypherToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 180,
                    "name": "NuCypherToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11941,
                    "src": "272:13:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NuCypherToken_$11941",
                      "typeString": "contract NuCypherToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "_hoursPerPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 209,
                  "src": "302:22:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "302:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "_issuanceDecayCoefficient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 209,
                  "src": "334:33:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "334:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "_lockDurationCoefficient1",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 209,
                  "src": "377:33:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "377:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "_lockDurationCoefficient2",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 209,
                  "src": "420:33:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "_maximumRewardedPeriods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 209,
                  "src": "463:30:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "_firstPhaseTotalSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 209,
                  "src": "503:30:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "_firstPhaseMaxIssuance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 209,
                  "src": "543:30:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "543:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "262:317:27"
            },
            "returnParameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "899:0:27"
            },
            "scope": 241,
            "src": "251:655:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "1110:191:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 222,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "1120:6:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 224,
                          "name": "_currentPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 211,
                          "src": "1147:14:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 225,
                          "name": "_lockedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "1175:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 226,
                          "name": "_totalLockedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 215,
                          "src": "1201:17:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 227,
                          "name": "_allLockedPeriods",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "1232:17:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 223,
                        "name": "mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11761,
                        "src": "1129:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint16_$returns$_t_uint256_$",
                          "typeString": "function (uint16,uint256,uint256,uint16) returns (uint256)"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1129:121:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1120:130:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "1120:130:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 234,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1275:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1275:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 236,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "1287:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 231,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11363,
                        "src": "1260:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$11941",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19438,
                      "src": "1260:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1260:34:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "1260:34:27"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "efb5c0d5",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "_currentPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 240,
                  "src": "939:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "_lockedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 240,
                  "src": "970:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "_totalLockedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 240,
                  "src": "1000:25:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "_allLockedPeriods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 240,
                  "src": "1035:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "929:136:27"
            },
            "returnParameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 240,
                  "src": "1090:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1089:16:27"
            },
            "scope": 241,
            "src": "912:389:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 320,
        "src": "214:1090:27"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 243,
              "name": "Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11326,
              "src": "1389:11:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Upgradeable_$11326",
                "typeString": "contract Upgradeable"
              }
            },
            "id": 244,
            "nodeType": "InheritanceSpecifier",
            "src": "1389:11:27"
          }
        ],
        "contractDependencies": [
          11326,
          18927
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 242,
          "nodeType": "StructuredDocumentation",
          "src": "1307:59:27",
          "text": "@notice Upgrade to this contract must lead to fail"
        },
        "fullyImplemented": true,
        "id": 249,
        "linearizedBaseContracts": [
          249,
          11326,
          18927
        ],
        "name": "IssuerBad",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "0f64ab14",
            "id": 246,
            "mutability": "mutable",
            "name": "currentMintingPeriod",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 249,
            "src": "1408:34:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 245,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "1408:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f27806a4",
            "id": 248,
            "mutability": "mutable",
            "name": "currentSupply2",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 249,
            "src": "1485:29:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 247,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1485:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          }
        ],
        "scope": 320,
        "src": "1367:151:27"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 251,
              "name": "Issuer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11881,
              "src": "1614:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Issuer_$11881",
                "typeString": "contract Issuer"
              }
            },
            "id": 252,
            "nodeType": "InheritanceSpecifier",
            "src": "1614:6:27"
          }
        ],
        "contractDependencies": [
          11326,
          11881,
          18927
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 250,
          "nodeType": "StructuredDocumentation",
          "src": "1521:67:27",
          "text": "@notice Contract for testing upgrading the Issuer contract"
        },
        "fullyImplemented": true,
        "id": 319,
        "linearizedBaseContracts": [
          319,
          11881,
          11326,
          18927
        ],
        "name": "IssuerV2Mock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a3324be9",
            "id": 254,
            "mutability": "mutable",
            "name": "valueToCheck",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 319,
            "src": "1628:27:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 253,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1628:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 283,
              "nodeType": "Block",
              "src": "2310:7:27",
              "statements": []
            },
            "documentation": null,
            "id": 284,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 273,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 256,
                    "src": "2034:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NuCypherToken_$11941",
                      "typeString": "contract NuCypherToken"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 274,
                    "name": "_hoursPerPeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 258,
                    "src": "2054:15:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 275,
                    "name": "_issuanceDecayCoefficient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 260,
                    "src": "2083:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 276,
                    "name": "_lockDurationCoefficient1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 262,
                    "src": "2122:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 277,
                    "name": "_lockDurationCoefficient2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 264,
                    "src": "2161:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 278,
                    "name": "_maximumRewardedPeriods",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 266,
                    "src": "2200:23:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 279,
                    "name": "_firstPhaseTotalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 268,
                    "src": "2237:22:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 280,
                    "name": "_firstPhaseMaxIssuance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 270,
                    "src": "2273:22:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 281,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 272,
                  "name": "Issuer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11881,
                  "src": "2014:6:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Issuer_$11881_$",
                    "typeString": "type(contract Issuer)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2014:291:27"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 256,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 284,
                  "src": "1683:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NuCypherToken_$11941",
                    "typeString": "contract NuCypherToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 255,
                    "name": "NuCypherToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11941,
                    "src": "1683:13:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NuCypherToken_$11941",
                      "typeString": "contract NuCypherToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 258,
                  "mutability": "mutable",
                  "name": "_hoursPerPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 284,
                  "src": "1713:22:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1713:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 260,
                  "mutability": "mutable",
                  "name": "_issuanceDecayCoefficient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 284,
                  "src": "1745:33:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1745:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "_lockDurationCoefficient1",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 284,
                  "src": "1788:33:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "_lockDurationCoefficient2",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 284,
                  "src": "1831:33:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1831:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "_maximumRewardedPeriods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 284,
                  "src": "1874:30:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1874:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "_firstPhaseTotalSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 284,
                  "src": "1914:30:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1914:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 270,
                  "mutability": "mutable",
                  "name": "_firstPhaseMaxIssuance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 284,
                  "src": "1954:30:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1954:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1673:317:27"
            },
            "returnParameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2310:0:27"
            },
            "scope": 319,
            "src": "1662:655:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 293,
              "nodeType": "Block",
              "src": "2378:45:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 289,
                      "name": "valueToCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 254,
                      "src": "2388:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 290,
                      "name": "_valueToCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "2403:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2388:28:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:28:27"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "18cc313c",
            "id": 294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setValueToCheck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "_valueToCheck",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 294,
                  "src": "2348:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2348:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2347:23:27"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2378:0:27"
            },
            "scope": 319,
            "src": "2323:100:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11880
            ],
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "2487:134:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 303,
                        "name": "_testTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
                        "src": "2515:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 300,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2497:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_IssuerV2Mock_$319",
                          "typeString": "contract super IssuerV2Mock"
                        }
                      },
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verifyState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11880,
                      "src": "2497:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:30:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "2497:30:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 308,
                              "name": "_testTarget",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "2557:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 309,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2570:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IssuerV2Mock_$319",
                                    "typeString": "contract IssuerV2Mock"
                                  }
                                },
                                "id": 310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "valueToCheck",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 254,
                                "src": "2570:17:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2570:26:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 307,
                            "name": "delegateGet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11275,
                              11299,
                              11325
                            ],
                            "referencedDeclaration": 11275,
                            "src": "2545:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$_t_uint256_$",
                              "typeString": "function (address,bytes4) returns (uint256)"
                            }
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2545:52:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 313,
                          "name": "valueToCheck",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 254,
                          "src": "2601:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2545:68:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2537:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2537:77:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "2537:77:27"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b9626d21",
            "id": 318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyState",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 298,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2478:8:27"
            },
            "parameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 296,
                  "mutability": "mutable",
                  "name": "_testTarget",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 318,
                  "src": "2450:19:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2449:21:27"
            },
            "returnParameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2487:0:27"
            },
            "scope": 319,
            "src": "2429:192:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 320,
        "src": "1589:1034:27"
      }
    ],
    "src": "0:2624:27"
  },
  "bytecode": "6101a06040523480156200001257600080fd5b50604051620011383803806200113883398181016040526101008110156200003957600080fd5b50805160208201516040808401516060850151608086015160a087015160c088015160e090980151600080546001600160a01b031916331780825596519899979895979496939592949391928a928a928a928a928a928a928a928a926001600160a01b0391909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36000886001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200010357600080fd5b505afa15801562000118573d6000803e3d6000fd5b505050506040513d60208110156200012f57600080fd5b5051905080158015906200014257508615155b801562000154575063ffffffff881615155b80156200016057508515155b80156200016c57508415155b80156200017c575061ffff841615155b6200018657600080fd5b6001600160801b03811115620001ce5760405162461bcd60e51b815260040180806020018281038252602d81526020018062001065602d913960400191505060405180910390fd5b61ffff8416808701908887029082118015620001f3575086898281620001f057fe5b04145b80156200020b57508083828502816200020857fe5b04145b80156200022f57508183848486870202816200022357fe5b04816200022c57fe5b04145b6200026c5760405162461bcd60e51b8152600401808060200182810382526023815260200180620010db6023913960400191505060405180910390fd5b86821115620002ad5760405162461bcd60e51b815260040180806020018281038252603a815260200180620010fe603a913960400191505060405180910390fd5b82851115620002ee5760405162461bcd60e51b8152600401808060200182810382526023815260200180620010926023913960400191505060405180910390fd5b848411156200032f5760405162461bcd60e51b8152600401808060200182810382526026815260200180620010b56026913960400191505060405180910390fd5b60608b901b6001600160601b0319166080526200036163ffffffff8b16610e10620003c1602090811b62000b4e17901c565b60e090811b6001600160e01b0319166101205297909752506101009490945260f09290921b6001600160f01b03191661014052610180526101605260801b6001600160801b03191660a05260c052506200040a9950505050505050505050565b600063ffffffff8316620003d85750600062000404565b82820263ffffffff8084169080861690831681620003f257fe5b0463ffffffff16146200040157fe5b90505b92915050565b60805160601c60a05160801c60c05160e051610100516101205160e01c6101405160f01c6101605161018051610bc96200049c6000398061047a52508061044752806107ae5250806105675250806103c9528061049e5250806107435250806105ff5250806105ab52508061040852806104e6528061080c5250806106b75280610767528061084d5250610bc96000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80638da5cb5b116100f9578063e38a303b11610097578063f2fde38b11610071578063f2fde38b14610372578063f6910cb814610398578063fc0c546a146103a0578063fe4b84df146103a8576101a9565b8063e38a303b14610311578063e8dccd061461032f578063f14faf6f14610355576101a9565b8063a3324be9116100d3578063a3324be9146102d3578063b9626d21146102db578063c83d870814610301578063d4b8399214610309576101a9565b80638da5cb5b146102a75780638f32d59b146102af578063909f7c88146102cb576101a9565b80633250843d116101665780634b2cd118116101405780634b2cd1181461026b5780636784c9171461028f578063715018a6146102975780637b3888ef1461029f576101a9565b80633250843d1461023a5780633ae10a1514610242578063407f80011461024a576101a9565b8063086146d2146101ae5780630f64ab14146101cd57806318160ddd146101d557806318cc313c146101f9578063204612a8146102185780632d62143414610220575b600080fd5b6101b66103c5565b6040805161ffff9092168252519081900360200190f35b6101b66103fc565b6101dd610406565b604080516001600160801b039092168252519081900360200190f35b6102166004803603602081101561020f57600080fd5b503561042a565b005b6101dd61042f565b610228610445565b60408051918252519081900360200190f35b6101dd610469565b610228610478565b61025261049c565b6040805163ffffffff9092168252519081900360200190f35b6102736104c0565b604080516001600160a01b039092168252519081900360200190f35b6102286104cf565b61021661050a565b6101b6610565565b610273610589565b6102b7610598565b604080519115158252519081900360200190f35b6102286105a9565b6102286105cd565b610216600480360360208110156102f157600080fd5b50356001600160a01b03166105d3565b6102286105fd565b610273610621565b610319610630565b6040805160ff9092168252519081900360200190f35b6102166004803603602081101561034557600080fd5b50356001600160a01b0316610640565b6102166004803603602081101561036b57600080fd5b503561069a565b6102166004803603602081101561038857600080fd5b50356001600160a01b0316610727565b610228610741565b610273610765565b610216600480360360208110156103be57600080fd5b5035610789565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff1642816103f657fe5b04905090565b60055461ffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600655565b600454600160801b90046001600160801b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6004546001600160801b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002546001600160a01b031681565b6004546001600160801b03600160801b90910481167f0000000000000000000000000000000000000000000000000000000000000000031690565b610512610598565b61051b57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b7f000000000000000000000000000000000000000000000000000000000000000081565b60065481565b6105dc816108b3565b6006546105f08263a3324be960e01b610949565b146105fa57600080fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001546001600160a01b031681565b600254600160a01b900460ff1681565b60028054600160a01b900460ff161461065857600080fd5b6040805133815290516001600160a01b038316917fd55ec27c5c6316913ed8803c18cfd1bfefea953db909dcba6140744a9d8b0d1f919081900360200190a250565b60055461ffff166106aa57600080fd5b6106e56001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308463ffffffff61096216565b6106ee816109f8565b60408051828152905133917f2a01595cddf097c90216094025db714da3f4e5bd8877b56ba86a24ecead8e543919081900360200190a250565b61072f610598565b61073857600080fd5b6105fa81610a36565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610791610598565b61079a57600080fd5b60055461ffff16156107ab57600080fd5b807f000000000000000000000000000000000000000000000000000000000000000011156107d857600080fd5b6107e06103c5565b6005805461ffff191661ffff9290921691909117905560048054600160801b6001600160801b039182167f000000000000000000000000000000000000000000000000000000000000000085900383168202179081049091166001600160801b031990911617905561087d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316333084610962565b6040805182815290517fbe9b076dc5b65990cca9dd9d7366682482e7817a6f6bc7f4faf4dc32af497f329181900360200190a150565b6108bc81610aa4565b60055461ffff166108d4826303d92ac560e21b610949565b61ffff16146108e257600080fd5b6004546001600160801b03166108ff82633250843d60e01b610949565b6001600160801b03161461091257600080fd5b600454600160801b90046001600160801b031661093682630408c25560e31b610949565b6001600160801b0316146105fa57600080fd5b6000806109598484838080610afe565b51949350505050565b604080516323b872dd60e01b81526001600160a01b0385811660048301528481166024830152604482018490529151918616916323b872dd916064808201926020929091908290030181600087803b1580156109bd57600080fd5b505af11580156109d1573d6000803e3d6000fd5b505050506040513d60208110156109e757600080fd5b50516109f257600080fd5b50505050565b600480546001600160801b031981166001600160801b03918216849003821617808216600160801b9182900483169490940390911602919091179055565b6001600160a01b038116610a4957600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60028054600160a01b900460ff1614610abc57600080fd5b6040805133815290516001600160a01b038316917f1e8d98c1b4a0d9bd2e2371026b632eb2773fcce41742e41f02f574ab69868d4c919081900360200190a250565b6040518481528315610b11578260048201525b6001841115610b21578160248201525b6000808560200260040183895af48015610b3f573d6000833e610b44565b600082fd5b5095945050505050565b600063ffffffff8316610b6357506000610b8d565b82820263ffffffff8084169080861690831681610b7c57fe5b0463ffffffff1614610b8a57fe5b90505b9291505056fea2646970667358221220b86dab21a4dce194cda5bb2dfaf5d82174d10a989205a45f1b9f8d53e43fc03964736f6c63430006070033546f6b656e20636f6e74726163742068617320737570706c79206d6f7265207468616e20737570706f72746564546f6f206d616e7920746f6b656e7320666f722074686520666972737420706861736552657761726420666f722074686520666972737420706861736520697320746f6f206869676853706563696669656420706172616d6574657273206361757365206f766572666c6f77526573756c74696e67206c6f636b696e67206475726174696f6e20636f656666696369656e74206d757374206265206c657373207468616e2031",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "berlin",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.7"
  },
  "contractName": "IssuerV2Mock",
  "coverageMap": {
    "branches": {
      "13": {},
      "17": {},
      "18": {
        "Issuer.initialize": {
          "42": [
            864,
            873,
            true
          ]
        },
        "Ownable._transferOwnership": {
          "43": [
            1980,
            2002,
            true
          ]
        }
      },
      "2": {
        "Issuer.initialize": {
          "37": [
            6944,
            6969,
            true
          ],
          "38": [
            7077,
            7117,
            true
          ]
        },
        "Issuer.verifyState": {
          "39": [
            10580,
            10672,
            true
          ],
          "40": [
            10691,
            10784,
            true
          ],
          "41": [
            10803,
            10894,
            true
          ]
        }
      },
      "22": {
        "SafeERC20.safeTransferFrom": {
          "44": [
            670,
            705,
            true
          ]
        }
      },
      "27": {
        "IssuerV2Mock.verifyState": {
          "35": [
            2545,
            2613,
            true
          ]
        }
      },
      "7": {
        "AdditionalMath.mul32": {
          "36": [
            1301,
            1307,
            false
          ]
        }
      }
    },
    "statements": {
      "13": {
        "Upgradeable.finishUpgrade": {
          "9": [
            2126,
            2167
          ]
        },
        "Upgradeable.verifyState": {
          "31": [
            1856,
            1899
          ]
        }
      },
      "17": {},
      "18": {
        "Ownable._transferOwnership": {
          "28": [
            1972,
            2003
          ],
          "29": [
            2013,
            2056
          ],
          "30": [
            2066,
            2083
          ]
        },
        "Ownable.isOwner": {
          "6": [
            1036,
            1063
          ]
        },
        "Ownable.owner": {
          "5": [
            717,
            730
          ]
        },
        "Ownable.renounceOwnership": {
          "3": [
            1404,
            1449
          ],
          "4": [
            1459,
            1478
          ]
        },
        "Ownable.transferOwnership": {
          "13": [
            1728,
            1756
          ]
        }
      },
      "2": {
        "Issuer.donate": {
          "10": [
            10025,
            10082
          ],
          "11": [
            10092,
            10106
          ],
          "12": [
            10116,
            10148
          ]
        },
        "Issuer.getCurrentPeriod": {
          "0": [
            6733,
            6782
          ]
        },
        "Issuer.getReservedReward": {
          "2": [
            10307,
            10347
          ]
        },
        "Issuer.initialize": {
          "14": [
            6936,
            6970
          ],
          "15": [
            7069,
            7118
          ],
          "16": [
            7128,
            7169
          ],
          "17": [
            7179,
            7239
          ],
          "18": [
            7249,
            7291
          ],
          "19": [
            7301,
            7367
          ],
          "20": [
            7377,
            7410
          ]
        },
        "Issuer.unMint": {
          "26": [
            9715,
            9755
          ],
          "27": [
            9765,
            9804
          ]
        },
        "Issuer.verifyState": {
          "21": [
            10532,
            10562
          ],
          "22": [
            10572,
            10673
          ],
          "23": [
            10683,
            10785
          ],
          "24": [
            10795,
            10895
          ]
        }
      },
      "22": {
        "SafeERC20.safeTransferFrom": {
          "25": [
            662,
            706
          ]
        }
      },
      "27": {
        "IssuerV2Mock.setValueToCheck": {
          "1": [
            2388,
            2416
          ]
        },
        "IssuerV2Mock.verifyState": {
          "7": [
            2497,
            2527
          ],
          "8": [
            2537,
            2614
          ]
        }
      },
      "7": {
        "AdditionalMath.mul32": {
          "32": [
            1323,
            1331
          ],
          "33": [
            1377,
            1395
          ],
          "34": [
            1405,
            1413
          ]
        }
      }
    }
  },
  "dependencies": [
    "AdditionalMath",
    "Issuer",
    "Ownable",
    "SafeERC20",
    "SafeMath",
    "Upgradeable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101a95760003560e01c80638da5cb5b116100f9578063e38a303b11610097578063f2fde38b11610071578063f2fde38b14610372578063f6910cb814610398578063fc0c546a146103a0578063fe4b84df146103a8576101a9565b8063e38a303b14610311578063e8dccd061461032f578063f14faf6f14610355576101a9565b8063a3324be9116100d3578063a3324be9146102d3578063b9626d21146102db578063c83d870814610301578063d4b8399214610309576101a9565b80638da5cb5b146102a75780638f32d59b146102af578063909f7c88146102cb576101a9565b80633250843d116101665780634b2cd118116101405780634b2cd1181461026b5780636784c9171461028f578063715018a6146102975780637b3888ef1461029f576101a9565b80633250843d1461023a5780633ae10a1514610242578063407f80011461024a576101a9565b8063086146d2146101ae5780630f64ab14146101cd57806318160ddd146101d557806318cc313c146101f9578063204612a8146102185780632d62143414610220575b600080fd5b6101b66103c5565b6040805161ffff9092168252519081900360200190f35b6101b66103fc565b6101dd610406565b604080516001600160801b039092168252519081900360200190f35b6102166004803603602081101561020f57600080fd5b503561042a565b005b6101dd61042f565b610228610445565b60408051918252519081900360200190f35b6101dd610469565b610228610478565b61025261049c565b6040805163ffffffff9092168252519081900360200190f35b6102736104c0565b604080516001600160a01b039092168252519081900360200190f35b6102286104cf565b61021661050a565b6101b6610565565b610273610589565b6102b7610598565b604080519115158252519081900360200190f35b6102286105a9565b6102286105cd565b610216600480360360208110156102f157600080fd5b50356001600160a01b03166105d3565b6102286105fd565b610273610621565b610319610630565b6040805160ff9092168252519081900360200190f35b6102166004803603602081101561034557600080fd5b50356001600160a01b0316610640565b6102166004803603602081101561036b57600080fd5b503561069a565b6102166004803603602081101561038857600080fd5b50356001600160a01b0316610727565b610228610741565b610273610765565b610216600480360360208110156103be57600080fd5b5035610789565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff1642816103f657fe5b04905090565b60055461ffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600655565b600454600160801b90046001600160801b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6004546001600160801b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002546001600160a01b031681565b6004546001600160801b03600160801b90910481167f0000000000000000000000000000000000000000000000000000000000000000031690565b610512610598565b61051b57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b7f000000000000000000000000000000000000000000000000000000000000000081565b60065481565b6105dc816108b3565b6006546105f08263a3324be960e01b610949565b146105fa57600080fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001546001600160a01b031681565b600254600160a01b900460ff1681565b60028054600160a01b900460ff161461065857600080fd5b6040805133815290516001600160a01b038316917fd55ec27c5c6316913ed8803c18cfd1bfefea953db909dcba6140744a9d8b0d1f919081900360200190a250565b60055461ffff166106aa57600080fd5b6106e56001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308463ffffffff61096216565b6106ee816109f8565b60408051828152905133917f2a01595cddf097c90216094025db714da3f4e5bd8877b56ba86a24ecead8e543919081900360200190a250565b61072f610598565b61073857600080fd5b6105fa81610a36565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610791610598565b61079a57600080fd5b60055461ffff16156107ab57600080fd5b807f000000000000000000000000000000000000000000000000000000000000000011156107d857600080fd5b6107e06103c5565b6005805461ffff191661ffff9290921691909117905560048054600160801b6001600160801b039182167f000000000000000000000000000000000000000000000000000000000000000085900383168202179081049091166001600160801b031990911617905561087d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316333084610962565b6040805182815290517fbe9b076dc5b65990cca9dd9d7366682482e7817a6f6bc7f4faf4dc32af497f329181900360200190a150565b6108bc81610aa4565b60055461ffff166108d4826303d92ac560e21b610949565b61ffff16146108e257600080fd5b6004546001600160801b03166108ff82633250843d60e01b610949565b6001600160801b03161461091257600080fd5b600454600160801b90046001600160801b031661093682630408c25560e31b610949565b6001600160801b0316146105fa57600080fd5b6000806109598484838080610afe565b51949350505050565b604080516323b872dd60e01b81526001600160a01b0385811660048301528481166024830152604482018490529151918616916323b872dd916064808201926020929091908290030181600087803b1580156109bd57600080fd5b505af11580156109d1573d6000803e3d6000fd5b505050506040513d60208110156109e757600080fd5b50516109f257600080fd5b50505050565b600480546001600160801b031981166001600160801b03918216849003821617808216600160801b9182900483169490940390911602919091179055565b6001600160a01b038116610a4957600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60028054600160a01b900460ff1614610abc57600080fd5b6040805133815290516001600160a01b038316917f1e8d98c1b4a0d9bd2e2371026b632eb2773fcce41742e41f02f574ab69868d4c919081900360200190a250565b6040518481528315610b11578260048201525b6001841115610b21578160248201525b6000808560200260040183895af48015610b3f573d6000833e610b44565b600082fd5b5095945050505050565b600063ffffffff8316610b6357506000610b8d565b82820263ffffffff8084169080861690831681610b7c57fe5b0463ffffffff1614610b8a57fe5b90505b9291505056fea2646970667358221220b86dab21a4dce194cda5bb2dfaf5d82174d10a989205a45f1b9f8d53e43fc03964736f6c63430006070033",
  "deployedSourceMap": "1589:1034:27:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1589:1034:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;6666:123:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1554:34;;;:::i;696:36::-;;;:::i;:::-;;;;-1:-1:-1;;;;;696:36:2;;;;;;;;;;;;;;2323:100:27;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2323:100:27;;:::i;:::-;;1514:34:2;;;:::i;1043:46::-;;;:::i;:::-;;;;;;;;;;;;;;;;1473:35;;;:::i;1095:46::-;;;:::i;932:40::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;973:29:13;;;:::i;:::-;;;;-1:-1:-1;;;;;973:29:13;;;;;;;;;;;;;;10238:116:2;;;:::i;1348:137:18:-;;;:::i;990:46:2:-;;;:::i;660:77:18:-;;;:::i;980:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;753:43:2;;;:::i;1628:27:27:-;;;:::i;2429:192::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2429:192:27;-1:-1:-1;;;;;2429:192:27;;:::i;812:49:2:-;;;:::i;859:21:13:-;;;:::i;1132:22::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2042:132;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2042:132:13;-1:-1:-1;;;;;2042:132:13;;:::i;9960:195:2:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;9960:195:2;;:::i;1656:107:18:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1656:107:18;-1:-1:-1;;;;;1656:107:18;;:::i;877:49:2:-;;;:::i;654:36::-;;;:::i;6862:555::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6862:555:2;;:::i;6666:123::-;6715:6;6765:16;6747:34;;:15;:34;;;;;;6733:49;;6666:123;:::o;1554:34::-;;;;;;:::o;696:36::-;;;:::o;2323:100:27:-;2388:12;:28;2323:100::o;1514:34:2:-;;;-1:-1:-1;;;1514:34:2;;-1:-1:-1;;;;;1514:34:2;;:::o;1043:46::-;;;:::o;1473:35::-;;;-1:-1:-1;;;;;1473:35:2;;:::o;1095:46::-;;;:::o;932:40::-;;;:::o;973:29:13:-;;;-1:-1:-1;;;;;973:29:13;;:::o;10238:116:2:-;10328:19;;-1:-1:-1;;;;;;;;10328:19:2;;;;;10314:11;:33;10307:40;10238:116;:::o;1348:137:18:-;864:9;:7;:9::i;:::-;856:18;;12:1:-1;9;2:12;856:18:18;1446:1:::1;1430:6:::0;;1409:40:::1;::::0;-1:-1:-1;;;;;1430:6:18;;::::1;::::0;1409:40:::1;::::0;1446:1;;1409:40:::1;1476:1;1459:19:::0;;-1:-1:-1;;;;;;1459:19:18::1;::::0;;1348:137::o;990:46:2:-;;;:::o;660:77:18:-;698:7;724:6;-1:-1:-1;;;;;724:6:18;660:77;:::o;980:90::-;1020:4;1057:6;-1:-1:-1;;;;;1057:6:18;1043:10;:20;;980:90::o;753:43:2:-;;;:::o;1628:27:27:-;;;;:::o;2429:192::-;2497:30;2515:11;2497:17;:30::i;:::-;2601:12;;2545:52;2557:11;-1:-1:-1;;;2545:11:27;:52::i;:::-;:68;2537:77;;12:1:-1;9;2:12;2537:77:27;2429:192;:::o;812:49:2:-;;;:::o;859:21:13:-;;;-1:-1:-1;;;;;859:21:13;;:::o;1132:22::-;;;-1:-1:-1;;;1132:22:13;;;;;:::o;2042:132::-;1384:1;1586:9;;-1:-1:-1;;;1586:9:13;;:25;:9;:25;1578:34;;12:1:-1;9;2:12;1578:34:13;2131:36:::1;::::0;;2156:10:::1;2131:36:::0;;;;-1:-1:-1;;;;;2131:36:13;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;2042:132:::0;:::o;9960:195:2:-;6562:20;;;;6554:34;;12:1:-1;9;2:12;6554:34:2;10025:57:::1;-1:-1:-1::0;;;;;10025:5:2::1;:22;10048:10;10068:4;10075:6:::0;10025:57:::1;:22;:57;:::i;:::-;10092:14;10099:6;10092;:14::i;:::-;10121:27;::::0;;;;;;;10129:10:::1;::::0;10121:27:::1;::::0;;;;;::::1;::::0;;::::1;9960:195:::0;:::o;1656:107:18:-;864:9;:7;:9::i;:::-;856:18;;12:1:-1;9;2:12;856:18:18;1728:28:::1;1747:8;1728:18;:28::i;877:49:2:-:0;;;:::o;654:36::-;;;:::o;6862:555::-;864:9:18;:7;:9::i;:::-;856:18;;12:1:-1;9;2:12;856:18:18;6944:20:2::1;::::0;::::1;;:25:::0;6936:34:::1;;12:1:-1;9::::0;2:12:::1;6936:34:2;7102:15;7077:21;:40;;7069:49;;12:1:-1;9::::0;2:12:::1;7069:49:2;7151:18;:16;:18::i;:::-;7128:20;:41:::0;;-1:-1:-1;;7128:41:2::1;;::::0;;;::::1;::::0;;;::::1;::::0;;7179:19:::1;:60:::0;;-1:-1:-1;;;;;;;;7179:60:2;;::::1;7201:11;:38:::0;;::::1;7179:60:::0;::::1;::::0;::::1;;7272:19:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;;;;7249:42:2;;::::1;;::::0;;7301:66:::1;:5;-1:-1:-1::0;;;;;7301:22:2::1;7324:10;7344:4;7201:38:::0;7301:22:::1;:66::i;:::-;7382:28;::::0;;;;;;;::::1;::::0;;;;::::1;::::0;;::::1;6862:555:::0;:::o;10456:446::-;10532:30;10550:11;10532:17;:30::i;:::-;10652:20;;;;10587:60;10599:11;-1:-1:-1;;;10587:11:2;:60::i;:::-;10580:92;;;10572:101;;12:1:-1;9;2:12;10572:101:2;10764:20;;-1:-1:-1;;;;;10764:20:2;10699:60;10711:11;-1:-1:-1;;;10699:11:2;:60::i;:::-;-1:-1:-1;;;;;10691:93:2;;10683:102;;12:1:-1;9;2:12;10683:102:2;10875:19;;-1:-1:-1;;;10875:19:2;;-1:-1:-1;;;;;10875:19:2;10811:59;10823:11;-1:-1:-1;;;10811:11:2;:59::i;:::-;-1:-1:-1;;;;;10803:91:2;;10795:100;;12:1:-1;9;2:12;3532:259:13;3614:14;;3668:44;3684:7;3693:9;3614:14;;;3668:15;:44::i;:::-;3755:20;;3731:54;-1:-1:-1;;;;3731:54:13:o;562:151:22:-;670:35;;;-1:-1:-1;;;670:35:22;;-1:-1:-1;;;;;670:35:22;;;;;;;;;;;;;;;;;;;;;;:18;;;;;;:35;;;;;;;;;;;;;;;-1:-1:-1;670:18:22;:35;;;2:2:-1;;;;27:1;24;17:12;2:2;670:35:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;670:35:22;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;670:35:22;662:44;;12:1:-1;9;2:12;662:44:22;562:151;;;;:::o;9663:148:2:-;9715:20;:40;;-1:-1:-1;;;;;;9715:40:2;;-1:-1:-1;;;;;9715:40:2;;;;;;;;;9765:39;;;-1:-1:-1;;;9765:39:2;;;;;;;;;;;;;;;;;;;;9663:148::o;1907:183:18:-;-1:-1:-1;;;;;1980:22:18;;1972:31;;12:1:-1;9;2:12;1972:31:18;2039:6;;;2018:38;;-1:-1:-1;;;;;2018:38:18;;;;2039:6;;;2018:38;;;2066:6;:17;;-1:-1:-1;;;;;;2066:17:18;-1:-1:-1;;;;;2066:17:18;;;;;;;;;;1907:183::o;1770:136:13:-;1384:1;1586:9;;-1:-1:-1;;;1586:9:13;;:25;:9;:25;1578:34;;12:1:-1;9;2:12;1578:34:13;1861:38:::1;::::0;;1888:10:::1;1861:38:::0;;;;-1:-1:-1;;;;;1861:38:13;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;1770:136:::0;:::o;2527:899::-;2808:4;2802:11;2826:32;;;2874:25;;2871:2;;2951:10;2944:4;2929:13;2925:24;2918:44;2871:2;3015:1;2995:18;2992:25;2989:2;;;3069:10;3062:4;3047:13;3043:24;3036:44;2989:2;3203:1;3200;3178:18;3172:4;3168:29;3162:4;3158:40;3143:13;3134:7;3127:5;3114:91;3222:71;;;;3375:16;3370:3;3355:13;3340:52;3107:303;;3222:71;3273:1;3258:13;3251:24;3107:303;;2771:649;;;;;;;:::o;1221:199:7:-;1279:6;1301;;;1297:45;;-1:-1:-1;1330:1:7;1323:8;;1297:45;1362:5;;;1384:10;;;;;:5;;;;;;;;;;;;:10;;;1377:18;;;;1412:1;-1:-1:-1;1221:199:7;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "donate(uint256)": {
        "notice": "Donate sender's tokens. Amount of tokens will be returned for future minting",
        "params": {
          "_value": "Amount to donate"
        }
      },
      "finishUpgrade(address)": {
        "details": "Copy values from the new target to the current storage",
        "params": {
          "_target": "New target contract address"
        }
      },
      "getReservedReward()": {
        "notice": "Returns the number of tokens that can be minted"
      },
      "initialize(uint256)": {
        "notice": "Initialize reserved tokens for reward"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.",
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "notice": "Contract for testing upgrading the Issuer contract"
  },
  "offset": [
    1589,
    2623
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xE38A303B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xF6910CB8 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x3A8 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xE38A303B EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xE8DCCD06 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xF14FAF6F EQ PUSH2 0x355 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xA3324BE9 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xA3324BE9 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xB9626D21 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xC83D8708 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xD4B83992 EQ PUSH2 0x309 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x909F7C88 EQ PUSH2 0x2CB JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x3250843D GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x4B2CD118 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x4B2CD118 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x6784C917 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x7B3888EF EQ PUSH2 0x29F JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x3250843D EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x3AE10A15 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x407F8001 EQ PUSH2 0x24A JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x86146D2 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xF64AB14 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x18CC313C EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x204612A8 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x2D621434 EQ PUSH2 0x220 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B6 PUSH2 0x3FC JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x42A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH2 0x42F JUMP JUMPDEST PUSH2 0x228 PUSH2 0x445 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x469 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x478 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x216 PUSH2 0x50A JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x565 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x589 JUMP JUMPDEST PUSH2 0x2B7 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x273 PUSH2 0x621 JUMP JUMPDEST PUSH2 0x319 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x640 JUMP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x727 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x789 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH4 0xFFFFFFFF AND TIMESTAMP DUP2 PUSH2 0x3F6 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV DUP2 AND PUSH32 0x0 SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x512 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5DC DUP2 PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x5F0 DUP3 PUSH4 0xA3324BE9 PUSH1 0xE0 SHL PUSH2 0x949 JUMP JUMPDEST EQ PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND EQ PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH32 0xD55EC27C5C6316913ED8803C18CFD1BFEFEA953DB909DCBA6140744A9D8B0D1F SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xFFFF AND PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH4 0xFFFFFFFF PUSH2 0x962 AND JUMP JUMPDEST PUSH2 0x6EE DUP2 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x2A01595CDDF097C90216094025DB714DA3F4E5BD8877B56BA86A24ECEAD8E543 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x72F PUSH2 0x598 JUMP JUMPDEST PUSH2 0x738 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5FA DUP2 PUSH2 0xA36 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x791 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xFFFF AND ISZERO PUSH2 0x7AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH32 0x0 GT ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E0 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND PUSH32 0x0 DUP6 SWAP1 SUB DUP4 AND DUP3 MUL OR SWAP1 DUP2 DIV SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0x87D PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x962 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xBE9B076DC5B65990CCA9DD9D7366682482E7817A6F6BC7F4FAF4DC32AF497F32 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x8BC DUP2 PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xFFFF AND PUSH2 0x8D4 DUP3 PUSH4 0x3D92AC5 PUSH1 0xE2 SHL PUSH2 0x949 JUMP JUMPDEST PUSH2 0xFFFF AND EQ PUSH2 0x8E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x8FF DUP3 PUSH4 0x3250843D PUSH1 0xE0 SHL PUSH2 0x949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND EQ PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x936 DUP3 PUSH4 0x408C255 PUSH1 0xE3 SHL PUSH2 0x949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND EQ PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x959 DUP5 DUP5 DUP4 DUP1 DUP1 PUSH2 0xAFE JUMP JUMPDEST MLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP7 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND DUP5 SWAP1 SUB DUP3 AND OR DUP1 DUP3 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 DUP3 SWAP1 DIV DUP4 AND SWAP5 SWAP1 SWAP5 SUB SWAP1 SWAP2 AND MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND EQ PUSH2 0xABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH32 0x1E8D98C1B4A0D9BD2E2371026B632EB2773FCCE41742E41F02F574AB69868D4C SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP4 ISZERO PUSH2 0xB11 JUMPI DUP3 PUSH1 0x4 DUP3 ADD MSTORE JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0xB21 JUMPI DUP2 PUSH1 0x24 DUP3 ADD MSTORE JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x20 MUL PUSH1 0x4 ADD DUP4 DUP10 GAS DELEGATECALL DUP1 ISZERO PUSH2 0xB3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x0 DUP3 REVERT JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP4 AND PUSH2 0xB63 JUMPI POP PUSH1 0x0 PUSH2 0xB8D JUMP JUMPDEST DUP3 DUP3 MUL PUSH4 0xFFFFFFFF DUP1 DUP5 AND SWAP1 DUP1 DUP7 AND SWAP1 DUP4 AND DUP2 PUSH2 0xB7C JUMPI INVALID JUMPDEST DIV PUSH4 0xFFFFFFFF AND EQ PUSH2 0xB8A JUMPI INVALID JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 PUSH14 0xAB21A4DCE194CDA5BB2DFAF5D821 PUSH21 0xD10A989205A45F1B9F8D53E43FC03964736F6C6343 STOP MOD SMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "CALLVALUE",
      "path": "27"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "REVERT",
      "path": "27"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        1589,
        2623
      ],
      "op": "POP",
      "path": "27"
    },
    "18": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "21": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "LT",
      "path": "27"
    },
    "22": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A9"
    },
    "25": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "26": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "29": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "SHR",
      "path": "27"
    },
    "32": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "33": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "GT",
      "path": "27"
    },
    "39": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xF9"
    },
    "42": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "43": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "44": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xE38A303B"
    },
    "49": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "GT",
      "path": "27"
    },
    "50": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "54": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "55": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xF2FDE38B"
    },
    "60": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "GT",
      "path": "27"
    },
    "61": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "65": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "66": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xF2FDE38B"
    },
    "71": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "72": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x372"
    },
    "75": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "76": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "77": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xF6910CB8"
    },
    "82": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "83": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x398"
    },
    "86": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "87": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "88": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFC0C546A"
    },
    "93": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "94": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3A0"
    },
    "97": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "98": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "99": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFE4B84DF"
    },
    "104": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "105": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3A8"
    },
    "108": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "109": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A9"
    },
    "112": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMP",
      "path": "27"
    },
    "113": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "114": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "115": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xE38A303B"
    },
    "120": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "121": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x311"
    },
    "124": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "125": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "126": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xE8DCCD06"
    },
    "131": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "132": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x32F"
    },
    "135": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "136": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "137": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xF14FAF6F"
    },
    "142": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "143": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x355"
    },
    "146": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "147": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A9"
    },
    "150": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMP",
      "path": "27"
    },
    "151": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "152": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "153": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA3324BE9"
    },
    "158": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "GT",
      "path": "27"
    },
    "159": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "163": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "164": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA3324BE9"
    },
    "169": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "170": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2D3"
    },
    "173": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "174": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "175": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB9626D21"
    },
    "180": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "181": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2DB"
    },
    "184": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "185": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "186": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xC83D8708"
    },
    "191": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "192": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x301"
    },
    "195": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "196": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "197": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xD4B83992"
    },
    "202": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "203": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x309"
    },
    "206": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "207": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A9"
    },
    "210": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMP",
      "path": "27"
    },
    "211": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "212": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "213": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x8DA5CB5B"
    },
    "218": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "219": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2A7"
    },
    "222": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "223": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "224": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x8F32D59B"
    },
    "229": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "230": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2AF"
    },
    "233": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "234": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "235": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x909F7C88"
    },
    "240": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "241": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2CB"
    },
    "244": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "245": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A9"
    },
    "248": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMP",
      "path": "27"
    },
    "249": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "250": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "251": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x3250843D"
    },
    "256": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "GT",
      "path": "27"
    },
    "257": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x166"
    },
    "260": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "261": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "262": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x4B2CD118"
    },
    "267": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "GT",
      "path": "27"
    },
    "268": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x140"
    },
    "271": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "272": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "273": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x4B2CD118"
    },
    "278": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "279": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x26B"
    },
    "282": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "283": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "284": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x6784C917"
    },
    "289": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "290": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x28F"
    },
    "293": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "294": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "295": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x715018A6"
    },
    "300": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "301": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x297"
    },
    "304": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "305": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "306": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x7B3888EF"
    },
    "311": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "312": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x29F"
    },
    "315": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "316": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A9"
    },
    "319": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMP",
      "path": "27"
    },
    "320": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "321": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "322": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x3250843D"
    },
    "327": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "328": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x23A"
    },
    "331": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "332": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "333": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x3AE10A15"
    },
    "338": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "339": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x242"
    },
    "342": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "343": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "344": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x407F8001"
    },
    "349": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "350": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x24A"
    },
    "353": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "354": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A9"
    },
    "357": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMP",
      "path": "27"
    },
    "358": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "359": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "360": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x86146D2"
    },
    "365": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "366": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1AE"
    },
    "369": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "370": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "371": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xF64AB14"
    },
    "376": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "377": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CD"
    },
    "380": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "381": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "382": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x18160DDD"
    },
    "387": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "388": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D5"
    },
    "391": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "392": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "393": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x18CC313C"
    },
    "398": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "399": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1F9"
    },
    "402": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "403": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "404": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x204612A8"
    },
    "409": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "410": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x218"
    },
    "413": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "414": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "DUP1",
      "path": "27"
    },
    "415": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x2D621434"
    },
    "420": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "EQ",
      "path": "27"
    },
    "421": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x220"
    },
    "424": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "425": {
      "fn": null,
      "offset": [
        1589,
        2623
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "428": {
      "op": "DUP1"
    },
    "429": {
      "first_revert": true,
      "op": "REVERT"
    },
    "430": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "431": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B6"
    },
    "434": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5"
    },
    "437": {
      "fn": "Issuer.getCurrentPeriod",
      "jump": "i",
      "offset": [
        6666,
        6789
      ],
      "op": "JUMP",
      "path": "2"
    },
    "438": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "439": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "441": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "DUP1",
      "path": "2"
    },
    "442": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "443": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "446": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "447": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "448": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "AND",
      "path": "2"
    },
    "449": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "DUP3",
      "path": "2"
    },
    "450": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "451": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "452": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "453": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "DUP2",
      "path": "2"
    },
    "454": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "455": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "SUB",
      "path": "2"
    },
    "456": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "458": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "ADD",
      "path": "2"
    },
    "459": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "460": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "RETURN",
      "path": "2"
    },
    "461": {
      "offset": [
        1554,
        1588
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "462": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        1554,
        1588
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B6"
    },
    "465": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        1554,
        1588
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FC"
    },
    "468": {
      "fn": "Issuer.getCurrentPeriod",
      "jump": "i",
      "offset": [
        1554,
        1588
      ],
      "op": "JUMP",
      "path": "2"
    },
    "469": {
      "offset": [
        696,
        732
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "470": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DD"
    },
    "473": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x406"
    },
    "476": {
      "fn": "Issuer.getCurrentPeriod",
      "jump": "i",
      "offset": [
        696,
        732
      ],
      "op": "JUMP",
      "path": "2"
    },
    "477": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "478": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "480": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "DUP1",
      "path": "2"
    },
    "481": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "488": {
      "op": "SHL"
    },
    "489": {
      "op": "SUB"
    },
    "490": {
      "offset": [
        696,
        732
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "491": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "492": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "AND",
      "path": "2"
    },
    "493": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "DUP3",
      "path": "2"
    },
    "494": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "495": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "496": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "497": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "DUP2",
      "path": "2"
    },
    "498": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "499": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "SUB",
      "path": "2"
    },
    "500": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "502": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "ADD",
      "path": "2"
    },
    "503": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "504": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "RETURN",
      "path": "2"
    },
    "505": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        2323,
        2423
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "506": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        2323,
        2423
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x216"
    },
    "509": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        2323,
        2423
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "511": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        2323,
        2423
      ],
      "op": "DUP1",
      "path": "27"
    },
    "512": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        2323,
        2423
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "513": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        2323,
        2423
      ],
      "op": "SUB",
      "path": "27"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "516": {
      "op": "DUP2"
    },
    "517": {
      "op": "LT"
    },
    "518": {
      "op": "ISZERO"
    },
    "519": {
      "op": "PUSH2",
      "value": "0x20F"
    },
    "522": {
      "op": "JUMPI"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "525": {
      "op": "DUP1"
    },
    "526": {
      "op": "REVERT"
    },
    "527": {
      "op": "JUMPDEST"
    },
    "528": {
      "op": "POP"
    },
    "529": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        2323,
        2423
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "530": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        2323,
        2423
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x42A"
    },
    "533": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "jump": "i",
      "offset": [
        2323,
        2423
      ],
      "op": "JUMP",
      "path": "27"
    },
    "534": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        2323,
        2423
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "535": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        2323,
        2423
      ],
      "op": "STOP",
      "path": "27"
    },
    "536": {
      "offset": [
        1514,
        1548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "537": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1514,
        1548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DD"
    },
    "540": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1514,
        1548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42F"
    },
    "543": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "jump": "i",
      "offset": [
        1514,
        1548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "544": {
      "offset": [
        1043,
        1089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "545": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x228"
    },
    "548": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x445"
    },
    "551": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "jump": "i",
      "offset": [
        1043,
        1089
      ],
      "op": "JUMP",
      "path": "2"
    },
    "552": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "553": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "555": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "556": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "557": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "558": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "DUP3",
      "path": "2"
    },
    "559": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "560": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "561": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "562": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "DUP2",
      "path": "2"
    },
    "563": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "564": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "SUB",
      "path": "2"
    },
    "565": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "567": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "ADD",
      "path": "2"
    },
    "568": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "569": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "RETURN",
      "path": "2"
    },
    "570": {
      "offset": [
        1473,
        1508
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "571": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1473,
        1508
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DD"
    },
    "574": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1473,
        1508
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x469"
    },
    "577": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "jump": "i",
      "offset": [
        1473,
        1508
      ],
      "op": "JUMP",
      "path": "2"
    },
    "578": {
      "offset": [
        1095,
        1141
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "579": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1095,
        1141
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x228"
    },
    "582": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1095,
        1141
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x478"
    },
    "585": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "jump": "i",
      "offset": [
        1095,
        1141
      ],
      "op": "JUMP",
      "path": "2"
    },
    "586": {
      "offset": [
        932,
        972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "587": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x252"
    },
    "590": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x49C"
    },
    "593": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "jump": "i",
      "offset": [
        932,
        972
      ],
      "op": "JUMP",
      "path": "2"
    },
    "594": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "595": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "597": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "598": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "599": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "604": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "605": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "606": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "AND",
      "path": "2"
    },
    "607": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "DUP3",
      "path": "2"
    },
    "608": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "609": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "610": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "611": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "612": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "613": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "SUB",
      "path": "2"
    },
    "614": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "616": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "ADD",
      "path": "2"
    },
    "617": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "618": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "RETURN",
      "path": "2"
    },
    "619": {
      "offset": [
        973,
        1002
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "620": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x273"
    },
    "623": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4C0"
    },
    "626": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "jump": "i",
      "offset": [
        973,
        1002
      ],
      "op": "JUMP",
      "path": "13"
    },
    "627": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "628": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "630": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "DUP1",
      "path": "13"
    },
    "631": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "638": {
      "op": "SHL"
    },
    "639": {
      "op": "SUB"
    },
    "640": {
      "offset": [
        973,
        1002
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "641": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "642": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "AND",
      "path": "13"
    },
    "643": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "DUP3",
      "path": "13"
    },
    "644": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "645": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "646": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "647": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "DUP2",
      "path": "13"
    },
    "648": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "649": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "SUB",
      "path": "13"
    },
    "650": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "652": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "ADD",
      "path": "13"
    },
    "653": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "654": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "RETURN",
      "path": "13"
    },
    "655": {
      "fn": "Issuer.getReservedReward",
      "offset": [
        10238,
        10354
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "656": {
      "fn": "Issuer.getReservedReward",
      "offset": [
        10238,
        10354
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x228"
    },
    "659": {
      "fn": "Issuer.getReservedReward",
      "offset": [
        10238,
        10354
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4CF"
    },
    "662": {
      "fn": "Issuer.getReservedReward",
      "jump": "i",
      "offset": [
        10238,
        10354
      ],
      "op": "JUMP",
      "path": "2"
    },
    "663": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "664": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x216"
    },
    "667": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50A"
    },
    "670": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1348,
        1485
      ],
      "op": "JUMP",
      "path": "18"
    },
    "671": {
      "offset": [
        990,
        1036
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "672": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        990,
        1036
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B6"
    },
    "675": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        990,
        1036
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x565"
    },
    "678": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        990,
        1036
      ],
      "op": "JUMP",
      "path": "2"
    },
    "679": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "680": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x273"
    },
    "683": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x589"
    },
    "686": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        660,
        737
      ],
      "op": "JUMP",
      "path": "18"
    },
    "687": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "688": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2B7"
    },
    "691": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x598"
    },
    "694": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        980,
        1070
      ],
      "op": "JUMP",
      "path": "18"
    },
    "695": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "696": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "698": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "DUP1",
      "path": "18"
    },
    "699": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "700": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "701": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "702": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "703": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "DUP3",
      "path": "18"
    },
    "704": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "705": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "706": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "707": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "DUP2",
      "path": "18"
    },
    "708": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "709": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SUB",
      "path": "18"
    },
    "710": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "712": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "ADD",
      "path": "18"
    },
    "713": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "714": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "RETURN",
      "path": "18"
    },
    "715": {
      "offset": [
        753,
        796
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "716": {
      "fn": "Ownable.isOwner",
      "offset": [
        753,
        796
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x228"
    },
    "719": {
      "fn": "Ownable.isOwner",
      "offset": [
        753,
        796
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5A9"
    },
    "722": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        753,
        796
      ],
      "op": "JUMP",
      "path": "2"
    },
    "723": {
      "offset": [
        1628,
        1655
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "724": {
      "fn": "Ownable.isOwner",
      "offset": [
        1628,
        1655
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x228"
    },
    "727": {
      "fn": "Ownable.isOwner",
      "offset": [
        1628,
        1655
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5CD"
    },
    "730": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        1628,
        1655
      ],
      "op": "JUMP",
      "path": "27"
    },
    "731": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2429,
        2621
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "732": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2429,
        2621
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x216"
    },
    "735": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2429,
        2621
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "737": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2429,
        2621
      ],
      "op": "DUP1",
      "path": "27"
    },
    "738": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2429,
        2621
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "739": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2429,
        2621
      ],
      "op": "SUB",
      "path": "27"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "742": {
      "op": "DUP2"
    },
    "743": {
      "op": "LT"
    },
    "744": {
      "op": "ISZERO"
    },
    "745": {
      "op": "PUSH2",
      "value": "0x2F1"
    },
    "748": {
      "op": "JUMPI"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "751": {
      "op": "DUP1"
    },
    "752": {
      "op": "REVERT"
    },
    "753": {
      "op": "JUMPDEST"
    },
    "754": {
      "op": "POP"
    },
    "755": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2429,
        2621
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "762": {
      "op": "SHL"
    },
    "763": {
      "op": "SUB"
    },
    "764": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2429,
        2621
      ],
      "op": "AND",
      "path": "27"
    },
    "765": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2429,
        2621
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5D3"
    },
    "768": {
      "fn": "IssuerV2Mock.verifyState",
      "jump": "i",
      "offset": [
        2429,
        2621
      ],
      "op": "JUMP",
      "path": "27"
    },
    "769": {
      "offset": [
        812,
        861
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "770": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        812,
        861
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x228"
    },
    "773": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        812,
        861
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FD"
    },
    "776": {
      "fn": "IssuerV2Mock.verifyState",
      "jump": "i",
      "offset": [
        812,
        861
      ],
      "op": "JUMP",
      "path": "2"
    },
    "777": {
      "offset": [
        859,
        880
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "778": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        859,
        880
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x273"
    },
    "781": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        859,
        880
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x621"
    },
    "784": {
      "fn": "IssuerV2Mock.verifyState",
      "jump": "i",
      "offset": [
        859,
        880
      ],
      "op": "JUMP",
      "path": "13"
    },
    "785": {
      "offset": [
        1132,
        1154
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "786": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x319"
    },
    "789": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x630"
    },
    "792": {
      "fn": "IssuerV2Mock.verifyState",
      "jump": "i",
      "offset": [
        1132,
        1154
      ],
      "op": "JUMP",
      "path": "13"
    },
    "793": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "794": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "796": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "DUP1",
      "path": "13"
    },
    "797": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "798": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "800": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "801": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "802": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "AND",
      "path": "13"
    },
    "803": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "DUP3",
      "path": "13"
    },
    "804": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "805": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "806": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "807": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "DUP2",
      "path": "13"
    },
    "808": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "809": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "SUB",
      "path": "13"
    },
    "810": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "812": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "ADD",
      "path": "13"
    },
    "813": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "814": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "RETURN",
      "path": "13"
    },
    "815": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2042,
        2174
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "816": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2042,
        2174
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x216"
    },
    "819": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2042,
        2174
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "821": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2042,
        2174
      ],
      "op": "DUP1",
      "path": "13"
    },
    "822": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2042,
        2174
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "823": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2042,
        2174
      ],
      "op": "SUB",
      "path": "13"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "826": {
      "op": "DUP2"
    },
    "827": {
      "op": "LT"
    },
    "828": {
      "op": "ISZERO"
    },
    "829": {
      "op": "PUSH2",
      "value": "0x345"
    },
    "832": {
      "op": "JUMPI"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "835": {
      "op": "DUP1"
    },
    "836": {
      "op": "REVERT"
    },
    "837": {
      "op": "JUMPDEST"
    },
    "838": {
      "op": "POP"
    },
    "839": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2042,
        2174
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "846": {
      "op": "SHL"
    },
    "847": {
      "op": "SUB"
    },
    "848": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2042,
        2174
      ],
      "op": "AND",
      "path": "13"
    },
    "849": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2042,
        2174
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x640"
    },
    "852": {
      "fn": "Upgradeable.finishUpgrade",
      "jump": "i",
      "offset": [
        2042,
        2174
      ],
      "op": "JUMP",
      "path": "13"
    },
    "853": {
      "fn": "Issuer.donate",
      "offset": [
        9960,
        10155
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "854": {
      "fn": "Issuer.donate",
      "offset": [
        9960,
        10155
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x216"
    },
    "857": {
      "fn": "Issuer.donate",
      "offset": [
        9960,
        10155
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "859": {
      "fn": "Issuer.donate",
      "offset": [
        9960,
        10155
      ],
      "op": "DUP1",
      "path": "2"
    },
    "860": {
      "fn": "Issuer.donate",
      "offset": [
        9960,
        10155
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "861": {
      "fn": "Issuer.donate",
      "offset": [
        9960,
        10155
      ],
      "op": "SUB",
      "path": "2"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "864": {
      "op": "DUP2"
    },
    "865": {
      "op": "LT"
    },
    "866": {
      "op": "ISZERO"
    },
    "867": {
      "op": "PUSH2",
      "value": "0x36B"
    },
    "870": {
      "op": "JUMPI"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "873": {
      "op": "DUP1"
    },
    "874": {
      "op": "REVERT"
    },
    "875": {
      "op": "JUMPDEST"
    },
    "876": {
      "op": "POP"
    },
    "877": {
      "fn": "Issuer.donate",
      "offset": [
        9960,
        10155
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "878": {
      "fn": "Issuer.donate",
      "offset": [
        9960,
        10155
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69A"
    },
    "881": {
      "fn": "Issuer.donate",
      "jump": "i",
      "offset": [
        9960,
        10155
      ],
      "op": "JUMP",
      "path": "2"
    },
    "882": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "883": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x216"
    },
    "886": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "888": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "DUP1",
      "path": "18"
    },
    "889": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "890": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "SUB",
      "path": "18"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "893": {
      "op": "DUP2"
    },
    "894": {
      "op": "LT"
    },
    "895": {
      "op": "ISZERO"
    },
    "896": {
      "op": "PUSH2",
      "value": "0x388"
    },
    "899": {
      "op": "JUMPI"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "902": {
      "op": "DUP1"
    },
    "903": {
      "op": "REVERT"
    },
    "904": {
      "op": "JUMPDEST"
    },
    "905": {
      "op": "POP"
    },
    "906": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "913": {
      "op": "SHL"
    },
    "914": {
      "op": "SUB"
    },
    "915": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "AND",
      "path": "18"
    },
    "916": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x727"
    },
    "919": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1656,
        1763
      ],
      "op": "JUMP",
      "path": "18"
    },
    "920": {
      "offset": [
        877,
        926
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "921": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        877,
        926
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x228"
    },
    "924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        877,
        926
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x741"
    },
    "927": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        877,
        926
      ],
      "op": "JUMP",
      "path": "2"
    },
    "928": {
      "offset": [
        654,
        690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "929": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        654,
        690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x273"
    },
    "932": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        654,
        690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x765"
    },
    "935": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        654,
        690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "936": {
      "fn": "Issuer.initialize",
      "offset": [
        6862,
        7417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "937": {
      "fn": "Issuer.initialize",
      "offset": [
        6862,
        7417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x216"
    },
    "940": {
      "fn": "Issuer.initialize",
      "offset": [
        6862,
        7417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "942": {
      "fn": "Issuer.initialize",
      "offset": [
        6862,
        7417
      ],
      "op": "DUP1",
      "path": "2"
    },
    "943": {
      "fn": "Issuer.initialize",
      "offset": [
        6862,
        7417
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "944": {
      "fn": "Issuer.initialize",
      "offset": [
        6862,
        7417
      ],
      "op": "SUB",
      "path": "2"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "947": {
      "op": "DUP2"
    },
    "948": {
      "op": "LT"
    },
    "949": {
      "op": "ISZERO"
    },
    "950": {
      "op": "PUSH2",
      "value": "0x3BE"
    },
    "953": {
      "op": "JUMPI"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "956": {
      "op": "DUP1"
    },
    "957": {
      "op": "REVERT"
    },
    "958": {
      "op": "JUMPDEST"
    },
    "959": {
      "op": "POP"
    },
    "960": {
      "fn": "Issuer.initialize",
      "offset": [
        6862,
        7417
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "961": {
      "fn": "Issuer.initialize",
      "offset": [
        6862,
        7417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x789"
    },
    "964": {
      "fn": "Issuer.initialize",
      "jump": "i",
      "offset": [
        6862,
        7417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "965": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "966": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6715,
        6721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "968": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6765,
        6781
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 0,
      "value": "0x0"
    },
    "1001": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6747,
        6781
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1006": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6747,
        6781
      ],
      "op": "AND",
      "path": "2"
    },
    "1007": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6747,
        6762
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "1008": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6747,
        6781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1009": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6747,
        6781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6"
    },
    "1012": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6747,
        6781
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1013": {
      "dev": "Division by zero",
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6747,
        6781
      ],
      "op": "INVALID",
      "path": "2"
    },
    "1014": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6747,
        6781
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1015": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6747,
        6781
      ],
      "op": "DIV",
      "path": "2"
    },
    "1016": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6733,
        6782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1017": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6733,
        6782
      ],
      "op": "POP",
      "path": "2"
    },
    "1018": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        6666,
        6789
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1019": {
      "fn": "Issuer.getCurrentPeriod",
      "jump": "o",
      "offset": [
        6666,
        6789
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1020": {
      "offset": [
        1554,
        1588
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1021": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        1554,
        1588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1023": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        1554,
        1588
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1024": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        1554,
        1588
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "1027": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        1554,
        1588
      ],
      "op": "AND",
      "path": "2"
    },
    "1028": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        1554,
        1588
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1029": {
      "fn": "Issuer.getCurrentPeriod",
      "jump": "o",
      "offset": [
        1554,
        1588
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1030": {
      "offset": [
        696,
        732
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1031": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "1064": {
      "fn": "Issuer.getCurrentPeriod",
      "offset": [
        696,
        732
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1065": {
      "fn": "Issuer.getCurrentPeriod",
      "jump": "o",
      "offset": [
        696,
        732
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1066": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        2323,
        2423
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1067": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        2388,
        2400
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 1,
      "value": "0x6"
    },
    "1069": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        2388,
        2416
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "1070": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "jump": "o",
      "offset": [
        2323,
        2423
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1071": {
      "offset": [
        1514,
        1548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1072": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1514,
        1548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1074": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1514,
        1548
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1079": {
      "op": "SHL"
    },
    "1080": {
      "offset": [
        1514,
        1548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1081": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1514,
        1548
      ],
      "op": "DIV",
      "path": "2"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1088": {
      "op": "SHL"
    },
    "1089": {
      "op": "SUB"
    },
    "1090": {
      "offset": [
        1514,
        1548
      ],
      "op": "AND",
      "path": "2"
    },
    "1091": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1514,
        1548
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1092": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "jump": "o",
      "offset": [
        1514,
        1548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1093": {
      "offset": [
        1043,
        1089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1094": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "1127": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1043,
        1089
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1128": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "jump": "o",
      "offset": [
        1043,
        1089
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1129": {
      "offset": [
        1473,
        1508
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1130": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1473,
        1508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1132": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1473,
        1508
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1139": {
      "op": "SHL"
    },
    "1140": {
      "op": "SUB"
    },
    "1141": {
      "offset": [
        1473,
        1508
      ],
      "op": "AND",
      "path": "2"
    },
    "1142": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1473,
        1508
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1143": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "jump": "o",
      "offset": [
        1473,
        1508
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1144": {
      "offset": [
        1095,
        1141
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1145": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1095,
        1141
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "1178": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        1095,
        1141
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1179": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "jump": "o",
      "offset": [
        1095,
        1141
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1180": {
      "offset": [
        932,
        972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1181": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "1214": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        932,
        972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1215": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "jump": "o",
      "offset": [
        932,
        972
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1216": {
      "offset": [
        973,
        1002
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1217": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1219": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1226": {
      "op": "SHL"
    },
    "1227": {
      "op": "SUB"
    },
    "1228": {
      "offset": [
        973,
        1002
      ],
      "op": "AND",
      "path": "13"
    },
    "1229": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "offset": [
        973,
        1002
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1230": {
      "fn": "IssuerV2Mock.setValueToCheck",
      "jump": "o",
      "offset": [
        973,
        1002
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1231": {
      "fn": "Issuer.getReservedReward",
      "offset": [
        10238,
        10354
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1232": {
      "fn": "Issuer.getReservedReward",
      "offset": [
        10328,
        10347
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x4"
    },
    "1234": {
      "fn": "Issuer.getReservedReward",
      "offset": [
        10328,
        10347
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1241": {
      "op": "SHL"
    },
    "1242": {
      "op": "SUB"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1247": {
      "op": "SHL"
    },
    "1248": {
      "fn": "Issuer.getReservedReward",
      "offset": [
        10328,
        10347
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1249": {
      "fn": "Issuer.getReservedReward",
      "offset": [
        10328,
        10347
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1250": {
      "fn": "Issuer.getReservedReward",
      "offset": [
        10328,
        10347
      ],
      "op": "DIV",
      "path": "2"
    },
    "1251": {
      "fn": "Issuer.getReservedReward",
      "offset": [
        10328,
        10347
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1252": {
      "fn": "Issuer.getReservedReward",
      "offset": [
        10328,
        10347
      ],
      "op": "AND",
      "path": "2"
    },
    "1253": {
      "fn": "Issuer.getReservedReward",
      "offset": [
        10314,
        10325
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "1286": {
      "fn": "Issuer.getReservedReward",
      "offset": [
        10314,
        10347
      ],
      "op": "SUB",
      "path": "2"
    },
    "1287": {
      "fn": "Issuer.getReservedReward",
      "offset": [
        10307,
        10347
      ],
      "op": "AND",
      "path": "2"
    },
    "1288": {
      "fn": "Issuer.getReservedReward",
      "offset": [
        10238,
        10354
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1289": {
      "fn": "Issuer.getReservedReward",
      "jump": "o",
      "offset": [
        10238,
        10354
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1290": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1348,
        1485
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1291": {
      "offset": [
        864,
        873
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x512"
    },
    "1294": {
      "offset": [
        864,
        871
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x598"
    },
    "1297": {
      "jump": "i",
      "offset": [
        864,
        873
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1298": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        864,
        873
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1299": {
      "offset": [
        856,
        874
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x51B"
    },
    "1302": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1305": {
      "op": "DUP1"
    },
    "1306": {
      "op": "REVERT"
    },
    "1307": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1308": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1446,
        1447
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 3,
      "value": "0x0"
    },
    "1310": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1311": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1312": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1314": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1321": {
      "op": "SHL"
    },
    "1322": {
      "op": "SUB"
    },
    "1323": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1324": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1325": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "AND",
      "path": "18"
    },
    "1326": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1430,
        1436
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1327": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1360": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1361": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1446,
        1447
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1362": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1446,
        1447
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1363": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1409,
        1449
      ],
      "op": "LOG3",
      "path": "18"
    },
    "1364": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1476,
        1477
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 4,
      "value": "0x0"
    },
    "1366": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1367": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1374": {
      "op": "SHL"
    },
    "1375": {
      "op": "SUB"
    },
    "1376": {
      "op": "NOT"
    },
    "1377": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "AND",
      "path": "18"
    },
    "1378": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1379": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1459,
        1478
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "1380": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1348,
        1485
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1381": {
      "offset": [
        990,
        1036
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1382": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        990,
        1036
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "1415": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        990,
        1036
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1416": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        990,
        1036
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1417": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1418": {
      "fn": "Ownable.owner",
      "offset": [
        698,
        705
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1420": {
      "fn": "Ownable.owner",
      "offset": [
        724,
        730
      ],
      "op": "SLOAD",
      "path": "18",
      "statement": 5
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1427": {
      "op": "SHL"
    },
    "1428": {
      "op": "SUB"
    },
    "1429": {
      "fn": "Ownable.owner",
      "offset": [
        724,
        730
      ],
      "op": "AND",
      "path": "18"
    },
    "1430": {
      "fn": "Ownable.owner",
      "offset": [
        660,
        737
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1431": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        660,
        737
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1432": {
      "fn": "Ownable.isOwner",
      "offset": [
        980,
        1070
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1433": {
      "fn": "Ownable.isOwner",
      "offset": [
        1020,
        1024
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1435": {
      "fn": "Ownable.isOwner",
      "offset": [
        1057,
        1063
      ],
      "op": "SLOAD",
      "path": "18",
      "statement": 6
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1442": {
      "op": "SHL"
    },
    "1443": {
      "op": "SUB"
    },
    "1444": {
      "fn": "Ownable.isOwner",
      "offset": [
        1057,
        1063
      ],
      "op": "AND",
      "path": "18"
    },
    "1445": {
      "fn": "Ownable.isOwner",
      "offset": [
        1043,
        1053
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1446": {
      "fn": "Ownable.isOwner",
      "offset": [
        1043,
        1063
      ],
      "op": "EQ",
      "path": "18"
    },
    "1447": {
      "fn": "Ownable.isOwner",
      "offset": [
        1043,
        1063
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1448": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        980,
        1070
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1449": {
      "offset": [
        753,
        796
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1450": {
      "fn": "Ownable.isOwner",
      "offset": [
        753,
        796
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "1483": {
      "fn": "Ownable.isOwner",
      "offset": [
        753,
        796
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1484": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        753,
        796
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1485": {
      "offset": [
        1628,
        1655
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1486": {
      "fn": "Ownable.isOwner",
      "offset": [
        1628,
        1655
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x6"
    },
    "1488": {
      "fn": "Ownable.isOwner",
      "offset": [
        1628,
        1655
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1489": {
      "fn": "Ownable.isOwner",
      "offset": [
        1628,
        1655
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1490": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        1628,
        1655
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1491": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2429,
        2621
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1492": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2497,
        2527
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 7,
      "value": "0x5DC"
    },
    "1495": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2515,
        2526
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1496": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2497,
        2514
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x8B3"
    },
    "1499": {
      "fn": "IssuerV2Mock.verifyState",
      "jump": "i",
      "offset": [
        2497,
        2527
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1500": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2497,
        2527
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1501": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2601,
        2613
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 8,
      "value": "0x6"
    },
    "1503": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2601,
        2613
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1504": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2545,
        2597
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5F0"
    },
    "1507": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2557,
        2568
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1508": {
      "op": "PUSH4",
      "value": "0xA3324BE9"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1515": {
      "op": "SHL"
    },
    "1516": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2545,
        2556
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x949"
    },
    "1519": {
      "fn": "IssuerV2Mock.verifyState",
      "jump": "i",
      "offset": [
        2545,
        2597
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1520": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2545,
        2597
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1521": {
      "branch": 35,
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2545,
        2613
      ],
      "op": "EQ",
      "path": "27"
    },
    "1522": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2537,
        2614
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5FA"
    },
    "1525": {
      "branch": 35,
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2537,
        2614
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1528": {
      "op": "DUP1"
    },
    "1529": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2537,
        2614
      ],
      "op": "REVERT",
      "path": "27"
    },
    "1530": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2537,
        2614
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1531": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        2429,
        2621
      ],
      "op": "POP",
      "path": "27"
    },
    "1532": {
      "fn": "IssuerV2Mock.verifyState",
      "jump": "o",
      "offset": [
        2429,
        2621
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1533": {
      "offset": [
        812,
        861
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1534": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        812,
        861
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "1567": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        812,
        861
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1568": {
      "fn": "IssuerV2Mock.verifyState",
      "jump": "o",
      "offset": [
        812,
        861
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1569": {
      "offset": [
        859,
        880
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1570": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        859,
        880
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1572": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        859,
        880
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1579": {
      "op": "SHL"
    },
    "1580": {
      "op": "SUB"
    },
    "1581": {
      "offset": [
        859,
        880
      ],
      "op": "AND",
      "path": "13"
    },
    "1582": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        859,
        880
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1583": {
      "fn": "IssuerV2Mock.verifyState",
      "jump": "o",
      "offset": [
        859,
        880
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1584": {
      "offset": [
        1132,
        1154
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1585": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1587": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1592": {
      "op": "SHL"
    },
    "1593": {
      "offset": [
        1132,
        1154
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1594": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "DIV",
      "path": "13"
    },
    "1595": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1597": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "AND",
      "path": "13"
    },
    "1598": {
      "fn": "IssuerV2Mock.verifyState",
      "offset": [
        1132,
        1154
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1599": {
      "fn": "IssuerV2Mock.verifyState",
      "jump": "o",
      "offset": [
        1132,
        1154
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1600": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2042,
        2174
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1601": {
      "offset": [
        1384,
        1385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1603": {
      "offset": [
        1586,
        1595
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1604": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        1586,
        1595
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1609": {
      "op": "SHL"
    },
    "1610": {
      "offset": [
        1586,
        1595
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1611": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        1586,
        1595
      ],
      "op": "DIV",
      "path": "13"
    },
    "1612": {
      "offset": [
        1586,
        1611
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1614": {
      "offset": [
        1586,
        1595
      ],
      "op": "AND",
      "path": "13"
    },
    "1615": {
      "offset": [
        1586,
        1611
      ],
      "op": "EQ",
      "path": "13"
    },
    "1616": {
      "offset": [
        1578,
        1612
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x658"
    },
    "1619": {
      "offset": [
        1578,
        1612
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1622": {
      "op": "DUP1"
    },
    "1623": {
      "op": "REVERT"
    },
    "1624": {
      "offset": [
        1578,
        1612
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1625": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 9,
      "value": "0x40"
    },
    "1627": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1628": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1629": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2156,
        2166
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1630": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1631": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1632": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1633": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1640": {
      "op": "SHL"
    },
    "1641": {
      "op": "SUB"
    },
    "1642": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1643": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "AND",
      "path": "13"
    },
    "1644": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1645": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xD55EC27C5C6316913ED8803C18CFD1BFEFEA953DB909DCBA6140744A9D8B0D1F"
    },
    "1678": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1679": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1680": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1681": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1682": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "SUB",
      "path": "13"
    },
    "1683": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1685": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "ADD",
      "path": "13"
    },
    "1686": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1687": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2131,
        2167
      ],
      "op": "LOG2",
      "path": "13"
    },
    "1688": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2042,
        2174
      ],
      "op": "POP",
      "path": "13"
    },
    "1689": {
      "fn": "Upgradeable.finishUpgrade",
      "jump": "o",
      "offset": [
        2042,
        2174
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1690": {
      "fn": "Issuer.donate",
      "offset": [
        9960,
        10155
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1691": {
      "offset": [
        6562,
        6582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1693": {
      "fn": "Issuer.donate",
      "offset": [
        6562,
        6582
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1694": {
      "fn": "Issuer.donate",
      "offset": [
        6562,
        6582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "1697": {
      "fn": "Issuer.donate",
      "offset": [
        6562,
        6582
      ],
      "op": "AND",
      "path": "2"
    },
    "1698": {
      "offset": [
        6554,
        6588
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6AA"
    },
    "1701": {
      "fn": "Issuer.donate",
      "offset": [
        6554,
        6588
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1704": {
      "op": "DUP1"
    },
    "1705": {
      "op": "REVERT"
    },
    "1706": {
      "offset": [
        6554,
        6588
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1707": {
      "fn": "Issuer.donate",
      "offset": [
        10025,
        10082
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0x6E5"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1716": {
      "op": "SHL"
    },
    "1717": {
      "op": "SUB"
    },
    "1718": {
      "fn": "Issuer.donate",
      "offset": [
        10025,
        10030
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "1751": {
      "fn": "Issuer.donate",
      "offset": [
        10025,
        10047
      ],
      "op": "AND",
      "path": "2"
    },
    "1752": {
      "fn": "Issuer.donate",
      "offset": [
        10048,
        10058
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1753": {
      "fn": "Issuer.donate",
      "offset": [
        10068,
        10072
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "1754": {
      "fn": "Issuer.donate",
      "offset": [
        10075,
        10081
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1755": {
      "fn": "Issuer.donate",
      "offset": [
        10025,
        10082
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1760": {
      "fn": "Issuer.donate",
      "offset": [
        10025,
        10047
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x962"
    },
    "1763": {
      "fn": "Issuer.donate",
      "offset": [
        10025,
        10082
      ],
      "op": "AND",
      "path": "2"
    },
    "1764": {
      "fn": "Issuer.donate",
      "jump": "i",
      "offset": [
        10025,
        10082
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1765": {
      "fn": "Issuer.donate",
      "offset": [
        10025,
        10082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1766": {
      "fn": "Issuer.donate",
      "offset": [
        10092,
        10106
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 11,
      "value": "0x6EE"
    },
    "1769": {
      "fn": "Issuer.donate",
      "offset": [
        10099,
        10105
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1770": {
      "fn": "Issuer.donate",
      "offset": [
        10092,
        10098
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9F8"
    },
    "1773": {
      "fn": "Issuer.donate",
      "jump": "i",
      "offset": [
        10092,
        10106
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1774": {
      "fn": "Issuer.donate",
      "offset": [
        10092,
        10106
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1775": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x40"
    },
    "1777": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1778": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1779": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1780": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1781": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1782": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1783": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1784": {
      "fn": "Issuer.donate",
      "offset": [
        10129,
        10139
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1785": {
      "fn": "Issuer.donate",
      "offset": [
        10129,
        10139
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1786": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x2A01595CDDF097C90216094025DB714DA3F4E5BD8877B56BA86A24ECEAD8E543"
    },
    "1819": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1820": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1821": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1822": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1823": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "SUB",
      "path": "2"
    },
    "1824": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1826": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "ADD",
      "path": "2"
    },
    "1827": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1828": {
      "fn": "Issuer.donate",
      "offset": [
        10121,
        10148
      ],
      "op": "LOG2",
      "path": "2"
    },
    "1829": {
      "fn": "Issuer.donate",
      "offset": [
        9960,
        10155
      ],
      "op": "POP",
      "path": "2"
    },
    "1830": {
      "fn": "Issuer.donate",
      "jump": "o",
      "offset": [
        9960,
        10155
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1831": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1656,
        1763
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1832": {
      "offset": [
        864,
        873
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x72F"
    },
    "1835": {
      "offset": [
        864,
        871
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x598"
    },
    "1838": {
      "jump": "i",
      "offset": [
        864,
        873
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1839": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        864,
        873
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1840": {
      "offset": [
        856,
        874
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x738"
    },
    "1843": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1846": {
      "op": "DUP1"
    },
    "1847": {
      "op": "REVERT"
    },
    "1848": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1849": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1728,
        1756
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 13,
      "value": "0x5FA"
    },
    "1852": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1747,
        1755
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1853": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1728,
        1746
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA36"
    },
    "1856": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1728,
        1756
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1857": {
      "offset": [
        877,
        926
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1858": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        877,
        926
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "1891": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        877,
        926
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1892": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        877,
        926
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1893": {
      "offset": [
        654,
        690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1894": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        654,
        690
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "1927": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        654,
        690
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1928": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        654,
        690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1929": {
      "fn": "Issuer.initialize",
      "offset": [
        6862,
        7417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1930": {
      "offset": [
        864,
        873
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x791"
    },
    "1933": {
      "offset": [
        864,
        871
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x598"
    },
    "1936": {
      "jump": "i",
      "offset": [
        864,
        873
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1937": {
      "branch": 42,
      "fn": "Issuer.initialize",
      "offset": [
        864,
        873
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1938": {
      "offset": [
        856,
        874
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x79A"
    },
    "1941": {
      "branch": 42,
      "offset": [
        856,
        874
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1944": {
      "op": "DUP1"
    },
    "1945": {
      "op": "REVERT"
    },
    "1946": {
      "offset": [
        856,
        874
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1947": {
      "fn": "Issuer.initialize",
      "offset": [
        6944,
        6964
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 14,
      "value": "0x5"
    },
    "1949": {
      "fn": "Issuer.initialize",
      "offset": [
        6944,
        6964
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1950": {
      "fn": "Issuer.initialize",
      "offset": [
        6944,
        6964
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "1953": {
      "fn": "Issuer.initialize",
      "offset": [
        6944,
        6964
      ],
      "op": "AND",
      "path": "2"
    },
    "1954": {
      "branch": 37,
      "fn": "Issuer.initialize",
      "offset": [
        6944,
        6969
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1955": {
      "fn": "Issuer.initialize",
      "offset": [
        6936,
        6970
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AB"
    },
    "1958": {
      "branch": 37,
      "fn": "Issuer.initialize",
      "offset": [
        6936,
        6970
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1961": {
      "op": "DUP1"
    },
    "1962": {
      "fn": "Issuer.initialize",
      "offset": [
        6936,
        6970
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1963": {
      "fn": "Issuer.initialize",
      "offset": [
        6936,
        6970
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1964": {
      "fn": "Issuer.initialize",
      "offset": [
        7102,
        7117
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 15
    },
    "1965": {
      "fn": "Issuer.initialize",
      "offset": [
        7077,
        7098
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "1998": {
      "fn": "Issuer.initialize",
      "offset": [
        7077,
        7117
      ],
      "op": "GT",
      "path": "2"
    },
    "1999": {
      "branch": 38,
      "fn": "Issuer.initialize",
      "offset": [
        7077,
        7117
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2000": {
      "fn": "Issuer.initialize",
      "offset": [
        7069,
        7118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7D8"
    },
    "2003": {
      "branch": 38,
      "fn": "Issuer.initialize",
      "offset": [
        7069,
        7118
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2006": {
      "op": "DUP1"
    },
    "2007": {
      "fn": "Issuer.initialize",
      "offset": [
        7069,
        7118
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2008": {
      "fn": "Issuer.initialize",
      "offset": [
        7069,
        7118
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2009": {
      "fn": "Issuer.initialize",
      "offset": [
        7151,
        7169
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 16,
      "value": "0x7E0"
    },
    "2012": {
      "fn": "Issuer.initialize",
      "offset": [
        7151,
        7167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5"
    },
    "2015": {
      "fn": "Issuer.initialize",
      "jump": "i",
      "offset": [
        7151,
        7169
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2016": {
      "fn": "Issuer.initialize",
      "offset": [
        7151,
        7169
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2017": {
      "fn": "Issuer.initialize",
      "offset": [
        7128,
        7148
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2019": {
      "fn": "Issuer.initialize",
      "offset": [
        7128,
        7169
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2020": {
      "fn": "Issuer.initialize",
      "offset": [
        7128,
        7169
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2021": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "2024": {
      "op": "NOT"
    },
    "2025": {
      "fn": "Issuer.initialize",
      "offset": [
        7128,
        7169
      ],
      "op": "AND",
      "path": "2"
    },
    "2026": {
      "fn": "Issuer.initialize",
      "offset": [
        7128,
        7169
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2029": {
      "fn": "Issuer.initialize",
      "offset": [
        7128,
        7169
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2030": {
      "fn": "Issuer.initialize",
      "offset": [
        7128,
        7169
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2031": {
      "fn": "Issuer.initialize",
      "offset": [
        7128,
        7169
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2032": {
      "fn": "Issuer.initialize",
      "offset": [
        7128,
        7169
      ],
      "op": "AND",
      "path": "2"
    },
    "2033": {
      "fn": "Issuer.initialize",
      "offset": [
        7128,
        7169
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2034": {
      "fn": "Issuer.initialize",
      "offset": [
        7128,
        7169
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2035": {
      "fn": "Issuer.initialize",
      "offset": [
        7128,
        7169
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2036": {
      "fn": "Issuer.initialize",
      "offset": [
        7128,
        7169
      ],
      "op": "OR",
      "path": "2"
    },
    "2037": {
      "fn": "Issuer.initialize",
      "offset": [
        7128,
        7169
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2038": {
      "fn": "Issuer.initialize",
      "offset": [
        7128,
        7169
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2039": {
      "fn": "Issuer.initialize",
      "offset": [
        7179,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x4"
    },
    "2041": {
      "fn": "Issuer.initialize",
      "offset": [
        7179,
        7239
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2042": {
      "fn": "Issuer.initialize",
      "offset": [
        7179,
        7239
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2047": {
      "op": "SHL"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2054": {
      "op": "SHL"
    },
    "2055": {
      "op": "SUB"
    },
    "2056": {
      "fn": "Issuer.initialize",
      "offset": [
        7179,
        7239
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2057": {
      "fn": "Issuer.initialize",
      "offset": [
        7179,
        7239
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2058": {
      "fn": "Issuer.initialize",
      "offset": [
        7179,
        7239
      ],
      "op": "AND",
      "path": "2"
    },
    "2059": {
      "fn": "Issuer.initialize",
      "offset": [
        7201,
        7212
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "2092": {
      "fn": "Issuer.initialize",
      "offset": [
        7201,
        7239
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2093": {
      "fn": "Issuer.initialize",
      "offset": [
        7201,
        7239
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2094": {
      "fn": "Issuer.initialize",
      "offset": [
        7201,
        7239
      ],
      "op": "SUB",
      "path": "2"
    },
    "2095": {
      "fn": "Issuer.initialize",
      "offset": [
        7179,
        7239
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2096": {
      "fn": "Issuer.initialize",
      "offset": [
        7179,
        7239
      ],
      "op": "AND",
      "path": "2"
    },
    "2097": {
      "fn": "Issuer.initialize",
      "offset": [
        7179,
        7239
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2098": {
      "fn": "Issuer.initialize",
      "offset": [
        7179,
        7239
      ],
      "op": "MUL",
      "path": "2"
    },
    "2099": {
      "fn": "Issuer.initialize",
      "offset": [
        7179,
        7239
      ],
      "op": "OR",
      "path": "2"
    },
    "2100": {
      "fn": "Issuer.initialize",
      "offset": [
        7272,
        7291
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 18
    },
    "2101": {
      "fn": "Issuer.initialize",
      "offset": [
        7272,
        7291
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2102": {
      "fn": "Issuer.initialize",
      "offset": [
        7272,
        7291
      ],
      "op": "DIV",
      "path": "2"
    },
    "2103": {
      "fn": "Issuer.initialize",
      "offset": [
        7272,
        7291
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2104": {
      "fn": "Issuer.initialize",
      "offset": [
        7272,
        7291
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2105": {
      "fn": "Issuer.initialize",
      "offset": [
        7272,
        7291
      ],
      "op": "AND",
      "path": "2"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2112": {
      "op": "SHL"
    },
    "2113": {
      "op": "SUB"
    },
    "2114": {
      "op": "NOT"
    },
    "2115": {
      "fn": "Issuer.initialize",
      "offset": [
        7249,
        7291
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2116": {
      "fn": "Issuer.initialize",
      "offset": [
        7249,
        7291
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2117": {
      "fn": "Issuer.initialize",
      "offset": [
        7249,
        7291
      ],
      "op": "AND",
      "path": "2"
    },
    "2118": {
      "fn": "Issuer.initialize",
      "offset": [
        7249,
        7291
      ],
      "op": "OR",
      "path": "2"
    },
    "2119": {
      "fn": "Issuer.initialize",
      "offset": [
        7249,
        7291
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2120": {
      "fn": "Issuer.initialize",
      "offset": [
        7249,
        7291
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2121": {
      "fn": "Issuer.initialize",
      "offset": [
        7301,
        7367
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 19,
      "value": "0x87D"
    },
    "2124": {
      "fn": "Issuer.initialize",
      "offset": [
        7301,
        7306
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2163": {
      "op": "SHL"
    },
    "2164": {
      "op": "SUB"
    },
    "2165": {
      "fn": "Issuer.initialize",
      "offset": [
        7301,
        7323
      ],
      "op": "AND",
      "path": "2"
    },
    "2166": {
      "fn": "Issuer.initialize",
      "offset": [
        7324,
        7334
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2167": {
      "fn": "Issuer.initialize",
      "offset": [
        7344,
        7348
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "2168": {
      "fn": "Issuer.initialize",
      "offset": [
        7201,
        7239
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2169": {
      "fn": "Issuer.initialize",
      "offset": [
        7301,
        7323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x962"
    },
    "2172": {
      "fn": "Issuer.initialize",
      "jump": "i",
      "offset": [
        7301,
        7367
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2173": {
      "fn": "Issuer.initialize",
      "offset": [
        7301,
        7367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2174": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 20,
      "value": "0x40"
    },
    "2176": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2177": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2178": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2179": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2180": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2181": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2182": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2183": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xBE9B076DC5B65990CCA9DD9D7366682482E7817A6F6BC7F4FAF4DC32AF497F32"
    },
    "2216": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2217": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2218": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2219": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "SUB",
      "path": "2"
    },
    "2220": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2222": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "ADD",
      "path": "2"
    },
    "2223": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2224": {
      "fn": "Issuer.initialize",
      "offset": [
        7382,
        7410
      ],
      "op": "LOG1",
      "path": "2"
    },
    "2225": {
      "fn": "Issuer.initialize",
      "offset": [
        6862,
        7417
      ],
      "op": "POP",
      "path": "2"
    },
    "2226": {
      "fn": "Issuer.initialize",
      "jump": "o",
      "offset": [
        6862,
        7417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2227": {
      "fn": "Issuer.verifyState",
      "offset": [
        10456,
        10902
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2228": {
      "fn": "Issuer.verifyState",
      "offset": [
        10532,
        10562
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 21,
      "value": "0x8BC"
    },
    "2231": {
      "fn": "Issuer.verifyState",
      "offset": [
        10550,
        10561
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2232": {
      "fn": "Issuer.verifyState",
      "offset": [
        10532,
        10549
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAA4"
    },
    "2235": {
      "fn": "Issuer.verifyState",
      "jump": "i",
      "offset": [
        10532,
        10562
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2236": {
      "fn": "Issuer.verifyState",
      "offset": [
        10532,
        10562
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2237": {
      "fn": "Issuer.verifyState",
      "offset": [
        10652,
        10672
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 22,
      "value": "0x5"
    },
    "2239": {
      "fn": "Issuer.verifyState",
      "offset": [
        10652,
        10672
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2240": {
      "fn": "Issuer.verifyState",
      "offset": [
        10652,
        10672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2243": {
      "fn": "Issuer.verifyState",
      "offset": [
        10652,
        10672
      ],
      "op": "AND",
      "path": "2"
    },
    "2244": {
      "fn": "Issuer.verifyState",
      "offset": [
        10587,
        10647
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D4"
    },
    "2247": {
      "fn": "Issuer.verifyState",
      "offset": [
        10599,
        10610
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2248": {
      "op": "PUSH4",
      "value": "0x3D92AC5"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2255": {
      "op": "SHL"
    },
    "2256": {
      "fn": "Issuer.verifyState",
      "offset": [
        10587,
        10598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x949"
    },
    "2259": {
      "fn": "Issuer.verifyState",
      "jump": "i",
      "offset": [
        10587,
        10647
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2260": {
      "fn": "Issuer.verifyState",
      "offset": [
        10587,
        10647
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2261": {
      "fn": "Issuer.verifyState",
      "offset": [
        10580,
        10672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2264": {
      "fn": "Issuer.verifyState",
      "offset": [
        10580,
        10672
      ],
      "op": "AND",
      "path": "2"
    },
    "2265": {
      "branch": 39,
      "fn": "Issuer.verifyState",
      "offset": [
        10580,
        10672
      ],
      "op": "EQ",
      "path": "2"
    },
    "2266": {
      "fn": "Issuer.verifyState",
      "offset": [
        10572,
        10673
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E2"
    },
    "2269": {
      "branch": 39,
      "fn": "Issuer.verifyState",
      "offset": [
        10572,
        10673
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2272": {
      "op": "DUP1"
    },
    "2273": {
      "fn": "Issuer.verifyState",
      "offset": [
        10572,
        10673
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2274": {
      "fn": "Issuer.verifyState",
      "offset": [
        10572,
        10673
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2275": {
      "fn": "Issuer.verifyState",
      "offset": [
        10764,
        10784
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0x4"
    },
    "2277": {
      "fn": "Issuer.verifyState",
      "offset": [
        10764,
        10784
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2284": {
      "op": "SHL"
    },
    "2285": {
      "op": "SUB"
    },
    "2286": {
      "fn": "Issuer.verifyState",
      "offset": [
        10764,
        10784
      ],
      "op": "AND",
      "path": "2"
    },
    "2287": {
      "fn": "Issuer.verifyState",
      "offset": [
        10699,
        10759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8FF"
    },
    "2290": {
      "fn": "Issuer.verifyState",
      "offset": [
        10711,
        10722
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2291": {
      "op": "PUSH4",
      "value": "0x3250843D"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2298": {
      "op": "SHL"
    },
    "2299": {
      "fn": "Issuer.verifyState",
      "offset": [
        10699,
        10710
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x949"
    },
    "2302": {
      "fn": "Issuer.verifyState",
      "jump": "i",
      "offset": [
        10699,
        10759
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2303": {
      "fn": "Issuer.verifyState",
      "offset": [
        10699,
        10759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2310": {
      "op": "SHL"
    },
    "2311": {
      "op": "SUB"
    },
    "2312": {
      "fn": "Issuer.verifyState",
      "offset": [
        10691,
        10784
      ],
      "op": "AND",
      "path": "2"
    },
    "2313": {
      "branch": 40,
      "fn": "Issuer.verifyState",
      "offset": [
        10691,
        10784
      ],
      "op": "EQ",
      "path": "2"
    },
    "2314": {
      "fn": "Issuer.verifyState",
      "offset": [
        10683,
        10785
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x912"
    },
    "2317": {
      "branch": 40,
      "fn": "Issuer.verifyState",
      "offset": [
        10683,
        10785
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2320": {
      "op": "DUP1"
    },
    "2321": {
      "fn": "Issuer.verifyState",
      "offset": [
        10683,
        10785
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2322": {
      "fn": "Issuer.verifyState",
      "offset": [
        10683,
        10785
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2323": {
      "fn": "Issuer.verifyState",
      "offset": [
        10875,
        10894
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 24,
      "value": "0x4"
    },
    "2325": {
      "fn": "Issuer.verifyState",
      "offset": [
        10875,
        10894
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2330": {
      "op": "SHL"
    },
    "2331": {
      "fn": "Issuer.verifyState",
      "offset": [
        10875,
        10894
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2332": {
      "fn": "Issuer.verifyState",
      "offset": [
        10875,
        10894
      ],
      "op": "DIV",
      "path": "2"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2339": {
      "op": "SHL"
    },
    "2340": {
      "op": "SUB"
    },
    "2341": {
      "fn": "Issuer.verifyState",
      "offset": [
        10875,
        10894
      ],
      "op": "AND",
      "path": "2"
    },
    "2342": {
      "fn": "Issuer.verifyState",
      "offset": [
        10811,
        10870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x936"
    },
    "2345": {
      "fn": "Issuer.verifyState",
      "offset": [
        10823,
        10834
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2346": {
      "op": "PUSH4",
      "value": "0x408C255"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2353": {
      "op": "SHL"
    },
    "2354": {
      "fn": "Issuer.verifyState",
      "offset": [
        10811,
        10822
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x949"
    },
    "2357": {
      "fn": "Issuer.verifyState",
      "jump": "i",
      "offset": [
        10811,
        10870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2358": {
      "fn": "Issuer.verifyState",
      "offset": [
        10811,
        10870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2365": {
      "op": "SHL"
    },
    "2366": {
      "op": "SUB"
    },
    "2367": {
      "fn": "Issuer.verifyState",
      "offset": [
        10803,
        10894
      ],
      "op": "AND",
      "path": "2"
    },
    "2368": {
      "branch": 41,
      "fn": "Issuer.verifyState",
      "offset": [
        10803,
        10894
      ],
      "op": "EQ",
      "path": "2"
    },
    "2369": {
      "fn": "Issuer.verifyState",
      "offset": [
        10795,
        10895
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FA"
    },
    "2372": {
      "branch": 41,
      "fn": "Issuer.verifyState",
      "offset": [
        10795,
        10895
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2375": {
      "op": "DUP1"
    },
    "2376": {
      "fn": "Issuer.verifyState",
      "offset": [
        10795,
        10802
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2377": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3532,
        3791
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2378": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3614,
        3628
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2380": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3614,
        3628
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2381": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3668,
        3712
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x959"
    },
    "2384": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3684,
        3691
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2385": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3693,
        3702
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2386": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3614,
        3628
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2387": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3614,
        3628
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2388": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3614,
        3628
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2389": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3668,
        3683
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAFE"
    },
    "2392": {
      "fn": "Upgradeable.delegateGet",
      "jump": "i",
      "offset": [
        3668,
        3712
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2393": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3668,
        3712
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2394": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3755,
        3775
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2395": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3755,
        3775
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2396": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3731,
        3785
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2397": {
      "op": "POP"
    },
    "2398": {
      "op": "POP"
    },
    "2399": {
      "op": "POP"
    },
    "2400": {
      "op": "POP"
    },
    "2401": {
      "fn": "Upgradeable.delegateGet",
      "jump": "o",
      "offset": [
        3731,
        3785
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2402": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        562,
        713
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2403": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 25,
      "value": "0x40"
    },
    "2405": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2406": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2407": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2414": {
      "op": "SHL"
    },
    "2415": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2416": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2423": {
      "op": "SHL"
    },
    "2424": {
      "op": "SUB"
    },
    "2425": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2426": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2427": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "AND",
      "path": "22"
    },
    "2428": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2430": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2431": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "ADD",
      "path": "22"
    },
    "2432": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2433": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2434": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2435": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "AND",
      "path": "22"
    },
    "2436": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2438": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2439": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "ADD",
      "path": "22"
    },
    "2440": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2441": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "2443": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2444": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "ADD",
      "path": "22"
    },
    "2445": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2446": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2447": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2448": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2449": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2450": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        688
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2451": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        688
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2452": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        688
      ],
      "op": "AND",
      "path": "22"
    },
    "2453": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        688
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2454": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        688
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x23B872DD"
    },
    "2459": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        688
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2460": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2462": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2463": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2464": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "ADD",
      "path": "22"
    },
    "2465": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2466": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2468": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2469": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2470": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2471": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2472": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2473": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2474": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "SUB",
      "path": "22"
    },
    "2475": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "ADD",
      "path": "22"
    },
    "2476": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2479": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        688
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2480": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2481": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "2482": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2483": {
      "op": "DUP1"
    },
    "2484": {
      "op": "ISZERO"
    },
    "2485": {
      "op": "PUSH2",
      "value": "0x9BD"
    },
    "2488": {
      "op": "JUMPI"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2491": {
      "op": "DUP1"
    },
    "2492": {
      "op": "REVERT"
    },
    "2493": {
      "op": "JUMPDEST"
    },
    "2494": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "POP",
      "path": "22"
    },
    "2495": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "GAS",
      "path": "22"
    },
    "2496": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "CALL",
      "path": "22"
    },
    "2497": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2498": {
      "op": "DUP1"
    },
    "2499": {
      "op": "ISZERO"
    },
    "2500": {
      "op": "PUSH2",
      "value": "0x9D1"
    },
    "2503": {
      "op": "JUMPI"
    },
    "2504": {
      "op": "RETURNDATASIZE"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2507": {
      "op": "DUP1"
    },
    "2508": {
      "op": "RETURNDATACOPY"
    },
    "2509": {
      "op": "RETURNDATASIZE"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2512": {
      "op": "REVERT"
    },
    "2513": {
      "op": "JUMPDEST"
    },
    "2514": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "POP",
      "path": "22"
    },
    "2515": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "POP",
      "path": "22"
    },
    "2516": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "POP",
      "path": "22"
    },
    "2517": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "POP",
      "path": "22"
    },
    "2518": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2520": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2521": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2524": {
      "op": "DUP2"
    },
    "2525": {
      "op": "LT"
    },
    "2526": {
      "op": "ISZERO"
    },
    "2527": {
      "op": "PUSH2",
      "value": "0x9E7"
    },
    "2530": {
      "op": "JUMPI"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2533": {
      "op": "DUP1"
    },
    "2534": {
      "op": "REVERT"
    },
    "2535": {
      "op": "JUMPDEST"
    },
    "2536": {
      "op": "POP"
    },
    "2537": {
      "branch": 44,
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        670,
        705
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2538": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        662,
        706
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9F2"
    },
    "2541": {
      "branch": 44,
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        662,
        706
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2544": {
      "op": "DUP1"
    },
    "2545": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        662,
        706
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2546": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        662,
        706
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2547": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        562,
        713
      ],
      "op": "POP",
      "path": "22"
    },
    "2548": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        562,
        713
      ],
      "op": "POP",
      "path": "22"
    },
    "2549": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        562,
        713
      ],
      "op": "POP",
      "path": "22"
    },
    "2550": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        562,
        713
      ],
      "op": "POP",
      "path": "22"
    },
    "2551": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        562,
        713
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2552": {
      "fn": "Issuer.unMint",
      "offset": [
        9663,
        9811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2553": {
      "fn": "Issuer.unMint",
      "offset": [
        9715,
        9735
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 26,
      "value": "0x4"
    },
    "2555": {
      "fn": "Issuer.unMint",
      "offset": [
        9715,
        9755
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2556": {
      "fn": "Issuer.unMint",
      "offset": [
        9715,
        9755
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2563": {
      "op": "SHL"
    },
    "2564": {
      "op": "SUB"
    },
    "2565": {
      "op": "NOT"
    },
    "2566": {
      "fn": "Issuer.unMint",
      "offset": [
        9715,
        9755
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2567": {
      "fn": "Issuer.unMint",
      "offset": [
        9715,
        9755
      ],
      "op": "AND",
      "path": "2"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2574": {
      "op": "SHL"
    },
    "2575": {
      "op": "SUB"
    },
    "2576": {
      "fn": "Issuer.unMint",
      "offset": [
        9715,
        9755
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2577": {
      "fn": "Issuer.unMint",
      "offset": [
        9715,
        9755
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2578": {
      "fn": "Issuer.unMint",
      "offset": [
        9715,
        9755
      ],
      "op": "AND",
      "path": "2"
    },
    "2579": {
      "fn": "Issuer.unMint",
      "offset": [
        9715,
        9755
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2580": {
      "fn": "Issuer.unMint",
      "offset": [
        9715,
        9755
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2581": {
      "fn": "Issuer.unMint",
      "offset": [
        9715,
        9755
      ],
      "op": "SUB",
      "path": "2"
    },
    "2582": {
      "fn": "Issuer.unMint",
      "offset": [
        9715,
        9755
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2583": {
      "fn": "Issuer.unMint",
      "offset": [
        9715,
        9755
      ],
      "op": "AND",
      "path": "2"
    },
    "2584": {
      "fn": "Issuer.unMint",
      "offset": [
        9715,
        9755
      ],
      "op": "OR",
      "path": "2"
    },
    "2585": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 27
    },
    "2586": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2587": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "AND",
      "path": "2"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2592": {
      "op": "SHL"
    },
    "2593": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2594": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2595": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2596": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "DIV",
      "path": "2"
    },
    "2597": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2598": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "AND",
      "path": "2"
    },
    "2599": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2600": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2601": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2602": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "SUB",
      "path": "2"
    },
    "2603": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2604": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2605": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "AND",
      "path": "2"
    },
    "2606": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "MUL",
      "path": "2"
    },
    "2607": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2608": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2609": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2610": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "OR",
      "path": "2"
    },
    "2611": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2612": {
      "fn": "Issuer.unMint",
      "offset": [
        9765,
        9804
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2613": {
      "fn": "Issuer.unMint",
      "jump": "o",
      "offset": [
        9663,
        9811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2614": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1907,
        2090
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2621": {
      "op": "SHL"
    },
    "2622": {
      "op": "SUB"
    },
    "2623": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1980,
        2002
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 28
    },
    "2624": {
      "branch": 43,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1980,
        2002
      ],
      "op": "AND",
      "path": "18"
    },
    "2625": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1972,
        2003
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA49"
    },
    "2628": {
      "branch": 43,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1972,
        2003
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2631": {
      "op": "DUP1"
    },
    "2632": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1972,
        2003
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2633": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1972,
        2003
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2634": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 29,
      "value": "0x0"
    },
    "2636": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2637": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2638": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2640": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2647": {
      "op": "SHL"
    },
    "2648": {
      "op": "SUB"
    },
    "2649": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2650": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2651": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "AND",
      "path": "18"
    },
    "2652": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2653": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2654": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "AND",
      "path": "18"
    },
    "2655": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2039,
        2045
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2656": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2689": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2690": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2018,
        2056
      ],
      "op": "LOG3",
      "path": "18"
    },
    "2691": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2072
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 30,
      "value": "0x0"
    },
    "2693": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2694": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2701": {
      "op": "SHL"
    },
    "2702": {
      "op": "SUB"
    },
    "2703": {
      "op": "NOT"
    },
    "2704": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "AND",
      "path": "18"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2711": {
      "op": "SHL"
    },
    "2712": {
      "op": "SUB"
    },
    "2713": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2714": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2715": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2716": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "AND",
      "path": "18"
    },
    "2717": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2718": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2719": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2720": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "OR",
      "path": "18"
    },
    "2721": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2722": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2066,
        2083
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2723": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        1907,
        2090
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2724": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1770,
        1906
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2725": {
      "offset": [
        1384,
        1385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2727": {
      "offset": [
        1586,
        1595
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2728": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1586,
        1595
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2733": {
      "op": "SHL"
    },
    "2734": {
      "offset": [
        1586,
        1595
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2735": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1586,
        1595
      ],
      "op": "DIV",
      "path": "13"
    },
    "2736": {
      "offset": [
        1586,
        1611
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "2738": {
      "offset": [
        1586,
        1595
      ],
      "op": "AND",
      "path": "13"
    },
    "2739": {
      "offset": [
        1586,
        1611
      ],
      "op": "EQ",
      "path": "13"
    },
    "2740": {
      "offset": [
        1578,
        1612
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xABC"
    },
    "2743": {
      "offset": [
        1578,
        1612
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2746": {
      "op": "DUP1"
    },
    "2747": {
      "op": "REVERT"
    },
    "2748": {
      "offset": [
        1578,
        1612
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2749": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 31,
      "value": "0x40"
    },
    "2751": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2752": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2753": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1888,
        1898
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2754": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2755": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2756": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2757": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2764": {
      "op": "SHL"
    },
    "2765": {
      "op": "SUB"
    },
    "2766": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2767": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "AND",
      "path": "13"
    },
    "2768": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2769": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x1E8D98C1B4A0D9BD2E2371026B632EB2773FCCE41742E41F02F574AB69868D4C"
    },
    "2802": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2803": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2804": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2805": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2806": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "SUB",
      "path": "13"
    },
    "2807": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2809": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "ADD",
      "path": "13"
    },
    "2810": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2811": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1861,
        1899
      ],
      "op": "LOG2",
      "path": "13"
    },
    "2812": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1770,
        1906
      ],
      "op": "POP",
      "path": "13"
    },
    "2813": {
      "fn": "Upgradeable.verifyState",
      "jump": "o",
      "offset": [
        1770,
        1906
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2814": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2527,
        3426
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2815": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2808,
        2812
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2817": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2802,
        2813
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2818": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2826,
        2858
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2819": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2826,
        2858
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2820": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2826,
        2858
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2821": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2874,
        2899
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2822": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2874,
        2899
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2823": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2871,
        2873
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB11"
    },
    "2826": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2871,
        2873
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2827": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2951,
        2961
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2828": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2944,
        2948
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2830": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2929,
        2942
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2831": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2925,
        2949
      ],
      "op": "ADD",
      "path": "13"
    },
    "2832": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2918,
        2962
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2833": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2871,
        2873
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2834": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3015,
        3016
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2836": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2995,
        3013
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2837": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2992,
        3017
      ],
      "op": "GT",
      "path": "13"
    },
    "2838": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2989,
        2991
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2839": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2989,
        2991
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB21"
    },
    "2842": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2989,
        2991
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2843": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3069,
        3079
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2844": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3062,
        3066
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "2846": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3047,
        3060
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2847": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3043,
        3067
      ],
      "op": "ADD",
      "path": "13"
    },
    "2848": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3036,
        3080
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2849": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2989,
        2991
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2850": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3203,
        3204
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2852": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3200,
        3201
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2853": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3178,
        3196
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2854": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3172,
        3176
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2856": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3168,
        3197
      ],
      "op": "MUL",
      "path": "13"
    },
    "2857": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3162,
        3166
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2859": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3158,
        3198
      ],
      "op": "ADD",
      "path": "13"
    },
    "2860": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3143,
        3156
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2861": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3134,
        3141
      ],
      "op": "DUP10",
      "path": "13"
    },
    "2862": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3127,
        3132
      ],
      "op": "GAS",
      "path": "13"
    },
    "2863": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3114,
        3205
      ],
      "op": "DELEGATECALL",
      "path": "13"
    },
    "2864": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3222,
        3293
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2865": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3222,
        3293
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2866": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3222,
        3293
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB3F"
    },
    "2869": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3222,
        3293
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2870": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3375,
        3391
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2871": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3370,
        3373
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2873": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3355,
        3368
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2874": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3340,
        3392
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2875": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3107,
        3410
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB44"
    },
    "2878": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3107,
        3410
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2879": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3222,
        3293
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2880": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3273,
        3274
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2882": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3258,
        3271
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2883": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3251,
        3275
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2884": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3107,
        3410
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2885": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3107,
        3410
      ],
      "op": "POP",
      "path": "13"
    },
    "2886": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "2887": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2888": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "POP",
      "path": "13"
    },
    "2889": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "POP",
      "path": "13"
    },
    "2890": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "POP",
      "path": "13"
    },
    "2891": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "POP",
      "path": "13"
    },
    "2892": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2771,
        3420
      ],
      "op": "POP",
      "path": "13"
    },
    "2893": {
      "fn": "Upgradeable.delegateGetData",
      "jump": "o",
      "offset": [
        2771,
        3420
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2894": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1221,
        1420
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2895": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1279,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2897": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1301,
        1307
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "2902": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1301,
        1307
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2903": {
      "branch": 36,
      "fn": "AdditionalMath.mul32",
      "offset": [
        1301,
        1307
      ],
      "op": "AND",
      "path": "7"
    },
    "2904": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1297,
        1342
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB63"
    },
    "2907": {
      "branch": 36,
      "fn": "AdditionalMath.mul32",
      "offset": [
        1297,
        1342
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2908": {
      "op": "POP"
    },
    "2909": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1330,
        1331
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 32,
      "value": "0x0"
    },
    "2911": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1323,
        1331
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB8D"
    },
    "2914": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1323,
        1331
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2915": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1297,
        1342
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2916": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1362,
        1367
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2917": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1362,
        1367
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2918": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1362,
        1367
      ],
      "op": "MUL",
      "path": "7"
    },
    "2919": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1394
      ],
      "op": "PUSH4",
      "path": "7",
      "statement": 33,
      "value": "0xFFFFFFFF"
    },
    "2924": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1394
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2925": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1394
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2926": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1394
      ],
      "op": "AND",
      "path": "7"
    },
    "2927": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1394
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2928": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1389
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2929": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1389
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2930": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1389
      ],
      "op": "AND",
      "path": "7"
    },
    "2931": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1389
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2932": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1389
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2933": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1389
      ],
      "op": "AND",
      "path": "7"
    },
    "2934": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1389
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2935": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1389
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB7C"
    },
    "2938": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1389
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2939": {
      "dev": "Division by zero",
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1389
      ],
      "op": "INVALID",
      "path": "7"
    },
    "2940": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1389
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2941": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1389
      ],
      "op": "DIV",
      "path": "7"
    },
    "2942": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1394
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "2947": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1394
      ],
      "op": "AND",
      "path": "7"
    },
    "2948": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1384,
        1394
      ],
      "op": "EQ",
      "path": "7"
    },
    "2949": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1377,
        1395
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB8A"
    },
    "2952": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1377,
        1395
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2953": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1377,
        1395
      ],
      "op": "INVALID",
      "path": "7"
    },
    "2954": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1377,
        1395
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2955": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1412,
        1413
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 34
    },
    "2956": {
      "op": "POP"
    },
    "2957": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1221,
        1420
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2958": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1221,
        1420
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2959": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1221,
        1420
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2960": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1221,
        1420
      ],
      "op": "POP",
      "path": "7"
    },
    "2961": {
      "fn": "AdditionalMath.mul32",
      "offset": [
        1221,
        1420
      ],
      "op": "POP",
      "path": "7"
    },
    "2962": {
      "fn": "AdditionalMath.mul32",
      "jump": "o",
      "offset": [
        1221,
        1420
      ],
      "op": "JUMP",
      "path": "7"
    }
  },
  "sha1": "af67854004e6f9742005f9fd37e87853563ebb7d",
  "source": "pragma solidity ^0.6.5;\n\n\nimport \"contracts/Issuer.sol\";\nimport \"contracts/NuCypherToken.sol\";\nimport \"contracts/proxy/Upgradeable.sol\";\n\n\n/**\n* @dev Contract for testing internal methods in the Issuer contract\n*/\ncontract IssuerMock is Issuer {\n\n    constructor(\n        NuCypherToken _token,\n        uint32 _hoursPerPeriod,\n        uint256 _issuanceDecayCoefficient,\n        uint256 _lockDurationCoefficient1,\n        uint256 _lockDurationCoefficient2,\n        uint16 _maximumRewardedPeriods,\n        uint256 _firstPhaseTotalSupply,\n        uint256 _firstPhaseMaxIssuance\n    )\n        public\n        Issuer(\n            _token,\n            _hoursPerPeriod,\n            _issuanceDecayCoefficient,\n            _lockDurationCoefficient1,\n            _lockDurationCoefficient2,\n            _maximumRewardedPeriods,\n            _firstPhaseTotalSupply,\n            _firstPhaseMaxIssuance\n        )\n    {\n    }\n\n    function testMint(\n        uint16 _currentPeriod,\n        uint256 _lockedValue,\n        uint256 _totalLockedValue,\n        uint16 _allLockedPeriods\n    )\n        public returns (uint256 amount)\n    {\n        amount = mint(\n            _currentPeriod,\n            _lockedValue,\n            _totalLockedValue,\n            _allLockedPeriods);\n        token.transfer(msg.sender, amount);\n    }\n\n}\n\n\n/**\n* @notice Upgrade to this contract must lead to fail\n*/\ncontract IssuerBad is Upgradeable {\n\n    uint16 public currentMintingPeriod;\n//    uint256 public currentSupply1;\n    uint256 public currentSupply2;\n\n}\n\n\n/**\n* @notice Contract for testing upgrading the Issuer contract\n*/\ncontract IssuerV2Mock is Issuer {\n\n    uint256 public valueToCheck;\n\n    constructor(\n        NuCypherToken _token,\n        uint32 _hoursPerPeriod,\n        uint256 _issuanceDecayCoefficient,\n        uint256 _lockDurationCoefficient1,\n        uint256 _lockDurationCoefficient2,\n        uint16 _maximumRewardedPeriods,\n        uint256 _firstPhaseTotalSupply,\n        uint256 _firstPhaseMaxIssuance\n    )\n        public\n        Issuer(\n            _token,\n            _hoursPerPeriod,\n            _issuanceDecayCoefficient,\n            _lockDurationCoefficient1,\n            _lockDurationCoefficient2,\n            _maximumRewardedPeriods,\n            _firstPhaseTotalSupply,\n            _firstPhaseMaxIssuance\n        )\n    {\n    }\n\n    function setValueToCheck(uint256 _valueToCheck) public {\n        valueToCheck = _valueToCheck;\n    }\n\n    function verifyState(address _testTarget) public override {\n        super.verifyState(_testTarget);\n        require(delegateGet(_testTarget, this.valueToCheck.selector) == valueToCheck);\n    }\n}\n",
  "sourceMap": "1589:1034:27:-:0;;;1662:655;5:9:-1;2:2;;;27:1;24;17:12;2:2;1662:655:27;;;;;;;;;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;1662:655:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;516:6:18;:19;;-1:-1:-1;;;;;;516:19:18;525:10;516:19;;;;550:40;;1662:655:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;583:6:18;;;;;550:40;;516:6;;550:40;4234:24:2;4261:6;-1:-1:-1;;;;;4261:18:2;;:20;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4261:20:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4261:20:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4261:20:2;;-1:-1:-1;4299:20:2;;;;;:66;;-1:-1:-1;4335:30:2;;;4299:66;:102;;;;-1:-1:-1;4381:20:2;;;;;4299:102;:148;;;;-1:-1:-1;4417:30:2;;;4299:148;:194;;;;-1:-1:-1;4463:30:2;;;4299:194;:238;;;;-1:-1:-1;4509:28:2;;;;;4299:238;4291:247;;12:1:-1;9;2:12;4291:247:2;-1:-1:-1;;;;;4556:40:2;;;4548:98;;;;-1:-1:-1;;;4548:98:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4694:51;;;;;;;4789:53;;;;4860:52;;:149;;;;;4984:25;4954;4928:23;:51;;;;;;:81;4860:149;:349;;;;;5186:23;5166:16;5140:23;5121:16;:42;:61;;;;;;:88;4860:349;:694;;;;;5528:26;5492:16;5473;5444:26;5425:16;5406;:35;:64;:83;;;;;;:102;;;;;;:148;4860:694;4852:754;;;;-1:-1:-1;;;4852:754:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5655:25;5625:26;:55;;5617:138;;;;-1:-1:-1;;;5617:138:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5799:16;5773:22;:42;;5765:90;;;;-1:-1:-1;;;5765:90:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5899:22;5873;:48;;5865:99;;;;-1:-1:-1;;;5865:99:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5975:14;;;;-1:-1:-1;;;;;;5975:14:2;;;6018:30;:21;;;6040:7;6018:21;;;;;;;:30;;:::i;:::-;5999:49;;;;-1:-1:-1;;;;;;5999:49:2;;;6058:52;;;;-1:-1:-1;6120:52:2;;;;;6182:48;;;;;-1:-1:-1;;;;;;6182:48:2;;;6240:46;;6296;;6352:39;;-1:-1:-1;;;;;;6352:39:2;;;-1:-1:-1;6401:44:2;-1:-1:-1;1589:1034:27;;-1:-1:-1;;;;;;;;;;1589:1034:27;1221:199:7;1279:6;1301;;;1297:45;;-1:-1:-1;1330:1:7;1323:8;;1297:45;1362:5;;;1384:10;;;;;:5;;;;;;;;;;;;:10;;;1377:18;;;;1412:1;-1:-1:-1;1221:199:7;;;;;:::o;1589:1034:27:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/IssuerTestSet.sol",
  "type": "contract"
}