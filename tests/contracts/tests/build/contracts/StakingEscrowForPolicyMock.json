{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_hoursPerPeriod",
          "type": "uint16"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "downtime",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "startPeriod",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "endPeriod",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_period",
          "type": "uint16"
        }
      ],
      "name": "findIndexOfPastDowntime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentPeriod",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getLastCommittedPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getPastDowntime",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "startPeriod",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "endPeriod",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPastDowntimeLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastCommittedPeriod",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_startPeriod",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_numberOfPeriods",
          "type": "uint16"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_startPeriod",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_numberOfPeriods",
          "type": "uint16"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policyManager",
      "outputs": [
        {
          "internalType": "contract PolicyManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_startPeriod",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_endPeriod",
          "type": "uint16"
        }
      ],
      "name": "pushDowntimePeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_period",
          "type": "uint16"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondsPerPeriod",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_startPeriod",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_numberOfPeriods",
          "type": "uint16"
        }
      ],
      "name": "setDefaultFeeDelta",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_lastCommittedPeriod",
          "type": "uint16"
        }
      ],
      "name": "setLastCommittedPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract PolicyManager",
          "name": "_policyManager",
          "type": "address"
        }
      ],
      "name": "setPolicyManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "29": "contracts/PolicyManagerTestSet.sol"
  },
  "ast": {
    "absolutePath": "contracts/PolicyManagerTestSet.sol",
    "exportedSymbols": {
      "ExtendedPolicyManager": [
        1603
      ],
      "PolicyManagerBad": [
        1240
      ],
      "PolicyManagerV2Mock": [
        1289
      ],
      "StakingEscrowForPolicyMock": [
        1566
      ]
    },
    "id": 1604,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1214,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:29"
      },
      {
        "absolutePath": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/PolicyManager.sol",
        "file": "contracts/PolicyManager.sol",
        "id": 1215,
        "nodeType": "ImportDirective",
        "scope": 1604,
        "sourceUnit": 16858,
        "src": "26:37:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/StakingEscrow.sol",
        "file": "contracts/StakingEscrow.sol",
        "id": 1216,
        "nodeType": "ImportDirective",
        "scope": 1604,
        "sourceUnit": 10826,
        "src": "64:37:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1218,
              "name": "PolicyManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16857,
              "src": "193:13:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PolicyManager_$16857",
                "typeString": "contract PolicyManager"
              }
            },
            "id": 1219,
            "nodeType": "InheritanceSpecifier",
            "src": "193:13:29"
          }
        ],
        "contractDependencies": [
          11326,
          16857,
          18927
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1217,
          "nodeType": "StructuredDocumentation",
          "src": "104:59:29",
          "text": "@notice Upgrade to this contract must lead to fail"
        },
        "fullyImplemented": true,
        "id": 1240,
        "linearizedBaseContracts": [
          1240,
          16857,
          11326,
          18927
        ],
        "name": "PolicyManagerBad",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1227,
              "nodeType": "Block",
              "src": "279:7:29",
              "statements": []
            },
            "documentation": null,
            "id": 1228,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1224,
                    "name": "_escrow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1221,
                    "src": "270:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingEscrow_$10825",
                      "typeString": "contract StakingEscrow"
                    }
                  }
                ],
                "id": 1225,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1223,
                  "name": "PolicyManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16857,
                  "src": "256:13:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_PolicyManager_$16857_$",
                    "typeString": "type(contract PolicyManager)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "256:22:29"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1221,
                  "mutability": "mutable",
                  "name": "_escrow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1228,
                  "src": "226:21:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StakingEscrow_$10825",
                    "typeString": "contract StakingEscrow"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1220,
                    "name": "StakingEscrow",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10825,
                    "src": "226:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingEscrow_$10825",
                      "typeString": "contract StakingEscrow"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "225:23:29"
            },
            "returnParameters": {
              "id": 1226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "279:0:29"
            },
            "scope": 1240,
            "src": "214:72:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16379
            ],
            "body": {
              "id": 1238,
              "nodeType": "Block",
              "src": "372:2:29",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "8e81ca5a",
            "id": 1239,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNodeFeeDelta",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1234,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "346:8:29"
            },
            "parameters": {
              "id": 1233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1230,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1239,
                  "src": "317:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1232,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1239,
                  "src": "326:6:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1231,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "316:17:29"
            },
            "returnParameters": {
              "id": 1237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1236,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1239,
                  "src": "364:6:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1235,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "364:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "363:8:29"
            },
            "scope": 1240,
            "src": "292:82:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1604,
        "src": "164:213:29"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1242,
              "name": "PolicyManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16857,
              "src": "487:13:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PolicyManager_$16857",
                "typeString": "contract PolicyManager"
              }
            },
            "id": 1243,
            "nodeType": "InheritanceSpecifier",
            "src": "487:13:29"
          }
        ],
        "contractDependencies": [
          11326,
          16857,
          18927
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1241,
          "nodeType": "StructuredDocumentation",
          "src": "380:74:29",
          "text": "@notice Contract for testing upgrading the PolicyManager contract"
        },
        "fullyImplemented": true,
        "id": 1289,
        "linearizedBaseContracts": [
          1289,
          16857,
          11326,
          18927
        ],
        "name": "PolicyManagerV2Mock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a3324be9",
            "id": 1245,
            "mutability": "mutable",
            "name": "valueToCheck",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1289,
            "src": "508:27:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1244,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "508:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1253,
              "nodeType": "Block",
              "src": "607:7:29",
              "statements": []
            },
            "documentation": null,
            "id": 1254,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1250,
                    "name": "_escrow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1247,
                    "src": "598:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingEscrow_$10825",
                      "typeString": "contract StakingEscrow"
                    }
                  }
                ],
                "id": 1251,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1249,
                  "name": "PolicyManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16857,
                  "src": "584:13:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_PolicyManager_$16857_$",
                    "typeString": "type(contract PolicyManager)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "584:22:29"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1247,
                  "mutability": "mutable",
                  "name": "_escrow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1254,
                  "src": "554:21:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StakingEscrow_$10825",
                    "typeString": "contract StakingEscrow"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1246,
                    "name": "StakingEscrow",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10825,
                    "src": "554:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingEscrow_$10825",
                      "typeString": "contract StakingEscrow"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "553:23:29"
            },
            "returnParameters": {
              "id": 1252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "607:0:29"
            },
            "scope": 1289,
            "src": "542:72:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1263,
              "nodeType": "Block",
              "src": "675:45:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1259,
                      "name": "valueToCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1245,
                      "src": "685:12:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1260,
                      "name": "_valueToCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1256,
                      "src": "700:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "685:28:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1262,
                  "nodeType": "ExpressionStatement",
                  "src": "685:28:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "18cc313c",
            "id": 1264,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setValueToCheck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1256,
                  "mutability": "mutable",
                  "name": "_valueToCheck",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1264,
                  "src": "645:21:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "645:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "644:23:29"
            },
            "returnParameters": {
              "id": 1258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "675:0:29"
            },
            "scope": 1289,
            "src": "620:100:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16746
            ],
            "body": {
              "id": 1287,
              "nodeType": "Block",
              "src": "784:134:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1273,
                        "name": "_testTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1266,
                        "src": "812:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1270,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "794:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_PolicyManagerV2Mock_$1289",
                          "typeString": "contract super PolicyManagerV2Mock"
                        }
                      },
                      "id": 1272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verifyState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16746,
                      "src": "794:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "794:30:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1275,
                  "nodeType": "ExpressionStatement",
                  "src": "794:30:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1278,
                              "name": "_testTarget",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1266,
                              "src": "854:11:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1279,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "867:4:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PolicyManagerV2Mock_$1289",
                                    "typeString": "contract PolicyManagerV2Mock"
                                  }
                                },
                                "id": 1280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "valueToCheck",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1245,
                                "src": "867:17:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 1281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "867:26:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 1277,
                            "name": "delegateGet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11275,
                              11299,
                              11325
                            ],
                            "referencedDeclaration": 11275,
                            "src": "842:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$_t_uint256_$",
                              "typeString": "function (address,bytes4) returns (uint256)"
                            }
                          },
                          "id": 1282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "842:52:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1283,
                          "name": "valueToCheck",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1245,
                          "src": "898:12:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "842:68:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "834:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "834:77:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1286,
                  "nodeType": "ExpressionStatement",
                  "src": "834:77:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b9626d21",
            "id": 1288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyState",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1268,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "775:8:29"
            },
            "parameters": {
              "id": 1267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1266,
                  "mutability": "mutable",
                  "name": "_testTarget",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1288,
                  "src": "747:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "746:21:29"
            },
            "returnParameters": {
              "id": 1269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "784:0:29"
            },
            "scope": 1289,
            "src": "726:192:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1604,
        "src": "455:465:29"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1290,
          "nodeType": "StructuredDocumentation",
          "src": "923:58:29",
          "text": "@notice Contract for using in PolicyManager tests"
        },
        "fullyImplemented": true,
        "id": 1566,
        "linearizedBaseContracts": [
          1566
        ],
        "name": "StakingEscrowForPolicyMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "StakingEscrowForPolicyMock.Downtime",
            "id": 1295,
            "members": [
              {
                "constant": false,
                "id": 1292,
                "mutability": "mutable",
                "name": "startPeriod",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1295,
                "src": "1051:18:29",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 1291,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1051:6:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1294,
                "mutability": "mutable",
                "name": "endPeriod",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1295,
                "src": "1079:16:29",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 1293,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1079:6:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Downtime",
            "nodeType": "StructDefinition",
            "scope": 1566,
            "src": "1025:77:29",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "407f8001",
            "id": 1297,
            "mutability": "immutable",
            "name": "secondsPerPeriod",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1566,
            "src": "1108:40:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 1296,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1108:6:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ab3dbf3b",
            "id": 1299,
            "mutability": "mutable",
            "name": "policyManager",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1566,
            "src": "1155:34:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PolicyManager_$16857",
              "typeString": "contract PolicyManager"
            },
            "typeName": {
              "contractScope": null,
              "id": 1298,
              "name": "PolicyManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16857,
              "src": "1155:13:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PolicyManager_$16857",
                "typeString": "contract PolicyManager"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c9ef4b4",
            "id": 1301,
            "mutability": "mutable",
            "name": "lastCommittedPeriod",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1566,
            "src": "1195:33:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 1300,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "1195:6:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "583f9c3f",
            "id": 1304,
            "mutability": "mutable",
            "name": "downtime",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1566,
            "src": "1234:26:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Downtime_$1295_storage_$dyn_storage",
              "typeString": "struct StakingEscrowForPolicyMock.Downtime[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 1302,
                "name": "Downtime",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1295,
                "src": "1234:8:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Downtime_$1295_storage_ptr",
                  "typeString": "struct StakingEscrowForPolicyMock.Downtime"
                }
              },
              "id": 1303,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1234:10:29",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Downtime_$1295_storage_$dyn_storage_ptr",
                "typeString": "struct StakingEscrowForPolicyMock.Downtime[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1319,
              "nodeType": "Block",
              "src": "1378:69:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1310,
                      "name": "secondsPerPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1297,
                      "src": "1388:16:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1313,
                            "name": "_hoursPerPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1307,
                            "src": "1414:15:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 1314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1432:7:29",
                            "subdenomination": "hours",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3600_by_1",
                              "typeString": "int_const 3600"
                            },
                            "value": "1"
                          },
                          "src": "1414:25:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1407:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 1311,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1407:6:29",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1407:33:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1388:52:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1318,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:52:29"
                }
              ]
            },
            "documentation": {
              "id": 1305,
              "nodeType": "StructuredDocumentation",
              "src": "1267:63:29",
              "text": "@param _hoursPerPeriod Size of period in hours"
            },
            "id": 1320,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1307,
                  "mutability": "mutable",
                  "name": "_hoursPerPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1320,
                  "src": "1347:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1306,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1347:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1346:24:29"
            },
            "returnParameters": {
              "id": 1309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1378:0:29"
            },
            "scope": 1566,
            "src": "1335:112:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1334,
              "nodeType": "Block",
              "src": "1564:66:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1328,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1588:5:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1588:15:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1330,
                          "name": "secondsPerPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1297,
                          "src": "1606:16:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "1588:34:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1581:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint16_$",
                        "typeString": "type(uint16)"
                      },
                      "typeName": {
                        "id": 1326,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "1581:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1581:42:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 1325,
                  "id": 1333,
                  "nodeType": "Return",
                  "src": "1574:49:29"
                }
              ]
            },
            "documentation": {
              "id": 1321,
              "nodeType": "StructuredDocumentation",
              "src": "1453:49:29",
              "text": "@return Number of current period"
            },
            "functionSelector": "086146d2",
            "id": 1335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentPeriod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1532:2:29"
            },
            "returnParameters": {
              "id": 1325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1324,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1335,
                  "src": "1556:6:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1323,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1556:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1555:8:29"
            },
            "scope": 1566,
            "src": "1507:123:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1345,
              "nodeType": "Block",
              "src": "1761:59:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1341,
                      "name": "lastCommittedPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1301,
                      "src": "1771:19:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1342,
                      "name": "_lastCommittedPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1338,
                      "src": "1793:20:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "1771:42:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1344,
                  "nodeType": "ExpressionStatement",
                  "src": "1771:42:29"
                }
              ]
            },
            "documentation": {
              "id": 1336,
              "nodeType": "StructuredDocumentation",
              "src": "1636:50:29",
              "text": "@notice Set last committed period"
            },
            "functionSelector": "e2d28c37",
            "id": 1346,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setLastCommittedPeriod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1338,
                  "mutability": "mutable",
                  "name": "_lastCommittedPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1346,
                  "src": "1723:27:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1337,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1722:29:29"
            },
            "returnParameters": {
              "id": 1340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1761:0:29"
            },
            "scope": 1566,
            "src": "1691:129:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1363,
              "nodeType": "Block",
              "src": "1952:66:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1358,
                            "name": "_startPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1349,
                            "src": "1985:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1359,
                            "name": "_endPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1351,
                            "src": "1999:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "id": 1357,
                          "name": "Downtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1295,
                          "src": "1976:8:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Downtime_$1295_storage_ptr_$",
                            "typeString": "type(struct StakingEscrowForPolicyMock.Downtime storage pointer)"
                          }
                        },
                        "id": 1360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1976:34:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Downtime_$1295_memory_ptr",
                          "typeString": "struct StakingEscrowForPolicyMock.Downtime memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Downtime_$1295_memory_ptr",
                          "typeString": "struct StakingEscrowForPolicyMock.Downtime memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1354,
                        "name": "downtime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1304,
                        "src": "1962:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Downtime_$1295_storage_$dyn_storage",
                          "typeString": "struct StakingEscrowForPolicyMock.Downtime storage ref[] storage ref"
                        }
                      },
                      "id": 1356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1962:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Downtime_$1295_storage_$returns$__$",
                        "typeString": "function (struct StakingEscrowForPolicyMock.Downtime storage ref)"
                      }
                    },
                    "id": 1361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1962:49:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1362,
                  "nodeType": "ExpressionStatement",
                  "src": "1962:49:29"
                }
              ]
            },
            "documentation": {
              "id": 1347,
              "nodeType": "StructuredDocumentation",
              "src": "1826:44:29",
              "text": "@notice Add downtime period"
            },
            "functionSelector": "c2e1dcd7",
            "id": 1364,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pushDowntimePeriod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1349,
                  "mutability": "mutable",
                  "name": "_startPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1364,
                  "src": "1903:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1348,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1903:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1351,
                  "mutability": "mutable",
                  "name": "_endPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1364,
                  "src": "1924:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1350,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1924:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1902:40:29"
            },
            "returnParameters": {
              "id": 1353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1952:0:29"
            },
            "scope": 1566,
            "src": "1875:143:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1395,
              "nodeType": "Block",
              "src": "2327:137:29",
              "statements": [
                {
                  "body": {
                    "id": 1393,
                    "nodeType": "Block",
                    "src": "2383:75:29",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1387,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1367,
                              "src": "2421:7:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              "id": 1390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1388,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1375,
                                "src": "2430:1:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1389,
                                "name": "_startPeriod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "2434:12:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "2430:16:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1384,
                              "name": "policyManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1299,
                              "src": "2397:13:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyManager_$16857",
                                "typeString": "contract PolicyManager"
                              }
                            },
                            "id": 1386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15364,
                            "src": "2397:23:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint16_$returns$__$",
                              "typeString": "function (address,uint16) external"
                            }
                          },
                          "id": 1391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2397:50:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1392,
                        "nodeType": "ExpressionStatement",
                        "src": "2397:50:29"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1378,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1375,
                      "src": "2356:1:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1379,
                      "name": "_numberOfPeriods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1371,
                      "src": "2360:16:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "2356:20:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1394,
                  "initializationExpression": {
                    "assignments": [
                      1375
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1375,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1394,
                        "src": "2342:8:29",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 1374,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:6:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1377,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2353:1:29",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2342:12:29"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2378:3:29",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1381,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1375,
                        "src": "2378:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 1383,
                    "nodeType": "ExpressionStatement",
                    "src": "2378:3:29"
                  },
                  "nodeType": "ForStatement",
                  "src": "2337:121:29"
                }
              ]
            },
            "documentation": {
              "id": 1365,
              "nodeType": "StructuredDocumentation",
              "src": "2024:214:29",
              "text": "@notice Emulate mint method\n@param _staker Staker on behalf of whom minting will be\n@param _startPeriod Start period for minting\n@param _numberOfPeriods Number periods for minting"
            },
            "functionSelector": "7fdfcd99",
            "id": 1396,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1367,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1396,
                  "src": "2257:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2257:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1369,
                  "mutability": "mutable",
                  "name": "_startPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1396,
                  "src": "2274:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1368,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2274:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1371,
                  "mutability": "mutable",
                  "name": "_numberOfPeriods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1396,
                  "src": "2295:23:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1370,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2295:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2256:63:29"
            },
            "returnParameters": {
              "id": 1373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2327:0:29"
            },
            "scope": 1566,
            "src": "2243:221:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1411,
              "nodeType": "Block",
              "src": "2696:65:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1405,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2711:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2711:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1407,
                        "name": "_startPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1399,
                        "src": "2723:12:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1408,
                        "name": "_numberOfPeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1401,
                        "src": "2737:16:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1404,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1396,
                      "src": "2706:4:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint16,uint16)"
                      }
                    },
                    "id": 1409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2706:48:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1410,
                  "nodeType": "ExpressionStatement",
                  "src": "2706:48:29"
                }
              ]
            },
            "documentation": {
              "id": 1397,
              "nodeType": "StructuredDocumentation",
              "src": "2470:152:29",
              "text": "@notice Emulate mint method\n@param _startPeriod Start period for minting\n@param _numberOfPeriods Number periods for minting"
            },
            "functionSelector": "1de77f91",
            "id": 1412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1399,
                  "mutability": "mutable",
                  "name": "_startPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1412,
                  "src": "2641:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1398,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2641:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1401,
                  "mutability": "mutable",
                  "name": "_numberOfPeriods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1412,
                  "src": "2662:23:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1400,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2662:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2640:46:29"
            },
            "returnParameters": {
              "id": 1403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2696:0:29"
            },
            "scope": 1566,
            "src": "2627:134:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1422,
              "nodeType": "Block",
              "src": "2888:47:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1418,
                      "name": "policyManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1299,
                      "src": "2898:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyManager_$16857",
                        "typeString": "contract PolicyManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1419,
                      "name": "_policyManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1415,
                      "src": "2914:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyManager_$16857",
                        "typeString": "contract PolicyManager"
                      }
                    },
                    "src": "2898:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyManager_$16857",
                      "typeString": "contract PolicyManager"
                    }
                  },
                  "id": 1421,
                  "nodeType": "ExpressionStatement",
                  "src": "2898:30:29"
                }
              ]
            },
            "documentation": {
              "id": 1413,
              "nodeType": "StructuredDocumentation",
              "src": "2767:51:29",
              "text": "@notice Set policy manager address"
            },
            "functionSelector": "adde41e1",
            "id": 1423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPolicyManager",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1415,
                  "mutability": "mutable",
                  "name": "_policyManager",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1423,
                  "src": "2849:28:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyManager_$16857",
                    "typeString": "contract PolicyManager"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1414,
                    "name": "PolicyManager",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16857,
                    "src": "2849:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyManager_$16857",
                      "typeString": "contract PolicyManager"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2848:30:29"
            },
            "returnParameters": {
              "id": 1417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2888:0:29"
            },
            "scope": 1566,
            "src": "2823:112:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1433,
              "nodeType": "Block",
              "src": "3011:39:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1430,
                      "name": "downtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1304,
                      "src": "3028:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Downtime_$1295_storage_$dyn_storage",
                        "typeString": "struct StakingEscrowForPolicyMock.Downtime storage ref[] storage ref"
                      }
                    },
                    "id": 1431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3028:15:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1429,
                  "id": 1432,
                  "nodeType": "Return",
                  "src": "3021:22:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "90dcb51f",
            "id": 1434,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPastDowntimeLength",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1425,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1434,
                  "src": "2972:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2972:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2971:9:29"
            },
            "returnParameters": {
              "id": 1429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1428,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1434,
                  "src": "3002:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3002:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3001:9:29"
            },
            "scope": 1566,
            "src": "2941:109:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1461,
              "nodeType": "Block",
              "src": "3177:133:29",
              "statements": [
                {
                  "assignments": [
                    1446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1446,
                      "mutability": "mutable",
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1461,
                      "src": "3187:21:29",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Downtime_$1295_storage_ptr",
                        "typeString": "struct StakingEscrowForPolicyMock.Downtime"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1445,
                        "name": "Downtime",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1295,
                        "src": "3187:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Downtime_$1295_storage_ptr",
                          "typeString": "struct StakingEscrowForPolicyMock.Downtime"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1450,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1447,
                      "name": "downtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1304,
                      "src": "3211:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Downtime_$1295_storage_$dyn_storage",
                        "typeString": "struct StakingEscrowForPolicyMock.Downtime storage ref[] storage ref"
                      }
                    },
                    "id": 1449,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1448,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1438,
                      "src": "3220:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3211:16:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Downtime_$1295_storage",
                      "typeString": "struct StakingEscrowForPolicyMock.Downtime storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3187:40:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1451,
                      "name": "startPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1441,
                      "src": "3237:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1452,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1446,
                        "src": "3251:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Downtime_$1295_storage_ptr",
                          "typeString": "struct StakingEscrowForPolicyMock.Downtime storage pointer"
                        }
                      },
                      "id": 1453,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1292,
                      "src": "3251:16:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "3237:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1455,
                  "nodeType": "ExpressionStatement",
                  "src": "3237:30:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1456,
                      "name": "endPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1443,
                      "src": "3277:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1457,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1446,
                        "src": "3289:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Downtime_$1295_storage_ptr",
                          "typeString": "struct StakingEscrowForPolicyMock.Downtime storage pointer"
                        }
                      },
                      "id": 1458,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "endPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1294,
                      "src": "3289:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "3277:26:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1460,
                  "nodeType": "ExpressionStatement",
                  "src": "3277:26:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8fa95a15",
            "id": 1462,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPastDowntime",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1436,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1462,
                  "src": "3081:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3081:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1438,
                  "mutability": "mutable",
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1462,
                  "src": "3090:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3090:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3080:25:29"
            },
            "returnParameters": {
              "id": 1444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1441,
                  "mutability": "mutable",
                  "name": "startPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1462,
                  "src": "3135:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1440,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1443,
                  "mutability": "mutable",
                  "name": "endPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1462,
                  "src": "3155:16:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1442,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3155:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3134:38:29"
            },
            "scope": 1566,
            "src": "3056:254:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1471,
              "nodeType": "Block",
              "src": "3387:43:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1469,
                    "name": "lastCommittedPeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1301,
                    "src": "3404:19:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 1468,
                  "id": 1470,
                  "nodeType": "Return",
                  "src": "3397:26:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a3ebc182",
            "id": 1472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLastCommittedPeriod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1464,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1472,
                  "src": "3348:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3348:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3347:9:29"
            },
            "returnParameters": {
              "id": 1468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1467,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1472,
                  "src": "3378:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3378:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3377:9:29"
            },
            "scope": 1566,
            "src": "3316:114:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1486,
              "nodeType": "Block",
              "src": "3492:55:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1482,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1474,
                        "src": "3525:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1483,
                        "name": "_period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1476,
                        "src": "3532:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1479,
                        "name": "policyManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1299,
                        "src": "3502:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyManager_$16857",
                          "typeString": "contract PolicyManager"
                        }
                      },
                      "id": 1481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "register",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14690,
                      "src": "3502:22:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint16) external"
                      }
                    },
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3502:38:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1485,
                  "nodeType": "ExpressionStatement",
                  "src": "3502:38:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "72be8d8d",
            "id": 1487,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1474,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1487,
                  "src": "3454:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3454:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1476,
                  "mutability": "mutable",
                  "name": "_period",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1487,
                  "src": "3469:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1475,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3469:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3453:31:29"
            },
            "returnParameters": {
              "id": 1478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3492:0:29"
            },
            "scope": 1566,
            "src": "3436:111:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1500,
              "nodeType": "Block",
              "src": "3595:56:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1493,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1489,
                        "src": "3614:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 1497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1494,
                            "name": "getCurrentPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1335,
                            "src": "3621:16:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
                              "typeString": "function () view returns (uint16)"
                            }
                          },
                          "id": 1495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3621:18:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3642:1:29",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3621:22:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1492,
                      "name": "register",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1487,
                      "src": "3605:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint16)"
                      }
                    },
                    "id": 1498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3605:39:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1499,
                  "nodeType": "ExpressionStatement",
                  "src": "3605:39:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4420e486",
            "id": 1501,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1489,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1501,
                  "src": "3571:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3571:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3570:15:29"
            },
            "returnParameters": {
              "id": 1491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3595:0:29"
            },
            "scope": 1566,
            "src": "3553:98:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1533,
              "nodeType": "Block",
              "src": "3753:177:29",
              "statements": [
                {
                  "body": {
                    "id": 1531,
                    "nodeType": "Block",
                    "src": "3813:111:29",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1521,
                            "name": "_period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1505,
                            "src": "3831:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1522,
                                "name": "downtime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1304,
                                "src": "3842:8:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Downtime_$1295_storage_$dyn_storage",
                                  "typeString": "struct StakingEscrowForPolicyMock.Downtime storage ref[] storage ref"
                                }
                              },
                              "id": 1524,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1523,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1508,
                                "src": "3851:5:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3842:15:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Downtime_$1295_storage",
                                "typeString": "struct StakingEscrowForPolicyMock.Downtime storage ref"
                              }
                            },
                            "id": 1525,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "endPeriod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1294,
                            "src": "3842:25:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "3831:36:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1530,
                        "nodeType": "IfStatement",
                        "src": "3827:87:29",
                        "trueBody": {
                          "id": 1529,
                          "nodeType": "Block",
                          "src": "3869:45:29",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1527,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1508,
                                "src": "3894:5:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 1509,
                              "id": 1528,
                              "nodeType": "Return",
                              "src": "3887:12:29"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1514,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1508,
                      "src": "3779:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1515,
                        "name": "downtime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1304,
                        "src": "3787:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Downtime_$1295_storage_$dyn_storage",
                          "typeString": "struct StakingEscrowForPolicyMock.Downtime storage ref[] storage ref"
                        }
                      },
                      "id": 1516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3787:15:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3779:23:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1532,
                  "initializationExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1510,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1508,
                        "src": "3768:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3776:1:29",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3768:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1513,
                    "nodeType": "ExpressionStatement",
                    "src": "3768:9:29"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3804:7:29",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1518,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1508,
                        "src": "3804:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1520,
                    "nodeType": "ExpressionStatement",
                    "src": "3804:7:29"
                  },
                  "nodeType": "ForStatement",
                  "src": "3763:161:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4789d02d",
            "id": 1534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "findIndexOfPastDowntime",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1503,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1534,
                  "src": "3690:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3690:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1505,
                  "mutability": "mutable",
                  "name": "_period",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1534,
                  "src": "3699:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1504,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3699:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3689:25:29"
            },
            "returnParameters": {
              "id": 1509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1508,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1534,
                  "src": "3738:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3738:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3737:15:29"
            },
            "scope": 1566,
            "src": "3657:273:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1564,
              "nodeType": "Block",
              "src": "4032:144:29",
              "statements": [
                {
                  "body": {
                    "id": 1562,
                    "nodeType": "Block",
                    "src": "4088:82:29",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1556,
                              "name": "_node",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1536,
                              "src": "4135:5:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              "id": 1559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1557,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1544,
                                "src": "4142:1:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1558,
                                "name": "_startPeriod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1538,
                                "src": "4146:12:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "4142:16:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1553,
                              "name": "policyManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1299,
                              "src": "4102:13:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyManager_$16857",
                                "typeString": "contract PolicyManager"
                              }
                            },
                            "id": 1555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setDefaultFeeDelta",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15227,
                            "src": "4102:32:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint16_$returns$__$",
                              "typeString": "function (address,uint16) external"
                            }
                          },
                          "id": 1560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4102:57:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1561,
                        "nodeType": "ExpressionStatement",
                        "src": "4102:57:29"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1547,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1544,
                      "src": "4061:1:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1548,
                      "name": "_numberOfPeriods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1540,
                      "src": "4065:16:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "4061:20:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1563,
                  "initializationExpression": {
                    "assignments": [
                      1544
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1544,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1563,
                        "src": "4047:8:29",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 1543,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4047:6:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1546,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4058:1:29",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4047:12:29"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4083:3:29",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1550,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1544,
                        "src": "4083:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 1552,
                    "nodeType": "ExpressionStatement",
                    "src": "4083:3:29"
                  },
                  "nodeType": "ForStatement",
                  "src": "4042:128:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ab714b59",
            "id": 1565,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDefaultFeeDelta",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1536,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1565,
                  "src": "3964:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3964:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1538,
                  "mutability": "mutable",
                  "name": "_startPeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1565,
                  "src": "3979:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1537,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3979:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1540,
                  "mutability": "mutable",
                  "name": "_numberOfPeriods",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1565,
                  "src": "4000:23:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1539,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "4000:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3963:61:29"
            },
            "returnParameters": {
              "id": 1542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4032:0:29"
            },
            "scope": 1566,
            "src": "3936:240:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1604,
        "src": "982:3197:29"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1568,
              "name": "PolicyManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16857,
              "src": "4264:13:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PolicyManager_$16857",
                "typeString": "contract PolicyManager"
              }
            },
            "id": 1569,
            "nodeType": "InheritanceSpecifier",
            "src": "4264:13:29"
          }
        ],
        "contractDependencies": [
          11326,
          16857,
          18927
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1567,
          "nodeType": "StructuredDocumentation",
          "src": "4182:47:29",
          "text": "@notice Helper to prepare broken state"
        },
        "fullyImplemented": true,
        "id": 1603,
        "linearizedBaseContracts": [
          1603,
          16857,
          11326,
          18927
        ],
        "name": "ExtendedPolicyManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1577,
              "nodeType": "Block",
              "src": "4350:7:29",
              "statements": []
            },
            "documentation": null,
            "id": 1578,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1574,
                    "name": "_escrow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1571,
                    "src": "4341:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingEscrow_$10825",
                      "typeString": "contract StakingEscrow"
                    }
                  }
                ],
                "id": 1575,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1573,
                  "name": "PolicyManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16857,
                  "src": "4327:13:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_PolicyManager_$16857_$",
                    "typeString": "type(contract PolicyManager)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4327:22:29"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1571,
                  "mutability": "mutable",
                  "name": "_escrow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1578,
                  "src": "4297:21:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StakingEscrow_$10825",
                    "typeString": "contract StakingEscrow"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1570,
                    "name": "StakingEscrow",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10825,
                    "src": "4297:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingEscrow_$10825",
                      "typeString": "contract StakingEscrow"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4296:23:29"
            },
            "returnParameters": {
              "id": 1576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4350:0:29"
            },
            "scope": 1603,
            "src": "4285:72:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1601,
              "nodeType": "Block",
              "src": "4443:94:29",
              "statements": [
                {
                  "assignments": [
                    1588
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1588,
                      "mutability": "mutable",
                      "name": "node",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1601,
                      "src": "4453:21:29",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$14540_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1587,
                        "name": "NodeInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 14540,
                        "src": "4453:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$14540_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1592,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1589,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14596,
                      "src": "4477:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$14540_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 1591,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1590,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1580,
                      "src": "4483:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4477:12:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$14540_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4453:36:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1593,
                          "name": "node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1588,
                          "src": "4499:4:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$14540_storage_ptr",
                            "typeString": "struct PolicyManager.NodeInfo storage pointer"
                          }
                        },
                        "id": 1596,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feeDelta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14539,
                        "src": "4499:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                          "typeString": "mapping(uint16 => int256)"
                        }
                      },
                      "id": 1597,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1595,
                        "name": "_period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1582,
                        "src": "4513:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4499:22:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1598,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1584,
                      "src": "4524:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "4499:31:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 1600,
                  "nodeType": "ExpressionStatement",
                  "src": "4499:31:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "64024708",
            "id": 1602,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNodeFeeDelta",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1580,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1602,
                  "src": "4388:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4388:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1582,
                  "mutability": "mutable",
                  "name": "_period",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1602,
                  "src": "4403:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1581,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "4403:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1584,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1602,
                  "src": "4419:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1583,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4419:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4387:46:29"
            },
            "returnParameters": {
              "id": 1586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4443:0:29"
            },
            "scope": 1603,
            "src": "4363:174:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1604,
        "src": "4230:309:29"
      }
    ],
    "src": "0:4540:29"
  },
  "bytecode": "60a060405234801561001057600080fd5b5060405161082e38038061082e8339818101604052602081101561003357600080fd5b5051610e100260e081901b61ffff60e01b1660805261ffff166107c6610068600039806103d9528061041d52506107c66000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80637fdfcd99116100a2578063ab3dbf3b11610071578063ab3dbf3b14610309578063ab714b591461032d578063adde41e114610365578063c2e1dcd71461038b578063e2d28c37146103b45761010b565b80637fdfcd99146102595780638fa95a151461029157806390dcb51f146102bd578063a3ebc182146102e35761010b565b80634789d02d116100de5780634789d02d146101a1578063583f9c3f146101e35780635c9ef4b41461022157806372be8d8d146102295761010b565b8063086146d2146101105780631de77f911461012f578063407f80011461015a5780634420e4861461017b575b600080fd5b6101186103d5565b6040805161ffff9092168252519081900360200190f35b6101586004803603604081101561014557600080fd5b5061ffff8135811691602001351661040c565b005b61016261041b565b6040805163ffffffff9092168252519081900360200190f35b6101586004803603602081101561019157600080fd5b50356001600160a01b031661043f565b6101d1600480360360408110156101b757600080fd5b5080356001600160a01b0316906020013561ffff16610456565b60408051918252519081900360200190f35b610200600480360360208110156101f957600080fd5b50356104a3565b6040805161ffff938416815291909216602082015281519081900390910190f35b6101186104cf565b6101586004803603604081101561023f57600080fd5b5080356001600160a01b0316906020013561ffff166104e0565b6101586004803603606081101561026f57600080fd5b506001600160a01b038135169061ffff60208201358116916040013516610551565b610200600480360360408110156102a757600080fd5b506001600160a01b0381351690602001356105e5565b6101d1600480360360208110156102d357600080fd5b50356001600160a01b031661061b565b6101d1600480360360208110156102f957600080fd5b50356001600160a01b0316610622565b610311610634565b604080516001600160a01b039092168252519081900360200190f35b6101586004803603606081101561034357600080fd5b506001600160a01b038135169061ffff60208201358116916040013516610643565b6101586004803603602081101561037b57600080fd5b50356001600160a01b03166106d1565b610158600480360360408110156103a157600080fd5b5061ffff813581169160200135166106f3565b610158600480360360208110156103ca57600080fd5b503561ffff1661076e565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff16428161040657fe5b04905090565b610417338383610551565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61045381600161044d6103d5565b036104e0565b50565b60005b60015481101561049d576001818154811061047057fe5b60009182526020909120015461ffff620100009091048116908316116104955761049d565b600101610459565b92915050565b600181815481106104b057fe5b60009182526020909120015461ffff8082169250620100009091041682565b600054600160a01b900461ffff1681565b60008054604080516372be8d8d60e01b81526001600160a01b03868116600483015261ffff86166024830152915191909216926372be8d8d926044808201939182900301818387803b15801561053557600080fd5b505af1158015610549573d6000803e3d6000fd5b505050505050565b60005b8161ffff168161ffff1610156105df576000805460408051633ea2391f60e01b81526001600160a01b03888116600483015261ffff86890116602483015291519190921692633ea2391f926044808201939182900301818387803b1580156105bb57600080fd5b505af11580156105cf573d6000803e3d6000fd5b5050600190920191506105549050565b50505050565b6000806000600184815481106105f757fe5b60009182526020909120015461ffff80821697620100009092041695509350505050565b5060015490565b50600054600160a01b900461ffff1690565b6000546001600160a01b031681565b60005b8161ffff168161ffff1610156105df57600080546040805163b438c4cd60e01b81526001600160a01b03888116600483015261ffff8689011660248301529151919092169263b438c4cd926044808201939182900301818387803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b5050600190920191506106469050565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040805180820190915261ffff92831681529082166020820190815260018054808201825560009190915291517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69092018054915161ffff199092169284169290921763ffff00001916620100009190931602919091179055565b6000805461ffff909216600160a01b0261ffff60a01b1990921691909117905556fea26469706673582212202651d5658d05057d5c4bcccd253796797a24b395e684b9861787fa660dfd47a064736f6c63430006070033",
  "bytecodeSha1": "ce8c806f89a31534d84244969dadf6f2065ddfa7",
  "compiler": {
    "evm_version": "berlin",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.7"
  },
  "contractName": "StakingEscrowForPolicyMock",
  "coverageMap": {
    "branches": {
      "29": {
        "StakingEscrowForPolicyMock.findIndexOfPastDowntime": {
          "17": [
            3831,
            3867,
            false
          ]
        }
      }
    },
    "statements": {
      "29": {
        "StakingEscrowForPolicyMock.findIndexOfPastDowntime": {
          "3": [
            3887,
            3899
          ],
          "4": [
            3804,
            3811
          ]
        },
        "StakingEscrowForPolicyMock.getCurrentPeriod": {
          "0": [
            1574,
            1623
          ]
        },
        "StakingEscrowForPolicyMock.getLastCommittedPeriod": {
          "11": [
            3397,
            3423
          ]
        },
        "StakingEscrowForPolicyMock.getPastDowntime": {
          "8": [
            3237,
            3267
          ],
          "9": [
            3277,
            3303
          ]
        },
        "StakingEscrowForPolicyMock.getPastDowntimeLength": {
          "10": [
            3021,
            3043
          ]
        },
        "StakingEscrowForPolicyMock.mint": {
          "1": [
            2706,
            2754
          ],
          "6": [
            2397,
            2447
          ],
          "7": [
            2378,
            2381
          ]
        },
        "StakingEscrowForPolicyMock.pushDowntimePeriod": {
          "15": [
            1962,
            2011
          ]
        },
        "StakingEscrowForPolicyMock.register": {
          "2": [
            3605,
            3644
          ],
          "5": [
            3502,
            3540
          ]
        },
        "StakingEscrowForPolicyMock.setDefaultFeeDelta": {
          "12": [
            4102,
            4159
          ],
          "13": [
            4083,
            4086
          ]
        },
        "StakingEscrowForPolicyMock.setLastCommittedPeriod": {
          "16": [
            1771,
            1813
          ]
        },
        "StakingEscrowForPolicyMock.setPolicyManager": {
          "14": [
            2898,
            2928
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061010b5760003560e01c80637fdfcd99116100a2578063ab3dbf3b11610071578063ab3dbf3b14610309578063ab714b591461032d578063adde41e114610365578063c2e1dcd71461038b578063e2d28c37146103b45761010b565b80637fdfcd99146102595780638fa95a151461029157806390dcb51f146102bd578063a3ebc182146102e35761010b565b80634789d02d116100de5780634789d02d146101a1578063583f9c3f146101e35780635c9ef4b41461022157806372be8d8d146102295761010b565b8063086146d2146101105780631de77f911461012f578063407f80011461015a5780634420e4861461017b575b600080fd5b6101186103d5565b6040805161ffff9092168252519081900360200190f35b6101586004803603604081101561014557600080fd5b5061ffff8135811691602001351661040c565b005b61016261041b565b6040805163ffffffff9092168252519081900360200190f35b6101586004803603602081101561019157600080fd5b50356001600160a01b031661043f565b6101d1600480360360408110156101b757600080fd5b5080356001600160a01b0316906020013561ffff16610456565b60408051918252519081900360200190f35b610200600480360360208110156101f957600080fd5b50356104a3565b6040805161ffff938416815291909216602082015281519081900390910190f35b6101186104cf565b6101586004803603604081101561023f57600080fd5b5080356001600160a01b0316906020013561ffff166104e0565b6101586004803603606081101561026f57600080fd5b506001600160a01b038135169061ffff60208201358116916040013516610551565b610200600480360360408110156102a757600080fd5b506001600160a01b0381351690602001356105e5565b6101d1600480360360208110156102d357600080fd5b50356001600160a01b031661061b565b6101d1600480360360208110156102f957600080fd5b50356001600160a01b0316610622565b610311610634565b604080516001600160a01b039092168252519081900360200190f35b6101586004803603606081101561034357600080fd5b506001600160a01b038135169061ffff60208201358116916040013516610643565b6101586004803603602081101561037b57600080fd5b50356001600160a01b03166106d1565b610158600480360360408110156103a157600080fd5b5061ffff813581169160200135166106f3565b610158600480360360208110156103ca57600080fd5b503561ffff1661076e565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff16428161040657fe5b04905090565b610417338383610551565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61045381600161044d6103d5565b036104e0565b50565b60005b60015481101561049d576001818154811061047057fe5b60009182526020909120015461ffff620100009091048116908316116104955761049d565b600101610459565b92915050565b600181815481106104b057fe5b60009182526020909120015461ffff8082169250620100009091041682565b600054600160a01b900461ffff1681565b60008054604080516372be8d8d60e01b81526001600160a01b03868116600483015261ffff86166024830152915191909216926372be8d8d926044808201939182900301818387803b15801561053557600080fd5b505af1158015610549573d6000803e3d6000fd5b505050505050565b60005b8161ffff168161ffff1610156105df576000805460408051633ea2391f60e01b81526001600160a01b03888116600483015261ffff86890116602483015291519190921692633ea2391f926044808201939182900301818387803b1580156105bb57600080fd5b505af11580156105cf573d6000803e3d6000fd5b5050600190920191506105549050565b50505050565b6000806000600184815481106105f757fe5b60009182526020909120015461ffff80821697620100009092041695509350505050565b5060015490565b50600054600160a01b900461ffff1690565b6000546001600160a01b031681565b60005b8161ffff168161ffff1610156105df57600080546040805163b438c4cd60e01b81526001600160a01b03888116600483015261ffff8689011660248301529151919092169263b438c4cd926044808201939182900301818387803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b5050600190920191506106469050565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040805180820190915261ffff92831681529082166020820190815260018054808201825560009190915291517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69092018054915161ffff199092169284169290921763ffff00001916620100009190931602919091179055565b6000805461ffff909216600160a01b0261ffff60a01b1990921691909117905556fea26469706673582212202651d5658d05057d5c4bcccd253796797a24b395e684b9861787fa660dfd47a064736f6c63430006070033",
  "deployedSourceMap": "982:3197:29:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;982:3197:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1507:123:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2627:134;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2627:134:29;;;;;;;;;;;:::i;:::-;;1108:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3553:98;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3553:98:29;-1:-1:-1;;;;;3553:98:29;;:::i;3657:273::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3657:273:29;;-1:-1:-1;;;;;3657:273:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1234:26;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1234:26:29;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1195:33;;;:::i;3436:111::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3436:111:29;;-1:-1:-1;;;;;3436:111:29;;;;;;;;:::i;2243:221::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;2243:221:29;;;;;;;;;;;;;;;;;:::i;3056:254::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3056:254:29;;;;;;;;:::i;2941:109::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2941:109:29;-1:-1:-1;;;;;2941:109:29;;:::i;3316:114::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3316:114:29;-1:-1:-1;;;;;3316:114:29;;:::i;1155:34::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1155:34:29;;;;;;;;;;;;;;3936:240;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3936:240:29;;;;;;;;;;;;;;;;;:::i;2823:112::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2823:112:29;-1:-1:-1;;;;;2823:112:29;;:::i;1875:143::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1875:143:29;;;;;;;;;;;:::i;1691:129::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1691:129:29;;;;:::i;1507:123::-;1556:6;1606:16;1588:34;;:15;:34;;;;;;1574:49;;1507:123;:::o;2627:134::-;2706:48;2711:10;2723:12;2737:16;2706:4;:48::i;:::-;2627:134;;:::o;1108:40::-;;;:::o;3553:98::-;3605:39;3614:5;3642:1;3621:18;:16;:18::i;:::-;:22;3605:8;:39::i;:::-;3553:98;:::o;3657:273::-;3738:13;3763:161;3787:8;:15;3779:23;;3763:161;;;3842:8;3851:5;3842:15;;;;;;;;;;;;;;;;;:25;;;;;;;;3831:36;;;;3827:87;;3887:12;;3827:87;3804:7;;3763:161;;;3657:273;;;;:::o;1234:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1234:26:29;;;;;;:::o;1195:33::-;;;-1:-1:-1;;;1195:33:29;;;;;:::o;3436:111::-;3502:13;;;:38;;;-1:-1:-1;;;3502:38:29;;-1:-1:-1;;;;;3502:38:29;;;;;;;;;;;;;;;;:13;;;;;:22;;:38;;;;;;;;;;;:13;;:38;;;2:2:-1;;;;27:1;24;17:12;2:2;3502:38:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3502:38:29;;;;3436:111;;:::o;2243:221::-;2342:8;2337:121;2360:16;2356:20;;:1;:20;;;2337:121;;;2397:13;;;:50;;;-1:-1:-1;;;2397:50:29;;-1:-1:-1;;;;;2397:50:29;;;;;;;;2430:16;;;2397:50;;;;;;;:13;;;;;:23;;:50;;;;;;;;;;;:13;;:50;;;2:2:-1;;;;27:1;24;17:12;2:2;2397:50:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2378:3:29;;;;;-1:-1:-1;2337:121:29;;-1:-1:-1;2337:121:29;;;2243:221;;;:::o;3056:254::-;3135:18;3155:16;3187:21;3211:8;3220:6;3211:16;;;;;;;;;;;;;;;;;3251;;;;;;3289:14;;;;;;-1:-1:-1;3056:254:29;-1:-1:-1;;;;3056:254:29:o;2941:109::-;-1:-1:-1;3028:8:29;:15;;2941:109::o;3316:114::-;-1:-1:-1;3378:7:29;3404:19;-1:-1:-1;;;3404:19:29;;;;;3316:114::o;1155:34::-;;;-1:-1:-1;;;;;1155:34:29;;:::o;3936:240::-;4047:8;4042:128;4065:16;4061:20;;:1;:20;;;4042:128;;;4102:13;;;:57;;;-1:-1:-1;;;4102:57:29;;-1:-1:-1;;;;;4102:57:29;;;;;;;;4142:16;;;4102:57;;;;;;;:13;;;;;:32;;:57;;;;;;;;;;;:13;;:57;;;2:2:-1;;;;27:1;24;17:12;2:2;4102:57:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4083:3:29;;;;;-1:-1:-1;4042:128:29;;-1:-1:-1;4042:128:29;2823:112;2898:13;:30;;-1:-1:-1;;;;;;2898:30:29;-1:-1:-1;;;;;2898:30:29;;;;;;;;;;2823:112::o;1875:143::-;1976:34;;;;;;;;;;;;;;;;;;;;;;;;1962:8;27:10:-1;;23:18;;;45:23;;-1:-1;1962:49:29;;;;;;;;;;;;;;-1:-1:-1;;1962:49:29;;;;;;;;;;-1:-1:-1;;1962:49:29;;;;;;;;;;;;;1875:143::o;1691:129::-;1771:19;:42;;;;;;-1:-1:-1;;;1771:42:29;-1:-1:-1;;;;1771:42:29;;;;;;;;;1691:129::o",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "constructor": {
        "params": {
          "_hoursPerPeriod": "Size of period in hours"
        }
      },
      "mint(address,uint16,uint16)": {
        "notice": "Emulate mint method",
        "params": {
          "_numberOfPeriods": "Number periods for minting",
          "_staker": "Staker on behalf of whom minting will be",
          "_startPeriod": "Start period for minting"
        }
      },
      "mint(uint16,uint16)": {
        "notice": "Emulate mint method",
        "params": {
          "_numberOfPeriods": "Number periods for minting",
          "_startPeriod": "Start period for minting"
        }
      },
      "pushDowntimePeriod(uint16,uint16)": {
        "notice": "Add downtime period"
      },
      "setLastCommittedPeriod(uint16)": {
        "notice": "Set last committed period"
      },
      "setPolicyManager(address)": {
        "notice": "Set policy manager address"
      }
    },
    "notice": "Contract for using in PolicyManager tests"
  },
  "offset": [
    982,
    4179
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FDFCD99 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xAB3DBF3B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAB3DBF3B EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xAB714B59 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xADDE41E1 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xC2E1DCD7 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xE2D28C37 EQ PUSH2 0x3B4 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x7FDFCD99 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x8FA95A15 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x90DCB51F EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xA3EBC182 EQ PUSH2 0x2E3 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x4789D02D GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x4789D02D EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x583F9C3F EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x5C9EF4B4 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x72BE8D8D EQ PUSH2 0x229 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x86146D2 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x1DE77F91 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x407F8001 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x17B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x40C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x43F JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH2 0xFFFF PUSH1 0x20 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x40 ADD CALLDATALOAD AND PUSH2 0x551 JUMP JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61B JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x622 JUMP JUMPDEST PUSH2 0x311 PUSH2 0x634 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH2 0xFFFF PUSH1 0x20 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x40 ADD CALLDATALOAD AND PUSH2 0x643 JUMP JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x76E JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH4 0xFFFFFFFF AND TIMESTAMP DUP2 PUSH2 0x406 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x417 CALLER DUP4 DUP4 PUSH2 0x551 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH1 0x1 PUSH2 0x44D PUSH2 0x3D5 JUMP JUMPDEST SUB PUSH2 0x4E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x49D JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x470 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xFFFF PUSH3 0x10000 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP4 AND GT PUSH2 0x495 JUMPI PUSH2 0x49D JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x459 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4B0 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xFFFF DUP1 DUP3 AND SWAP3 POP PUSH3 0x10000 SWAP1 SWAP2 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x72BE8D8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0xFFFF DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0x72BE8D8D SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x549 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND LT ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3EA2391F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0xFFFF DUP7 DUP10 ADD AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0x3EA2391F SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 POP PUSH2 0x554 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x5F7 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xFFFF DUP1 DUP3 AND SWAP8 PUSH3 0x10000 SWAP1 SWAP3 DIV AND SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND LT ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xB438C4CD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0xFFFF DUP7 DUP10 ADD AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0xB438C4CD SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 POP PUSH2 0x646 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0xFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP1 DUP3 AND PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE SWAP2 MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP2 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP3 AND SWAP3 DUP5 AND SWAP3 SWAP1 SWAP3 OR PUSH4 0xFFFF0000 NOT AND PUSH3 0x10000 SWAP2 SWAP1 SWAP4 AND MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH2 0xFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 MLOAD 0xD5 PUSH6 0x8D05057D5C4B 0xCC 0xCD 0x25 CALLDATACOPY SWAP7 PUSH26 0x7A24B395E684B9861787FA660DFD47A064736F6C634300060700 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        982,
        4179
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "REVERT",
      "path": "29"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        982,
        4179
      ],
      "op": "POP",
      "path": "29"
    },
    "18": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "21": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "LT",
      "path": "29"
    },
    "22": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x10B"
    },
    "25": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "26": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "29": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "SHR",
      "path": "29"
    },
    "32": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "33": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x7FDFCD99"
    },
    "38": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "GT",
      "path": "29"
    },
    "39": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "43": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "44": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xAB3DBF3B"
    },
    "49": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "GT",
      "path": "29"
    },
    "50": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "54": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "55": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xAB3DBF3B"
    },
    "60": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "61": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x309"
    },
    "64": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "65": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "66": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xAB714B59"
    },
    "71": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "72": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x32D"
    },
    "75": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "76": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "77": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xADDE41E1"
    },
    "82": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "83": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x365"
    },
    "86": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "87": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "88": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xC2E1DCD7"
    },
    "93": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "94": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x38B"
    },
    "97": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "98": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "99": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xE2D28C37"
    },
    "104": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "105": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3B4"
    },
    "108": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "109": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x10B"
    },
    "112": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMP",
      "path": "29"
    },
    "113": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "114": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "115": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x7FDFCD99"
    },
    "120": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "121": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x259"
    },
    "124": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "125": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "126": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x8FA95A15"
    },
    "131": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "132": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x291"
    },
    "135": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "136": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "137": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x90DCB51F"
    },
    "142": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "143": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2BD"
    },
    "146": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "147": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "148": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xA3EBC182"
    },
    "153": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "154": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2E3"
    },
    "157": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "158": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x10B"
    },
    "161": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMP",
      "path": "29"
    },
    "162": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "163": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "164": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x4789D02D"
    },
    "169": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "GT",
      "path": "29"
    },
    "170": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "174": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "175": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x4789D02D"
    },
    "180": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "181": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1A1"
    },
    "184": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "185": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "186": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x583F9C3F"
    },
    "191": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "192": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1E3"
    },
    "195": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "196": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "197": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x5C9EF4B4"
    },
    "202": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "203": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x221"
    },
    "206": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "207": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "208": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x72BE8D8D"
    },
    "213": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "214": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x229"
    },
    "217": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "218": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x10B"
    },
    "221": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMP",
      "path": "29"
    },
    "222": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "223": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "224": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x86146D2"
    },
    "229": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "230": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x110"
    },
    "233": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "234": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "235": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x1DE77F91"
    },
    "240": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "241": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x12F"
    },
    "244": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "245": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "246": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x407F8001"
    },
    "251": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "252": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15A"
    },
    "255": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "256": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "DUP1",
      "path": "29"
    },
    "257": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x4420E486"
    },
    "262": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "EQ",
      "path": "29"
    },
    "263": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x17B"
    },
    "266": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "267": {
      "fn": null,
      "offset": [
        982,
        4179
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "270": {
      "op": "DUP1"
    },
    "271": {
      "first_revert": true,
      "op": "REVERT"
    },
    "272": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "273": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x118"
    },
    "276": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3D5"
    },
    "279": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "jump": "i",
      "offset": [
        1507,
        1630
      ],
      "op": "JUMP",
      "path": "29"
    },
    "280": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "281": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "283": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "DUP1",
      "path": "29"
    },
    "284": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "285": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "288": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "289": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "290": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "AND",
      "path": "29"
    },
    "291": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "DUP3",
      "path": "29"
    },
    "292": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "293": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "294": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "295": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "DUP2",
      "path": "29"
    },
    "296": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "297": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "SUB",
      "path": "29"
    },
    "298": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "300": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "ADD",
      "path": "29"
    },
    "301": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "302": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "RETURN",
      "path": "29"
    },
    "303": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "304": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x158"
    },
    "307": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "309": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "DUP1",
      "path": "29"
    },
    "310": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "311": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "SUB",
      "path": "29"
    },
    "312": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "314": {
      "op": "DUP2"
    },
    "315": {
      "op": "LT"
    },
    "316": {
      "op": "ISZERO"
    },
    "317": {
      "op": "PUSH2",
      "value": "0x145"
    },
    "320": {
      "op": "JUMPI"
    },
    "321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "323": {
      "op": "DUP1"
    },
    "324": {
      "op": "REVERT"
    },
    "325": {
      "op": "JUMPDEST"
    },
    "326": {
      "op": "POP"
    },
    "327": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "330": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "DUP2",
      "path": "29"
    },
    "331": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "332": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "DUP2",
      "path": "29"
    },
    "333": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "AND",
      "path": "29"
    },
    "334": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "335": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "337": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "ADD",
      "path": "29"
    },
    "338": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "339": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "AND",
      "path": "29"
    },
    "340": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x40C"
    },
    "343": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "jump": "i",
      "offset": [
        2627,
        2761
      ],
      "op": "JUMP",
      "path": "29"
    },
    "344": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "345": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "STOP",
      "path": "29"
    },
    "346": {
      "offset": [
        1108,
        1148
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "347": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x162"
    },
    "350": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x41B"
    },
    "353": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "jump": "i",
      "offset": [
        1108,
        1148
      ],
      "op": "JUMP",
      "path": "29"
    },
    "354": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "355": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "357": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "DUP1",
      "path": "29"
    },
    "358": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "359": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "364": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "365": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "366": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "AND",
      "path": "29"
    },
    "367": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "DUP3",
      "path": "29"
    },
    "368": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "369": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "370": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "371": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "DUP2",
      "path": "29"
    },
    "372": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "373": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "SUB",
      "path": "29"
    },
    "374": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "376": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "ADD",
      "path": "29"
    },
    "377": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "378": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "RETURN",
      "path": "29"
    },
    "379": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3553,
        3651
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "380": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3553,
        3651
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x158"
    },
    "383": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3553,
        3651
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "385": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3553,
        3651
      ],
      "op": "DUP1",
      "path": "29"
    },
    "386": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3553,
        3651
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "387": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3553,
        3651
      ],
      "op": "SUB",
      "path": "29"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "390": {
      "op": "DUP2"
    },
    "391": {
      "op": "LT"
    },
    "392": {
      "op": "ISZERO"
    },
    "393": {
      "op": "PUSH2",
      "value": "0x191"
    },
    "396": {
      "op": "JUMPI"
    },
    "397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "399": {
      "op": "DUP1"
    },
    "400": {
      "op": "REVERT"
    },
    "401": {
      "op": "JUMPDEST"
    },
    "402": {
      "op": "POP"
    },
    "403": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3553,
        3651
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "410": {
      "op": "SHL"
    },
    "411": {
      "op": "SUB"
    },
    "412": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3553,
        3651
      ],
      "op": "AND",
      "path": "29"
    },
    "413": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3553,
        3651
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x43F"
    },
    "416": {
      "fn": "StakingEscrowForPolicyMock.register",
      "jump": "i",
      "offset": [
        3553,
        3651
      ],
      "op": "JUMP",
      "path": "29"
    },
    "417": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "418": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1D1"
    },
    "421": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "423": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "DUP1",
      "path": "29"
    },
    "424": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "425": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "SUB",
      "path": "29"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "428": {
      "op": "DUP2"
    },
    "429": {
      "op": "LT"
    },
    "430": {
      "op": "ISZERO"
    },
    "431": {
      "op": "PUSH2",
      "value": "0x1B7"
    },
    "434": {
      "op": "JUMPI"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "437": {
      "op": "DUP1"
    },
    "438": {
      "op": "REVERT"
    },
    "439": {
      "op": "JUMPDEST"
    },
    "440": {
      "op": "POP"
    },
    "441": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "DUP1",
      "path": "29"
    },
    "442": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "449": {
      "op": "SHL"
    },
    "450": {
      "op": "SUB"
    },
    "451": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "AND",
      "path": "29"
    },
    "452": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "453": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "455": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "ADD",
      "path": "29"
    },
    "456": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "457": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "460": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "AND",
      "path": "29"
    },
    "461": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x456"
    },
    "464": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "jump": "i",
      "offset": [
        3657,
        3930
      ],
      "op": "JUMP",
      "path": "29"
    },
    "465": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "466": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "468": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "DUP1",
      "path": "29"
    },
    "469": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "470": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "471": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "DUP3",
      "path": "29"
    },
    "472": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "473": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "474": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "475": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "DUP2",
      "path": "29"
    },
    "476": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "477": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "SUB",
      "path": "29"
    },
    "478": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "480": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "ADD",
      "path": "29"
    },
    "481": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "482": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "RETURN",
      "path": "29"
    },
    "483": {
      "offset": [
        1234,
        1260
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "484": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x200"
    },
    "487": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "489": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "DUP1",
      "path": "29"
    },
    "490": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "491": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SUB",
      "path": "29"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "494": {
      "op": "DUP2"
    },
    "495": {
      "op": "LT"
    },
    "496": {
      "op": "ISZERO"
    },
    "497": {
      "op": "PUSH2",
      "value": "0x1F9"
    },
    "500": {
      "op": "JUMPI"
    },
    "501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "503": {
      "op": "DUP1"
    },
    "504": {
      "op": "REVERT"
    },
    "505": {
      "op": "JUMPDEST"
    },
    "506": {
      "op": "POP"
    },
    "507": {
      "offset": [
        1234,
        1260
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "508": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4A3"
    },
    "511": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "jump": "i",
      "offset": [
        1234,
        1260
      ],
      "op": "JUMP",
      "path": "29"
    },
    "512": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "513": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "515": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "DUP1",
      "path": "29"
    },
    "516": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "517": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "520": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "521": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "DUP5",
      "path": "29"
    },
    "522": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "AND",
      "path": "29"
    },
    "523": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "DUP2",
      "path": "29"
    },
    "524": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "525": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "526": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "527": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "528": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "AND",
      "path": "29"
    },
    "529": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "531": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "DUP3",
      "path": "29"
    },
    "532": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "ADD",
      "path": "29"
    },
    "533": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "534": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "DUP2",
      "path": "29"
    },
    "535": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "536": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "537": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "DUP2",
      "path": "29"
    },
    "538": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "539": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SUB",
      "path": "29"
    },
    "540": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "541": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "542": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "ADD",
      "path": "29"
    },
    "543": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "544": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "RETURN",
      "path": "29"
    },
    "545": {
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "546": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x118"
    },
    "549": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4CF"
    },
    "552": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "jump": "i",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMP",
      "path": "29"
    },
    "553": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "554": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x158"
    },
    "557": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "559": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "DUP1",
      "path": "29"
    },
    "560": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "561": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "SUB",
      "path": "29"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "564": {
      "op": "DUP2"
    },
    "565": {
      "op": "LT"
    },
    "566": {
      "op": "ISZERO"
    },
    "567": {
      "op": "PUSH2",
      "value": "0x23F"
    },
    "570": {
      "op": "JUMPI"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "573": {
      "op": "DUP1"
    },
    "574": {
      "op": "REVERT"
    },
    "575": {
      "op": "JUMPDEST"
    },
    "576": {
      "op": "POP"
    },
    "577": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "DUP1",
      "path": "29"
    },
    "578": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "585": {
      "op": "SHL"
    },
    "586": {
      "op": "SUB"
    },
    "587": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "AND",
      "path": "29"
    },
    "588": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "589": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "591": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "ADD",
      "path": "29"
    },
    "592": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "593": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "596": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "AND",
      "path": "29"
    },
    "597": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4E0"
    },
    "600": {
      "fn": "StakingEscrowForPolicyMock.register",
      "jump": "i",
      "offset": [
        3436,
        3547
      ],
      "op": "JUMP",
      "path": "29"
    },
    "601": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "602": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x158"
    },
    "605": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "607": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "DUP1",
      "path": "29"
    },
    "608": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "609": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "SUB",
      "path": "29"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "612": {
      "op": "DUP2"
    },
    "613": {
      "op": "LT"
    },
    "614": {
      "op": "ISZERO"
    },
    "615": {
      "op": "PUSH2",
      "value": "0x26F"
    },
    "618": {
      "op": "JUMPI"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "621": {
      "op": "DUP1"
    },
    "622": {
      "op": "REVERT"
    },
    "623": {
      "op": "JUMPDEST"
    },
    "624": {
      "op": "POP"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "631": {
      "op": "SHL"
    },
    "632": {
      "op": "SUB"
    },
    "633": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "DUP2",
      "path": "29"
    },
    "634": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "635": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "AND",
      "path": "29"
    },
    "636": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "637": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "640": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "642": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "DUP3",
      "path": "29"
    },
    "643": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "ADD",
      "path": "29"
    },
    "644": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "645": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "DUP2",
      "path": "29"
    },
    "646": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "AND",
      "path": "29"
    },
    "647": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "648": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "650": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "ADD",
      "path": "29"
    },
    "651": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "652": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "AND",
      "path": "29"
    },
    "653": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x551"
    },
    "656": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "jump": "i",
      "offset": [
        2243,
        2464
      ],
      "op": "JUMP",
      "path": "29"
    },
    "657": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3056,
        3310
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "658": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3056,
        3310
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x200"
    },
    "661": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3056,
        3310
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "663": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3056,
        3310
      ],
      "op": "DUP1",
      "path": "29"
    },
    "664": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3056,
        3310
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "665": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3056,
        3310
      ],
      "op": "SUB",
      "path": "29"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "668": {
      "op": "DUP2"
    },
    "669": {
      "op": "LT"
    },
    "670": {
      "op": "ISZERO"
    },
    "671": {
      "op": "PUSH2",
      "value": "0x2A7"
    },
    "674": {
      "op": "JUMPI"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "677": {
      "op": "DUP1"
    },
    "678": {
      "op": "REVERT"
    },
    "679": {
      "op": "JUMPDEST"
    },
    "680": {
      "op": "POP"
    },
    "681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "687": {
      "op": "SHL"
    },
    "688": {
      "op": "SUB"
    },
    "689": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3056,
        3310
      ],
      "op": "DUP2",
      "path": "29"
    },
    "690": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3056,
        3310
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "691": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3056,
        3310
      ],
      "op": "AND",
      "path": "29"
    },
    "692": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3056,
        3310
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "693": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3056,
        3310
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "695": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3056,
        3310
      ],
      "op": "ADD",
      "path": "29"
    },
    "696": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3056,
        3310
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "697": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3056,
        3310
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x5E5"
    },
    "700": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "jump": "i",
      "offset": [
        3056,
        3310
      ],
      "op": "JUMP",
      "path": "29"
    },
    "701": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntimeLength",
      "offset": [
        2941,
        3050
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "702": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntimeLength",
      "offset": [
        2941,
        3050
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1D1"
    },
    "705": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntimeLength",
      "offset": [
        2941,
        3050
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "707": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntimeLength",
      "offset": [
        2941,
        3050
      ],
      "op": "DUP1",
      "path": "29"
    },
    "708": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntimeLength",
      "offset": [
        2941,
        3050
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "709": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntimeLength",
      "offset": [
        2941,
        3050
      ],
      "op": "SUB",
      "path": "29"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "712": {
      "op": "DUP2"
    },
    "713": {
      "op": "LT"
    },
    "714": {
      "op": "ISZERO"
    },
    "715": {
      "op": "PUSH2",
      "value": "0x2D3"
    },
    "718": {
      "op": "JUMPI"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "721": {
      "op": "DUP1"
    },
    "722": {
      "op": "REVERT"
    },
    "723": {
      "op": "JUMPDEST"
    },
    "724": {
      "op": "POP"
    },
    "725": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntimeLength",
      "offset": [
        2941,
        3050
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "732": {
      "op": "SHL"
    },
    "733": {
      "op": "SUB"
    },
    "734": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntimeLength",
      "offset": [
        2941,
        3050
      ],
      "op": "AND",
      "path": "29"
    },
    "735": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntimeLength",
      "offset": [
        2941,
        3050
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x61B"
    },
    "738": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntimeLength",
      "jump": "i",
      "offset": [
        2941,
        3050
      ],
      "op": "JUMP",
      "path": "29"
    },
    "739": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3316,
        3430
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "740": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3316,
        3430
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1D1"
    },
    "743": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3316,
        3430
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "745": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3316,
        3430
      ],
      "op": "DUP1",
      "path": "29"
    },
    "746": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3316,
        3430
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "747": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3316,
        3430
      ],
      "op": "SUB",
      "path": "29"
    },
    "748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "750": {
      "op": "DUP2"
    },
    "751": {
      "op": "LT"
    },
    "752": {
      "op": "ISZERO"
    },
    "753": {
      "op": "PUSH2",
      "value": "0x2F9"
    },
    "756": {
      "op": "JUMPI"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "759": {
      "op": "DUP1"
    },
    "760": {
      "op": "REVERT"
    },
    "761": {
      "op": "JUMPDEST"
    },
    "762": {
      "op": "POP"
    },
    "763": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3316,
        3430
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "op": "SUB"
    },
    "772": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3316,
        3430
      ],
      "op": "AND",
      "path": "29"
    },
    "773": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3316,
        3430
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x622"
    },
    "776": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "jump": "i",
      "offset": [
        3316,
        3430
      ],
      "op": "JUMP",
      "path": "29"
    },
    "777": {
      "offset": [
        1155,
        1189
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "778": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x311"
    },
    "781": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x634"
    },
    "784": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "jump": "i",
      "offset": [
        1155,
        1189
      ],
      "op": "JUMP",
      "path": "29"
    },
    "785": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "786": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "788": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "DUP1",
      "path": "29"
    },
    "789": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "796": {
      "op": "SHL"
    },
    "797": {
      "op": "SUB"
    },
    "798": {
      "offset": [
        1155,
        1189
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "799": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "800": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "AND",
      "path": "29"
    },
    "801": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "DUP3",
      "path": "29"
    },
    "802": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "803": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "804": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "805": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "DUP2",
      "path": "29"
    },
    "806": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "807": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "SUB",
      "path": "29"
    },
    "808": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "810": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "ADD",
      "path": "29"
    },
    "811": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "812": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "RETURN",
      "path": "29"
    },
    "813": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "814": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x158"
    },
    "817": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "819": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "DUP1",
      "path": "29"
    },
    "820": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "821": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "SUB",
      "path": "29"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "824": {
      "op": "DUP2"
    },
    "825": {
      "op": "LT"
    },
    "826": {
      "op": "ISZERO"
    },
    "827": {
      "op": "PUSH2",
      "value": "0x343"
    },
    "830": {
      "op": "JUMPI"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "833": {
      "op": "DUP1"
    },
    "834": {
      "op": "REVERT"
    },
    "835": {
      "op": "JUMPDEST"
    },
    "836": {
      "op": "POP"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "843": {
      "op": "SHL"
    },
    "844": {
      "op": "SUB"
    },
    "845": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "DUP2",
      "path": "29"
    },
    "846": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "847": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "AND",
      "path": "29"
    },
    "848": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "849": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "852": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "854": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "DUP3",
      "path": "29"
    },
    "855": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "ADD",
      "path": "29"
    },
    "856": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "857": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "DUP2",
      "path": "29"
    },
    "858": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "AND",
      "path": "29"
    },
    "859": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "860": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "862": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "ADD",
      "path": "29"
    },
    "863": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "864": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "AND",
      "path": "29"
    },
    "865": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x643"
    },
    "868": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "jump": "i",
      "offset": [
        3936,
        4176
      ],
      "op": "JUMP",
      "path": "29"
    },
    "869": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2823,
        2935
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "870": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2823,
        2935
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x158"
    },
    "873": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2823,
        2935
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "875": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2823,
        2935
      ],
      "op": "DUP1",
      "path": "29"
    },
    "876": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2823,
        2935
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "877": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2823,
        2935
      ],
      "op": "SUB",
      "path": "29"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "880": {
      "op": "DUP2"
    },
    "881": {
      "op": "LT"
    },
    "882": {
      "op": "ISZERO"
    },
    "883": {
      "op": "PUSH2",
      "value": "0x37B"
    },
    "886": {
      "op": "JUMPI"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "889": {
      "op": "DUP1"
    },
    "890": {
      "op": "REVERT"
    },
    "891": {
      "op": "JUMPDEST"
    },
    "892": {
      "op": "POP"
    },
    "893": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2823,
        2935
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "900": {
      "op": "SHL"
    },
    "901": {
      "op": "SUB"
    },
    "902": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2823,
        2935
      ],
      "op": "AND",
      "path": "29"
    },
    "903": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2823,
        2935
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x6D1"
    },
    "906": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "jump": "i",
      "offset": [
        2823,
        2935
      ],
      "op": "JUMP",
      "path": "29"
    },
    "907": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "908": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x158"
    },
    "911": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "913": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "DUP1",
      "path": "29"
    },
    "914": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "915": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "SUB",
      "path": "29"
    },
    "916": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "918": {
      "op": "DUP2"
    },
    "919": {
      "op": "LT"
    },
    "920": {
      "op": "ISZERO"
    },
    "921": {
      "op": "PUSH2",
      "value": "0x3A1"
    },
    "924": {
      "op": "JUMPI"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "927": {
      "op": "DUP1"
    },
    "928": {
      "op": "REVERT"
    },
    "929": {
      "op": "JUMPDEST"
    },
    "930": {
      "op": "POP"
    },
    "931": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "934": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "DUP2",
      "path": "29"
    },
    "935": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "936": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "DUP2",
      "path": "29"
    },
    "937": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "AND",
      "path": "29"
    },
    "938": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "939": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "941": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "ADD",
      "path": "29"
    },
    "942": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "943": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "AND",
      "path": "29"
    },
    "944": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x6F3"
    },
    "947": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "jump": "i",
      "offset": [
        1875,
        2018
      ],
      "op": "JUMP",
      "path": "29"
    },
    "948": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1691,
        1820
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "949": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1691,
        1820
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x158"
    },
    "952": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1691,
        1820
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "954": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1691,
        1820
      ],
      "op": "DUP1",
      "path": "29"
    },
    "955": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1691,
        1820
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "956": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1691,
        1820
      ],
      "op": "SUB",
      "path": "29"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "959": {
      "op": "DUP2"
    },
    "960": {
      "op": "LT"
    },
    "961": {
      "op": "ISZERO"
    },
    "962": {
      "op": "PUSH2",
      "value": "0x3CA"
    },
    "965": {
      "op": "JUMPI"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "968": {
      "op": "DUP1"
    },
    "969": {
      "op": "REVERT"
    },
    "970": {
      "op": "JUMPDEST"
    },
    "971": {
      "op": "POP"
    },
    "972": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1691,
        1820
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "973": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1691,
        1820
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "976": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1691,
        1820
      ],
      "op": "AND",
      "path": "29"
    },
    "977": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1691,
        1820
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x76E"
    },
    "980": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "jump": "i",
      "offset": [
        1691,
        1820
      ],
      "op": "JUMP",
      "path": "29"
    },
    "981": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "982": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1556,
        1562
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "984": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1606,
        1622
      ],
      "op": "PUSH32",
      "path": "29",
      "statement": 0,
      "value": "0x0"
    },
    "1017": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1588,
        1622
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "1022": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1588,
        1622
      ],
      "op": "AND",
      "path": "29"
    },
    "1023": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1588,
        1603
      ],
      "op": "TIMESTAMP",
      "path": "29"
    },
    "1024": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1588,
        1622
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1025": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1588,
        1622
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x406"
    },
    "1028": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1588,
        1622
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1029": {
      "dev": "Division by zero",
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1588,
        1622
      ],
      "op": "INVALID",
      "path": "29"
    },
    "1030": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1588,
        1622
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1031": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1588,
        1622
      ],
      "op": "DIV",
      "path": "29"
    },
    "1032": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1574,
        1623
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1033": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1574,
        1623
      ],
      "op": "POP",
      "path": "29"
    },
    "1034": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "offset": [
        1507,
        1630
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1035": {
      "fn": "StakingEscrowForPolicyMock.getCurrentPeriod",
      "jump": "o",
      "offset": [
        1507,
        1630
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1036": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1037": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2706,
        2754
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 1,
      "value": "0x417"
    },
    "1040": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2711,
        2721
      ],
      "op": "CALLER",
      "path": "29"
    },
    "1041": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2723,
        2735
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1042": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2737,
        2753
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1043": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2706,
        2710
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x551"
    },
    "1046": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "jump": "i",
      "offset": [
        2706,
        2754
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1047": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2706,
        2754
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1048": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "POP",
      "path": "29"
    },
    "1049": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2627,
        2761
      ],
      "op": "POP",
      "path": "29"
    },
    "1050": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "jump": "o",
      "offset": [
        2627,
        2761
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1051": {
      "offset": [
        1108,
        1148
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1052": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "1085": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        1108,
        1148
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1086": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "jump": "o",
      "offset": [
        1108,
        1148
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1087": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3553,
        3651
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1088": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3605,
        3644
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 2,
      "value": "0x453"
    },
    "1091": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3614,
        3619
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1092": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3642,
        3643
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "1094": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3621,
        3639
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x44D"
    },
    "1097": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3D5"
    },
    "1100": {
      "fn": "StakingEscrowForPolicyMock.register",
      "jump": "i",
      "offset": [
        3621,
        3639
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1101": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3621,
        3639
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1102": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3621,
        3643
      ],
      "op": "SUB",
      "path": "29"
    },
    "1103": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3605,
        3613
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4E0"
    },
    "1106": {
      "fn": "StakingEscrowForPolicyMock.register",
      "jump": "i",
      "offset": [
        3605,
        3644
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1107": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3605,
        3644
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1108": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3553,
        3651
      ],
      "op": "POP",
      "path": "29"
    },
    "1109": {
      "fn": "StakingEscrowForPolicyMock.register",
      "jump": "o",
      "offset": [
        3553,
        3651
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1110": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1111": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3738,
        3751
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1113": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3763,
        3924
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1114": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3787,
        3795
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "1116": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3787,
        3802
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1117": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3779,
        3802
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1118": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3779,
        3802
      ],
      "op": "LT",
      "path": "29"
    },
    "1119": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3763,
        3924
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1120": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3763,
        3924
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x49D"
    },
    "1123": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3763,
        3924
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1124": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3850
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "1126": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3851,
        3856
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1127": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1128": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1129": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1130": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "LT",
      "path": "29"
    },
    "1131": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x470"
    },
    "1134": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1135": {
      "dev": "Index out of range",
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "INVALID",
      "path": "29"
    },
    "1136": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1137": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1139": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1140": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1141": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1142": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1144": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1145": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1146": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "1147": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3857
      ],
      "op": "ADD",
      "path": "29"
    },
    "1148": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3867
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1149": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3867
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "1152": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3867
      ],
      "op": "PUSH3",
      "path": "29",
      "value": "0x10000"
    },
    "1156": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3867
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1157": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3867
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1158": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3867
      ],
      "op": "DIV",
      "path": "29"
    },
    "1159": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3867
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1160": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3842,
        3867
      ],
      "op": "AND",
      "path": "29"
    },
    "1161": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3831,
        3867
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1162": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3831,
        3867
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1163": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3831,
        3867
      ],
      "op": "AND",
      "path": "29"
    },
    "1164": {
      "branch": 17,
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3831,
        3867
      ],
      "op": "GT",
      "path": "29"
    },
    "1165": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3827,
        3914
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x495"
    },
    "1168": {
      "branch": 17,
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3827,
        3914
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1169": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3887,
        3899
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 3,
      "value": "0x49D"
    },
    "1172": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3887,
        3899
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1173": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3827,
        3914
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1174": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3804,
        3811
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 4,
      "value": "0x1"
    },
    "1176": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3804,
        3811
      ],
      "op": "ADD",
      "path": "29"
    },
    "1177": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3763,
        3924
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x459"
    },
    "1180": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3763,
        3924
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1181": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3763,
        3924
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1182": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1183": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1184": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "POP",
      "path": "29"
    },
    "1185": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        3657,
        3930
      ],
      "op": "POP",
      "path": "29"
    },
    "1186": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "jump": "o",
      "offset": [
        3657,
        3930
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1187": {
      "offset": [
        1234,
        1260
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1188": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "1190": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1191": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1192": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1193": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1194": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "LT",
      "path": "29"
    },
    "1195": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4B0"
    },
    "1198": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1199": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "INVALID",
      "path": "29"
    },
    "1200": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1201": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1203": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1204": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1205": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1206": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1208": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1209": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1210": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "1211": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "ADD",
      "path": "29"
    },
    "1212": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1213": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "1216": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1217": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1218": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "AND",
      "path": "29"
    },
    "1219": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1220": {
      "op": "POP"
    },
    "1221": {
      "offset": [
        1234,
        1260
      ],
      "op": "PUSH3",
      "path": "29",
      "value": "0x10000"
    },
    "1225": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1226": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1227": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "DIV",
      "path": "29"
    },
    "1228": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "AND",
      "path": "29"
    },
    "1229": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1234,
        1260
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1230": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "jump": "o",
      "offset": [
        1234,
        1260
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1231": {
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1232": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1234": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1239": {
      "op": "SHL"
    },
    "1240": {
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1241": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1195,
        1228
      ],
      "op": "DIV",
      "path": "29"
    },
    "1242": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "1245": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1195,
        1228
      ],
      "op": "AND",
      "path": "29"
    },
    "1246": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1247": {
      "fn": "StakingEscrowForPolicyMock.findIndexOfPastDowntime",
      "jump": "o",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1248": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1249": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3515
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 5,
      "value": "0x0"
    },
    "1251": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3515
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1252": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3515
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1253": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1255": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1256": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1257": {
      "op": "PUSH4",
      "value": "0x72BE8D8D"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1266": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1273": {
      "op": "SHL"
    },
    "1274": {
      "op": "SUB"
    },
    "1275": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "DUP7",
      "path": "29"
    },
    "1276": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1277": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "AND",
      "path": "29"
    },
    "1278": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1280": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1281": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "ADD",
      "path": "29"
    },
    "1282": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1283": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "1286": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "DUP7",
      "path": "29"
    },
    "1287": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "AND",
      "path": "29"
    },
    "1288": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "1290": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1291": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "ADD",
      "path": "29"
    },
    "1292": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1293": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1294": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1295": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3515
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1296": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3515
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1297": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3515
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1298": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3515
      ],
      "op": "AND",
      "path": "29"
    },
    "1299": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3515
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1300": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3524
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x72BE8D8D"
    },
    "1305": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3524
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1306": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x44"
    },
    "1308": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1309": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1310": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "ADD",
      "path": "29"
    },
    "1311": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1312": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1313": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1314": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1315": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "SUB",
      "path": "29"
    },
    "1316": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "ADD",
      "path": "29"
    },
    "1317": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1318": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3515
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1319": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3515
      ],
      "op": "DUP8",
      "path": "29"
    },
    "1320": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1321": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "EXTCODESIZE",
      "path": "29"
    },
    "1322": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1323": {
      "op": "DUP1"
    },
    "1324": {
      "op": "ISZERO"
    },
    "1325": {
      "op": "PUSH2",
      "value": "0x535"
    },
    "1328": {
      "op": "JUMPI"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1331": {
      "op": "DUP1"
    },
    "1332": {
      "op": "REVERT"
    },
    "1333": {
      "op": "JUMPDEST"
    },
    "1334": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "POP",
      "path": "29"
    },
    "1335": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "GAS",
      "path": "29"
    },
    "1336": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "CALL",
      "path": "29"
    },
    "1337": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1338": {
      "op": "DUP1"
    },
    "1339": {
      "op": "ISZERO"
    },
    "1340": {
      "op": "PUSH2",
      "value": "0x549"
    },
    "1343": {
      "op": "JUMPI"
    },
    "1344": {
      "op": "RETURNDATASIZE"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1347": {
      "op": "DUP1"
    },
    "1348": {
      "op": "RETURNDATACOPY"
    },
    "1349": {
      "op": "RETURNDATASIZE"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1352": {
      "op": "REVERT"
    },
    "1353": {
      "op": "JUMPDEST"
    },
    "1354": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "POP",
      "path": "29"
    },
    "1355": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "POP",
      "path": "29"
    },
    "1356": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "POP",
      "path": "29"
    },
    "1357": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3502,
        3540
      ],
      "op": "POP",
      "path": "29"
    },
    "1358": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "POP",
      "path": "29"
    },
    "1359": {
      "fn": "StakingEscrowForPolicyMock.register",
      "offset": [
        3436,
        3547
      ],
      "op": "POP",
      "path": "29"
    },
    "1360": {
      "fn": "StakingEscrowForPolicyMock.register",
      "jump": "o",
      "offset": [
        3436,
        3547
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1361": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1362": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2342,
        2350
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1364": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2337,
        2458
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1365": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2360,
        2376
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1366": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2356,
        2376
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "1369": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2356,
        2376
      ],
      "op": "AND",
      "path": "29"
    },
    "1370": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2356,
        2357
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1371": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2356,
        2376
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "1374": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2356,
        2376
      ],
      "op": "AND",
      "path": "29"
    },
    "1375": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2356,
        2376
      ],
      "op": "LT",
      "path": "29"
    },
    "1376": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2337,
        2458
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1377": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2337,
        2458
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x5DF"
    },
    "1380": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2337,
        2458
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1381": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2410
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 6,
      "value": "0x0"
    },
    "1383": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2410
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1384": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2410
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1385": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1387": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1388": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1389": {
      "op": "PUSH4",
      "value": "0x3EA2391F"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1396": {
      "op": "SHL"
    },
    "1397": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1398": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1405": {
      "op": "SHL"
    },
    "1406": {
      "op": "SUB"
    },
    "1407": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "DUP9",
      "path": "29"
    },
    "1408": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1409": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "AND",
      "path": "29"
    },
    "1410": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1412": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1413": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "ADD",
      "path": "29"
    },
    "1414": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1415": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "1418": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2430,
        2446
      ],
      "op": "DUP7",
      "path": "29"
    },
    "1419": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2430,
        2446
      ],
      "op": "DUP10",
      "path": "29"
    },
    "1420": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2430,
        2446
      ],
      "op": "ADD",
      "path": "29"
    },
    "1421": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "AND",
      "path": "29"
    },
    "1422": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "1424": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1425": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "ADD",
      "path": "29"
    },
    "1426": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1427": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1428": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1429": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2410
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1430": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2410
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1431": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2410
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1432": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2410
      ],
      "op": "AND",
      "path": "29"
    },
    "1433": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2410
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1434": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2420
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x3EA2391F"
    },
    "1439": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2420
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1440": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x44"
    },
    "1442": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1443": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1444": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "ADD",
      "path": "29"
    },
    "1445": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1446": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1447": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1448": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1449": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "SUB",
      "path": "29"
    },
    "1450": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "ADD",
      "path": "29"
    },
    "1451": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1452": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2410
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1453": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2410
      ],
      "op": "DUP8",
      "path": "29"
    },
    "1454": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1455": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "EXTCODESIZE",
      "path": "29"
    },
    "1456": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1457": {
      "op": "DUP1"
    },
    "1458": {
      "op": "ISZERO"
    },
    "1459": {
      "op": "PUSH2",
      "value": "0x5BB"
    },
    "1462": {
      "op": "JUMPI"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1465": {
      "op": "DUP1"
    },
    "1466": {
      "op": "REVERT"
    },
    "1467": {
      "op": "JUMPDEST"
    },
    "1468": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "POP",
      "path": "29"
    },
    "1469": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "GAS",
      "path": "29"
    },
    "1470": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "CALL",
      "path": "29"
    },
    "1471": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2397,
        2447
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1472": {
      "op": "DUP1"
    },
    "1473": {
      "op": "ISZERO"
    },
    "1474": {
      "op": "PUSH2",
      "value": "0x5CF"
    },
    "1477": {
      "op": "JUMPI"
    },
    "1478": {
      "op": "RETURNDATASIZE"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1481": {
      "op": "DUP1"
    },
    "1482": {
      "op": "RETURNDATACOPY"
    },
    "1483": {
      "op": "RETURNDATASIZE"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1486": {
      "op": "REVERT"
    },
    "1487": {
      "op": "JUMPDEST"
    },
    "1488": {
      "op": "POP"
    },
    "1489": {
      "op": "POP"
    },
    "1490": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2378,
        2381
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 7,
      "value": "0x1"
    },
    "1492": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2378,
        2381
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1493": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2378,
        2381
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1494": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2378,
        2381
      ],
      "op": "ADD",
      "path": "29"
    },
    "1495": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2378,
        2381
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1496": {
      "op": "POP"
    },
    "1497": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2337,
        2458
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x554"
    },
    "1500": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2337,
        2458
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1501": {
      "op": "POP"
    },
    "1502": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2337,
        2458
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1503": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2337,
        2458
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1504": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2337,
        2458
      ],
      "op": "POP",
      "path": "29"
    },
    "1505": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "POP",
      "path": "29"
    },
    "1506": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "POP",
      "path": "29"
    },
    "1507": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "offset": [
        2243,
        2464
      ],
      "op": "POP",
      "path": "29"
    },
    "1508": {
      "fn": "StakingEscrowForPolicyMock.mint",
      "jump": "o",
      "offset": [
        2243,
        2464
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1509": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3056,
        3310
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1510": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3135,
        3153
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1512": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3155,
        3171
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1513": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3187,
        3208
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1515": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3219
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "1517": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3220,
        3226
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1518": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1519": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1520": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1521": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "LT",
      "path": "29"
    },
    "1522": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x5F7"
    },
    "1525": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1526": {
      "dev": "Index out of range",
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "INVALID",
      "path": "29"
    },
    "1527": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1528": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1530": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1531": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1532": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1533": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1535": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1536": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1537": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "1538": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3211,
        3227
      ],
      "op": "ADD",
      "path": "29"
    },
    "1539": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3251,
        3267
      ],
      "op": "SLOAD",
      "path": "29",
      "statement": 8
    },
    "1540": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3251,
        3267
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "1543": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3251,
        3267
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1544": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3251,
        3267
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1545": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3251,
        3267
      ],
      "op": "AND",
      "path": "29"
    },
    "1546": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3251,
        3267
      ],
      "op": "SWAP8",
      "path": "29"
    },
    "1547": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3289,
        3303
      ],
      "op": "PUSH3",
      "path": "29",
      "statement": 9,
      "value": "0x10000"
    },
    "1551": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3289,
        3303
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1552": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3289,
        3303
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1553": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3289,
        3303
      ],
      "op": "DIV",
      "path": "29"
    },
    "1554": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3289,
        3303
      ],
      "op": "AND",
      "path": "29"
    },
    "1555": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3289,
        3303
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "1556": {
      "op": "POP"
    },
    "1557": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "offset": [
        3056,
        3310
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1558": {
      "op": "POP"
    },
    "1559": {
      "op": "POP"
    },
    "1560": {
      "op": "POP"
    },
    "1561": {
      "op": "POP"
    },
    "1562": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntime",
      "jump": "o",
      "offset": [
        3056,
        3310
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1563": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntimeLength",
      "offset": [
        2941,
        3050
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1564": {
      "op": "POP"
    },
    "1565": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntimeLength",
      "offset": [
        3028,
        3036
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 10,
      "value": "0x1"
    },
    "1567": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntimeLength",
      "offset": [
        3028,
        3043
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1568": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntimeLength",
      "offset": [
        3028,
        3043
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1569": {
      "fn": "StakingEscrowForPolicyMock.getPastDowntimeLength",
      "jump": "o",
      "offset": [
        2941,
        3050
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1570": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3316,
        3430
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1571": {
      "op": "POP"
    },
    "1572": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3378,
        3385
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1574": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3404,
        3423
      ],
      "op": "SLOAD",
      "path": "29",
      "statement": 11
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1579": {
      "op": "SHL"
    },
    "1580": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3404,
        3423
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1581": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3404,
        3423
      ],
      "op": "DIV",
      "path": "29"
    },
    "1582": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3404,
        3423
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "1585": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3404,
        3423
      ],
      "op": "AND",
      "path": "29"
    },
    "1586": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        3404,
        3423
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1587": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "jump": "o",
      "offset": [
        3316,
        3430
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1588": {
      "offset": [
        1155,
        1189
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1589": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1591": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1598": {
      "op": "SHL"
    },
    "1599": {
      "op": "SUB"
    },
    "1600": {
      "offset": [
        1155,
        1189
      ],
      "op": "AND",
      "path": "29"
    },
    "1601": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "offset": [
        1155,
        1189
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1602": {
      "fn": "StakingEscrowForPolicyMock.getLastCommittedPeriod",
      "jump": "o",
      "offset": [
        1155,
        1189
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1603": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        3936,
        4176
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1604": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4047,
        4055
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1606": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4042,
        4170
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1607": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4065,
        4081
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1608": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4061,
        4081
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "1611": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4061,
        4081
      ],
      "op": "AND",
      "path": "29"
    },
    "1612": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4061,
        4062
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1613": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4061,
        4081
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "1616": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4061,
        4081
      ],
      "op": "AND",
      "path": "29"
    },
    "1617": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4061,
        4081
      ],
      "op": "LT",
      "path": "29"
    },
    "1618": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4042,
        4170
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1619": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4042,
        4170
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x5DF"
    },
    "1622": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4042,
        4170
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1623": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4115
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 12,
      "value": "0x0"
    },
    "1625": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4115
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1626": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4115
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1627": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1629": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1630": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1631": {
      "op": "PUSH4",
      "value": "0xB438C4CD"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1638": {
      "op": "SHL"
    },
    "1639": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1640": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1647": {
      "op": "SHL"
    },
    "1648": {
      "op": "SUB"
    },
    "1649": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "DUP9",
      "path": "29"
    },
    "1650": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1651": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "AND",
      "path": "29"
    },
    "1652": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1654": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1655": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "ADD",
      "path": "29"
    },
    "1656": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1657": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "1660": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4142,
        4158
      ],
      "op": "DUP7",
      "path": "29"
    },
    "1661": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4142,
        4158
      ],
      "op": "DUP10",
      "path": "29"
    },
    "1662": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4142,
        4158
      ],
      "op": "ADD",
      "path": "29"
    },
    "1663": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "AND",
      "path": "29"
    },
    "1664": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "1666": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1667": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "ADD",
      "path": "29"
    },
    "1668": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1669": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1670": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1671": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4115
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1672": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4115
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1673": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4115
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1674": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4115
      ],
      "op": "AND",
      "path": "29"
    },
    "1675": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4115
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1676": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4134
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xB438C4CD"
    },
    "1681": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4134
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1682": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x44"
    },
    "1684": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1685": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1686": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "ADD",
      "path": "29"
    },
    "1687": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1688": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1689": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1690": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1691": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "SUB",
      "path": "29"
    },
    "1692": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "ADD",
      "path": "29"
    },
    "1693": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1694": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4115
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1695": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4115
      ],
      "op": "DUP8",
      "path": "29"
    },
    "1696": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1697": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "EXTCODESIZE",
      "path": "29"
    },
    "1698": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1699": {
      "op": "DUP1"
    },
    "1700": {
      "op": "ISZERO"
    },
    "1701": {
      "op": "PUSH2",
      "value": "0x6AD"
    },
    "1704": {
      "op": "JUMPI"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1707": {
      "op": "DUP1"
    },
    "1708": {
      "op": "REVERT"
    },
    "1709": {
      "op": "JUMPDEST"
    },
    "1710": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "POP",
      "path": "29"
    },
    "1711": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "GAS",
      "path": "29"
    },
    "1712": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "CALL",
      "path": "29"
    },
    "1713": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4102,
        4159
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1714": {
      "op": "DUP1"
    },
    "1715": {
      "op": "ISZERO"
    },
    "1716": {
      "op": "PUSH2",
      "value": "0x6C1"
    },
    "1719": {
      "op": "JUMPI"
    },
    "1720": {
      "op": "RETURNDATASIZE"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1723": {
      "op": "DUP1"
    },
    "1724": {
      "op": "RETURNDATACOPY"
    },
    "1725": {
      "op": "RETURNDATASIZE"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1728": {
      "op": "REVERT"
    },
    "1729": {
      "op": "JUMPDEST"
    },
    "1730": {
      "op": "POP"
    },
    "1731": {
      "op": "POP"
    },
    "1732": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4083,
        4086
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 13,
      "value": "0x1"
    },
    "1734": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4083,
        4086
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1735": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4083,
        4086
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1736": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4083,
        4086
      ],
      "op": "ADD",
      "path": "29"
    },
    "1737": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4083,
        4086
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1738": {
      "op": "POP"
    },
    "1739": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4042,
        4170
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x646"
    },
    "1742": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4042,
        4170
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1743": {
      "op": "POP"
    },
    "1744": {
      "fn": "StakingEscrowForPolicyMock.setDefaultFeeDelta",
      "offset": [
        4042,
        4170
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1745": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2823,
        2935
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1746": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2898,
        2911
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 14,
      "value": "0x0"
    },
    "1748": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2898,
        2928
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1749": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2898,
        2928
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1756": {
      "op": "SHL"
    },
    "1757": {
      "op": "SUB"
    },
    "1758": {
      "op": "NOT"
    },
    "1759": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2898,
        2928
      ],
      "op": "AND",
      "path": "29"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1766": {
      "op": "SHL"
    },
    "1767": {
      "op": "SUB"
    },
    "1768": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2898,
        2928
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1769": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2898,
        2928
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1770": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2898,
        2928
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1771": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2898,
        2928
      ],
      "op": "AND",
      "path": "29"
    },
    "1772": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2898,
        2928
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1773": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2898,
        2928
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1774": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2898,
        2928
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1775": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2898,
        2928
      ],
      "op": "OR",
      "path": "29"
    },
    "1776": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2898,
        2928
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1777": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "offset": [
        2898,
        2928
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "1778": {
      "fn": "StakingEscrowForPolicyMock.setPolicyManager",
      "jump": "o",
      "offset": [
        2823,
        2935
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1779": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1875,
        2018
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1780": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 15,
      "value": "0x40"
    },
    "1782": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1783": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1784": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1785": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1786": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "ADD",
      "path": "29"
    },
    "1787": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1788": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1789": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1790": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "1793": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1794": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1795": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "AND",
      "path": "29"
    },
    "1796": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1797": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1798": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1799": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1800": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "AND",
      "path": "29"
    },
    "1801": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1803": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1804": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "ADD",
      "path": "29"
    },
    "1805": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1806": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1807": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1976,
        2010
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1808": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        1970
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "1810": {
      "op": "DUP1"
    },
    "1811": {
      "op": "SLOAD"
    },
    "1812": {
      "op": "DUP1"
    },
    "1813": {
      "op": "DUP3"
    },
    "1814": {
      "op": "ADD"
    },
    "1815": {
      "op": "DUP3"
    },
    "1816": {
      "op": "SSTORE"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1819": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1820": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1821": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1822": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1823": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1824": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1825": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "1858": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1859": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1860": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "ADD",
      "path": "29"
    },
    "1861": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1862": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1863": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1864": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1865": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "1868": {
      "op": "NOT"
    },
    "1869": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1870": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1871": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "AND",
      "path": "29"
    },
    "1872": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1873": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1874": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "AND",
      "path": "29"
    },
    "1875": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1876": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1877": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1878": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "OR",
      "path": "29"
    },
    "1879": {
      "op": "PUSH4",
      "value": "0xFFFF0000"
    },
    "1884": {
      "op": "NOT"
    },
    "1885": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "AND",
      "path": "29"
    },
    "1886": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "PUSH3",
      "path": "29",
      "value": "0x10000"
    },
    "1890": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1891": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1892": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1893": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "AND",
      "path": "29"
    },
    "1894": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "MUL",
      "path": "29"
    },
    "1895": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1896": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1897": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1898": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "OR",
      "path": "29"
    },
    "1899": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1900": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "offset": [
        1962,
        2011
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "1901": {
      "fn": "StakingEscrowForPolicyMock.pushDowntimePeriod",
      "jump": "o",
      "offset": [
        1875,
        2018
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1902": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1691,
        1820
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1903": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 16,
      "value": "0x0"
    },
    "1905": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1813
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1906": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1813
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1907": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1813
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFFF"
    },
    "1910": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1813
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1911": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1813
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1912": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1813
      ],
      "op": "AND",
      "path": "29"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1917": {
      "op": "SHL"
    },
    "1918": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1813
      ],
      "op": "MUL",
      "path": "29"
    },
    "1919": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1924": {
      "op": "SHL"
    },
    "1925": {
      "op": "NOT"
    },
    "1926": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1813
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1927": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1813
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1928": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1813
      ],
      "op": "AND",
      "path": "29"
    },
    "1929": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1813
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1930": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1813
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1931": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1813
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1932": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1813
      ],
      "op": "OR",
      "path": "29"
    },
    "1933": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1813
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1934": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "offset": [
        1771,
        1813
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "1935": {
      "fn": "StakingEscrowForPolicyMock.setLastCommittedPeriod",
      "jump": "o",
      "offset": [
        1691,
        1820
      ],
      "op": "JUMP",
      "path": "29"
    }
  },
  "sha1": "bd49faddac36a46d42f43d33fd6d5630b367ca80",
  "source": "pragma solidity ^0.6.5;\n\n\nimport \"contracts/PolicyManager.sol\";\nimport \"contracts/StakingEscrow.sol\";\n\n\n/**\n* @notice Upgrade to this contract must lead to fail\n*/\ncontract PolicyManagerBad is PolicyManager {\n\n    constructor(StakingEscrow _escrow) public PolicyManager(_escrow) {\n    }\n\n    function getNodeFeeDelta(address, uint16) public view override returns (int256) {}\n\n}\n\n\n/**\n* @notice Contract for testing upgrading the PolicyManager contract\n*/\ncontract PolicyManagerV2Mock is PolicyManager {\n\n    uint256 public valueToCheck;\n\n    constructor(StakingEscrow _escrow) public PolicyManager(_escrow) {\n    }\n\n    function setValueToCheck(uint256 _valueToCheck) public {\n        valueToCheck = _valueToCheck;\n    }\n\n    function verifyState(address _testTarget) public override {\n        super.verifyState(_testTarget);\n        require(delegateGet(_testTarget, this.valueToCheck.selector) == valueToCheck);\n    }\n}\n\n\n/**\n* @notice Contract for using in PolicyManager tests\n*/\ncontract StakingEscrowForPolicyMock {\n\n    struct Downtime {\n        uint16 startPeriod;\n        uint16 endPeriod;\n    }\n\n    uint32 public immutable secondsPerPeriod;\n\n    PolicyManager public policyManager;\n    uint16 public lastCommittedPeriod;\n    Downtime[] public downtime;\n\n    /**\n    * @param _hoursPerPeriod Size of period in hours\n    */\n    constructor(uint16 _hoursPerPeriod) public {\n        secondsPerPeriod = uint32(_hoursPerPeriod * 1 hours);\n    }\n\n    /**\n    * @return Number of current period\n    */\n    function getCurrentPeriod() public view returns (uint16) {\n        return uint16(block.timestamp / secondsPerPeriod);\n    }\n\n    /**\n    * @notice Set last committed period\n    */\n    function setLastCommittedPeriod(uint16 _lastCommittedPeriod) external {\n        lastCommittedPeriod = _lastCommittedPeriod;\n    }\n\n    /**\n    * @notice Add downtime period\n    */\n    function pushDowntimePeriod(uint16 _startPeriod, uint16 _endPeriod) external {\n        downtime.push(Downtime(_startPeriod, _endPeriod));\n    }\n\n    /**\n    * @notice Emulate mint method\n    * @param _staker Staker on behalf of whom minting will be\n    * @param _startPeriod Start period for minting\n    * @param _numberOfPeriods Number periods for minting\n    */\n    function mint(address _staker, uint16 _startPeriod, uint16 _numberOfPeriods) public {\n        for (uint16 i = 0; i < _numberOfPeriods; i++) {\n            policyManager.updateFee(_staker, i + _startPeriod);\n        }\n    }\n\n    /**\n    * @notice Emulate mint method\n    * @param _startPeriod Start period for minting\n    * @param _numberOfPeriods Number periods for minting\n    */\n    function mint(uint16 _startPeriod, uint16 _numberOfPeriods) external {\n        mint(msg.sender, _startPeriod, _numberOfPeriods);\n    }\n\n    /**\n    * @notice Set policy manager address\n    */\n    function setPolicyManager(PolicyManager _policyManager) external {\n        policyManager = _policyManager;\n    }\n\n    function getPastDowntimeLength(address) public view returns (uint256) {\n        return downtime.length;\n    }\n\n    function getPastDowntime(address, uint256 _index)\n        public view returns (uint16 startPeriod, uint16 endPeriod)\n    {\n        Downtime storage data = downtime[_index];\n        startPeriod = data.startPeriod;\n        endPeriod = data.endPeriod;\n    }\n\n    function getLastCommittedPeriod(address) public view returns (uint256) {\n        return lastCommittedPeriod;\n    }\n\n    function register(address _node, uint16 _period) public {\n        policyManager.register(_node, _period);\n    }\n\n    function register(address _node) external {\n        register(_node, getCurrentPeriod() - 1);\n    }\n\n    function findIndexOfPastDowntime(address, uint16 _period) external view returns (uint256 index) {\n        for (index = 0; index < downtime.length; index++) {\n            if (_period <= downtime[index].endPeriod) {\n                return index;\n            }\n        }\n    }\n\n    function setDefaultFeeDelta(address _node, uint16 _startPeriod, uint16 _numberOfPeriods) public {\n        for (uint16 i = 0; i < _numberOfPeriods; i++) {\n            policyManager.setDefaultFeeDelta(_node, i + _startPeriod);\n        }\n    }\n\n}\n\n\n/**\n* @notice Helper to prepare broken state\n*/\ncontract ExtendedPolicyManager is PolicyManager {\n\n    constructor(StakingEscrow _escrow) public PolicyManager(_escrow) {\n    }\n\n    function setNodeFeeDelta(address _node, uint16 _period, int256 _value) external {\n        NodeInfo storage node = nodes[_node];\n        node.feeDelta[_period] = _value;\n    }\n}\n",
  "sourceMap": "982:3197:29:-:0;;;1335:112;5:9:-1;2:2;;;27:1;24;17:12;2:2;1335:112:29;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1335:112:29;1432:7;1414:25;1388:52;;;;-1:-1:-1;;;1388:52:29;;;982:3197;;;;;;;;;",
  "sourcePath": "contracts/PolicyManagerTestSet.sol",
  "type": "contract"
}