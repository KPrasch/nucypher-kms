{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_capsuleBytes",
          "type": "bytes"
        }
      ],
      "name": "toCapsule",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "pointESign",
          "type": "bytes1"
        },
        {
          "internalType": "bytes32",
          "name": "pointEXCoord",
          "type": "bytes32"
        },
        {
          "internalType": "bytes1",
          "name": "pointVSign",
          "type": "bytes1"
        },
        {
          "internalType": "bytes32",
          "name": "pointVXCoord",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "bnSig",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_cFragBytes",
          "type": "bytes"
        }
      ],
      "name": "toCapsuleFrag",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "pointE1Sign",
          "type": "bytes1"
        },
        {
          "internalType": "bytes32",
          "name": "pointE1XCoord",
          "type": "bytes32"
        },
        {
          "internalType": "bytes1",
          "name": "pointV1Sign",
          "type": "bytes1"
        },
        {
          "internalType": "bytes32",
          "name": "pointV1XCoord",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "kFragId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes1",
          "name": "pointPrecursorSign",
          "type": "bytes1"
        },
        {
          "internalType": "bytes32",
          "name": "pointPrecursorXCoord",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proofBytes",
          "type": "bytes"
        }
      ],
      "name": "toCorrectnessProof",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "pointE2Sign",
          "type": "bytes1"
        },
        {
          "internalType": "bytes32",
          "name": "pointE2XCoord",
          "type": "bytes32"
        },
        {
          "internalType": "bytes1",
          "name": "pointV2Sign",
          "type": "bytes1"
        },
        {
          "internalType": "bytes32",
          "name": "pointV2XCoord",
          "type": "bytes32"
        },
        {
          "internalType": "bytes1",
          "name": "pointKFragCommitmentSign",
          "type": "bytes1"
        },
        {
          "internalType": "bytes32",
          "name": "pointKFragCommitmentXCoord",
          "type": "bytes32"
        },
        {
          "internalType": "bytes1",
          "name": "pointKFragPokSign",
          "type": "bytes1"
        },
        {
          "internalType": "bytes32",
          "name": "pointKFragPokXCoord",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "bnSig",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "kFragSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_cFragBytes",
          "type": "bytes"
        }
      ],
      "name": "toCorrectnessProofFromCapsuleFrag",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "pointE2Sign",
          "type": "bytes1"
        },
        {
          "internalType": "bytes32",
          "name": "pointE2XCoord",
          "type": "bytes32"
        },
        {
          "internalType": "bytes1",
          "name": "pointV2Sign",
          "type": "bytes1"
        },
        {
          "internalType": "bytes32",
          "name": "pointV2XCoord",
          "type": "bytes32"
        },
        {
          "internalType": "bytes1",
          "name": "pointKFragCommitmentSign",
          "type": "bytes1"
        },
        {
          "internalType": "bytes32",
          "name": "pointKFragCommitmentXCoord",
          "type": "bytes32"
        },
        {
          "internalType": "bytes1",
          "name": "pointKFragPokSign",
          "type": "bytes1"
        },
        {
          "internalType": "bytes32",
          "name": "pointKFragPokXCoord",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "bnSig",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "kFragSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "12": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/lib/UmbralDeserializer.sol",
    "28": "contracts/LibTestSet.sol"
  },
  "ast": {
    "absolutePath": "contracts/LibTestSet.sol",
    "exportedSymbols": {
      "ReEncryptionValidatorMock": [
        1106
      ],
      "SignatureVerifierMock": [
        432
      ],
      "SnapshotMock": [
        1212
      ],
      "UmbralDeserializerMock": [
        851
      ]
    },
    "id": 1213,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 321,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:28"
      },
      {
        "absolutePath": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/lib/SignatureVerifier.sol",
        "file": "contracts/lib/SignatureVerifier.sol",
        "id": 322,
        "nodeType": "ImportDirective",
        "scope": 1213,
        "sourceUnit": 11163,
        "src": "26:45:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/lib/Snapshot.sol",
        "file": "contracts/lib/Snapshot.sol",
        "id": 323,
        "nodeType": "ImportDirective",
        "scope": 1213,
        "sourceUnit": 13517,
        "src": "72:36:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/lib/UmbralDeserializer.sol",
        "file": "contracts/lib/UmbralDeserializer.sol",
        "id": 324,
        "nodeType": "ImportDirective",
        "scope": 1213,
        "sourceUnit": 14381,
        "src": "109:46:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/k/Git/nucypher/nucypher/blockchain/eth/sol/source/contracts/lib/ReEncryptionValidator.sol",
        "file": "contracts/lib/ReEncryptionValidator.sol",
        "id": 325,
        "nodeType": "ImportDirective",
        "scope": 1213,
        "sourceUnit": 13157,
        "src": "156:49:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 326,
          "nodeType": "StructuredDocumentation",
          "src": "207:61:28",
          "text": "@notice Contract for using SignatureVerifier library"
        },
        "fullyImplemented": true,
        "id": 432,
        "linearizedBaseContracts": [
          432
        ],
        "name": "SignatureVerifierMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "422:68:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 337,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "465:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 338,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 330,
                        "src": "472:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 335,
                        "name": "SignatureVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11162,
                        "src": "439:17:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignatureVerifier_$11162_$",
                          "typeString": "type(library SignatureVerifier)"
                        }
                      },
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10889,
                      "src": "439:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "439:44:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 334,
                  "id": 340,
                  "nodeType": "Return",
                  "src": "432:51:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "19045a25",
            "id": 342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recover",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 342,
                  "src": "324:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 342,
                  "src": "339:23:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "339:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "323:40:28"
            },
            "returnParameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 333,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 342,
                  "src": "409:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "409:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "408:9:28"
            },
            "scope": 432,
            "src": "307:183:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "570:63:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 351,
                        "name": "_publicKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "615:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 349,
                        "name": "SignatureVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11162,
                        "src": "587:17:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignatureVerifier_$11162_$",
                          "typeString": "type(library SignatureVerifier)"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10911,
                      "src": "587:27:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes memory) pure returns (address)"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "587:39:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 348,
                  "id": 353,
                  "nodeType": "Return",
                  "src": "580:46:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2d888869",
            "id": 355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 344,
                  "mutability": "mutable",
                  "name": "_publicKey",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 355,
                  "src": "515:23:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "514:25:28"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 355,
                  "src": "561:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "560:9:28"
            },
            "scope": 432,
            "src": "496:137:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 370,
              "nodeType": "Block",
              "src": "785:68:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 366,
                        "name": "_message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "825:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 367,
                        "name": "_algorithm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "835:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_HashAlgorithm_$10832",
                          "typeString": "enum SignatureVerifier.HashAlgorithm"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_HashAlgorithm_$10832",
                          "typeString": "enum SignatureVerifier.HashAlgorithm"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 364,
                        "name": "SignatureVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11162,
                        "src": "802:17:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignatureVerifier_$11162_$",
                          "typeString": "type(library SignatureVerifier)"
                        }
                      },
                      "id": 365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10953,
                      "src": "802:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_enum$_HashAlgorithm_$10832_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory,enum SignatureVerifier.HashAlgorithm) pure returns (bytes32)"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "802:44:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 363,
                  "id": 369,
                  "nodeType": "Return",
                  "src": "795:51:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1c932c58",
            "id": 371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hash",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "_message",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 371,
                  "src": "653:21:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 359,
                  "mutability": "mutable",
                  "name": "_algorithm",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 371,
                  "src": "676:42:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_HashAlgorithm_$10832",
                    "typeString": "enum SignatureVerifier.HashAlgorithm"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 358,
                    "name": "SignatureVerifier.HashAlgorithm",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10832,
                    "src": "676:31:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_HashAlgorithm_$10832",
                      "typeString": "enum SignatureVerifier.HashAlgorithm"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "652:67:28"
            },
            "returnParameters": {
              "id": 363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 362,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 371,
                  "src": "765:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "765:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "764:16:28"
            },
            "scope": 432,
            "src": "639:214:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 392,
              "nodeType": "Block",
              "src": "1085:94:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 386,
                        "name": "_message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "1127:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 387,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 375,
                        "src": "1137:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 388,
                        "name": "_publicKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 377,
                        "src": "1149:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 389,
                        "name": "_algorithm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "1161:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_HashAlgorithm_$10832",
                          "typeString": "enum SignatureVerifier.HashAlgorithm"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_HashAlgorithm_$10832",
                          "typeString": "enum SignatureVerifier.HashAlgorithm"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 384,
                        "name": "SignatureVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11162,
                        "src": "1102:17:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignatureVerifier_$11162_$",
                          "typeString": "type(library SignatureVerifier)"
                        }
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10987,
                      "src": "1102:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_enum$_HashAlgorithm_$10832_$returns$_t_bool_$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,enum SignatureVerifier.HashAlgorithm) pure returns (bool)"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1102:70:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 383,
                  "id": 391,
                  "nodeType": "Return",
                  "src": "1095:77:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "715873ba",
            "id": 393,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 373,
                  "mutability": "mutable",
                  "name": "_message",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 393,
                  "src": "884:21:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "884:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 375,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 393,
                  "src": "915:23:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "915:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "_publicKey",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 393,
                  "src": "948:23:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "_algorithm",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 393,
                  "src": "981:42:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_HashAlgorithm_$10832",
                    "typeString": "enum SignatureVerifier.HashAlgorithm"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 378,
                    "name": "SignatureVerifier.HashAlgorithm",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10832,
                    "src": "981:31:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_HashAlgorithm_$10832",
                      "typeString": "enum SignatureVerifier.HashAlgorithm"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "874:155:28"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 393,
                  "src": "1075:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1074:6:28"
            },
            "scope": 432,
            "src": "859:320:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "1388:98:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 408,
                        "name": "_message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "1436:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 409,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "1446:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 410,
                        "name": "_publicKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "1458:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 411,
                        "name": "_version",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "1470:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 406,
                        "name": "SignatureVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11162,
                        "src": "1405:17:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignatureVerifier_$11162_$",
                          "typeString": "type(library SignatureVerifier)"
                        }
                      },
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verifyEIP191",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11161,
                      "src": "1405:30:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes1_$returns$_t_bool_$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes1) view returns (bool)"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:74:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 405,
                  "id": 413,
                  "nodeType": "Return",
                  "src": "1398:81:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0c3ff1c5",
            "id": 415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyEIP191",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "_message",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 415,
                  "src": "1216:21:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1216:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 415,
                  "src": "1247:23:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "_publicKey",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 415,
                  "src": "1280:23:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1280:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "_version",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 415,
                  "src": "1313:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1206:126:28"
            },
            "returnParameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 404,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 415,
                  "src": "1378:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1377:6:28"
            },
            "scope": 432,
            "src": "1185:301:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "1630:72:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 426,
                        "name": "_message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "1676:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "_version",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "1686:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 424,
                        "name": "SignatureVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11162,
                        "src": "1647:17:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignatureVerifier_$11162_$",
                          "typeString": "type(library SignatureVerifier)"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hashEIP191",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11127,
                      "src": "1647:28:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes1_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory,bytes1) view returns (bytes32)"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1647:48:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 423,
                  "id": 429,
                  "nodeType": "Return",
                  "src": "1640:55:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "53cb0f37",
            "id": 431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashEIP191",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "mutability": "mutable",
                  "name": "_message",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 431,
                  "src": "1521:21:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1521:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "_version",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 431,
                  "src": "1552:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "1552:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1511:60:28"
            },
            "returnParameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 422,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 431,
                  "src": "1617:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 421,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1616:9:28"
            },
            "scope": 432,
            "src": "1492:210:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1213,
        "src": "269:1436:28"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 433,
          "nodeType": "StructuredDocumentation",
          "src": "1708:61:28",
          "text": "@dev Contract for testing UmbralDeserializer library"
        },
        "fullyImplemented": true,
        "id": 851,
        "linearizedBaseContracts": [
          851
        ],
        "name": "UmbralDeserializerMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 436,
            "libraryName": {
              "contractScope": null,
              "id": 434,
              "name": "UmbralDeserializer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14380,
              "src": "1814:18:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UmbralDeserializer_$14380",
                "typeString": "library UmbralDeserializer"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1808:35:28",
            "typeName": {
              "id": 435,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1837:5:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "body": {
              "id": 503,
              "nodeType": "Block",
              "src": "2092:332:28",
              "statements": [
                {
                  "assignments": [
                    454
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 454,
                      "mutability": "mutable",
                      "name": "capsule",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 503,
                      "src": "2102:41:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Capsule_$13531_memory_ptr",
                        "typeString": "struct UmbralDeserializer.Capsule"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 453,
                        "name": "UmbralDeserializer.Capsule",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 13531,
                        "src": "2102:26:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Capsule_$13531_storage_ptr",
                          "typeString": "struct UmbralDeserializer.Capsule"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 458,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 455,
                        "name": "_capsuleBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "2146:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toCapsule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13702,
                      "src": "2146:23:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_Capsule_$13531_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (struct UmbralDeserializer.Capsule memory)"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2146:25:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Capsule_$13531_memory_ptr",
                      "typeString": "struct UmbralDeserializer.Capsule memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2102:69:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 459,
                      "name": "pointESign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "2181:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 462,
                              "name": "capsule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 454,
                              "src": "2199:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Capsule_$13531_memory_ptr",
                                "typeString": "struct UmbralDeserializer.Capsule memory"
                              }
                            },
                            "id": 463,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13526,
                            "src": "2199:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sign",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13521,
                          "src": "2199:19:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2194:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "byte",
                          "nodeType": "ElementaryTypeName",
                          "src": "2194:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2194:25:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "2181:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:38:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 468,
                      "name": "pointEXCoord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 443,
                      "src": "2229:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 471,
                              "name": "capsule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 454,
                              "src": "2252:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Capsule_$13531_memory_ptr",
                                "typeString": "struct UmbralDeserializer.Capsule memory"
                              }
                            },
                            "id": 472,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13526,
                            "src": "2252:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xCoord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13523,
                          "src": "2252:21:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2244:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 469,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2244:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2244:30:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2229:45:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "2229:45:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 477,
                      "name": "pointVSign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "2284:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 480,
                              "name": "capsule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 454,
                              "src": "2302:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Capsule_$13531_memory_ptr",
                                "typeString": "struct UmbralDeserializer.Capsule memory"
                              }
                            },
                            "id": 481,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointV",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13528,
                            "src": "2302:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sign",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13521,
                          "src": "2302:19:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2297:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "byte",
                          "nodeType": "ElementaryTypeName",
                          "src": "2297:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2297:25:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "2284:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "2284:38:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 486,
                      "name": "pointVXCoord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 447,
                      "src": "2332:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 489,
                              "name": "capsule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 454,
                              "src": "2355:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Capsule_$13531_memory_ptr",
                                "typeString": "struct UmbralDeserializer.Capsule memory"
                              }
                            },
                            "id": 490,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointV",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13528,
                            "src": "2355:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 491,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xCoord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13523,
                          "src": "2355:21:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2347:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 487,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2347:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2347:30:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2332:45:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "2332:45:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 495,
                      "name": "bnSig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 449,
                      "src": "2387:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 498,
                            "name": "capsule",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 454,
                            "src": "2403:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Capsule_$13531_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Capsule memory"
                            }
                          },
                          "id": 499,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bnSig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13530,
                          "src": "2403:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2395:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 496,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2395:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2395:22:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2387:30:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "2387:30:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4b23d91a",
            "id": 504,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toCapsule",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 438,
                  "mutability": "mutable",
                  "name": "_capsuleBytes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 504,
                  "src": "1868:26:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1868:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1867:28:28"
            },
            "returnParameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "pointESign",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 504,
                  "src": "1938:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "1938:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "pointEXCoord",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 504,
                  "src": "1967:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1967:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "pointVSign",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 504,
                  "src": "2001:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "2001:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "pointVXCoord",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 504,
                  "src": "2030:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "bnSig",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 504,
                  "src": "2064:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2064:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1924:163:28"
            },
            "scope": 851,
            "src": "1849:575:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 629,
              "nodeType": "Block",
              "src": "2928:708:28",
              "statements": [
                {
                  "assignments": [
                    534
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 534,
                      "mutability": "mutable",
                      "name": "proof",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 629,
                      "src": "2938:48:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                        "typeString": "struct UmbralDeserializer.CorrectnessProof"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 533,
                        "name": "UmbralDeserializer.CorrectnessProof",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 13546,
                        "src": "2938:35:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CorrectnessProof_$13546_storage_ptr",
                          "typeString": "struct UmbralDeserializer.CorrectnessProof"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 538,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 535,
                        "name": "_proofBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "2989:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toCorrectnessProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13830,
                      "src": "2989:30:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_CorrectnessProof_$13546_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (struct UmbralDeserializer.CorrectnessProof memory)"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2989:32:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                      "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2938:83:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 539,
                      "name": "pointE2Sign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 509,
                      "src": "3031:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 542,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "3050:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                              }
                            },
                            "id": 543,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointE2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13533,
                            "src": "3050:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sign",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13521,
                          "src": "3050:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3045:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": {
                          "id": 540,
                          "name": "byte",
                          "nodeType": "ElementaryTypeName",
                          "src": "3045:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3045:24:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "3031:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "3031:38:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 548,
                      "name": "pointE2XCoord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 511,
                      "src": "3079:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 551,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "3103:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                              }
                            },
                            "id": 552,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointE2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13533,
                            "src": "3103:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 553,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xCoord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13523,
                          "src": "3103:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3095:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 549,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3095:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3095:29:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3079:45:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 556,
                  "nodeType": "ExpressionStatement",
                  "src": "3079:45:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 557,
                      "name": "pointV2Sign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 513,
                      "src": "3134:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 560,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "3153:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                              }
                            },
                            "id": 561,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointV2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13535,
                            "src": "3153:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 562,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sign",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13521,
                          "src": "3153:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3148:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": {
                          "id": 558,
                          "name": "byte",
                          "nodeType": "ElementaryTypeName",
                          "src": "3148:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3148:24:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "3134:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 565,
                  "nodeType": "ExpressionStatement",
                  "src": "3134:38:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 566,
                      "name": "pointV2XCoord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 515,
                      "src": "3182:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 569,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "3206:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                              }
                            },
                            "id": 570,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointV2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13535,
                            "src": "3206:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xCoord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13523,
                          "src": "3206:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3198:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 567,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3198:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3198:29:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3182:45:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 574,
                  "nodeType": "ExpressionStatement",
                  "src": "3182:45:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 575,
                      "name": "pointKFragCommitmentSign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 517,
                      "src": "3237:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 578,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "3269:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                              }
                            },
                            "id": 579,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointKFragCommitment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13537,
                            "src": "3269:26:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 580,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sign",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13521,
                          "src": "3269:31:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3264:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": {
                          "id": 576,
                          "name": "byte",
                          "nodeType": "ElementaryTypeName",
                          "src": "3264:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3264:37:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "3237:64:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 583,
                  "nodeType": "ExpressionStatement",
                  "src": "3237:64:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 584,
                      "name": "pointKFragCommitmentXCoord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 519,
                      "src": "3311:26:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 587,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "3348:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                              }
                            },
                            "id": 588,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointKFragCommitment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13537,
                            "src": "3348:26:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xCoord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13523,
                          "src": "3348:33:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3340:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 585,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3340:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3340:42:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3311:71:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 592,
                  "nodeType": "ExpressionStatement",
                  "src": "3311:71:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 593,
                      "name": "pointKFragPokSign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "3392:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 596,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "3417:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                              }
                            },
                            "id": 597,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointKFragPok",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13539,
                            "src": "3417:19:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sign",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13521,
                          "src": "3417:24:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3412:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": {
                          "id": 594,
                          "name": "byte",
                          "nodeType": "ElementaryTypeName",
                          "src": "3412:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3412:30:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "3392:50:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 601,
                  "nodeType": "ExpressionStatement",
                  "src": "3392:50:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 602,
                      "name": "pointKFragPokXCoord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 523,
                      "src": "3452:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 605,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "3482:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                              }
                            },
                            "id": 606,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointKFragPok",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13539,
                            "src": "3482:19:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 607,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xCoord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13523,
                          "src": "3482:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3474:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 603,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3474:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3474:35:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3452:57:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "3452:57:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 611,
                      "name": "bnSig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 525,
                      "src": "3519:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 614,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "3535:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                              "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                            }
                          },
                          "id": 615,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bnSig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13541,
                          "src": "3535:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3527:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 612,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3527:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3527:20:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3519:28:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 618,
                  "nodeType": "ExpressionStatement",
                  "src": "3519:28:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 619,
                      "name": "kFragSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 527,
                      "src": "3557:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 620,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "3574:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                          "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                        }
                      },
                      "id": 621,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kFragSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13543,
                      "src": "3574:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "3557:37:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "3557:37:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 624,
                      "name": "metadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 529,
                      "src": "3604:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 625,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "3615:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                          "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                        }
                      },
                      "id": 626,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "metadata",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13545,
                      "src": "3615:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "3604:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "3604:25:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "dad66b00",
            "id": 630,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toCorrectnessProof",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "_proofBytes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 630,
                  "src": "2458:24:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2457:26:28"
            },
            "returnParameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 509,
                  "mutability": "mutable",
                  "name": "pointE2Sign",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 630,
                  "src": "2526:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "2526:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "pointE2XCoord",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 630,
                  "src": "2556:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2556:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 513,
                  "mutability": "mutable",
                  "name": "pointV2Sign",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 630,
                  "src": "2591:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "2591:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 515,
                  "mutability": "mutable",
                  "name": "pointV2XCoord",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 630,
                  "src": "2621:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2621:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 517,
                  "mutability": "mutable",
                  "name": "pointKFragCommitmentSign",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 630,
                  "src": "2656:29:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "2656:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "pointKFragCommitmentXCoord",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 630,
                  "src": "2699:34:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2699:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "pointKFragPokSign",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 630,
                  "src": "2747:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "2747:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 523,
                  "mutability": "mutable",
                  "name": "pointKFragPokXCoord",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 630,
                  "src": "2783:27:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2783:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 525,
                  "mutability": "mutable",
                  "name": "bnSig",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 630,
                  "src": "2824:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2824:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 527,
                  "mutability": "mutable",
                  "name": "kFragSignature",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 630,
                  "src": "2851:27:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2851:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 529,
                  "mutability": "mutable",
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 630,
                  "src": "2892:21:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2892:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2512:411:28"
            },
            "scope": 851,
            "src": "2430:1206:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 762,
              "nodeType": "Block",
              "src": "4254:770:28",
              "statements": [
                {
                  "assignments": [
                    660
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 660,
                      "mutability": "mutable",
                      "name": "cFrag",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 762,
                      "src": "4264:43:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CapsuleFrag_$13557_memory_ptr",
                        "typeString": "struct UmbralDeserializer.CapsuleFrag"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 659,
                        "name": "UmbralDeserializer.CapsuleFrag",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 13557,
                        "src": "4264:30:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CapsuleFrag_$13557_storage_ptr",
                          "typeString": "struct UmbralDeserializer.CapsuleFrag"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 664,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 661,
                        "name": "_cFragBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "4310:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toCapsuleFrag",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13903,
                      "src": "4310:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_CapsuleFrag_$13557_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (struct UmbralDeserializer.CapsuleFrag memory)"
                      }
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4310:27:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CapsuleFrag_$13557_memory_ptr",
                      "typeString": "struct UmbralDeserializer.CapsuleFrag memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4264:73:28"
                },
                {
                  "assignments": [
                    668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 668,
                      "mutability": "mutable",
                      "name": "proof",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 762,
                      "src": "4347:48:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                        "typeString": "struct UmbralDeserializer.CorrectnessProof"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 667,
                        "name": "UmbralDeserializer.CorrectnessProof",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 13546,
                        "src": "4347:35:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CorrectnessProof_$13546_storage_ptr",
                          "typeString": "struct UmbralDeserializer.CorrectnessProof"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 671,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 669,
                      "name": "cFrag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "4398:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CapsuleFrag_$13557_memory_ptr",
                        "typeString": "struct UmbralDeserializer.CapsuleFrag memory"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "proof",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13556,
                    "src": "4398:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                      "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4347:62:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 672,
                      "name": "pointE2Sign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "4419:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 675,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "4438:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                              }
                            },
                            "id": 676,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointE2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13533,
                            "src": "4438:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 677,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sign",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13521,
                          "src": "4438:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4433:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": {
                          "id": 673,
                          "name": "byte",
                          "nodeType": "ElementaryTypeName",
                          "src": "4433:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4433:24:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "4419:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 680,
                  "nodeType": "ExpressionStatement",
                  "src": "4419:38:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 681,
                      "name": "pointE2XCoord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 637,
                      "src": "4467:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 684,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "4491:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                              }
                            },
                            "id": 685,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointE2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13533,
                            "src": "4491:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xCoord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13523,
                          "src": "4491:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4483:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 682,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4483:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4483:29:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4467:45:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 689,
                  "nodeType": "ExpressionStatement",
                  "src": "4467:45:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 690,
                      "name": "pointV2Sign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "4522:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 693,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "4541:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                              }
                            },
                            "id": 694,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointV2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13535,
                            "src": "4541:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 695,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sign",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13521,
                          "src": "4541:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4536:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": {
                          "id": 691,
                          "name": "byte",
                          "nodeType": "ElementaryTypeName",
                          "src": "4536:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4536:24:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "4522:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "4522:38:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 699,
                      "name": "pointV2XCoord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 641,
                      "src": "4570:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 702,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "4594:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                              }
                            },
                            "id": 703,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointV2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13535,
                            "src": "4594:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 704,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xCoord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13523,
                          "src": "4594:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4586:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4586:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4586:29:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4570:45:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 707,
                  "nodeType": "ExpressionStatement",
                  "src": "4570:45:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 708,
                      "name": "pointKFragCommitmentSign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "4625:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 711,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "4657:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                              }
                            },
                            "id": 712,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointKFragCommitment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13537,
                            "src": "4657:26:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sign",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13521,
                          "src": "4657:31:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4652:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "byte",
                          "nodeType": "ElementaryTypeName",
                          "src": "4652:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4652:37:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "4625:64:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 716,
                  "nodeType": "ExpressionStatement",
                  "src": "4625:64:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 717,
                      "name": "pointKFragCommitmentXCoord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "4699:26:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 720,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "4736:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointKFragCommitment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13537,
                            "src": "4736:26:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xCoord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13523,
                          "src": "4736:33:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4728:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 718,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4728:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4728:42:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4699:71:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "4699:71:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 726,
                      "name": "pointKFragPokSign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 647,
                      "src": "4780:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 729,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "4805:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                              }
                            },
                            "id": 730,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointKFragPok",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13539,
                            "src": "4805:19:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 731,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sign",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13521,
                          "src": "4805:24:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4800:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": {
                          "id": 727,
                          "name": "byte",
                          "nodeType": "ElementaryTypeName",
                          "src": "4800:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4800:30:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "4780:50:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 734,
                  "nodeType": "ExpressionStatement",
                  "src": "4780:50:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 735,
                      "name": "pointKFragPokXCoord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "4840:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 738,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "4870:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                              }
                            },
                            "id": 739,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointKFragPok",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13539,
                            "src": "4870:19:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xCoord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13523,
                          "src": "4870:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4862:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 736,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4862:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4862:35:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4840:57:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "4840:57:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 744,
                      "name": "bnSig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "4907:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 747,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 668,
                            "src": "4923:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                              "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                            }
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bnSig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13541,
                          "src": "4923:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4915:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 745,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4915:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4915:20:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4907:28:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 751,
                  "nodeType": "ExpressionStatement",
                  "src": "4907:28:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 752,
                      "name": "kFragSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 653,
                      "src": "4945:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 753,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 668,
                        "src": "4962:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                          "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                        }
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kFragSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13543,
                      "src": "4962:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "4945:37:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "4945:37:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 757,
                      "name": "metadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 655,
                      "src": "4992:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 758,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 668,
                        "src": "5003:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CorrectnessProof_$13546_memory_ptr",
                          "typeString": "struct UmbralDeserializer.CorrectnessProof memory"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "metadata",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13545,
                      "src": "5003:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "4992:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 761,
                  "nodeType": "ExpressionStatement",
                  "src": "4992:25:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5d9cbcbe",
            "id": 763,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toCorrectnessProofFromCapsuleFrag",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "_cFragBytes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 763,
                  "src": "3784:24:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3784:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3783:26:28"
            },
            "returnParameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 635,
                  "mutability": "mutable",
                  "name": "pointE2Sign",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 763,
                  "src": "3852:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "3852:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 637,
                  "mutability": "mutable",
                  "name": "pointE2XCoord",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 763,
                  "src": "3882:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 636,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3882:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 639,
                  "mutability": "mutable",
                  "name": "pointV2Sign",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 763,
                  "src": "3917:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "3917:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 641,
                  "mutability": "mutable",
                  "name": "pointV2XCoord",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 763,
                  "src": "3947:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3947:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 643,
                  "mutability": "mutable",
                  "name": "pointKFragCommitmentSign",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 763,
                  "src": "3982:29:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "3982:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "pointKFragCommitmentXCoord",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 763,
                  "src": "4025:34:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4025:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 647,
                  "mutability": "mutable",
                  "name": "pointKFragPokSign",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 763,
                  "src": "4073:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "4073:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "mutability": "mutable",
                  "name": "pointKFragPokXCoord",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 763,
                  "src": "4109:27:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4109:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "bnSig",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 763,
                  "src": "4150:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4150:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 653,
                  "mutability": "mutable",
                  "name": "kFragSignature",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 763,
                  "src": "4177:27:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4177:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 655,
                  "mutability": "mutable",
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 763,
                  "src": "4218:21:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4218:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3838:411:28"
            },
            "scope": 851,
            "src": "3741:1283:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 849,
              "nodeType": "Block",
              "src": "5360:460:28",
              "statements": [
                {
                  "assignments": [
                    785
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 785,
                      "mutability": "mutable",
                      "name": "cFrag",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 849,
                      "src": "5370:43:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CapsuleFrag_$13557_memory_ptr",
                        "typeString": "struct UmbralDeserializer.CapsuleFrag"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 784,
                        "name": "UmbralDeserializer.CapsuleFrag",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 13557,
                        "src": "5370:30:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CapsuleFrag_$13557_storage_ptr",
                          "typeString": "struct UmbralDeserializer.CapsuleFrag"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 789,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 786,
                        "name": "_cFragBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "5416:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toCapsuleFrag",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13903,
                      "src": "5416:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_CapsuleFrag_$13557_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (struct UmbralDeserializer.CapsuleFrag memory)"
                      }
                    },
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5416:27:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CapsuleFrag_$13557_memory_ptr",
                      "typeString": "struct UmbralDeserializer.CapsuleFrag memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5370:73:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 790,
                      "name": "pointE1Sign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "5453:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 793,
                              "name": "cFrag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "5472:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CapsuleFrag_$13557_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CapsuleFrag memory"
                              }
                            },
                            "id": 794,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointE1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13548,
                            "src": "5472:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 795,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sign",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13521,
                          "src": "5472:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5467:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": {
                          "id": 791,
                          "name": "byte",
                          "nodeType": "ElementaryTypeName",
                          "src": "5467:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5467:24:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "5453:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "5453:38:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 799,
                      "name": "pointE1XCoord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "5501:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 802,
                              "name": "cFrag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "5525:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CapsuleFrag_$13557_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CapsuleFrag memory"
                              }
                            },
                            "id": 803,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointE1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13548,
                            "src": "5525:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 804,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xCoord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13523,
                          "src": "5525:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5517:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 800,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5517:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5517:29:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5501:45:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 807,
                  "nodeType": "ExpressionStatement",
                  "src": "5501:45:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 808,
                      "name": "pointV1Sign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 772,
                      "src": "5556:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 811,
                              "name": "cFrag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "5575:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CapsuleFrag_$13557_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CapsuleFrag memory"
                              }
                            },
                            "id": 812,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointV1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13550,
                            "src": "5575:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 813,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sign",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13521,
                          "src": "5575:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5570:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": {
                          "id": 809,
                          "name": "byte",
                          "nodeType": "ElementaryTypeName",
                          "src": "5570:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5570:24:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "5556:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 816,
                  "nodeType": "ExpressionStatement",
                  "src": "5556:38:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 817,
                      "name": "pointV1XCoord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 774,
                      "src": "5604:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 820,
                              "name": "cFrag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "5628:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CapsuleFrag_$13557_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CapsuleFrag memory"
                              }
                            },
                            "id": 821,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointV1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13550,
                            "src": "5628:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 822,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xCoord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13523,
                          "src": "5628:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5620:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 818,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5620:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5620:29:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5604:45:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 825,
                  "nodeType": "ExpressionStatement",
                  "src": "5604:45:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 826,
                      "name": "kFragId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "5659:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 827,
                        "name": "cFrag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "5669:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CapsuleFrag_$13557_memory_ptr",
                          "typeString": "struct UmbralDeserializer.CapsuleFrag memory"
                        }
                      },
                      "id": 828,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kFragId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13552,
                      "src": "5669:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5659:23:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "5659:23:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 831,
                      "name": "pointPrecursorSign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 778,
                      "src": "5692:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 834,
                              "name": "cFrag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "5718:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CapsuleFrag_$13557_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CapsuleFrag memory"
                              }
                            },
                            "id": 835,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointPrecursor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13554,
                            "src": "5718:20:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 836,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sign",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13521,
                          "src": "5718:25:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5713:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": {
                          "id": 832,
                          "name": "byte",
                          "nodeType": "ElementaryTypeName",
                          "src": "5713:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5713:31:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "5692:52:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 839,
                  "nodeType": "ExpressionStatement",
                  "src": "5692:52:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 840,
                      "name": "pointPrecursorXCoord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 780,
                      "src": "5754:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 843,
                              "name": "cFrag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "5785:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CapsuleFrag_$13557_memory_ptr",
                                "typeString": "struct UmbralDeserializer.CapsuleFrag memory"
                              }
                            },
                            "id": 844,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pointPrecursor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13554,
                            "src": "5785:20:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$13524_memory_ptr",
                              "typeString": "struct UmbralDeserializer.Point memory"
                            }
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xCoord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13523,
                          "src": "5785:27:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5777:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5777:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5777:36:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5754:59:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 848,
                  "nodeType": "ExpressionStatement",
                  "src": "5754:59:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "be0b31c6",
            "id": 850,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toCapsuleFrag",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "_cFragBytes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 850,
                  "src": "5053:24:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5053:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5052:26:28"
            },
            "returnParameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "pointE1Sign",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 850,
                  "src": "5121:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "5121:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 770,
                  "mutability": "mutable",
                  "name": "pointE1XCoord",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 850,
                  "src": "5151:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 769,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5151:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 772,
                  "mutability": "mutable",
                  "name": "pointV1Sign",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 850,
                  "src": "5186:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "5186:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 774,
                  "mutability": "mutable",
                  "name": "pointV1XCoord",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 850,
                  "src": "5216:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5216:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "kFragId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 850,
                  "src": "5251:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5251:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "pointPrecursorSign",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 850,
                  "src": "5280:23:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "5280:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "pointPrecursorXCoord",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 850,
                  "src": "5317:28:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5317:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5107:248:28"
            },
            "scope": 851,
            "src": "5030:790:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1213,
        "src": "1770:4052:28"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 852,
          "nodeType": "StructuredDocumentation",
          "src": "5825:65:28",
          "text": "@notice Contract for using ReEncryptionValidator library"
        },
        "fullyImplemented": true,
        "id": 1106,
        "linearizedBaseContracts": [
          1106
        ],
        "name": "ReEncryptionValidatorMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 855,
            "libraryName": {
              "contractScope": null,
              "id": 853,
              "name": "UmbralDeserializer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14380,
              "src": "5939:18:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UmbralDeserializer_$14380",
                "typeString": "library UmbralDeserializer"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "5933:35:28",
            "typeName": {
              "id": 854,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "5962:5:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "body": {
              "id": 863,
              "nodeType": "Block",
              "src": "6037:69:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 860,
                      "name": "ReEncryptionValidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13156,
                      "src": "6054:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ReEncryptionValidator_$13156_$",
                        "typeString": "type(library ReEncryptionValidator)"
                      }
                    },
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "UMBRAL_PARAMETER_U_SIGN",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11966,
                    "src": "6054:45:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 859,
                  "id": 862,
                  "nodeType": "Return",
                  "src": "6047:52:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c5f1f5ca",
            "id": 864,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "UMBRAL_PARAMETER_U_SIGN",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6006:2:28"
            },
            "returnParameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 864,
                  "src": "6030:5:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6030:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6029:7:28"
            },
            "scope": 1106,
            "src": "5974:132:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 872,
              "nodeType": "Block",
              "src": "6179:71:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 869,
                      "name": "ReEncryptionValidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13156,
                      "src": "6196:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ReEncryptionValidator_$13156_$",
                        "typeString": "type(library ReEncryptionValidator)"
                      }
                    },
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "UMBRAL_PARAMETER_U_XCOORD",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11969,
                    "src": "6196:47:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 868,
                  "id": 871,
                  "nodeType": "Return",
                  "src": "6189:54:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "055a80e7",
            "id": 873,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "UMBRAL_PARAMETER_U_XCOORD",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6146:2:28"
            },
            "returnParameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 867,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 873,
                  "src": "6170:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6170:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6169:9:28"
            },
            "scope": 1106,
            "src": "6112:138:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 881,
              "nodeType": "Block",
              "src": "6323:71:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 878,
                      "name": "ReEncryptionValidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13156,
                      "src": "6340:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ReEncryptionValidator_$13156_$",
                        "typeString": "type(library ReEncryptionValidator)"
                      }
                    },
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "UMBRAL_PARAMETER_U_YCOORD",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11972,
                    "src": "6340:47:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 877,
                  "id": 880,
                  "nodeType": "Return",
                  "src": "6333:54:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4b4b4b12",
            "id": 882,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "UMBRAL_PARAMETER_U_YCOORD",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6290:2:28"
            },
            "returnParameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 876,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 882,
                  "src": "6314:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6314:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6313:9:28"
            },
            "scope": 1106,
            "src": "6256:138:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 890,
              "nodeType": "Block",
              "src": "6453:57:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 887,
                      "name": "ReEncryptionValidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13156,
                      "src": "6470:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ReEncryptionValidator_$13156_$",
                        "typeString": "type(library ReEncryptionValidator)"
                      }
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "FIELD_ORDER",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11975,
                    "src": "6470:33:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 886,
                  "id": 889,
                  "nodeType": "Return",
                  "src": "6463:40:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3fa1e903",
            "id": 891,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "FIELD_ORDER",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6420:2:28"
            },
            "returnParameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 885,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 891,
                  "src": "6444:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6444:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6443:9:28"
            },
            "scope": 1106,
            "src": "6400:110:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 899,
              "nodeType": "Block",
              "src": "6565:53:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 896,
                      "name": "ReEncryptionValidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13156,
                      "src": "6582:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ReEncryptionValidator_$13156_$",
                        "typeString": "type(library ReEncryptionValidator)"
                      }
                    },
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "MINUS_2",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11978,
                    "src": "6582:29:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 895,
                  "id": 898,
                  "nodeType": "Return",
                  "src": "6575:36:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "49df4def",
            "id": 900,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "MINUS_2",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6532:2:28"
            },
            "returnParameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 894,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 900,
                  "src": "6556:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6556:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6555:9:28"
            },
            "scope": 1106,
            "src": "6516:102:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 908,
              "nodeType": "Block",
              "src": "6680:60:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 905,
                      "name": "ReEncryptionValidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13156,
                      "src": "6697:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ReEncryptionValidator_$13156_$",
                        "typeString": "type(library ReEncryptionValidator)"
                      }
                    },
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "MINUS_ONE_HALF",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11981,
                    "src": "6697:36:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 904,
                  "id": 907,
                  "nodeType": "Return",
                  "src": "6690:43:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "07b5bac4",
            "id": 909,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "MINUS_ONE_HALF",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6647:2:28"
            },
            "returnParameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 903,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 909,
                  "src": "6671:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6671:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6670:9:28"
            },
            "scope": 1106,
            "src": "6624:116:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 927,
              "nodeType": "Block",
              "src": "6924:106:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 922,
                        "name": "_capsuleBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 911,
                        "src": "6977:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 923,
                        "name": "_cFragBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "6992:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 924,
                        "name": "_precomputedBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 915,
                        "src": "7005:17:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 920,
                        "name": "ReEncryptionValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13156,
                        "src": "6941:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReEncryptionValidator_$13156_$",
                          "typeString": "type(library ReEncryptionValidator)"
                        }
                      },
                      "id": 921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "validateCFrag",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12417,
                      "src": "6941:35:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory) pure returns (bool)"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6941:82:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 919,
                  "id": 926,
                  "nodeType": "Return",
                  "src": "6934:89:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e650faa7",
            "id": 928,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateCFrag",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "_capsuleBytes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 928,
                  "src": "6778:26:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6778:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 913,
                  "mutability": "mutable",
                  "name": "_cFragBytes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 928,
                  "src": "6814:24:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6814:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 915,
                  "mutability": "mutable",
                  "name": "_precomputedBytes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 928,
                  "src": "6848:30:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 914,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6848:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6768:116:28"
            },
            "returnParameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 918,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 928,
                  "src": "6914:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 917,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6914:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6913:6:28"
            },
            "scope": 1106,
            "src": "6746:284:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 959,
              "nodeType": "Block",
              "src": "7191:255:28",
              "statements": [
                {
                  "assignments": [
                    940
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 940,
                      "mutability": "mutable",
                      "name": "_capsule",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 959,
                      "src": "7201:42:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Capsule_$13531_memory_ptr",
                        "typeString": "struct UmbralDeserializer.Capsule"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 939,
                        "name": "UmbralDeserializer.Capsule",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 13531,
                        "src": "7201:26:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Capsule_$13531_storage_ptr",
                          "typeString": "struct UmbralDeserializer.Capsule"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 944,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 941,
                        "name": "_capsuleBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "7246:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toCapsule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13702,
                      "src": "7246:23:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_Capsule_$13531_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (struct UmbralDeserializer.Capsule memory)"
                      }
                    },
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7246:25:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Capsule_$13531_memory_ptr",
                      "typeString": "struct UmbralDeserializer.Capsule memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7201:70:28"
                },
                {
                  "assignments": [
                    948
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 948,
                      "mutability": "mutable",
                      "name": "_cFrag",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 959,
                      "src": "7281:44:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CapsuleFrag_$13557_memory_ptr",
                        "typeString": "struct UmbralDeserializer.CapsuleFrag"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 947,
                        "name": "UmbralDeserializer.CapsuleFrag",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 13557,
                        "src": "7281:30:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CapsuleFrag_$13557_storage_ptr",
                          "typeString": "struct UmbralDeserializer.CapsuleFrag"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 952,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 949,
                        "name": "_cFragBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 932,
                        "src": "7328:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toCapsuleFrag",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13903,
                      "src": "7328:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_CapsuleFrag_$13557_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (struct UmbralDeserializer.CapsuleFrag memory)"
                      }
                    },
                    "id": 951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7328:27:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CapsuleFrag_$13557_memory_ptr",
                      "typeString": "struct UmbralDeserializer.CapsuleFrag memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7281:74:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 955,
                        "name": "_capsule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 940,
                        "src": "7422:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Capsule_$13531_memory_ptr",
                          "typeString": "struct UmbralDeserializer.Capsule memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 956,
                        "name": "_cFrag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 948,
                        "src": "7432:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CapsuleFrag_$13557_memory_ptr",
                          "typeString": "struct UmbralDeserializer.CapsuleFrag memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Capsule_$13531_memory_ptr",
                          "typeString": "struct UmbralDeserializer.Capsule memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_CapsuleFrag_$13557_memory_ptr",
                          "typeString": "struct UmbralDeserializer.CapsuleFrag memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 953,
                        "name": "ReEncryptionValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13156,
                        "src": "7372:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReEncryptionValidator_$13156_$",
                          "typeString": "type(library ReEncryptionValidator)"
                        }
                      },
                      "id": 954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "computeProofChallengeScalar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12522,
                      "src": "7372:49:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Capsule_$13531_memory_ptr_$_t_struct$_CapsuleFrag_$13557_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct UmbralDeserializer.Capsule memory,struct UmbralDeserializer.CapsuleFrag memory) pure returns (uint256)"
                      }
                    },
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7372:67:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 936,
                  "id": 958,
                  "nodeType": "Return",
                  "src": "7365:74:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c4f81c83",
            "id": 960,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeProofChallengeScalar",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 930,
                  "mutability": "mutable",
                  "name": "_capsuleBytes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 960,
                  "src": "7082:26:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 929,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7082:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 932,
                  "mutability": "mutable",
                  "name": "_cFragBytes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 960,
                  "src": "7118:24:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7118:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7072:76:28"
            },
            "returnParameters": {
              "id": 936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 935,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 960,
                  "src": "7178:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7178:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7177:9:28"
            },
            "scope": 1106,
            "src": "7036:410:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 972,
              "nodeType": "Block",
              "src": "7531:71:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 969,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 962,
                        "src": "7589:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 967,
                        "name": "ReEncryptionValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13156,
                        "src": "7548:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReEncryptionValidator_$13156_$",
                          "typeString": "type(library ReEncryptionValidator)"
                        }
                      },
                      "id": 968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "extendedKeccakToBN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12607,
                      "src": "7548:40:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes memory) pure returns (uint256)"
                      }
                    },
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7548:47:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 966,
                  "id": 971,
                  "nodeType": "Return",
                  "src": "7541:54:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5bdc231d",
            "id": 973,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "extendedKeccakToBN",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 962,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 973,
                  "src": "7481:18:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 961,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7481:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7480:20:28"
            },
            "returnParameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 965,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 973,
                  "src": "7522:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7522:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7521:9:28"
            },
            "scope": 1106,
            "src": "7452:150:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 991,
              "nodeType": "Block",
              "src": "7722:93:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 986,
                        "name": "_pointSign",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 975,
                        "src": "7782:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 987,
                        "name": "_pointX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 977,
                        "src": "7794:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 988,
                        "name": "_pointY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 979,
                        "src": "7803:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 984,
                        "name": "ReEncryptionValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13156,
                        "src": "7739:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReEncryptionValidator_$13156_$",
                          "typeString": "type(library ReEncryptionValidator)"
                        }
                      },
                      "id": 985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkCompressedPoint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12637,
                      "src": "7739:42:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint8,uint256,uint256) pure returns (bool)"
                      }
                    },
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7739:72:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 983,
                  "id": 990,
                  "nodeType": "Return",
                  "src": "7732:79:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "aa393543",
            "id": 992,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkCompressedPoint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 975,
                  "mutability": "mutable",
                  "name": "_pointSign",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 992,
                  "src": "7638:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 974,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7638:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 977,
                  "mutability": "mutable",
                  "name": "_pointX",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 992,
                  "src": "7658:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7658:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 979,
                  "mutability": "mutable",
                  "name": "_pointY",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 992,
                  "src": "7677:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7677:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7634:61:28"
            },
            "returnParameters": {
              "id": 983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 982,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 992,
                  "src": "7716:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 981,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7716:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7715:6:28"
            },
            "scope": 1106,
            "src": "7605:210:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1004,
              "nodeType": "Block",
              "src": "7905:72:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1001,
                        "name": "_coords",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "7965:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 999,
                        "name": "ReEncryptionValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13156,
                        "src": "7916:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReEncryptionValidator_$13156_$",
                          "typeString": "type(library ReEncryptionValidator)"
                        }
                      },
                      "id": 1000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkSerializedCoordinates",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12666,
                      "src": "7916:48:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes memory) pure returns (bool)"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7916:57:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 998,
                  "id": 1003,
                  "nodeType": "Return",
                  "src": "7909:64:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "cfb24452",
            "id": 1005,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkSerializedCoordinates",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 994,
                  "mutability": "mutable",
                  "name": "_coords",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1005,
                  "src": "7857:20:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 993,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7857:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7856:22:28"
            },
            "returnParameters": {
              "id": 998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 997,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1005,
                  "src": "7899:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 996,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7899:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7898:6:28"
            },
            "scope": 1106,
            "src": "7821:156:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1020,
              "nodeType": "Block",
              "src": "8053:63:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1016,
                        "name": "Px",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1007,
                        "src": "8102:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1017,
                        "name": "Py",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1009,
                        "src": "8106:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1014,
                        "name": "ReEncryptionValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13156,
                        "src": "8070:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReEncryptionValidator_$13156_$",
                          "typeString": "type(library ReEncryptionValidator)"
                        }
                      },
                      "id": 1015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isOnCurve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12720,
                      "src": "8070:31:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) pure returns (bool)"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8070:39:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1013,
                  "id": 1019,
                  "nodeType": "Return",
                  "src": "8063:46:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0b0dbcfa",
            "id": 1021,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOnCurve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1007,
                  "mutability": "mutable",
                  "name": "Px",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1021,
                  "src": "8002:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8002:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1009,
                  "mutability": "mutable",
                  "name": "Py",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1021,
                  "src": "8014:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8014:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8001:24:28"
            },
            "returnParameters": {
              "id": 1013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1021,
                  "src": "8047:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8047:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8046:6:28"
            },
            "scope": 1106,
            "src": "7983:133:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1045,
              "nodeType": "Block",
              "src": "8264:78:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1038,
                        "name": "x1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1023,
                        "src": "8315:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1039,
                        "name": "y1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "8319:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1040,
                        "name": "scalar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "8323:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1041,
                        "name": "qx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1029,
                        "src": "8331:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1042,
                        "name": "qy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1031,
                        "src": "8335:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1036,
                        "name": "ReEncryptionValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13156,
                        "src": "8281:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReEncryptionValidator_$13156_$",
                          "typeString": "type(library ReEncryptionValidator)"
                        }
                      },
                      "id": 1037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ecmulVerify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12789,
                      "src": "8281:33:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (bool)"
                      }
                    },
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8281:57:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1035,
                  "id": 1044,
                  "nodeType": "Return",
                  "src": "8274:64:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "022079d9",
            "id": 1046,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ecmulVerify",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1023,
                  "mutability": "mutable",
                  "name": "x1",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1046,
                  "src": "8149:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8149:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1025,
                  "mutability": "mutable",
                  "name": "y1",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1046,
                  "src": "8166:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8166:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1027,
                  "mutability": "mutable",
                  "name": "scalar",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1046,
                  "src": "8183:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8183:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "qx",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1046,
                  "src": "8204:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8204:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1031,
                  "mutability": "mutable",
                  "name": "qy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1046,
                  "src": "8221:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8221:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8142:95:28"
            },
            "returnParameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1034,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1046,
                  "src": "8258:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8258:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8257:6:28"
            },
            "scope": 1106,
            "src": "8122:220:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1065,
              "nodeType": "Block",
              "src": "8457:68:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1061,
                        "name": "P",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "8513:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1062,
                        "name": "Q",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1054,
                        "src": "8516:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1059,
                        "name": "ReEncryptionValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13156,
                        "src": "8474:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReEncryptionValidator_$13156_$",
                          "typeString": "type(library ReEncryptionValidator)"
                        }
                      },
                      "id": 1060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "eqAffineJacobian",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12857,
                      "src": "8474:38:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256[2] memory,uint256[3] memory) pure returns (bool)"
                      }
                    },
                    "id": 1063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8474:44:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1058,
                  "id": 1064,
                  "nodeType": "Return",
                  "src": "8467:51:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4731c829",
            "id": 1066,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "eqAffineJacobian",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1050,
                  "mutability": "mutable",
                  "name": "P",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1066,
                  "src": "8380:19:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1047,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8380:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1049,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8388:1:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "8380:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1054,
                  "mutability": "mutable",
                  "name": "Q",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1066,
                  "src": "8406:19:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1051,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8406:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1053,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 1052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8414:1:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "8406:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8373:58:28"
            },
            "returnParameters": {
              "id": 1058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1057,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1066,
                  "src": "8452:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1056,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8452:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8451:6:28"
            },
            "scope": 1106,
            "src": "8348:177:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1087,
              "nodeType": "Block",
              "src": "8647:69:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1083,
                        "name": "P",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "8704:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1084,
                        "name": "Q",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "8707:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1081,
                        "name": "ReEncryptionValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13156,
                        "src": "8664:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReEncryptionValidator_$13156_$",
                          "typeString": "type(library ReEncryptionValidator)"
                        }
                      },
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAffineJacobian",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13022,
                      "src": "8664:39:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_array$_t_uint256_$3_memory_ptr_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory) pure returns (uint256[3] memory)"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8664:45:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                      "typeString": "uint256[3] memory"
                    }
                  },
                  "functionReturnParameters": 1080,
                  "id": 1086,
                  "nodeType": "Return",
                  "src": "8657:52:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b4487873",
            "id": 1088,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAffineJacobian",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "P",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1088,
                  "src": "8564:16:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1067,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "8564:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1069,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 1068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8569:1:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "8564:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1074,
                  "mutability": "mutable",
                  "name": "Q",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1088,
                  "src": "8587:16:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1071,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "8587:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1073,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 1072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8592:1:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "8587:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8557:52:28"
            },
            "returnParameters": {
              "id": 1080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1079,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1088,
                  "src": "8631:14:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1076,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "8631:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1078,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8636:1:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "8631:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8630:16:28"
            },
            "scope": 1106,
            "src": "8531:185:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1104,
              "nodeType": "Block",
              "src": "8801:63:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1101,
                        "name": "P",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1092,
                        "src": "8855:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1099,
                        "name": "ReEncryptionValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13156,
                        "src": "8818:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReEncryptionValidator_$13156_$",
                          "typeString": "type(library ReEncryptionValidator)"
                        }
                      },
                      "id": 1100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "doubleJacobian",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13155,
                      "src": "8818:36:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$3_memory_ptr_$returns$_t_array$_t_uint256_$3_memory_ptr_$",
                        "typeString": "function (uint256[3] memory) pure returns (uint256[3] memory)"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8818:39:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                      "typeString": "uint256[3] memory"
                    }
                  },
                  "functionReturnParameters": 1098,
                  "id": 1103,
                  "nodeType": "Return",
                  "src": "8811:46:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "42be0b32",
            "id": 1105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doubleJacobian",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1092,
                  "mutability": "mutable",
                  "name": "P",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1105,
                  "src": "8746:16:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1089,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "8746:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1091,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 1090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8751:1:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "8746:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8745:18:28"
            },
            "returnParameters": {
              "id": 1098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1097,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1105,
                  "src": "8785:14:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1094,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "8785:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1096,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 1095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8790:1:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "8785:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8784:16:28"
            },
            "scope": 1106,
            "src": "8722:142:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1213,
        "src": "5891:2975:28"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1107,
          "nodeType": "StructuredDocumentation",
          "src": "8868:52:28",
          "text": "@notice Contract for using Snapshot library"
        },
        "fullyImplemented": true,
        "id": 1212,
        "linearizedBaseContracts": [
          1212
        ],
        "name": "SnapshotMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a7a38f0b",
            "id": 1110,
            "mutability": "mutable",
            "name": "history",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1212,
            "src": "8965:24:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint128_$dyn_storage",
              "typeString": "uint128[]"
            },
            "typeName": {
              "baseType": {
                "id": 1108,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "8965:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              },
              "id": 1109,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "8965:9:28",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint128_$dyn_storage_ptr",
                "typeString": "uint128[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1118,
              "nodeType": "Block",
              "src": "9042:38:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1115,
                      "name": "history",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1110,
                      "src": "9059:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint128_$dyn_storage",
                        "typeString": "uint128[] storage ref"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "9059:14:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1114,
                  "id": 1117,
                  "nodeType": "Return",
                  "src": "9052:21:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1f7b6d32",
            "id": 1119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "length",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9011:2:28"
            },
            "returnParameters": {
              "id": 1114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1113,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1119,
                  "src": "9034:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9034:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9033:9:28"
            },
            "scope": 1212,
            "src": "8996:84:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1125,
              "nodeType": "Block",
              "src": "9118:31:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9128:14:28",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 1122,
                      "name": "history",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1110,
                      "src": "9135:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint128_$dyn_storage",
                        "typeString": "uint128[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1124,
                  "nodeType": "ExpressionStatement",
                  "src": "9128:14:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6b0994e2",
            "id": 1126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteHistory",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9108:2:28"
            },
            "returnParameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9118:0:28"
            },
            "scope": 1212,
            "src": "9086:63:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1141,
              "nodeType": "Block",
              "src": "9259:62:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1137,
                        "name": "_time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "9300:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1138,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "9307:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1135,
                        "name": "Snapshot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13516,
                        "src": "9276:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Snapshot_$13516_$",
                          "typeString": "type(library Snapshot)"
                        }
                      },
                      "id": 1136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "encodeSnapshot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13184,
                      "src": "9276:23:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint96_$returns$_t_uint128_$",
                        "typeString": "function (uint32,uint96) pure returns (uint128)"
                      }
                    },
                    "id": 1139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9276:38:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 1134,
                  "id": 1140,
                  "nodeType": "Return",
                  "src": "9269:45:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c2dbc377",
            "id": 1142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "encodeSnapshot",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "_time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1142,
                  "src": "9201:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9201:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1142,
                  "src": "9215:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9215:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9200:29:28"
            },
            "returnParameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1133,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1142,
                  "src": "9250:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1132,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "9250:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9249:9:28"
            },
            "scope": 1212,
            "src": "9177:144:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1156,
              "nodeType": "Block",
              "src": "9405:58:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1153,
                        "name": "_snapshot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1144,
                        "src": "9446:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1151,
                        "name": "Snapshot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13516,
                        "src": "9422:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Snapshot_$13516_$",
                          "typeString": "type(library Snapshot)"
                        }
                      },
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decodeSnapshot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13214,
                      "src": "9422:23:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint128_$returns$_t_uint32_$_t_uint96_$",
                        "typeString": "function (uint128) pure returns (uint32,uint96)"
                      }
                    },
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9422:34:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint32_$_t_uint96_$",
                      "typeString": "tuple(uint32,uint96)"
                    }
                  },
                  "functionReturnParameters": 1150,
                  "id": 1155,
                  "nodeType": "Return",
                  "src": "9415:41:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fd5120ef",
            "id": 1157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decodeSnapshot",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1144,
                  "mutability": "mutable",
                  "name": "_snapshot",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1157,
                  "src": "9351:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1143,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "9351:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9350:19:28"
            },
            "returnParameters": {
              "id": 1150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1147,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1157,
                  "src": "9390:6:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1146,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9390:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1149,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1157,
                  "src": "9398:6:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1148,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9398:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9389:16:28"
            },
            "scope": 1212,
            "src": "9327:136:28",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1172,
              "nodeType": "Block",
              "src": "9528:61:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1167,
                        "name": "history",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1110,
                        "src": "9559:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_storage",
                          "typeString": "uint128[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1168,
                        "name": "_time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1159,
                        "src": "9568:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1169,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1161,
                        "src": "9575:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_storage",
                          "typeString": "uint128[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1164,
                        "name": "Snapshot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13516,
                        "src": "9538:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Snapshot_$13516_$",
                          "typeString": "type(library Snapshot)"
                        }
                      },
                      "id": 1166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addSnapshot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13313,
                      "src": "9538:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint128_$dyn_storage_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint128[] storage pointer,uint256,uint256)"
                      }
                    },
                    "id": 1170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9538:44:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1171,
                  "nodeType": "ExpressionStatement",
                  "src": "9538:44:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f2986e6f",
            "id": 1173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSnapshot",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1159,
                  "mutability": "mutable",
                  "name": "_time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1173,
                  "src": "9490:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9490:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1161,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1173,
                  "src": "9505:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9505:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9489:31:28"
            },
            "returnParameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9528:0:28"
            },
            "scope": 1212,
            "src": "9469:120:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1186,
              "nodeType": "Block",
              "src": "9659:59:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1182,
                        "name": "history",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1110,
                        "src": "9696:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_storage",
                          "typeString": "uint128[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1183,
                        "name": "_time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1175,
                        "src": "9705:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_storage",
                          "typeString": "uint128[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1180,
                        "name": "Snapshot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13516,
                        "src": "9676:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Snapshot_$13516_$",
                          "typeString": "type(library Snapshot)"
                        }
                      },
                      "id": 1181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getValueAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13515,
                      "src": "9676:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_uint128_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint96_$",
                        "typeString": "function (uint128[] storage pointer,uint256) view returns (uint96)"
                      }
                    },
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9676:35:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "functionReturnParameters": 1179,
                  "id": 1185,
                  "nodeType": "Return",
                  "src": "9669:42:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "bc6b888b",
            "id": 1187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValueAt",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1175,
                  "mutability": "mutable",
                  "name": "_time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1187,
                  "src": "9615:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9615:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9614:15:28"
            },
            "returnParameters": {
              "id": 1179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1178,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1187,
                  "src": "9651:6:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1177,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9651:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9650:8:28"
            },
            "scope": 1212,
            "src": "9595:123:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1199,
              "nodeType": "Block",
              "src": "9785:54:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1196,
                        "name": "history",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1110,
                        "src": "9824:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_storage",
                          "typeString": "uint128[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_storage",
                          "typeString": "uint128[] storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1194,
                        "name": "Snapshot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13516,
                        "src": "9802:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Snapshot_$13516_$",
                          "typeString": "type(library Snapshot)"
                        }
                      },
                      "id": 1195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastSnapshot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13346,
                      "src": "9802:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_uint128_$dyn_storage_ptr_$returns$_t_uint32_$_t_uint96_$",
                        "typeString": "function (uint128[] storage pointer) view returns (uint32,uint96)"
                      }
                    },
                    "id": 1197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9802:30:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint32_$_t_uint96_$",
                      "typeString": "tuple(uint32,uint96)"
                    }
                  },
                  "functionReturnParameters": 1193,
                  "id": 1198,
                  "nodeType": "Return",
                  "src": "9795:37:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fb861ac1",
            "id": 1200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastSnapshot",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9745:2:28"
            },
            "returnParameters": {
              "id": 1193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1190,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1200,
                  "src": "9769:6:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1189,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9769:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1192,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1200,
                  "src": "9777:6:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9777:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9768:16:28"
            },
            "scope": 1212,
            "src": "9724:115:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1210,
              "nodeType": "Block",
              "src": "9895:51:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1207,
                        "name": "history",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1110,
                        "src": "9931:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_storage",
                          "typeString": "uint128[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_storage",
                          "typeString": "uint128[] storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1205,
                        "name": "Snapshot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13516,
                        "src": "9912:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Snapshot_$13516_$",
                          "typeString": "type(library Snapshot)"
                        }
                      },
                      "id": 1206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13363,
                      "src": "9912:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_uint128_$dyn_storage_ptr_$returns$_t_uint96_$",
                        "typeString": "function (uint128[] storage pointer) view returns (uint96)"
                      }
                    },
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9912:27:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "functionReturnParameters": 1204,
                  "id": 1209,
                  "nodeType": "Return",
                  "src": "9905:34:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "43183834",
            "id": 1211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastValue",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9863:2:28"
            },
            "returnParameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1211,
                  "src": "9887:6:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9887:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9886:8:28"
            },
            "scope": 1212,
            "src": "9845:101:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1213,
        "src": "8921:1029:28"
      }
    ],
    "src": "0:9951:28"
  },
  "bytecode": "608060405234801561001057600080fd5b50610a8e806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634b23d91a146100515780635d9cbcbe14610130578063be0b31c614610312578063dad66b0014610403575b600080fd5b6100f56004803603602081101561006757600080fd5b810190602081018135600160201b81111561008157600080fd5b82018360208201111561009357600080fd5b803590602001918460018302840111600160201b831117156100b457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104a7945050505050565b604080516001600160f81b03199687168152602081019590955292909416838301526060830152608082019290925290519081900360a00190f35b6101d46004803603602081101561014657600080fd5b810190602081018135600160201b81111561016057600080fd5b82018360208201111561017257600080fd5b803590602001918460018302840111600160201b8311171561019357600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104f3945050505050565b604080516001600160f81b0319808e16825260208083018e90528c821693830193909352606082018b9052898116608083015260a08201899052871660c082015260e08101869052610100810185905261016061012082018181528551918301919091528451919290916101408401916101808501919087019080838360005b8381101561026c578181015183820152602001610254565b50505050905090810190601f1680156102995780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156102cc5781810151838201526020016102b4565b50505050905090810190601f1680156102f95780820380516001836020036101000a031916815260200191505b509d505050505050505050505050505060405180910390f35b6103b66004803603602081101561032857600080fd5b810190602081018135600160201b81111561034257600080fd5b82018360208201111561035457600080fd5b803590602001918460018302840111600160201b8311171561037557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506105bf945050505050565b604080516001600160f81b031998891681526020810197909752948716868601526060860193909352608085019190915290931660a083015260c082019290925290519081900360e00190f35b6101d46004803603602081101561041957600080fd5b810190602081018135600160201b81111561043357600080fd5b82018360208201111561044557600080fd5b803590602001918460018302840111600160201b8311171561046657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610644945050505050565b60008060008060006104b7610979565b6104c087610700565b8051805160209182015182840151805193015160409094015160f892831b9c919b509290911b9850919650945092505050565b600080600080600080600080600060608061050c6109a6565b6105158d610757565b905061051f6109ec565b8160800151905080600001516000015160f81b9c5080600001516020015160001b9b5080602001516000015160f81b9a5080602001516020015160001b995080604001516000015160f81b985080604001516020015160001b975080606001516000015160f81b965080606001516020015160001b9550806080015160001b94508060a0015193508060c001519250505091939597999b90929496989a50565b60008060008060008060006105d26109a6565b6105db89610757565b905080600001516000015160f81b975080600001516020015160001b965080602001516000015160f81b955080602001516020015160001b94508060400151935080606001516000015160f81b925080606001516020015160001b915050919395979092949650565b600080600080600080600080600060608061065d6109ec565b6106668d6107df565b905080600001516000015160f81b9b5080600001516020015160001b9a5080602001516000015160f81b995080602001516020015160001b985080604001516000015160f81b975080604001516020015160001b965080606001516000015160f81b955080606001516020015160001b9450806080015160001b93508060a0015192508060c0015191505091939597999b90929496989a50565b610708610979565b815160621461071657600080fd5b600061072183610806565b905061073181836000015161080c565b905061074181836020015161080c565b905061074c81610827565b604083015250919050565b61075f6109a6565b815161016781101561077057600080fd5b600061077b84610806565b905061078b81846000015161080c565b905061079b81846020015161080c565b90506107a681610827565b60408401526060830151602091909101906107c290829061080c565b90506107d281608219840161082b565b6080840152509092915050565b6107e76109ec565b60006107f283610806565b90506107ff81845161082b565b9392505050565b60200190565b8151600183015160009190911a825260209091015260210190565b5190565b6108336109ec565b60e482101561084157600080fd5b61084f83826000015161080c565b925061085f83826020015161080c565b925061086f83826040015161080c565b925061087f83826060015161080c565b925061088a83610827565b608082015260408051818152606081018252602094909401939060208201818036833750505060a082018190526108c49084906040610932565b925060e482111561092c5760e319820167ffffffffffffffff811180156108ea57600080fd5b506040519080825280601f01601f191660200182016040528015610915576020820181803683370190505b5060c08201819052805161092a918591610932565b505b92915050565b60006020601f830104846020850160005b8381101561095f57602081028381015190830152600101610943565b505050506000835160200184015281840190509392505050565b604051806060016040528061098c610a41565b8152602001610999610a41565b8152602001600081525090565b6040518060a001604052806109b9610a41565b81526020016109c6610a41565b8152600060208201526040016109da610a41565b81526020016109e76109ec565b905290565b6040518060e001604052806109ff610a41565b8152602001610a0c610a41565b8152602001610a19610a41565b8152602001610a26610a41565b81526020016000815260200160608152602001606081525090565b60408051808201909152600080825260208201529056fea2646970667358221220b75dbf27b1d13e97f3752cf35b5b0cb4662ddda551e861da96bb2ccd2f3842a164736f6c63430006070033",
  "bytecodeSha1": "4b865aae82614f67bbe972119347c7f2fe437657",
  "compiler": {
    "evm_version": "berlin",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.7"
  },
  "contractName": "UmbralDeserializerMock",
  "coverageMap": {
    "branches": {
      "12": {
        "UmbralDeserializer.toCapsule": {
          "61": [
            2179,
            2215,
            true
          ]
        },
        "UmbralDeserializer.toCapsuleFrag": {
          "62": [
            4112,
            4154,
            true
          ]
        },
        "UmbralDeserializer.toCorrectnessProof": {
          "63": [
            2762,
            2805,
            true
          ],
          "64": [
            3340,
            3382,
            false
          ]
        }
      },
      "28": {}
    },
    "statements": {
      "12": {
        "UmbralDeserializer.copyBytes": {
          "60": [
            10095,
            10139
          ]
        },
        "UmbralDeserializer.copyPoint": {
          "46": [
            8178,
            8196
          ],
          "47": [
            8206,
            8228
          ],
          "48": [
            8238,
            8275
          ]
        },
        "UmbralDeserializer.toCapsule": {
          "34": [
            2171,
            2216
          ],
          "35": [
            2279,
            2323
          ],
          "36": [
            2333,
            2377
          ],
          "37": [
            2387,
            2431
          ]
        },
        "UmbralDeserializer.toCapsuleFrag": {
          "38": [
            4104,
            4155
          ],
          "39": [
            4217,
            4260
          ],
          "40": [
            4270,
            4313
          ],
          "41": [
            4323,
            4358
          ],
          "42": [
            4400,
            4450
          ],
          "43": [
            4368,
            4390
          ],
          "44": [
            4461,
            4540
          ]
        },
        "UmbralDeserializer.toCorrectnessProof": {
          "45": [
            3806,
            3860
          ],
          "49": [
            2754,
            2806
          ],
          "50": [
            2817,
            2862
          ],
          "51": [
            2872,
            2917
          ],
          "52": [
            2927,
            2985
          ],
          "53": [
            2995,
            3046
          ],
          "54": [
            3056,
            3099
          ],
          "55": [
            3143,
            3191
          ],
          "56": [
            3109,
            3132
          ],
          "57": [
            3258,
            3326
          ],
          "58": [
            3398,
            3468
          ],
          "59": [
            3482,
            3540
          ]
        }
      },
      "28": {
        "UmbralDeserializerMock.toCapsule": {
          "0": [
            2181,
            2219
          ],
          "1": [
            2229,
            2274
          ],
          "2": [
            2284,
            2322
          ],
          "3": [
            2332,
            2377
          ],
          "4": [
            2387,
            2417
          ]
        },
        "UmbralDeserializerMock.toCapsuleFrag": {
          "16": [
            5453,
            5491
          ],
          "17": [
            5501,
            5546
          ],
          "18": [
            5556,
            5594
          ],
          "19": [
            5604,
            5649
          ],
          "20": [
            5659,
            5682
          ],
          "21": [
            5692,
            5744
          ],
          "22": [
            5754,
            5813
          ]
        },
        "UmbralDeserializerMock.toCorrectnessProof": {
          "23": [
            3031,
            3069
          ],
          "24": [
            3079,
            3124
          ],
          "25": [
            3134,
            3172
          ],
          "26": [
            3182,
            3227
          ],
          "27": [
            3237,
            3301
          ],
          "28": [
            3311,
            3382
          ],
          "29": [
            3392,
            3442
          ],
          "30": [
            3452,
            3509
          ],
          "31": [
            3519,
            3547
          ],
          "32": [
            3557,
            3594
          ],
          "33": [
            3604,
            3629
          ]
        },
        "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag": {
          "5": [
            4419,
            4457
          ],
          "6": [
            4467,
            4512
          ],
          "7": [
            4522,
            4560
          ],
          "8": [
            4570,
            4615
          ],
          "9": [
            4625,
            4689
          ],
          "10": [
            4699,
            4770
          ],
          "11": [
            4780,
            4830
          ],
          "12": [
            4840,
            4897
          ],
          "13": [
            4907,
            4935
          ],
          "14": [
            4945,
            4982
          ],
          "15": [
            4992,
            5017
          ]
        }
      }
    }
  },
  "dependencies": [
    "UmbralDeserializer"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80634b23d91a146100515780635d9cbcbe14610130578063be0b31c614610312578063dad66b0014610403575b600080fd5b6100f56004803603602081101561006757600080fd5b810190602081018135600160201b81111561008157600080fd5b82018360208201111561009357600080fd5b803590602001918460018302840111600160201b831117156100b457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104a7945050505050565b604080516001600160f81b03199687168152602081019590955292909416838301526060830152608082019290925290519081900360a00190f35b6101d46004803603602081101561014657600080fd5b810190602081018135600160201b81111561016057600080fd5b82018360208201111561017257600080fd5b803590602001918460018302840111600160201b8311171561019357600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104f3945050505050565b604080516001600160f81b0319808e16825260208083018e90528c821693830193909352606082018b9052898116608083015260a08201899052871660c082015260e08101869052610100810185905261016061012082018181528551918301919091528451919290916101408401916101808501919087019080838360005b8381101561026c578181015183820152602001610254565b50505050905090810190601f1680156102995780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156102cc5781810151838201526020016102b4565b50505050905090810190601f1680156102f95780820380516001836020036101000a031916815260200191505b509d505050505050505050505050505060405180910390f35b6103b66004803603602081101561032857600080fd5b810190602081018135600160201b81111561034257600080fd5b82018360208201111561035457600080fd5b803590602001918460018302840111600160201b8311171561037557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506105bf945050505050565b604080516001600160f81b031998891681526020810197909752948716868601526060860193909352608085019190915290931660a083015260c082019290925290519081900360e00190f35b6101d46004803603602081101561041957600080fd5b810190602081018135600160201b81111561043357600080fd5b82018360208201111561044557600080fd5b803590602001918460018302840111600160201b8311171561046657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610644945050505050565b60008060008060006104b7610979565b6104c087610700565b8051805160209182015182840151805193015160409094015160f892831b9c919b509290911b9850919650945092505050565b600080600080600080600080600060608061050c6109a6565b6105158d610757565b905061051f6109ec565b8160800151905080600001516000015160f81b9c5080600001516020015160001b9b5080602001516000015160f81b9a5080602001516020015160001b995080604001516000015160f81b985080604001516020015160001b975080606001516000015160f81b965080606001516020015160001b9550806080015160001b94508060a0015193508060c001519250505091939597999b90929496989a50565b60008060008060008060006105d26109a6565b6105db89610757565b905080600001516000015160f81b975080600001516020015160001b965080602001516000015160f81b955080602001516020015160001b94508060400151935080606001516000015160f81b925080606001516020015160001b915050919395979092949650565b600080600080600080600080600060608061065d6109ec565b6106668d6107df565b905080600001516000015160f81b9b5080600001516020015160001b9a5080602001516000015160f81b995080602001516020015160001b985080604001516000015160f81b975080604001516020015160001b965080606001516000015160f81b955080606001516020015160001b9450806080015160001b93508060a0015192508060c0015191505091939597999b90929496989a50565b610708610979565b815160621461071657600080fd5b600061072183610806565b905061073181836000015161080c565b905061074181836020015161080c565b905061074c81610827565b604083015250919050565b61075f6109a6565b815161016781101561077057600080fd5b600061077b84610806565b905061078b81846000015161080c565b905061079b81846020015161080c565b90506107a681610827565b60408401526060830151602091909101906107c290829061080c565b90506107d281608219840161082b565b6080840152509092915050565b6107e76109ec565b60006107f283610806565b90506107ff81845161082b565b9392505050565b60200190565b8151600183015160009190911a825260209091015260210190565b5190565b6108336109ec565b60e482101561084157600080fd5b61084f83826000015161080c565b925061085f83826020015161080c565b925061086f83826040015161080c565b925061087f83826060015161080c565b925061088a83610827565b608082015260408051818152606081018252602094909401939060208201818036833750505060a082018190526108c49084906040610932565b925060e482111561092c5760e319820167ffffffffffffffff811180156108ea57600080fd5b506040519080825280601f01601f191660200182016040528015610915576020820181803683370190505b5060c08201819052805161092a918591610932565b505b92915050565b60006020601f830104846020850160005b8381101561095f57602081028381015190830152600101610943565b505050506000835160200184015281840190509392505050565b604051806060016040528061098c610a41565b8152602001610999610a41565b8152602001600081525090565b6040518060a001604052806109b9610a41565b81526020016109c6610a41565b8152600060208201526040016109da610a41565b81526020016109e76109ec565b905290565b6040518060e001604052806109ff610a41565b8152602001610a0c610a41565b8152602001610a19610a41565b8152602001610a26610a41565b81526020016000815260200160608152602001606081525090565b60408051808201909152600080825260208201529056fea2646970667358221220b75dbf27b1d13e97f3752cf35b5b0cb4662ddda551e861da96bb2ccd2f3842a164736f6c63430006070033",
  "deployedSourceMap": "1770:4052:28:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1770:4052:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1849:575:28;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1849:575:28;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;1849:575:28;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1849:575:28;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1849:575:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1849:575:28;;-1:-1:-1;1849:575:28;;-1:-1:-1;;;;;1849:575:28:i;:::-;;;;-1:-1:-1;;;;;;1849:575:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3741:1283;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3741:1283:28;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;3741:1283:28;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;3741:1283:28;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3741:1283:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3741:1283:28;;-1:-1:-1;3741:1283:28;;-1:-1:-1;;;;;3741:1283:28:i;:::-;;;;-1:-1:-1;;;;;;3741:1283:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3741:1283:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3741:1283:28;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3741:1283:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5030:790;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5030:790:28;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;5030:790:28;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;5030:790:28;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5030:790:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;5030:790:28;;-1:-1:-1;5030:790:28;;-1:-1:-1;;;;;5030:790:28:i;:::-;;;;-1:-1:-1;;;;;;5030:790:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2430:1206;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2430:1206:28;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;2430:1206:28;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2430:1206:28;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2430:1206:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2430:1206:28;;-1:-1:-1;2430:1206:28;;-1:-1:-1;;;;;2430:1206:28:i;1849:575::-;1938:15;1967:20;2001:15;2030:20;2064:13;2102:41;;:::i;:::-;2146:25;:13;:23;:25::i;:::-;2199:14;;:19;;2252:21;;;;;2302:14;;;;:19;;2355:21;;;2403:13;;;;;2194:25;;;;;2252:21;;-1:-1:-1;2297:25:28;;;;;-1:-1:-1;2355:21:28;;-1:-1:-1;2403:13:28;-1:-1:-1;1849:575:28;-1:-1:-1;;;1849:575:28:o;3741:1283::-;3852:16;3882:21;3917:16;3947:21;3982:29;4025:34;4073:22;4109:27;4150:13;4177:27;4218:21;4264:43;;:::i;:::-;4310:27;:11;:25;:27::i;:::-;4264:73;;4347:48;;:::i;:::-;4398:5;:11;;;4347:62;;4438:5;:13;;;:18;;;4433:24;;4419:38;;4491:5;:13;;;:20;;;4483:29;;4467:45;;4541:5;:13;;;:18;;;4536:24;;4522:38;;4594:5;:13;;;:20;;;4586:29;;4570:45;;4657:5;:26;;;:31;;;4652:37;;4625:64;;4736:5;:26;;;:33;;;4728:42;;4699:71;;4805:5;:19;;;:24;;;4800:30;;4780:50;;4870:5;:19;;;:26;;;4862:35;;4840:57;;4923:5;:11;;;4915:20;;4907:28;;4962:5;:20;;;4945:37;;5003:5;:14;;;4992:25;;3741:1283;;;;;;;;;;;;;;;:::o;5030:790::-;5121:16;5151:21;5186:16;5216:21;5251:15;5280:23;5317:28;5370:43;;:::i;:::-;5416:27;:11;:25;:27::i;:::-;5370:73;;5472:5;:13;;;:18;;;5467:24;;5453:38;;5525:5;:13;;;:20;;;5517:29;;5501:45;;5575:5;:13;;;:18;;;5570:24;;5556:38;;5628:5;:13;;;:20;;;5620:29;;5604:45;;5669:5;:13;;;5659:23;;5718:5;:20;;;:25;;;5713:31;;5692:52;;5785:5;:20;;;:27;;;5777:36;;5754:59;;5030:790;;;;;;;;;;:::o;2430:1206::-;2526:16;2556:21;2591:16;2621:21;2656:29;2699:34;2747:22;2783:27;2824:13;2851:27;2892:21;2938:48;;:::i;:::-;2989:32;:11;:30;:32::i;:::-;2938:83;;3050:5;:13;;;:18;;;3045:24;;3031:38;;3103:5;:13;;;:20;;;3095:29;;3079:45;;3153:5;:13;;;:18;;;3148:24;;3134:38;;3206:5;:13;;;:20;;;3198:29;;3182:45;;3269:5;:26;;;:31;;;3264:37;;3237:64;;3348:5;:26;;;:33;;;3340:42;;3311:71;;3417:5;:19;;;:24;;;3412:30;;3392:50;;3482:5;:19;;;:26;;;3474:35;;3452:57;;3535:5;:11;;;3527:20;;3519:28;;3574:5;:20;;;3557:37;;3615:5;:14;;;3604:25;;2430:1206;;;;;;;;;;;;;;:::o;2055:383:12:-;2133:22;;:::i;:::-;2179:20;;1619:28;2179:36;2171:45;;12:1:-1;9;2:12;2171:45:12;2226:15;2244:25;2255:13;2244:10;:25::i;:::-;2226:43;;2289:34;2299:7;2308;:14;;;2289:9;:34::i;:::-;2279:44;;2343:34;2353:7;2362;:14;;;2343:9;:34::i;:::-;2333:44;;2411:19;2422:7;2411:10;:19::i;:::-;2387:13;;;:44;-1:-1:-1;2387:7:12;2055:383;-1:-1:-1;2055:383:12:o;3929:618::-;4009:24;;:::i;:::-;4076:18;;1859:42;4112;;;4104:51;;12:1:-1;9;2:12;4104:51:12;4166:15;4184:23;4195:11;4184:10;:23::i;:::-;4166:41;;4227:33;4237:7;4246:5;:13;;;4227:9;:33::i;:::-;4217:43;;4280:33;4290:7;4299:5;:13;;;4280:9;:33::i;:::-;4270:43;;4339:19;4350:7;4339:10;:19::i;:::-;4323:13;;;:35;4429:20;;;;1499:2;4368:22;;;;;4410:40;;4368:22;;4410:9;:40::i;:::-;4400:50;-1:-1:-1;4475:65:12;4400:50;-1:-1:-1;;4503:36:12;;4475:18;:65::i;:::-;4461:11;;;:79;-1:-1:-1;4461:5:12;;3929:618;-1:-1:-1;;3929:618:12:o;3625:242::-;3710:29;;:::i;:::-;3755:15;3773:23;3784:11;3773:10;:23::i;:::-;3755:41;;3813:47;3832:7;3841:11;:18;3813;:47::i;:::-;3806:54;3625:242;-1:-1:-1;;;3625:242:12:o;7560:177::-;7697:2;7685:15;;7660:71::o;7824:458::-;8097:15;;8156:1;8142:16;;8136:23;7913:21;8089:24;;;;8178:18;;8206:13;;;;:22;1537:2;8254:21;;7824:458::o;8664:151::-;8784:15;;8760:49::o;2605:952::-;2709:29;;:::i;:::-;1695:45;2762:43;;;2754:52;;12:1:-1;9;2:12;2754:52:12;2828:34;2838:8;2848:5;:13;;;2828:9;:34::i;:::-;2817:45;;2883:34;2893:8;2903:5;:13;;;2883:9;:34::i;:::-;2872:45;;2938:47;2948:8;2958:5;:26;;;2938:9;:47::i;:::-;2927:58;;3006:40;3016:8;3026:5;:19;;;3006:9;:40::i;:::-;2995:51;;3078:20;3089:8;3078:10;:20::i;:::-;3056:11;;;:43;1579:2;3166:25;;;;;;;;;;1499:2;3109:23;;;;;3166:25;;;;21:6:-1;;108:14;3166:25:12;87:42:-1;-1:-1;;;3143:20:12;;;:48;;;3269:57;;3279:8;;1579:2;3269:9;:57::i;:::-;3258:68;-1:-1:-1;1695:45:12;3340:42;;3336:215;;;-1:-1:-1;;3425:42:12;;3415:53;;;2:2:-1;;;;27:1;24;17:12;2:2;3415:53:12;;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;108:14;3415:53:12;87:42:-1;143:17;;-1:-1;3415:53:12;-1:-1:-1;3398:14:12;;;:70;;;3518:21;;3482:58;;3492:8;;3482:9;:58::i;:::-;;3336:215;2605:952;;;;:::o;9187:959::-;9320:21;9610:2;9605;9591:12;9587:21;9583:30;9640:13;9698:2;9689:7;9685:16;9745:1;9714:301;9828:5;9825:1;9822:12;9714:301;;;9921:2;9914:10;;9980:19;;;9974:26;9948:24;;;9941:60;9865:1;9858:9;9714:301;;;9734:14;;;;10074:1;10062:7;10056:14;10052:2;10048:23;10039:7;10035:37;10028:48;10127:12;10111:13;:28;10095:44;;9187:959;;;;;:::o;1770:4052:28:-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;1770:4052:28;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Contract for testing UmbralDeserializer library",
    "methods": {}
  },
  "offset": [
    1770,
    5822
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4B23D91A EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x5D9CBCBE EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0xBE0B31C6 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xDAD66B00 EQ PUSH2 0x403 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x4A7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP7 DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP3 SWAP1 SWAP5 AND DUP4 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x4F3 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP1 DUP15 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP15 SWAP1 MSTORE DUP13 DUP3 AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP3 ADD DUP12 SWAP1 MSTORE DUP10 DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD DUP10 SWAP1 MSTORE DUP8 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP6 SWAP1 MSTORE PUSH2 0x160 PUSH2 0x120 DUP3 ADD DUP2 DUP2 MSTORE DUP6 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x140 DUP5 ADD SWAP2 PUSH2 0x180 DUP6 ADD SWAP2 SWAP1 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x254 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x299 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x5BF SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP9 DUP10 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP5 DUP8 AND DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xE0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x644 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4B7 PUSH2 0x979 JUMP JUMPDEST PUSH2 0x4C0 DUP8 PUSH2 0x700 JUMP JUMPDEST DUP1 MLOAD DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD MLOAD DUP3 DUP5 ADD MLOAD DUP1 MLOAD SWAP4 ADD MLOAD PUSH1 0x40 SWAP1 SWAP5 ADD MLOAD PUSH1 0xF8 SWAP3 DUP4 SHL SWAP13 SWAP2 SWAP12 POP SWAP3 SWAP1 SWAP2 SHL SWAP9 POP SWAP2 SWAP7 POP SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0x50C PUSH2 0x9A6 JUMP JUMPDEST PUSH2 0x515 DUP14 PUSH2 0x757 JUMP JUMPDEST SWAP1 POP PUSH2 0x51F PUSH2 0x9EC JUMP JUMPDEST DUP2 PUSH1 0x80 ADD MLOAD SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0xF8 SHL SWAP13 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 SHL SWAP12 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0xF8 SHL SWAP11 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 SHL SWAP10 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0xF8 SHL SWAP9 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 SHL SWAP8 POP DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0xF8 SHL SWAP7 POP DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 SHL SWAP6 POP DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x0 SHL SWAP5 POP DUP1 PUSH1 0xA0 ADD MLOAD SWAP4 POP DUP1 PUSH1 0xC0 ADD MLOAD SWAP3 POP POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP10 SWAP12 SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 SWAP11 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x5D2 PUSH2 0x9A6 JUMP JUMPDEST PUSH2 0x5DB DUP10 PUSH2 0x757 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0xF8 SHL SWAP8 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 SHL SWAP7 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0xF8 SHL SWAP6 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 SHL SWAP5 POP DUP1 PUSH1 0x40 ADD MLOAD SWAP4 POP DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0xF8 SHL SWAP3 POP DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0x65D PUSH2 0x9EC JUMP JUMPDEST PUSH2 0x666 DUP14 PUSH2 0x7DF JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0xF8 SHL SWAP12 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 SHL SWAP11 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0xF8 SHL SWAP10 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 SHL SWAP9 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0xF8 SHL SWAP8 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 SHL SWAP7 POP DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0xF8 SHL SWAP6 POP DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 SHL SWAP5 POP DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x0 SHL SWAP4 POP DUP1 PUSH1 0xA0 ADD MLOAD SWAP3 POP DUP1 PUSH1 0xC0 ADD MLOAD SWAP2 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP10 SWAP12 SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 SWAP11 POP JUMP JUMPDEST PUSH2 0x708 PUSH2 0x979 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x62 EQ PUSH2 0x716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x721 DUP4 PUSH2 0x806 JUMP JUMPDEST SWAP1 POP PUSH2 0x731 DUP2 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x80C JUMP JUMPDEST SWAP1 POP PUSH2 0x741 DUP2 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x80C JUMP JUMPDEST SWAP1 POP PUSH2 0x74C DUP2 PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75F PUSH2 0x9A6 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x167 DUP2 LT ISZERO PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x77B DUP5 PUSH2 0x806 JUMP JUMPDEST SWAP1 POP PUSH2 0x78B DUP2 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x80C JUMP JUMPDEST SWAP1 POP PUSH2 0x79B DUP2 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x80C JUMP JUMPDEST SWAP1 POP PUSH2 0x7A6 DUP2 PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x7C2 SWAP1 DUP3 SWAP1 PUSH2 0x80C JUMP JUMPDEST SWAP1 POP PUSH2 0x7D2 DUP2 PUSH1 0x82 NOT DUP5 ADD PUSH2 0x82B JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7E7 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F2 DUP4 PUSH2 0x806 JUMP JUMPDEST SWAP1 POP PUSH2 0x7FF DUP2 DUP5 MLOAD PUSH2 0x82B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 DUP4 ADD MLOAD PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE PUSH1 0x21 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x833 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0xE4 DUP3 LT ISZERO PUSH2 0x841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x84F DUP4 DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x80C JUMP JUMPDEST SWAP3 POP PUSH2 0x85F DUP4 DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x80C JUMP JUMPDEST SWAP3 POP PUSH2 0x86F DUP4 DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x80C JUMP JUMPDEST SWAP3 POP PUSH2 0x87F DUP4 DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0x80C JUMP JUMPDEST SWAP3 POP PUSH2 0x88A DUP4 PUSH2 0x827 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x8C4 SWAP1 DUP5 SWAP1 PUSH1 0x40 PUSH2 0x932 JUMP JUMPDEST SWAP3 POP PUSH1 0xE4 DUP3 GT ISZERO PUSH2 0x92C JUMPI PUSH1 0xE3 NOT DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x8EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x915 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE DUP1 MLOAD PUSH2 0x92A SWAP2 DUP6 SWAP2 PUSH2 0x932 JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV DUP5 PUSH1 0x20 DUP6 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x95F JUMPI PUSH1 0x20 DUP2 MUL DUP4 DUP2 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x943 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 DUP4 MLOAD PUSH1 0x20 ADD DUP5 ADD MSTORE DUP2 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x98C PUSH2 0xA41 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x999 PUSH2 0xA41 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x9B9 PUSH2 0xA41 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C6 PUSH2 0xA41 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD PUSH2 0x9DA PUSH2 0xA41 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9E7 PUSH2 0x9EC JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x9FF PUSH2 0xA41 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA0C PUSH2 0xA41 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA19 PUSH2 0xA41 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA26 PUSH2 0xA41 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0x5D 0xBF 0x27 0xB1 0xD1 RETURNDATACOPY SWAP8 RETURN PUSH22 0x2CF35B5B0CB4662DDDA551E861DA96BB2CCD2F3842A1 PUSH5 0x736F6C6343 STOP MOD SMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "REVERT",
      "path": "28"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        1770,
        5822
      ],
      "op": "POP",
      "path": "28"
    },
    "18": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "21": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "LT",
      "path": "28"
    },
    "22": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "26": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "29": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "SHR",
      "path": "28"
    },
    "32": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "33": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x4B23D91A"
    },
    "38": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "EQ",
      "path": "28"
    },
    "39": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "43": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "44": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x5D9CBCBE"
    },
    "49": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "EQ",
      "path": "28"
    },
    "50": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x130"
    },
    "53": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "54": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "55": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xBE0B31C6"
    },
    "60": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "EQ",
      "path": "28"
    },
    "61": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x312"
    },
    "64": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "65": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "66": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xDAD66B00"
    },
    "71": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "EQ",
      "path": "28"
    },
    "72": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x403"
    },
    "75": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "76": {
      "fn": null,
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "77": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "79": {
      "op": "DUP1"
    },
    "80": {
      "first_revert": true,
      "op": "REVERT"
    },
    "81": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "82": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF5"
    },
    "85": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "87": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP1",
      "path": "28"
    },
    "88": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "89": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SUB",
      "path": "28"
    },
    "90": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "92": {
      "op": "DUP2"
    },
    "93": {
      "op": "LT"
    },
    "94": {
      "op": "ISZERO"
    },
    "95": {
      "op": "PUSH2",
      "value": "0x67"
    },
    "98": {
      "op": "JUMPI"
    },
    "99": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "101": {
      "op": "DUP1"
    },
    "102": {
      "op": "REVERT"
    },
    "103": {
      "op": "JUMPDEST"
    },
    "104": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP2",
      "path": "28"
    },
    "105": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "ADD",
      "path": "28"
    },
    "106": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "107": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "109": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP2",
      "path": "28"
    },
    "110": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "ADD",
      "path": "28"
    },
    "111": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP2",
      "path": "28"
    },
    "112": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "117": {
      "op": "SHL"
    },
    "118": {
      "op": "DUP2"
    },
    "119": {
      "op": "GT"
    },
    "120": {
      "op": "ISZERO"
    },
    "121": {
      "op": "PUSH2",
      "value": "0x81"
    },
    "124": {
      "op": "JUMPI"
    },
    "125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "127": {
      "op": "DUP1"
    },
    "128": {
      "op": "REVERT"
    },
    "129": {
      "op": "JUMPDEST"
    },
    "130": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP3",
      "path": "28"
    },
    "131": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "ADD",
      "path": "28"
    },
    "132": {
      "op": "DUP4"
    },
    "133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "135": {
      "op": "DUP3"
    },
    "136": {
      "op": "ADD"
    },
    "137": {
      "op": "GT"
    },
    "138": {
      "op": "ISZERO"
    },
    "139": {
      "op": "PUSH2",
      "value": "0x93"
    },
    "142": {
      "op": "JUMPI"
    },
    "143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "145": {
      "op": "DUP1"
    },
    "146": {
      "op": "REVERT"
    },
    "147": {
      "op": "JUMPDEST"
    },
    "148": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP1",
      "path": "28"
    },
    "149": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "150": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "151": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "153": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "ADD",
      "path": "28"
    },
    "154": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "155": {
      "op": "DUP5"
    },
    "156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "158": {
      "op": "DUP4"
    },
    "159": {
      "op": "MUL"
    },
    "160": {
      "op": "DUP5"
    },
    "161": {
      "op": "ADD"
    },
    "162": {
      "op": "GT"
    },
    "163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "167": {
      "op": "SHL"
    },
    "168": {
      "op": "DUP4"
    },
    "169": {
      "op": "GT"
    },
    "170": {
      "op": "OR"
    },
    "171": {
      "op": "ISZERO"
    },
    "172": {
      "op": "PUSH2",
      "value": "0xB4"
    },
    "175": {
      "op": "JUMPI"
    },
    "176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "178": {
      "op": "DUP1"
    },
    "179": {
      "op": "REVERT"
    },
    "180": {
      "op": "JUMPDEST"
    },
    "181": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "182": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "183": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP1",
      "path": "28"
    },
    "184": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP1",
      "path": "28"
    },
    "185": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "187": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "ADD",
      "path": "28"
    },
    "188": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "190": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP1",
      "path": "28"
    },
    "191": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "192": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DIV",
      "path": "28"
    },
    "193": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "MUL",
      "path": "28"
    },
    "194": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "196": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "ADD",
      "path": "28"
    },
    "197": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "199": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "200": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "201": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP2",
      "path": "28"
    },
    "202": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "ADD",
      "path": "28"
    },
    "203": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "205": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "206": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP1",
      "path": "28"
    },
    "207": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "208": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "209": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "210": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "211": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP2",
      "path": "28"
    },
    "212": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP2",
      "path": "28"
    },
    "213": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "214": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "216": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "ADD",
      "path": "28"
    },
    "217": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP4",
      "path": "28"
    },
    "218": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP4",
      "path": "28"
    },
    "219": {
      "op": "DUP1"
    },
    "220": {
      "op": "DUP3"
    },
    "221": {
      "op": "DUP5"
    },
    "222": {
      "op": "CALLDATACOPY"
    },
    "223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "225": {
      "op": "SWAP3"
    },
    "226": {
      "op": "ADD"
    },
    "227": {
      "op": "SWAP2"
    },
    "228": {
      "op": "SWAP1"
    },
    "229": {
      "op": "SWAP2"
    },
    "230": {
      "op": "MSTORE"
    },
    "231": {
      "op": "POP"
    },
    "232": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "233": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "234": {
      "op": "POP"
    },
    "235": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4A7"
    },
    "238": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "239": {
      "op": "POP"
    },
    "240": {
      "op": "POP"
    },
    "241": {
      "op": "POP"
    },
    "242": {
      "op": "POP"
    },
    "243": {
      "op": "POP"
    },
    "244": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "jump": "i",
      "offset": [
        1849,
        2424
      ],
      "op": "JUMP",
      "path": "28"
    },
    "245": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "246": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "248": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP1",
      "path": "28"
    },
    "249": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "254": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "256": {
      "op": "SHL"
    },
    "257": {
      "op": "SUB"
    },
    "258": {
      "op": "NOT"
    },
    "259": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP7",
      "path": "28"
    },
    "260": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP8",
      "path": "28"
    },
    "261": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "AND",
      "path": "28"
    },
    "262": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP2",
      "path": "28"
    },
    "263": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "264": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "266": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP2",
      "path": "28"
    },
    "267": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "ADD",
      "path": "28"
    },
    "268": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "269": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "270": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "271": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "272": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "273": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "274": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "275": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "AND",
      "path": "28"
    },
    "276": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP4",
      "path": "28"
    },
    "277": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP4",
      "path": "28"
    },
    "278": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "ADD",
      "path": "28"
    },
    "279": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "280": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "282": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP4",
      "path": "28"
    },
    "283": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "ADD",
      "path": "28"
    },
    "284": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "285": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x80"
    },
    "287": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP3",
      "path": "28"
    },
    "288": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "ADD",
      "path": "28"
    },
    "289": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "290": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "291": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "292": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "293": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "294": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "295": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "296": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "DUP2",
      "path": "28"
    },
    "297": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "298": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SUB",
      "path": "28"
    },
    "299": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA0"
    },
    "301": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "ADD",
      "path": "28"
    },
    "302": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "303": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "RETURN",
      "path": "28"
    },
    "304": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "305": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D4"
    },
    "308": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "310": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "311": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "312": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SUB",
      "path": "28"
    },
    "313": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "315": {
      "op": "DUP2"
    },
    "316": {
      "op": "LT"
    },
    "317": {
      "op": "ISZERO"
    },
    "318": {
      "op": "PUSH2",
      "value": "0x146"
    },
    "321": {
      "op": "JUMPI"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "324": {
      "op": "DUP1"
    },
    "325": {
      "op": "REVERT"
    },
    "326": {
      "op": "JUMPDEST"
    },
    "327": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "328": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "329": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "330": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "332": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "333": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "334": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "335": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "340": {
      "op": "SHL"
    },
    "341": {
      "op": "DUP2"
    },
    "342": {
      "op": "GT"
    },
    "343": {
      "op": "ISZERO"
    },
    "344": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "347": {
      "op": "JUMPI"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "350": {
      "op": "DUP1"
    },
    "351": {
      "op": "REVERT"
    },
    "352": {
      "op": "JUMPDEST"
    },
    "353": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP3",
      "path": "28"
    },
    "354": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "355": {
      "op": "DUP4"
    },
    "356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "358": {
      "op": "DUP3"
    },
    "359": {
      "op": "ADD"
    },
    "360": {
      "op": "GT"
    },
    "361": {
      "op": "ISZERO"
    },
    "362": {
      "op": "PUSH2",
      "value": "0x172"
    },
    "365": {
      "op": "JUMPI"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "368": {
      "op": "DUP1"
    },
    "369": {
      "op": "REVERT"
    },
    "370": {
      "op": "JUMPDEST"
    },
    "371": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "372": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "373": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "374": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "376": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "377": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "378": {
      "op": "DUP5"
    },
    "379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "381": {
      "op": "DUP4"
    },
    "382": {
      "op": "MUL"
    },
    "383": {
      "op": "DUP5"
    },
    "384": {
      "op": "ADD"
    },
    "385": {
      "op": "GT"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "390": {
      "op": "SHL"
    },
    "391": {
      "op": "DUP4"
    },
    "392": {
      "op": "GT"
    },
    "393": {
      "op": "OR"
    },
    "394": {
      "op": "ISZERO"
    },
    "395": {
      "op": "PUSH2",
      "value": "0x193"
    },
    "398": {
      "op": "JUMPI"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "401": {
      "op": "DUP1"
    },
    "402": {
      "op": "REVERT"
    },
    "403": {
      "op": "JUMPDEST"
    },
    "404": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "405": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "406": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "407": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "408": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "410": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "411": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "413": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "414": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "415": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DIV",
      "path": "28"
    },
    "416": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MUL",
      "path": "28"
    },
    "417": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "419": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "420": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "422": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "423": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "424": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "425": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "426": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "428": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "429": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "430": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "431": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "432": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "433": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "434": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "435": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "436": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "437": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "439": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "440": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP4",
      "path": "28"
    },
    "441": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP4",
      "path": "28"
    },
    "442": {
      "op": "DUP1"
    },
    "443": {
      "op": "DUP3"
    },
    "444": {
      "op": "DUP5"
    },
    "445": {
      "op": "CALLDATACOPY"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "448": {
      "op": "SWAP3"
    },
    "449": {
      "op": "ADD"
    },
    "450": {
      "op": "SWAP2"
    },
    "451": {
      "op": "SWAP1"
    },
    "452": {
      "op": "SWAP2"
    },
    "453": {
      "op": "MSTORE"
    },
    "454": {
      "op": "POP"
    },
    "455": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "456": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "457": {
      "op": "POP"
    },
    "458": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4F3"
    },
    "461": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "462": {
      "op": "POP"
    },
    "463": {
      "op": "POP"
    },
    "464": {
      "op": "POP"
    },
    "465": {
      "op": "POP"
    },
    "466": {
      "op": "POP"
    },
    "467": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "jump": "i",
      "offset": [
        3741,
        5024
      ],
      "op": "JUMP",
      "path": "28"
    },
    "468": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "469": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "471": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "472": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "477": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "479": {
      "op": "SHL"
    },
    "480": {
      "op": "SUB"
    },
    "481": {
      "op": "NOT"
    },
    "482": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "483": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP15",
      "path": "28"
    },
    "484": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "AND",
      "path": "28"
    },
    "485": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP3",
      "path": "28"
    },
    "486": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "487": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "489": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "490": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP4",
      "path": "28"
    },
    "491": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "492": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP15",
      "path": "28"
    },
    "493": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "494": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "495": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP13",
      "path": "28"
    },
    "496": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP3",
      "path": "28"
    },
    "497": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "AND",
      "path": "28"
    },
    "498": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "499": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP4",
      "path": "28"
    },
    "500": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "501": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "502": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "503": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "504": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "505": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "507": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP3",
      "path": "28"
    },
    "508": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "509": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP12",
      "path": "28"
    },
    "510": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "511": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "512": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP10",
      "path": "28"
    },
    "513": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "514": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "AND",
      "path": "28"
    },
    "515": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x80"
    },
    "517": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP4",
      "path": "28"
    },
    "518": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "519": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "520": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA0"
    },
    "522": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP3",
      "path": "28"
    },
    "523": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "524": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP10",
      "path": "28"
    },
    "525": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "526": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "527": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP8",
      "path": "28"
    },
    "528": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "AND",
      "path": "28"
    },
    "529": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xC0"
    },
    "531": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP3",
      "path": "28"
    },
    "532": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "533": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "534": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "536": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "537": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "538": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP7",
      "path": "28"
    },
    "539": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "540": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "541": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x100"
    },
    "544": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "545": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "546": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP6",
      "path": "28"
    },
    "547": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "548": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "549": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x160"
    },
    "552": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x120"
    },
    "555": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP3",
      "path": "28"
    },
    "556": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "557": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "558": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "559": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "560": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP6",
      "path": "28"
    },
    "561": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "562": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "563": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP4",
      "path": "28"
    },
    "564": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "565": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "566": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "567": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "568": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "569": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP5",
      "path": "28"
    },
    "570": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "571": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "572": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "573": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "574": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "575": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x140"
    },
    "578": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP5",
      "path": "28"
    },
    "579": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "580": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "581": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x180"
    },
    "584": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP6",
      "path": "28"
    },
    "585": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "586": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "587": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "588": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP8",
      "path": "28"
    },
    "589": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "590": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "591": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "592": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP4",
      "path": "28"
    },
    "593": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP4",
      "path": "28"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "596": {
      "op": "JUMPDEST"
    },
    "597": {
      "op": "DUP4"
    },
    "598": {
      "op": "DUP2"
    },
    "599": {
      "op": "LT"
    },
    "600": {
      "op": "ISZERO"
    },
    "601": {
      "op": "PUSH2",
      "value": "0x26C"
    },
    "604": {
      "op": "JUMPI"
    },
    "605": {
      "op": "DUP2"
    },
    "606": {
      "op": "DUP2"
    },
    "607": {
      "op": "ADD"
    },
    "608": {
      "op": "MLOAD"
    },
    "609": {
      "op": "DUP4"
    },
    "610": {
      "op": "DUP3"
    },
    "611": {
      "op": "ADD"
    },
    "612": {
      "op": "MSTORE"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "615": {
      "op": "ADD"
    },
    "616": {
      "op": "PUSH2",
      "value": "0x254"
    },
    "619": {
      "op": "JUMP"
    },
    "620": {
      "op": "JUMPDEST"
    },
    "621": {
      "op": "POP"
    },
    "622": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "623": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "624": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "625": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "626": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "627": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "628": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "629": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "630": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "631": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "633": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "AND",
      "path": "28"
    },
    "634": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "635": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "636": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x299"
    },
    "639": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "640": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "641": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP3",
      "path": "28"
    },
    "642": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SUB",
      "path": "28"
    },
    "643": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "644": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "645": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "647": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP4",
      "path": "28"
    },
    "648": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "650": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SUB",
      "path": "28"
    },
    "651": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x100"
    },
    "654": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "EXP",
      "path": "28"
    },
    "655": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SUB",
      "path": "28"
    },
    "656": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "NOT",
      "path": "28"
    },
    "657": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "AND",
      "path": "28"
    },
    "658": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "659": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "660": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "662": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "663": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "664": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "665": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "666": {
      "op": "POP"
    },
    "667": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP4",
      "path": "28"
    },
    "668": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "669": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SUB",
      "path": "28"
    },
    "670": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP3",
      "path": "28"
    },
    "671": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "672": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP5",
      "path": "28"
    },
    "673": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "674": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "675": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "676": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP5",
      "path": "28"
    },
    "677": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "678": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "680": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "681": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP3",
      "path": "28"
    },
    "682": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "683": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "684": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP7",
      "path": "28"
    },
    "685": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "686": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "687": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "688": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP4",
      "path": "28"
    },
    "689": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP4",
      "path": "28"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "692": {
      "op": "JUMPDEST"
    },
    "693": {
      "op": "DUP4"
    },
    "694": {
      "op": "DUP2"
    },
    "695": {
      "op": "LT"
    },
    "696": {
      "op": "ISZERO"
    },
    "697": {
      "op": "PUSH2",
      "value": "0x2CC"
    },
    "700": {
      "op": "JUMPI"
    },
    "701": {
      "op": "DUP2"
    },
    "702": {
      "op": "DUP2"
    },
    "703": {
      "op": "ADD"
    },
    "704": {
      "op": "MLOAD"
    },
    "705": {
      "op": "DUP4"
    },
    "706": {
      "op": "DUP3"
    },
    "707": {
      "op": "ADD"
    },
    "708": {
      "op": "MSTORE"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "711": {
      "op": "ADD"
    },
    "712": {
      "op": "PUSH2",
      "value": "0x2B4"
    },
    "715": {
      "op": "JUMP"
    },
    "716": {
      "op": "JUMPDEST"
    },
    "717": {
      "op": "POP"
    },
    "718": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "719": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "720": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "721": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "722": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "723": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "724": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "725": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "726": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "727": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "729": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "AND",
      "path": "28"
    },
    "730": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "731": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "732": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2F9"
    },
    "735": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "736": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "737": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP3",
      "path": "28"
    },
    "738": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SUB",
      "path": "28"
    },
    "739": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "740": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "741": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "743": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP4",
      "path": "28"
    },
    "744": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "746": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SUB",
      "path": "28"
    },
    "747": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x100"
    },
    "750": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "EXP",
      "path": "28"
    },
    "751": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SUB",
      "path": "28"
    },
    "752": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "NOT",
      "path": "28"
    },
    "753": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "AND",
      "path": "28"
    },
    "754": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP2",
      "path": "28"
    },
    "755": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "756": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "758": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "ADD",
      "path": "28"
    },
    "759": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "760": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "761": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "762": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "763": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP14",
      "path": "28"
    },
    "764": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "765": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "766": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "767": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "768": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "769": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "770": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "771": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "772": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "773": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "774": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "775": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "776": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "777": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "778": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "780": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "781": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "DUP1",
      "path": "28"
    },
    "782": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "783": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SUB",
      "path": "28"
    },
    "784": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "785": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "RETURN",
      "path": "28"
    },
    "786": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "787": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3B6"
    },
    "790": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "792": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP1",
      "path": "28"
    },
    "793": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "794": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SUB",
      "path": "28"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "797": {
      "op": "DUP2"
    },
    "798": {
      "op": "LT"
    },
    "799": {
      "op": "ISZERO"
    },
    "800": {
      "op": "PUSH2",
      "value": "0x328"
    },
    "803": {
      "op": "JUMPI"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "806": {
      "op": "DUP1"
    },
    "807": {
      "op": "REVERT"
    },
    "808": {
      "op": "JUMPDEST"
    },
    "809": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP2",
      "path": "28"
    },
    "810": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "ADD",
      "path": "28"
    },
    "811": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "812": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "814": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP2",
      "path": "28"
    },
    "815": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "ADD",
      "path": "28"
    },
    "816": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP2",
      "path": "28"
    },
    "817": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "822": {
      "op": "SHL"
    },
    "823": {
      "op": "DUP2"
    },
    "824": {
      "op": "GT"
    },
    "825": {
      "op": "ISZERO"
    },
    "826": {
      "op": "PUSH2",
      "value": "0x342"
    },
    "829": {
      "op": "JUMPI"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "832": {
      "op": "DUP1"
    },
    "833": {
      "op": "REVERT"
    },
    "834": {
      "op": "JUMPDEST"
    },
    "835": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP3",
      "path": "28"
    },
    "836": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "ADD",
      "path": "28"
    },
    "837": {
      "op": "DUP4"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "840": {
      "op": "DUP3"
    },
    "841": {
      "op": "ADD"
    },
    "842": {
      "op": "GT"
    },
    "843": {
      "op": "ISZERO"
    },
    "844": {
      "op": "PUSH2",
      "value": "0x354"
    },
    "847": {
      "op": "JUMPI"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "850": {
      "op": "DUP1"
    },
    "851": {
      "op": "REVERT"
    },
    "852": {
      "op": "JUMPDEST"
    },
    "853": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP1",
      "path": "28"
    },
    "854": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "855": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "856": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "858": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "ADD",
      "path": "28"
    },
    "859": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "860": {
      "op": "DUP5"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "863": {
      "op": "DUP4"
    },
    "864": {
      "op": "MUL"
    },
    "865": {
      "op": "DUP5"
    },
    "866": {
      "op": "ADD"
    },
    "867": {
      "op": "GT"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "872": {
      "op": "SHL"
    },
    "873": {
      "op": "DUP4"
    },
    "874": {
      "op": "GT"
    },
    "875": {
      "op": "OR"
    },
    "876": {
      "op": "ISZERO"
    },
    "877": {
      "op": "PUSH2",
      "value": "0x375"
    },
    "880": {
      "op": "JUMPI"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "883": {
      "op": "DUP1"
    },
    "884": {
      "op": "REVERT"
    },
    "885": {
      "op": "JUMPDEST"
    },
    "886": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "887": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "888": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP1",
      "path": "28"
    },
    "889": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP1",
      "path": "28"
    },
    "890": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "892": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "ADD",
      "path": "28"
    },
    "893": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "895": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP1",
      "path": "28"
    },
    "896": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "897": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DIV",
      "path": "28"
    },
    "898": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "MUL",
      "path": "28"
    },
    "899": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "901": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "ADD",
      "path": "28"
    },
    "902": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "904": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "905": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "906": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP2",
      "path": "28"
    },
    "907": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "ADD",
      "path": "28"
    },
    "908": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "910": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "911": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP1",
      "path": "28"
    },
    "912": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "913": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "914": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "915": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "916": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP2",
      "path": "28"
    },
    "917": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP2",
      "path": "28"
    },
    "918": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "919": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "921": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "ADD",
      "path": "28"
    },
    "922": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP4",
      "path": "28"
    },
    "923": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP4",
      "path": "28"
    },
    "924": {
      "op": "DUP1"
    },
    "925": {
      "op": "DUP3"
    },
    "926": {
      "op": "DUP5"
    },
    "927": {
      "op": "CALLDATACOPY"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "930": {
      "op": "SWAP3"
    },
    "931": {
      "op": "ADD"
    },
    "932": {
      "op": "SWAP2"
    },
    "933": {
      "op": "SWAP1"
    },
    "934": {
      "op": "SWAP2"
    },
    "935": {
      "op": "MSTORE"
    },
    "936": {
      "op": "POP"
    },
    "937": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "938": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "939": {
      "op": "POP"
    },
    "940": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5BF"
    },
    "943": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "op": "POP"
    },
    "946": {
      "op": "POP"
    },
    "947": {
      "op": "POP"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "jump": "i",
      "offset": [
        5030,
        5820
      ],
      "op": "JUMP",
      "path": "28"
    },
    "950": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "951": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "953": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP1",
      "path": "28"
    },
    "954": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "961": {
      "op": "SHL"
    },
    "962": {
      "op": "SUB"
    },
    "963": {
      "op": "NOT"
    },
    "964": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP9",
      "path": "28"
    },
    "965": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP10",
      "path": "28"
    },
    "966": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "AND",
      "path": "28"
    },
    "967": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP2",
      "path": "28"
    },
    "968": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "969": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "971": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP2",
      "path": "28"
    },
    "972": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "ADD",
      "path": "28"
    },
    "973": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP8",
      "path": "28"
    },
    "974": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "975": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP8",
      "path": "28"
    },
    "976": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "977": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "978": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP8",
      "path": "28"
    },
    "979": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "AND",
      "path": "28"
    },
    "980": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP7",
      "path": "28"
    },
    "981": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP7",
      "path": "28"
    },
    "982": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "ADD",
      "path": "28"
    },
    "983": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "984": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "986": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP7",
      "path": "28"
    },
    "987": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "ADD",
      "path": "28"
    },
    "988": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "989": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "990": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "991": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "992": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x80"
    },
    "994": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP6",
      "path": "28"
    },
    "995": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "ADD",
      "path": "28"
    },
    "996": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "997": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "998": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "999": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1000": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1001": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "1002": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "AND",
      "path": "28"
    },
    "1003": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA0"
    },
    "1005": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP4",
      "path": "28"
    },
    "1006": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "ADD",
      "path": "28"
    },
    "1007": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1008": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xC0"
    },
    "1010": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1011": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "ADD",
      "path": "28"
    },
    "1012": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1013": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1014": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1015": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1016": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1017": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1018": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1019": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1020": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1021": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SUB",
      "path": "28"
    },
    "1022": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "1024": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "ADD",
      "path": "28"
    },
    "1025": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1026": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "RETURN",
      "path": "28"
    },
    "1027": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1028": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D4"
    },
    "1031": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1033": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1034": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1035": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SUB",
      "path": "28"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1038": {
      "op": "DUP2"
    },
    "1039": {
      "op": "LT"
    },
    "1040": {
      "op": "ISZERO"
    },
    "1041": {
      "op": "PUSH2",
      "value": "0x419"
    },
    "1044": {
      "op": "JUMPI"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1047": {
      "op": "DUP1"
    },
    "1048": {
      "op": "REVERT"
    },
    "1049": {
      "op": "JUMPDEST"
    },
    "1050": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1051": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "ADD",
      "path": "28"
    },
    "1052": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1053": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1055": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1056": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "ADD",
      "path": "28"
    },
    "1057": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1058": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "DUP2"
    },
    "1065": {
      "op": "GT"
    },
    "1066": {
      "op": "ISZERO"
    },
    "1067": {
      "op": "PUSH2",
      "value": "0x433"
    },
    "1070": {
      "op": "JUMPI"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1073": {
      "op": "DUP1"
    },
    "1074": {
      "op": "REVERT"
    },
    "1075": {
      "op": "JUMPDEST"
    },
    "1076": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1077": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "ADD",
      "path": "28"
    },
    "1078": {
      "op": "DUP4"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1081": {
      "op": "DUP3"
    },
    "1082": {
      "op": "ADD"
    },
    "1083": {
      "op": "GT"
    },
    "1084": {
      "op": "ISZERO"
    },
    "1085": {
      "op": "PUSH2",
      "value": "0x445"
    },
    "1088": {
      "op": "JUMPI"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1091": {
      "op": "DUP1"
    },
    "1092": {
      "op": "REVERT"
    },
    "1093": {
      "op": "JUMPDEST"
    },
    "1094": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1095": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "1096": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1097": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1099": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "ADD",
      "path": "28"
    },
    "1100": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1101": {
      "op": "DUP5"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1104": {
      "op": "DUP4"
    },
    "1105": {
      "op": "MUL"
    },
    "1106": {
      "op": "DUP5"
    },
    "1107": {
      "op": "ADD"
    },
    "1108": {
      "op": "GT"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1113": {
      "op": "SHL"
    },
    "1114": {
      "op": "DUP4"
    },
    "1115": {
      "op": "GT"
    },
    "1116": {
      "op": "OR"
    },
    "1117": {
      "op": "ISZERO"
    },
    "1118": {
      "op": "PUSH2",
      "value": "0x466"
    },
    "1121": {
      "op": "JUMPI"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1124": {
      "op": "DUP1"
    },
    "1125": {
      "op": "REVERT"
    },
    "1126": {
      "op": "JUMPDEST"
    },
    "1127": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1128": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1129": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1130": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1131": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "1133": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "ADD",
      "path": "28"
    },
    "1134": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1136": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1137": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1138": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "DIV",
      "path": "28"
    },
    "1139": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "MUL",
      "path": "28"
    },
    "1140": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1142": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "ADD",
      "path": "28"
    },
    "1143": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1145": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1146": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1147": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1148": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "ADD",
      "path": "28"
    },
    "1149": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1151": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1152": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1153": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "1154": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1155": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1156": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1157": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1158": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1159": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1160": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1162": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "ADD",
      "path": "28"
    },
    "1163": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "DUP4",
      "path": "28"
    },
    "1164": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "DUP4",
      "path": "28"
    },
    "1165": {
      "op": "DUP1"
    },
    "1166": {
      "op": "DUP3"
    },
    "1167": {
      "op": "DUP5"
    },
    "1168": {
      "op": "CALLDATACOPY"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1171": {
      "op": "SWAP3"
    },
    "1172": {
      "op": "ADD"
    },
    "1173": {
      "op": "SWAP2"
    },
    "1174": {
      "op": "SWAP1"
    },
    "1175": {
      "op": "SWAP2"
    },
    "1176": {
      "op": "MSTORE"
    },
    "1177": {
      "op": "POP"
    },
    "1178": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1179": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "1180": {
      "op": "POP"
    },
    "1181": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x644"
    },
    "1184": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "1185": {
      "op": "POP"
    },
    "1186": {
      "op": "POP"
    },
    "1187": {
      "op": "POP"
    },
    "1188": {
      "op": "POP"
    },
    "1189": {
      "op": "POP"
    },
    "1190": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "jump": "i",
      "offset": [
        2430,
        3636
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1191": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1192": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1938,
        1953
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1194": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1967,
        1987
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1195": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2001,
        2016
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1197": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2030,
        2050
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1198": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2064,
        2077
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1200": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2102,
        2143
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4B7"
    },
    "1203": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2102,
        2143
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x979"
    },
    "1206": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "jump": "i",
      "offset": [
        2102,
        2143
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1207": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2102,
        2143
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1208": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2146,
        2171
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4C0"
    },
    "1211": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2146,
        2159
      ],
      "op": "DUP8",
      "path": "28"
    },
    "1212": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2146,
        2169
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x700"
    },
    "1215": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "jump": "i",
      "offset": [
        2146,
        2171
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1216": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2146,
        2171
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1217": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2199,
        2213
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 0
    },
    "1218": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2199,
        2213
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1219": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2199,
        2218
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1220": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2199,
        2218
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1221": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2252,
        2273
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 1,
      "value": "0x20"
    },
    "1223": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2252,
        2273
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1224": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2252,
        2273
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1225": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2252,
        2273
      ],
      "op": "ADD",
      "path": "28"
    },
    "1226": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2252,
        2273
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1227": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2302,
        2316
      ],
      "op": "DUP3",
      "path": "28",
      "statement": 2
    },
    "1228": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2302,
        2316
      ],
      "op": "DUP5",
      "path": "28"
    },
    "1229": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2302,
        2316
      ],
      "op": "ADD",
      "path": "28"
    },
    "1230": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2302,
        2316
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1231": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2302,
        2321
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1232": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2302,
        2321
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1233": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2355,
        2376
      ],
      "op": "SWAP4",
      "path": "28",
      "statement": 3
    },
    "1234": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2355,
        2376
      ],
      "op": "ADD",
      "path": "28"
    },
    "1235": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2355,
        2376
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1236": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2403,
        2416
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 4,
      "value": "0x40"
    },
    "1238": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2403,
        2416
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1239": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2403,
        2416
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "1240": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2403,
        2416
      ],
      "op": "ADD",
      "path": "28"
    },
    "1241": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2403,
        2416
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1242": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2194,
        2219
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xF8"
    },
    "1244": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2194,
        2219
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1245": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2194,
        2219
      ],
      "op": "DUP4",
      "path": "28"
    },
    "1246": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2194,
        2219
      ],
      "op": "SHL",
      "path": "28"
    },
    "1247": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2194,
        2219
      ],
      "op": "SWAP13",
      "path": "28"
    },
    "1248": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2252,
        2273
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1249": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2252,
        2273
      ],
      "op": "SWAP12",
      "path": "28"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2297,
        2322
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1252": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2297,
        2322
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1253": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2297,
        2322
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1254": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2297,
        2322
      ],
      "op": "SHL",
      "path": "28"
    },
    "1255": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2297,
        2322
      ],
      "op": "SWAP9",
      "path": "28"
    },
    "1256": {
      "op": "POP"
    },
    "1257": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2355,
        2376
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1258": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2355,
        2376
      ],
      "op": "SWAP7",
      "path": "28"
    },
    "1259": {
      "op": "POP"
    },
    "1260": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        2403,
        2416
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "1261": {
      "op": "POP"
    },
    "1262": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "offset": [
        1849,
        2424
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1263": {
      "op": "POP"
    },
    "1264": {
      "op": "POP"
    },
    "1265": {
      "op": "POP"
    },
    "1266": {
      "fn": "UmbralDeserializerMock.toCapsule",
      "jump": "o",
      "offset": [
        1849,
        2424
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1267": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1268": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3852,
        3868
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1270": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3882,
        3903
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1271": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3917,
        3933
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1273": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3947,
        3968
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1274": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3982,
        4011
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1276": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4025,
        4059
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1277": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4073,
        4095
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1279": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4109,
        4136
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1280": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4150,
        4163
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1282": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4177,
        4204
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "1284": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4218,
        4239
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1285": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4264,
        4307
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x50C"
    },
    "1288": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4264,
        4307
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9A6"
    },
    "1291": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "jump": "i",
      "offset": [
        4264,
        4307
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1292": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4264,
        4307
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1293": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4310,
        4337
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x515"
    },
    "1296": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4310,
        4321
      ],
      "op": "DUP14",
      "path": "28"
    },
    "1297": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4310,
        4335
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x757"
    },
    "1300": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "jump": "i",
      "offset": [
        4310,
        4337
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1301": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4310,
        4337
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1302": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4264,
        4337
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1303": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4264,
        4337
      ],
      "op": "POP",
      "path": "28"
    },
    "1304": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4347,
        4395
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x51F"
    },
    "1307": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4347,
        4395
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9EC"
    },
    "1310": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "jump": "i",
      "offset": [
        4347,
        4395
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1311": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4347,
        4395
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1312": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4398,
        4403
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1313": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4398,
        4409
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x80"
    },
    "1315": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4398,
        4409
      ],
      "op": "ADD",
      "path": "28"
    },
    "1316": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4398,
        4409
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1317": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4347,
        4409
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1318": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4347,
        4409
      ],
      "op": "POP",
      "path": "28"
    },
    "1319": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4438,
        4443
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 5
    },
    "1320": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4438,
        4451
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1322": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4438,
        4451
      ],
      "op": "ADD",
      "path": "28"
    },
    "1323": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4438,
        4451
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1324": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4438,
        4456
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1326": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4438,
        4456
      ],
      "op": "ADD",
      "path": "28"
    },
    "1327": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4438,
        4456
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1328": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4433,
        4457
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xF8"
    },
    "1330": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4433,
        4457
      ],
      "op": "SHL",
      "path": "28"
    },
    "1331": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4419,
        4457
      ],
      "op": "SWAP13",
      "path": "28"
    },
    "1332": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4419,
        4457
      ],
      "op": "POP",
      "path": "28"
    },
    "1333": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4491,
        4496
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 6
    },
    "1334": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4491,
        4504
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1336": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4491,
        4504
      ],
      "op": "ADD",
      "path": "28"
    },
    "1337": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4491,
        4504
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1338": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4491,
        4511
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1340": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4491,
        4511
      ],
      "op": "ADD",
      "path": "28"
    },
    "1341": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4491,
        4511
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1342": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4483,
        4512
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1344": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4483,
        4512
      ],
      "op": "SHL",
      "path": "28"
    },
    "1345": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4467,
        4512
      ],
      "op": "SWAP12",
      "path": "28"
    },
    "1346": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4467,
        4512
      ],
      "op": "POP",
      "path": "28"
    },
    "1347": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4541,
        4546
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 7
    },
    "1348": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4541,
        4554
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1350": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4541,
        4554
      ],
      "op": "ADD",
      "path": "28"
    },
    "1351": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4541,
        4554
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1352": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4541,
        4559
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1354": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4541,
        4559
      ],
      "op": "ADD",
      "path": "28"
    },
    "1355": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4541,
        4559
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1356": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4536,
        4560
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xF8"
    },
    "1358": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4536,
        4560
      ],
      "op": "SHL",
      "path": "28"
    },
    "1359": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4522,
        4560
      ],
      "op": "SWAP11",
      "path": "28"
    },
    "1360": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4522,
        4560
      ],
      "op": "POP",
      "path": "28"
    },
    "1361": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4594,
        4599
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 8
    },
    "1362": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4594,
        4607
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1364": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4594,
        4607
      ],
      "op": "ADD",
      "path": "28"
    },
    "1365": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4594,
        4607
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1366": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4594,
        4614
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1368": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4594,
        4614
      ],
      "op": "ADD",
      "path": "28"
    },
    "1369": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4594,
        4614
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1370": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4586,
        4615
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1372": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4586,
        4615
      ],
      "op": "SHL",
      "path": "28"
    },
    "1373": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4570,
        4615
      ],
      "op": "SWAP10",
      "path": "28"
    },
    "1374": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4570,
        4615
      ],
      "op": "POP",
      "path": "28"
    },
    "1375": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4657,
        4662
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 9
    },
    "1376": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4657,
        4683
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1378": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4657,
        4683
      ],
      "op": "ADD",
      "path": "28"
    },
    "1379": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4657,
        4683
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1380": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4657,
        4688
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1382": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4657,
        4688
      ],
      "op": "ADD",
      "path": "28"
    },
    "1383": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4657,
        4688
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1384": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4652,
        4689
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xF8"
    },
    "1386": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4652,
        4689
      ],
      "op": "SHL",
      "path": "28"
    },
    "1387": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4625,
        4689
      ],
      "op": "SWAP9",
      "path": "28"
    },
    "1388": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4625,
        4689
      ],
      "op": "POP",
      "path": "28"
    },
    "1389": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4736,
        4741
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 10
    },
    "1390": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4736,
        4762
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1392": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4736,
        4762
      ],
      "op": "ADD",
      "path": "28"
    },
    "1393": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4736,
        4762
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1394": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4736,
        4769
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1396": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4736,
        4769
      ],
      "op": "ADD",
      "path": "28"
    },
    "1397": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4736,
        4769
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1398": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4728,
        4770
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1400": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4728,
        4770
      ],
      "op": "SHL",
      "path": "28"
    },
    "1401": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4699,
        4770
      ],
      "op": "SWAP8",
      "path": "28"
    },
    "1402": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4699,
        4770
      ],
      "op": "POP",
      "path": "28"
    },
    "1403": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4805,
        4810
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 11
    },
    "1404": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4805,
        4824
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "1406": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4805,
        4824
      ],
      "op": "ADD",
      "path": "28"
    },
    "1407": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4805,
        4824
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1408": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4805,
        4829
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1410": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4805,
        4829
      ],
      "op": "ADD",
      "path": "28"
    },
    "1411": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4805,
        4829
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1412": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4800,
        4830
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xF8"
    },
    "1414": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4800,
        4830
      ],
      "op": "SHL",
      "path": "28"
    },
    "1415": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4780,
        4830
      ],
      "op": "SWAP7",
      "path": "28"
    },
    "1416": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4780,
        4830
      ],
      "op": "POP",
      "path": "28"
    },
    "1417": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4870,
        4875
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 12
    },
    "1418": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4870,
        4889
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "1420": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4870,
        4889
      ],
      "op": "ADD",
      "path": "28"
    },
    "1421": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4870,
        4889
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1422": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4870,
        4896
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1424": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4870,
        4896
      ],
      "op": "ADD",
      "path": "28"
    },
    "1425": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4870,
        4896
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1426": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4862,
        4897
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1428": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4862,
        4897
      ],
      "op": "SHL",
      "path": "28"
    },
    "1429": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4840,
        4897
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "1430": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4840,
        4897
      ],
      "op": "POP",
      "path": "28"
    },
    "1431": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4923,
        4928
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 13
    },
    "1432": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4923,
        4934
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x80"
    },
    "1434": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4923,
        4934
      ],
      "op": "ADD",
      "path": "28"
    },
    "1435": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4923,
        4934
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1436": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4915,
        4935
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1438": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4915,
        4935
      ],
      "op": "SHL",
      "path": "28"
    },
    "1439": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4907,
        4935
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "1440": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4907,
        4935
      ],
      "op": "POP",
      "path": "28"
    },
    "1441": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4962,
        4967
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 14
    },
    "1442": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4962,
        4982
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA0"
    },
    "1444": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4962,
        4982
      ],
      "op": "ADD",
      "path": "28"
    },
    "1445": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4962,
        4982
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1446": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4945,
        4982
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "1447": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4945,
        4982
      ],
      "op": "POP",
      "path": "28"
    },
    "1448": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        5003,
        5008
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 15
    },
    "1449": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        5003,
        5017
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xC0"
    },
    "1451": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        5003,
        5017
      ],
      "op": "ADD",
      "path": "28"
    },
    "1452": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        5003,
        5017
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1453": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4992,
        5017
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1454": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        4992,
        5017
      ],
      "op": "POP",
      "path": "28"
    },
    "1455": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "1456": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "1457": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1458": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "1459": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "1460": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP8",
      "path": "28"
    },
    "1461": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP10",
      "path": "28"
    },
    "1462": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP12",
      "path": "28"
    },
    "1463": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1464": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1465": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "1466": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP7",
      "path": "28"
    },
    "1467": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP9",
      "path": "28"
    },
    "1468": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "SWAP11",
      "path": "28"
    },
    "1469": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "offset": [
        3741,
        5024
      ],
      "op": "POP",
      "path": "28"
    },
    "1470": {
      "fn": "UmbralDeserializerMock.toCorrectnessProofFromCapsuleFrag",
      "jump": "o",
      "offset": [
        3741,
        5024
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1471": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1472": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5121,
        5137
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1474": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5151,
        5172
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1475": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5186,
        5202
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1477": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5216,
        5237
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1478": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5251,
        5266
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1480": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5280,
        5303
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1481": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5317,
        5345
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1483": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5370,
        5413
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5D2"
    },
    "1486": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5370,
        5413
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9A6"
    },
    "1489": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "jump": "i",
      "offset": [
        5370,
        5413
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1490": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5370,
        5413
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1491": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5416,
        5443
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5DB"
    },
    "1494": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5416,
        5427
      ],
      "op": "DUP10",
      "path": "28"
    },
    "1495": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5416,
        5441
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x757"
    },
    "1498": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "jump": "i",
      "offset": [
        5416,
        5443
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1499": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5416,
        5443
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1500": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5370,
        5443
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1501": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5370,
        5443
      ],
      "op": "POP",
      "path": "28"
    },
    "1502": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5472,
        5477
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 16
    },
    "1503": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5472,
        5485
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1505": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5472,
        5485
      ],
      "op": "ADD",
      "path": "28"
    },
    "1506": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5472,
        5485
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1507": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5472,
        5490
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1509": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5472,
        5490
      ],
      "op": "ADD",
      "path": "28"
    },
    "1510": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5472,
        5490
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1511": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5467,
        5491
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xF8"
    },
    "1513": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5467,
        5491
      ],
      "op": "SHL",
      "path": "28"
    },
    "1514": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5453,
        5491
      ],
      "op": "SWAP8",
      "path": "28"
    },
    "1515": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5453,
        5491
      ],
      "op": "POP",
      "path": "28"
    },
    "1516": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5525,
        5530
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 17
    },
    "1517": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5525,
        5538
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1519": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5525,
        5538
      ],
      "op": "ADD",
      "path": "28"
    },
    "1520": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5525,
        5538
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1521": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5525,
        5545
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1523": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5525,
        5545
      ],
      "op": "ADD",
      "path": "28"
    },
    "1524": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5525,
        5545
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1525": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5517,
        5546
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1527": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5517,
        5546
      ],
      "op": "SHL",
      "path": "28"
    },
    "1528": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5501,
        5546
      ],
      "op": "SWAP7",
      "path": "28"
    },
    "1529": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5501,
        5546
      ],
      "op": "POP",
      "path": "28"
    },
    "1530": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5575,
        5580
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 18
    },
    "1531": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5575,
        5588
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1533": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5575,
        5588
      ],
      "op": "ADD",
      "path": "28"
    },
    "1534": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5575,
        5588
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1535": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5575,
        5593
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1537": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5575,
        5593
      ],
      "op": "ADD",
      "path": "28"
    },
    "1538": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5575,
        5593
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1539": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5570,
        5594
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xF8"
    },
    "1541": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5570,
        5594
      ],
      "op": "SHL",
      "path": "28"
    },
    "1542": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5556,
        5594
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "1543": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5556,
        5594
      ],
      "op": "POP",
      "path": "28"
    },
    "1544": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5628,
        5633
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 19
    },
    "1545": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5628,
        5641
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1547": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5628,
        5641
      ],
      "op": "ADD",
      "path": "28"
    },
    "1548": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5628,
        5641
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1549": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5628,
        5648
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1551": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5628,
        5648
      ],
      "op": "ADD",
      "path": "28"
    },
    "1552": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5628,
        5648
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1553": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5620,
        5649
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1555": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5620,
        5649
      ],
      "op": "SHL",
      "path": "28"
    },
    "1556": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5604,
        5649
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "1557": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5604,
        5649
      ],
      "op": "POP",
      "path": "28"
    },
    "1558": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5669,
        5674
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 20
    },
    "1559": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5669,
        5682
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1561": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5669,
        5682
      ],
      "op": "ADD",
      "path": "28"
    },
    "1562": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5669,
        5682
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1563": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5659,
        5682
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "1564": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5659,
        5682
      ],
      "op": "POP",
      "path": "28"
    },
    "1565": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5718,
        5723
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 21
    },
    "1566": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5718,
        5738
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "1568": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5718,
        5738
      ],
      "op": "ADD",
      "path": "28"
    },
    "1569": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5718,
        5738
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1570": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5718,
        5743
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1572": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5718,
        5743
      ],
      "op": "ADD",
      "path": "28"
    },
    "1573": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5718,
        5743
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1574": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5713,
        5744
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xF8"
    },
    "1576": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5713,
        5744
      ],
      "op": "SHL",
      "path": "28"
    },
    "1577": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5692,
        5744
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1578": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5692,
        5744
      ],
      "op": "POP",
      "path": "28"
    },
    "1579": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5785,
        5790
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 22
    },
    "1580": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5785,
        5805
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "1582": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5785,
        5805
      ],
      "op": "ADD",
      "path": "28"
    },
    "1583": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5785,
        5805
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1584": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5785,
        5812
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1586": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5785,
        5812
      ],
      "op": "ADD",
      "path": "28"
    },
    "1587": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5785,
        5812
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1588": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5777,
        5813
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1590": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5777,
        5813
      ],
      "op": "SHL",
      "path": "28"
    },
    "1591": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5754,
        5813
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1592": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5754,
        5813
      ],
      "op": "POP",
      "path": "28"
    },
    "1593": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "POP",
      "path": "28"
    },
    "1594": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1595": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "1596": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "1597": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP8",
      "path": "28"
    },
    "1598": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1599": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1600": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "1601": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "SWAP7",
      "path": "28"
    },
    "1602": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "offset": [
        5030,
        5820
      ],
      "op": "POP",
      "path": "28"
    },
    "1603": {
      "fn": "UmbralDeserializerMock.toCapsuleFrag",
      "jump": "o",
      "offset": [
        5030,
        5820
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1604": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1605": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2526,
        2542
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1607": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2556,
        2577
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1608": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2591,
        2607
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1610": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2621,
        2642
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1611": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2656,
        2685
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1613": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2699,
        2733
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1614": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2747,
        2769
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1616": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2783,
        2810
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1617": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2824,
        2837
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1619": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2851,
        2878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "1621": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2892,
        2913
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1622": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2938,
        2986
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x65D"
    },
    "1625": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2938,
        2986
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9EC"
    },
    "1628": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "jump": "i",
      "offset": [
        2938,
        2986
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1629": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2938,
        2986
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1630": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2989,
        3021
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x666"
    },
    "1633": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2989,
        3000
      ],
      "op": "DUP14",
      "path": "28"
    },
    "1634": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2989,
        3019
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7DF"
    },
    "1637": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "jump": "i",
      "offset": [
        2989,
        3021
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1638": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2989,
        3021
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1639": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2938,
        3021
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1640": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2938,
        3021
      ],
      "op": "POP",
      "path": "28"
    },
    "1641": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3050,
        3055
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 23
    },
    "1642": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3050,
        3063
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1644": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3050,
        3063
      ],
      "op": "ADD",
      "path": "28"
    },
    "1645": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3050,
        3063
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1646": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3050,
        3068
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1648": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3050,
        3068
      ],
      "op": "ADD",
      "path": "28"
    },
    "1649": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3050,
        3068
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1650": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3045,
        3069
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xF8"
    },
    "1652": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3045,
        3069
      ],
      "op": "SHL",
      "path": "28"
    },
    "1653": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3031,
        3069
      ],
      "op": "SWAP12",
      "path": "28"
    },
    "1654": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3031,
        3069
      ],
      "op": "POP",
      "path": "28"
    },
    "1655": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3103,
        3108
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 24
    },
    "1656": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3103,
        3116
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1658": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3103,
        3116
      ],
      "op": "ADD",
      "path": "28"
    },
    "1659": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3103,
        3116
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1660": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3103,
        3123
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1662": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3103,
        3123
      ],
      "op": "ADD",
      "path": "28"
    },
    "1663": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3103,
        3123
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1664": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3095,
        3124
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1666": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3095,
        3124
      ],
      "op": "SHL",
      "path": "28"
    },
    "1667": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3079,
        3124
      ],
      "op": "SWAP11",
      "path": "28"
    },
    "1668": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3079,
        3124
      ],
      "op": "POP",
      "path": "28"
    },
    "1669": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3153,
        3158
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 25
    },
    "1670": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3153,
        3166
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1672": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3153,
        3166
      ],
      "op": "ADD",
      "path": "28"
    },
    "1673": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3153,
        3166
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1674": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3153,
        3171
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1676": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3153,
        3171
      ],
      "op": "ADD",
      "path": "28"
    },
    "1677": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3153,
        3171
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1678": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3148,
        3172
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xF8"
    },
    "1680": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3148,
        3172
      ],
      "op": "SHL",
      "path": "28"
    },
    "1681": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3134,
        3172
      ],
      "op": "SWAP10",
      "path": "28"
    },
    "1682": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3134,
        3172
      ],
      "op": "POP",
      "path": "28"
    },
    "1683": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3206,
        3211
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 26
    },
    "1684": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3206,
        3219
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1686": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3206,
        3219
      ],
      "op": "ADD",
      "path": "28"
    },
    "1687": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3206,
        3219
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1688": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3206,
        3226
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1690": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3206,
        3226
      ],
      "op": "ADD",
      "path": "28"
    },
    "1691": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3206,
        3226
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1692": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3198,
        3227
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1694": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3198,
        3227
      ],
      "op": "SHL",
      "path": "28"
    },
    "1695": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3182,
        3227
      ],
      "op": "SWAP9",
      "path": "28"
    },
    "1696": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3182,
        3227
      ],
      "op": "POP",
      "path": "28"
    },
    "1697": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3269,
        3274
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 27
    },
    "1698": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3269,
        3295
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1700": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3269,
        3295
      ],
      "op": "ADD",
      "path": "28"
    },
    "1701": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3269,
        3295
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1702": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3269,
        3300
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1704": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3269,
        3300
      ],
      "op": "ADD",
      "path": "28"
    },
    "1705": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3269,
        3300
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1706": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3264,
        3301
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xF8"
    },
    "1708": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3264,
        3301
      ],
      "op": "SHL",
      "path": "28"
    },
    "1709": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3237,
        3301
      ],
      "op": "SWAP8",
      "path": "28"
    },
    "1710": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3237,
        3301
      ],
      "op": "POP",
      "path": "28"
    },
    "1711": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3348,
        3353
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 28
    },
    "1712": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3348,
        3374
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1714": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3348,
        3374
      ],
      "op": "ADD",
      "path": "28"
    },
    "1715": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3348,
        3374
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1716": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3348,
        3381
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1718": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3348,
        3381
      ],
      "op": "ADD",
      "path": "28"
    },
    "1719": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3348,
        3381
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1720": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3340,
        3382
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1722": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3340,
        3382
      ],
      "op": "SHL",
      "path": "28"
    },
    "1723": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3311,
        3382
      ],
      "op": "SWAP7",
      "path": "28"
    },
    "1724": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3311,
        3382
      ],
      "op": "POP",
      "path": "28"
    },
    "1725": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3417,
        3422
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 29
    },
    "1726": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3417,
        3436
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "1728": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3417,
        3436
      ],
      "op": "ADD",
      "path": "28"
    },
    "1729": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3417,
        3436
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1730": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3417,
        3441
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1732": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3417,
        3441
      ],
      "op": "ADD",
      "path": "28"
    },
    "1733": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3417,
        3441
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1734": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3412,
        3442
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xF8"
    },
    "1736": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3412,
        3442
      ],
      "op": "SHL",
      "path": "28"
    },
    "1737": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3392,
        3442
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "1738": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3392,
        3442
      ],
      "op": "POP",
      "path": "28"
    },
    "1739": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3482,
        3487
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 30
    },
    "1740": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3482,
        3501
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "1742": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3482,
        3501
      ],
      "op": "ADD",
      "path": "28"
    },
    "1743": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3482,
        3501
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1744": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3482,
        3508
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1746": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3482,
        3508
      ],
      "op": "ADD",
      "path": "28"
    },
    "1747": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3482,
        3508
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1748": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3474,
        3509
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1750": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3474,
        3509
      ],
      "op": "SHL",
      "path": "28"
    },
    "1751": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3452,
        3509
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "1752": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3452,
        3509
      ],
      "op": "POP",
      "path": "28"
    },
    "1753": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3535,
        3540
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 31
    },
    "1754": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3535,
        3546
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x80"
    },
    "1756": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3535,
        3546
      ],
      "op": "ADD",
      "path": "28"
    },
    "1757": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3535,
        3546
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1758": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3527,
        3547
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1760": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3527,
        3547
      ],
      "op": "SHL",
      "path": "28"
    },
    "1761": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3519,
        3547
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "1762": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3519,
        3547
      ],
      "op": "POP",
      "path": "28"
    },
    "1763": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3574,
        3579
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 32
    },
    "1764": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3574,
        3594
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA0"
    },
    "1766": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3574,
        3594
      ],
      "op": "ADD",
      "path": "28"
    },
    "1767": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3574,
        3594
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1768": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3557,
        3594
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1769": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3557,
        3594
      ],
      "op": "POP",
      "path": "28"
    },
    "1770": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3615,
        3620
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 33
    },
    "1771": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3615,
        3629
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xC0"
    },
    "1773": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3615,
        3629
      ],
      "op": "ADD",
      "path": "28"
    },
    "1774": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3615,
        3629
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1775": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3604,
        3629
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1776": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        3604,
        3629
      ],
      "op": "POP",
      "path": "28"
    },
    "1777": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "POP",
      "path": "28"
    },
    "1778": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1779": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "1780": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "1781": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP8",
      "path": "28"
    },
    "1782": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP10",
      "path": "28"
    },
    "1783": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP12",
      "path": "28"
    },
    "1784": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1785": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1786": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "1787": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP7",
      "path": "28"
    },
    "1788": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP9",
      "path": "28"
    },
    "1789": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "SWAP11",
      "path": "28"
    },
    "1790": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "offset": [
        2430,
        3636
      ],
      "op": "POP",
      "path": "28"
    },
    "1791": {
      "fn": "UmbralDeserializerMock.toCorrectnessProof",
      "jump": "o",
      "offset": [
        2430,
        3636
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1792": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2055,
        2438
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1793": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2133,
        2155
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x708"
    },
    "1796": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2133,
        2155
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x979"
    },
    "1799": {
      "fn": "UmbralDeserializer.toCapsule",
      "jump": "i",
      "offset": [
        2133,
        2155
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1800": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2133,
        2155
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1801": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2179,
        2199
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 34
    },
    "1802": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2179,
        2199
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1803": {
      "offset": [
        1619,
        1647
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x62"
    },
    "1805": {
      "branch": 61,
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2179,
        2215
      ],
      "op": "EQ",
      "path": "12"
    },
    "1806": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2171,
        2216
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x716"
    },
    "1809": {
      "branch": 61,
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2171,
        2216
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1812": {
      "op": "DUP1"
    },
    "1813": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2171,
        2216
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1814": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2171,
        2216
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1815": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2226,
        2241
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1817": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2244,
        2269
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x721"
    },
    "1820": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2255,
        2268
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1821": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2244,
        2254
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x806"
    },
    "1824": {
      "fn": "UmbralDeserializer.toCapsule",
      "jump": "i",
      "offset": [
        2244,
        2269
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1825": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2244,
        2269
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1826": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2226,
        2269
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1827": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2226,
        2269
      ],
      "op": "POP",
      "path": "12"
    },
    "1828": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2289,
        2323
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 35,
      "value": "0x731"
    },
    "1831": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2299,
        2306
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1832": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2308,
        2315
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1833": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2308,
        2322
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1835": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2308,
        2322
      ],
      "op": "ADD",
      "path": "12"
    },
    "1836": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2308,
        2322
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1837": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2289,
        2298
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x80C"
    },
    "1840": {
      "fn": "UmbralDeserializer.toCapsule",
      "jump": "i",
      "offset": [
        2289,
        2323
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1841": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2289,
        2323
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1842": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2279,
        2323
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1843": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2279,
        2323
      ],
      "op": "POP",
      "path": "12"
    },
    "1844": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2343,
        2377
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 36,
      "value": "0x741"
    },
    "1847": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2353,
        2360
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1848": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2362,
        2369
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1849": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2362,
        2376
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1851": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2362,
        2376
      ],
      "op": "ADD",
      "path": "12"
    },
    "1852": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2362,
        2376
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1853": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2343,
        2352
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x80C"
    },
    "1856": {
      "fn": "UmbralDeserializer.toCapsule",
      "jump": "i",
      "offset": [
        2343,
        2377
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1857": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2343,
        2377
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1858": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2333,
        2377
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1859": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2333,
        2377
      ],
      "op": "POP",
      "path": "12"
    },
    "1860": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2411,
        2430
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 37,
      "value": "0x74C"
    },
    "1863": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2422,
        2429
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1864": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2411,
        2421
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x827"
    },
    "1867": {
      "fn": "UmbralDeserializer.toCapsule",
      "jump": "i",
      "offset": [
        2411,
        2430
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1868": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2411,
        2430
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1869": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2387,
        2400
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1871": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2387,
        2400
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1872": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2387,
        2400
      ],
      "op": "ADD",
      "path": "12"
    },
    "1873": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2387,
        2431
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2387,
        2394
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1876": {
      "fn": "UmbralDeserializer.toCapsule",
      "offset": [
        2055,
        2438
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1877": {
      "op": "POP"
    },
    "1878": {
      "fn": "UmbralDeserializer.toCapsule",
      "jump": "o",
      "offset": [
        2055,
        2438
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1879": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        3929,
        4547
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1880": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4009,
        4033
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x75F"
    },
    "1883": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4009,
        4033
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9A6"
    },
    "1886": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "jump": "i",
      "offset": [
        4009,
        4033
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1887": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4009,
        4033
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1888": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4076,
        4094
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1889": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4076,
        4094
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1890": {
      "offset": [
        1859,
        1901
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x167"
    },
    "1893": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4112,
        4154
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 38
    },
    "1894": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4112,
        4154
      ],
      "op": "LT",
      "path": "12"
    },
    "1895": {
      "branch": 62,
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4112,
        4154
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1896": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4104,
        4155
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x770"
    },
    "1899": {
      "branch": 62,
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4104,
        4155
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1902": {
      "op": "DUP1"
    },
    "1903": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4104,
        4155
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1904": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4104,
        4155
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1905": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4166,
        4181
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1907": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4184,
        4207
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x77B"
    },
    "1910": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4195,
        4206
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1911": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4184,
        4194
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x806"
    },
    "1914": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "jump": "i",
      "offset": [
        4184,
        4207
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1915": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4184,
        4207
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1916": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4166,
        4207
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1917": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4166,
        4207
      ],
      "op": "POP",
      "path": "12"
    },
    "1918": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4227,
        4260
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 39,
      "value": "0x78B"
    },
    "1921": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4237,
        4244
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1922": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4246,
        4251
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1923": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4246,
        4259
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1925": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4246,
        4259
      ],
      "op": "ADD",
      "path": "12"
    },
    "1926": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4246,
        4259
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1927": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4227,
        4236
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x80C"
    },
    "1930": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "jump": "i",
      "offset": [
        4227,
        4260
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1931": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4227,
        4260
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1932": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4217,
        4260
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1933": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4217,
        4260
      ],
      "op": "POP",
      "path": "12"
    },
    "1934": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4280,
        4313
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 40,
      "value": "0x79B"
    },
    "1937": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4290,
        4297
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1938": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4299,
        4304
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1939": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4299,
        4312
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1941": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4299,
        4312
      ],
      "op": "ADD",
      "path": "12"
    },
    "1942": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4299,
        4312
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1943": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4280,
        4289
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x80C"
    },
    "1946": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "jump": "i",
      "offset": [
        4280,
        4313
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1947": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4280,
        4313
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1948": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4270,
        4313
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1949": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4270,
        4313
      ],
      "op": "POP",
      "path": "12"
    },
    "1950": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4339,
        4358
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 41,
      "value": "0x7A6"
    },
    "1953": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4350,
        4357
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1954": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4339,
        4349
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x827"
    },
    "1957": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "jump": "i",
      "offset": [
        4339,
        4358
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1958": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4339,
        4358
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1959": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4323,
        4336
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1961": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4323,
        4336
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1962": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4323,
        4336
      ],
      "op": "ADD",
      "path": "12"
    },
    "1963": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4323,
        4358
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1964": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4429,
        4449
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 42,
      "value": "0x60"
    },
    "1966": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4429,
        4449
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1967": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4429,
        4449
      ],
      "op": "ADD",
      "path": "12"
    },
    "1968": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4429,
        4449
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1969": {
      "offset": [
        1499,
        1501
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1971": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4368,
        4390
      ],
      "op": "SWAP2",
      "path": "12",
      "statement": 43
    },
    "1972": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4368,
        4390
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1973": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4368,
        4390
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1974": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4368,
        4390
      ],
      "op": "ADD",
      "path": "12"
    },
    "1975": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4368,
        4390
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1976": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4410,
        4450
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7C2"
    },
    "1979": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4410,
        4450
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1980": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4368,
        4390
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1981": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4368,
        4390
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1982": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4410,
        4419
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x80C"
    },
    "1985": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "jump": "i",
      "offset": [
        4410,
        4450
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1986": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4410,
        4450
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1987": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4400,
        4450
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1988": {
      "op": "POP"
    },
    "1989": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4475,
        4540
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 44,
      "value": "0x7D2"
    },
    "1992": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4400,
        4450
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "1995": {
      "op": "NOT"
    },
    "1996": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4503,
        4539
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1997": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4503,
        4539
      ],
      "op": "ADD",
      "path": "12"
    },
    "1998": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4475,
        4493
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x82B"
    },
    "2001": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "jump": "i",
      "offset": [
        4475,
        4540
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2002": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4475,
        4540
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2003": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4461,
        4472
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2005": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4461,
        4472
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2006": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4461,
        4472
      ],
      "op": "ADD",
      "path": "12"
    },
    "2007": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4461,
        4540
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2008": {
      "op": "POP"
    },
    "2009": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4461,
        4466
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2010": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        4461,
        4466
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2011": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "offset": [
        3929,
        4547
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2012": {
      "op": "POP"
    },
    "2013": {
      "op": "POP"
    },
    "2014": {
      "fn": "UmbralDeserializer.toCapsuleFrag",
      "jump": "o",
      "offset": [
        3929,
        4547
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2015": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3625,
        3867
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2016": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3710,
        3739
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7E7"
    },
    "2019": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3710,
        3739
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9EC"
    },
    "2022": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "jump": "i",
      "offset": [
        3710,
        3739
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2023": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3710,
        3739
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2024": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3755,
        3770
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2026": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3773,
        3796
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7F2"
    },
    "2029": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3784,
        3795
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2030": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3773,
        3783
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x806"
    },
    "2033": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "jump": "i",
      "offset": [
        3773,
        3796
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2034": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3773,
        3796
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2035": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3755,
        3796
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2036": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3755,
        3796
      ],
      "op": "POP",
      "path": "12"
    },
    "2037": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3813,
        3860
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 45,
      "value": "0x7FF"
    },
    "2040": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3832,
        3839
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2041": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3841,
        3852
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2042": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3841,
        3859
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2043": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3813,
        3831
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x82B"
    },
    "2046": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "jump": "i",
      "offset": [
        3813,
        3860
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2047": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3813,
        3860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2048": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3806,
        3860
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2049": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3625,
        3867
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2050": {
      "op": "POP"
    },
    "2051": {
      "op": "POP"
    },
    "2052": {
      "op": "POP"
    },
    "2053": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "jump": "o",
      "offset": [
        3625,
        3867
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2054": {
      "fn": "UmbralDeserializer.getPointer",
      "offset": [
        7560,
        7737
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2055": {
      "fn": "UmbralDeserializer.getPointer",
      "offset": [
        7697,
        7699
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2057": {
      "fn": "UmbralDeserializer.getPointer",
      "offset": [
        7685,
        7700
      ],
      "op": "ADD",
      "path": "12"
    },
    "2058": {
      "fn": "UmbralDeserializer.getPointer",
      "offset": [
        7685,
        7700
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2059": {
      "fn": "UmbralDeserializer.getPointer",
      "jump": "o",
      "offset": [
        7660,
        7731
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2060": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        7824,
        8282
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2061": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8097,
        8112
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2062": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8097,
        8112
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2063": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8156,
        8157
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2065": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8142,
        8158
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2066": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8142,
        8158
      ],
      "op": "ADD",
      "path": "12"
    },
    "2067": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8136,
        8159
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2068": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        7913,
        7934
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2070": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8089,
        8113
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2071": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8089,
        8113
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2072": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8089,
        8113
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2073": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8089,
        8113
      ],
      "op": "BYTE",
      "path": "12"
    },
    "2074": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8178,
        8196
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 46
    },
    "2075": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8178,
        8196
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2076": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8206,
        8219
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 47,
      "value": "0x20"
    },
    "2078": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8206,
        8219
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2079": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8206,
        8219
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2080": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8206,
        8219
      ],
      "op": "ADD",
      "path": "12"
    },
    "2081": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8206,
        8228
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2082": {
      "offset": [
        1537,
        1539
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x21"
    },
    "2084": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8254,
        8275
      ],
      "op": "ADD",
      "path": "12",
      "statement": 48
    },
    "2085": {
      "fn": "UmbralDeserializer.copyPoint",
      "offset": [
        8254,
        8275
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2086": {
      "fn": "UmbralDeserializer.copyPoint",
      "jump": "o",
      "offset": [
        7824,
        8282
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2087": {
      "fn": "UmbralDeserializer.getBytes32",
      "offset": [
        8664,
        8815
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2088": {
      "fn": "UmbralDeserializer.getBytes32",
      "offset": [
        8784,
        8799
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2089": {
      "fn": "UmbralDeserializer.getBytes32",
      "offset": [
        8784,
        8799
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2090": {
      "fn": "UmbralDeserializer.getBytes32",
      "jump": "o",
      "offset": [
        8760,
        8809
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2091": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2605,
        3557
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2092": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2709,
        2738
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x833"
    },
    "2095": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2709,
        2738
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9EC"
    },
    "2098": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "jump": "i",
      "offset": [
        2709,
        2738
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2099": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2709,
        2738
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2100": {
      "offset": [
        1695,
        1740
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE4"
    },
    "2102": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2762,
        2805
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 49
    },
    "2103": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2762,
        2805
      ],
      "op": "LT",
      "path": "12"
    },
    "2104": {
      "branch": 63,
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2762,
        2805
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2105": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2754,
        2806
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x841"
    },
    "2108": {
      "branch": 63,
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2754,
        2806
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2111": {
      "op": "DUP1"
    },
    "2112": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2754,
        2806
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2113": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2754,
        2806
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2114": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2828,
        2862
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 50,
      "value": "0x84F"
    },
    "2117": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2838,
        2846
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2118": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2848,
        2853
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2119": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2848,
        2861
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2121": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2848,
        2861
      ],
      "op": "ADD",
      "path": "12"
    },
    "2122": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2848,
        2861
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2123": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2828,
        2837
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x80C"
    },
    "2126": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "jump": "i",
      "offset": [
        2828,
        2862
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2127": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2828,
        2862
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2128": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2817,
        2862
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2129": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2817,
        2862
      ],
      "op": "POP",
      "path": "12"
    },
    "2130": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2883,
        2917
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 51,
      "value": "0x85F"
    },
    "2133": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2893,
        2901
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2134": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2903,
        2908
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2135": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2903,
        2916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2137": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2903,
        2916
      ],
      "op": "ADD",
      "path": "12"
    },
    "2138": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2903,
        2916
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2139": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2883,
        2892
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x80C"
    },
    "2142": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "jump": "i",
      "offset": [
        2883,
        2917
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2143": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2883,
        2917
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2144": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2872,
        2917
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2145": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2872,
        2917
      ],
      "op": "POP",
      "path": "12"
    },
    "2146": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2938,
        2985
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 52,
      "value": "0x86F"
    },
    "2149": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2948,
        2956
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2150": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2958,
        2963
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2151": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2958,
        2984
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2153": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2958,
        2984
      ],
      "op": "ADD",
      "path": "12"
    },
    "2154": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2958,
        2984
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2155": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2938,
        2947
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x80C"
    },
    "2158": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "jump": "i",
      "offset": [
        2938,
        2985
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2159": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2938,
        2985
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2160": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2927,
        2985
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2161": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2927,
        2985
      ],
      "op": "POP",
      "path": "12"
    },
    "2162": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3006,
        3046
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 53,
      "value": "0x87F"
    },
    "2165": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3016,
        3024
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2166": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3026,
        3031
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2167": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3026,
        3045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "2169": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3026,
        3045
      ],
      "op": "ADD",
      "path": "12"
    },
    "2170": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3026,
        3045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2171": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3006,
        3015
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x80C"
    },
    "2174": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "jump": "i",
      "offset": [
        3006,
        3046
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2175": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3006,
        3046
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2176": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2995,
        3046
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2177": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2995,
        3046
      ],
      "op": "POP",
      "path": "12"
    },
    "2178": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3078,
        3098
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 54,
      "value": "0x88A"
    },
    "2181": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3089,
        3097
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2182": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3078,
        3088
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x827"
    },
    "2185": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "jump": "i",
      "offset": [
        3078,
        3098
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2186": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3078,
        3098
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2187": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3056,
        3067
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2189": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3056,
        3067
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2190": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3056,
        3067
      ],
      "op": "ADD",
      "path": "12"
    },
    "2191": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3056,
        3099
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2192": {
      "offset": [
        1579,
        1581
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2194": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3166,
        3191
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 55
    },
    "2195": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3166,
        3191
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2196": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3166,
        3191
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2197": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3166,
        3191
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2198": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3166,
        3191
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2199": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3166,
        3191
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "2201": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3166,
        3191
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2202": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3166,
        3191
      ],
      "op": "ADD",
      "path": "12"
    },
    "2203": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3166,
        3191
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2204": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3166,
        3191
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2205": {
      "offset": [
        1499,
        1501
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2207": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3109,
        3132
      ],
      "op": "SWAP5",
      "path": "12",
      "statement": 56
    },
    "2208": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3109,
        3132
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2209": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3109,
        3132
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "2210": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3109,
        3132
      ],
      "op": "ADD",
      "path": "12"
    },
    "2211": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3109,
        3132
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2212": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3166,
        3191
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2213": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3166,
        3191
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2215": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3166,
        3191
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2216": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3166,
        3191
      ],
      "op": "ADD",
      "path": "12"
    },
    "2217": {
      "op": "DUP2"
    },
    "2218": {
      "op": "DUP1"
    },
    "2219": {
      "op": "CALLDATASIZE"
    },
    "2220": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3166,
        3191
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2221": {
      "op": "CALLDATACOPY"
    },
    "2222": {
      "op": "POP"
    },
    "2223": {
      "op": "POP"
    },
    "2224": {
      "op": "POP"
    },
    "2225": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3143,
        3163
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "2227": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3143,
        3163
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2228": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3143,
        3163
      ],
      "op": "ADD",
      "path": "12"
    },
    "2229": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3143,
        3191
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2230": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3143,
        3191
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2231": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3143,
        3191
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2232": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3269,
        3326
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 57,
      "value": "0x8C4"
    },
    "2235": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3269,
        3326
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2236": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3279,
        3287
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2237": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3279,
        3287
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2238": {
      "offset": [
        1579,
        1581
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2240": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3269,
        3278
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x932"
    },
    "2243": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "jump": "i",
      "offset": [
        3269,
        3326
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2244": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3269,
        3326
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2245": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3258,
        3326
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2246": {
      "op": "POP"
    },
    "2247": {
      "offset": [
        1695,
        1740
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE4"
    },
    "2249": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3340,
        3382
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2250": {
      "branch": 64,
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3340,
        3382
      ],
      "op": "GT",
      "path": "12"
    },
    "2251": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3336,
        3551
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2252": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3336,
        3551
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x92C"
    },
    "2255": {
      "branch": 64,
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3336,
        3551
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2258": {
      "op": "NOT"
    },
    "2259": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3425,
        3467
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 58
    },
    "2260": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3425,
        3467
      ],
      "op": "ADD",
      "path": "12"
    },
    "2261": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2270": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2271": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "GT",
      "path": "12"
    },
    "2272": {
      "op": "DUP1"
    },
    "2273": {
      "op": "ISZERO"
    },
    "2274": {
      "op": "PUSH2",
      "value": "0x8EA"
    },
    "2277": {
      "op": "JUMPI"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2280": {
      "op": "DUP1"
    },
    "2281": {
      "op": "REVERT"
    },
    "2282": {
      "op": "JUMPDEST"
    },
    "2283": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "POP",
      "path": "12"
    },
    "2284": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2286": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2287": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2288": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2289": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2290": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2291": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2292": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2294": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "ADD",
      "path": "12"
    },
    "2295": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2297": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "NOT",
      "path": "12"
    },
    "2298": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "AND",
      "path": "12"
    },
    "2299": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2301": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "ADD",
      "path": "12"
    },
    "2302": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2303": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "ADD",
      "path": "12"
    },
    "2304": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2306": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2307": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2308": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2309": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x915"
    },
    "2312": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2313": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2315": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2316": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "ADD",
      "path": "12"
    },
    "2317": {
      "op": "DUP2"
    },
    "2318": {
      "op": "DUP1"
    },
    "2319": {
      "op": "CALLDATASIZE"
    },
    "2320": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2321": {
      "op": "CALLDATACOPY"
    },
    "2322": {
      "op": "ADD"
    },
    "2323": {
      "op": "SWAP1"
    },
    "2324": {
      "op": "POP"
    },
    "2325": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3415,
        3468
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2326": {
      "op": "POP"
    },
    "2327": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3398,
        3412
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC0"
    },
    "2329": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3398,
        3412
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2330": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3398,
        3412
      ],
      "op": "ADD",
      "path": "12"
    },
    "2331": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3398,
        3468
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2332": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3398,
        3468
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2333": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3398,
        3468
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2334": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3518,
        3539
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 59
    },
    "2335": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3518,
        3539
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2336": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3482,
        3540
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x92A"
    },
    "2339": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3482,
        3540
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2340": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3492,
        3500
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2341": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3492,
        3500
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2342": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3482,
        3491
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x932"
    },
    "2345": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "jump": "i",
      "offset": [
        3482,
        3540
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2346": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3482,
        3540
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2347": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3482,
        3540
      ],
      "op": "POP",
      "path": "12"
    },
    "2348": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        3336,
        3551
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2349": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2605,
        3557
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2350": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2605,
        3557
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2351": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2605,
        3557
      ],
      "op": "POP",
      "path": "12"
    },
    "2352": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "offset": [
        2605,
        3557
      ],
      "op": "POP",
      "path": "12"
    },
    "2353": {
      "fn": "UmbralDeserializer.toCorrectnessProof",
      "jump": "o",
      "offset": [
        2605,
        3557
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2354": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9187,
        10146
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2355": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9320,
        9341
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2357": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9610,
        9612
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2359": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9605,
        9607
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2361": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9591,
        9603
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2362": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9587,
        9608
      ],
      "op": "ADD",
      "path": "12"
    },
    "2363": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9583,
        9613
      ],
      "op": "DIV",
      "path": "12"
    },
    "2364": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9640,
        9653
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2365": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9698,
        9700
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2367": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9689,
        9696
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2368": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9685,
        9701
      ],
      "op": "ADD",
      "path": "12"
    },
    "2369": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9745,
        9746
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2371": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9714,
        10015
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2372": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9828,
        9833
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2373": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9825,
        9826
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2374": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9822,
        9834
      ],
      "op": "LT",
      "path": "12"
    },
    "2375": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9714,
        10015
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2376": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9714,
        10015
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x95F"
    },
    "2379": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9714,
        10015
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2380": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9921,
        9923
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2382": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9914,
        9924
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2383": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9914,
        9924
      ],
      "op": "MUL",
      "path": "12"
    },
    "2384": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9980,
        9999
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2385": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9980,
        9999
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2386": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9980,
        9999
      ],
      "op": "ADD",
      "path": "12"
    },
    "2387": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9974,
        10000
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2388": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9948,
        9972
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2389": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9948,
        9972
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2390": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9948,
        9972
      ],
      "op": "ADD",
      "path": "12"
    },
    "2391": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9941,
        10001
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2392": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9865,
        9866
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2394": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9858,
        9867
      ],
      "op": "ADD",
      "path": "12"
    },
    "2395": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9714,
        10015
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x943"
    },
    "2398": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9714,
        10015
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2399": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9714,
        10015
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2400": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9734,
        9748
      ],
      "op": "POP",
      "path": "12"
    },
    "2401": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9734,
        9748
      ],
      "op": "POP",
      "path": "12"
    },
    "2402": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9734,
        9748
      ],
      "op": "POP",
      "path": "12"
    },
    "2403": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9734,
        9748
      ],
      "op": "POP",
      "path": "12"
    },
    "2404": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        10074,
        10075
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2406": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        10062,
        10069
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2407": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        10056,
        10070
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2408": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        10052,
        10054
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2410": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        10048,
        10071
      ],
      "op": "ADD",
      "path": "12"
    },
    "2411": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        10039,
        10046
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2412": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        10035,
        10072
      ],
      "op": "ADD",
      "path": "12"
    },
    "2413": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        10028,
        10076
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2414": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        10127,
        10139
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 60
    },
    "2415": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        10111,
        10124
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2416": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        10111,
        10139
      ],
      "op": "ADD",
      "path": "12"
    },
    "2417": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        10095,
        10139
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2418": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        10095,
        10139
      ],
      "op": "POP",
      "path": "12"
    },
    "2419": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9187,
        10146
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2420": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9187,
        10146
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2421": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9187,
        10146
      ],
      "op": "POP",
      "path": "12"
    },
    "2422": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9187,
        10146
      ],
      "op": "POP",
      "path": "12"
    },
    "2423": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        9187,
        10146
      ],
      "op": "POP",
      "path": "12"
    },
    "2424": {
      "fn": "UmbralDeserializer.copyBytes",
      "jump": "o",
      "offset": [
        9187,
        10146
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2425": {
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2426": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2428": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2429": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2430": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "2432": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2433": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2435": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2436": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2437": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x98C"
    },
    "2440": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA41"
    },
    "2443": {
      "fn": "UmbralDeserializer.copyBytes",
      "jump": "i",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2444": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2445": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2446": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2447": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2449": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2450": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x999"
    },
    "2453": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA41"
    },
    "2456": {
      "fn": "UmbralDeserializer.copyBytes",
      "jump": "i",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2457": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2458": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2459": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2460": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2462": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2463": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2465": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2466": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2467": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "POP",
      "path": "28"
    },
    "2468": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2469": {
      "fn": "UmbralDeserializer.copyBytes",
      "jump": "o",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2470": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2471": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2473": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2474": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2475": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA0"
    },
    "2477": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2478": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2480": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2481": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2482": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9B9"
    },
    "2485": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA41"
    },
    "2488": {
      "fn": "UmbralDeserializer.copyBytes",
      "jump": "i",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2489": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2490": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2491": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2492": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2494": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2495": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9C6"
    },
    "2498": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA41"
    },
    "2501": {
      "fn": "UmbralDeserializer.copyBytes",
      "jump": "i",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2502": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2503": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2504": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2505": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2507": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2509": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2510": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2511": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2512": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2514": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2515": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9DA"
    },
    "2518": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA41"
    },
    "2521": {
      "fn": "UmbralDeserializer.copyBytes",
      "jump": "i",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2522": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2523": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2524": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2525": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2527": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2528": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9E7"
    },
    "2531": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9EC"
    },
    "2534": {
      "fn": "UmbralDeserializer.copyBytes",
      "jump": "i",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2535": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2536": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2537": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2538": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2539": {
      "fn": "UmbralDeserializer.copyBytes",
      "jump": "o",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2540": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2541": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2543": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2544": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2545": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "2547": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2548": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2550": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2551": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2552": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9FF"
    },
    "2555": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA41"
    },
    "2558": {
      "fn": "UmbralDeserializer.copyBytes",
      "jump": "i",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2559": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2560": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2561": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2562": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2564": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2565": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA0C"
    },
    "2568": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA41"
    },
    "2571": {
      "fn": "UmbralDeserializer.copyBytes",
      "jump": "i",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2572": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2573": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2574": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2575": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2577": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2578": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA19"
    },
    "2581": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA41"
    },
    "2584": {
      "fn": "UmbralDeserializer.copyBytes",
      "jump": "i",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2585": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2586": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2587": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2588": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2590": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2591": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA26"
    },
    "2594": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA41"
    },
    "2597": {
      "fn": "UmbralDeserializer.copyBytes",
      "jump": "i",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2598": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2599": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2600": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2601": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2603": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2604": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2606": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2607": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2608": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2610": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2611": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "2613": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2614": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2615": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2617": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2618": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "2620": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2621": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2622": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "POP",
      "path": "28"
    },
    "2623": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2624": {
      "fn": "UmbralDeserializer.copyBytes",
      "jump": "o",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2625": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2626": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2628": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2629": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2630": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2631": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2632": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2633": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2634": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2635": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2638": {
      "offset": [
        1770,
        5822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2639": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2640": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2641": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2643": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2644": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "ADD",
      "path": "28"
    },
    "2645": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2646": {
      "fn": "UmbralDeserializer.copyBytes",
      "offset": [
        1770,
        5822
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2647": {
      "fn": "UmbralDeserializer.copyBytes",
      "jump": "o",
      "offset": [
        1770,
        5822
      ],
      "op": "JUMP",
      "path": "28"
    }
  },
  "sha1": "bd2ed14b64f0f8e7ed3de2611feec520efd7759c",
  "source": "pragma solidity ^0.6.1;\n\n\nimport \"contracts/lib/SignatureVerifier.sol\";\nimport \"contracts/lib/Snapshot.sol\";\nimport \"contracts/lib/UmbralDeserializer.sol\";\nimport \"contracts/lib/ReEncryptionValidator.sol\";\n\n/**\n* @notice Contract for using SignatureVerifier library\n*/\ncontract SignatureVerifierMock {\n\n    function recover(bytes32 _hash, bytes memory _signature)\n        public\n        pure\n        returns (address)\n    {\n        return SignatureVerifier.recover(_hash, _signature);\n    }\n\n    function toAddress(bytes memory _publicKey) public pure returns (address) {\n        return SignatureVerifier.toAddress(_publicKey);\n    }\n\n    function hash(bytes memory _message, SignatureVerifier.HashAlgorithm _algorithm)\n        public\n        pure\n        returns (bytes32 result)\n    {\n        return SignatureVerifier.hash(_message, _algorithm);\n    }\n\n    function verify(\n        bytes memory _message,\n        bytes memory _signature,\n        bytes memory _publicKey,\n        SignatureVerifier.HashAlgorithm _algorithm\n    )\n        public\n        pure\n        returns (bool)\n    {\n        return SignatureVerifier.verify(_message, _signature, _publicKey, _algorithm);\n    }\n\n    function verifyEIP191(\n        bytes memory _message,\n        bytes memory _signature,\n        bytes memory _publicKey,\n        byte _version\n    )\n        public\n        view\n        returns (bool)\n    {\n        return SignatureVerifier.verifyEIP191(_message, _signature, _publicKey, _version);\n    }\n\n    function hashEIP191(\n        bytes memory _message,\n        byte _version\n    )\n        public\n        view\n        returns (bytes32)\n    {\n        return SignatureVerifier.hashEIP191(_message, _version);\n    }\n\n}\n\n\n/**\n* @dev Contract for testing UmbralDeserializer library\n*/\ncontract UmbralDeserializerMock {\n    using UmbralDeserializer for bytes;\n\n    function toCapsule(bytes memory _capsuleBytes)\n        public pure returns (\n            byte pointESign,\n            bytes32 pointEXCoord,\n            byte pointVSign,\n            bytes32 pointVXCoord,\n            bytes32 bnSig\n        )\n    {\n        UmbralDeserializer.Capsule memory capsule = _capsuleBytes.toCapsule();\n        pointESign = byte(capsule.pointE.sign);\n        pointEXCoord = bytes32(capsule.pointE.xCoord);\n        pointVSign = byte(capsule.pointV.sign);\n        pointVXCoord = bytes32(capsule.pointV.xCoord);\n        bnSig = bytes32(capsule.bnSig);\n    }\n\n    function toCorrectnessProof(bytes memory _proofBytes)\n        public pure returns (\n            byte pointE2Sign,\n            bytes32 pointE2XCoord,\n            byte pointV2Sign,\n            bytes32 pointV2XCoord,\n            byte pointKFragCommitmentSign,\n            bytes32 pointKFragCommitmentXCoord,\n            byte pointKFragPokSign,\n            bytes32 pointKFragPokXCoord,\n            bytes32 bnSig,\n            bytes memory kFragSignature,\n            bytes memory metadata\n        )\n    {\n        UmbralDeserializer.CorrectnessProof memory proof = _proofBytes.toCorrectnessProof();\n        pointE2Sign = byte(proof.pointE2.sign);\n        pointE2XCoord = bytes32(proof.pointE2.xCoord);\n        pointV2Sign = byte(proof.pointV2.sign);\n        pointV2XCoord = bytes32(proof.pointV2.xCoord);\n        pointKFragCommitmentSign = byte(proof.pointKFragCommitment.sign);\n        pointKFragCommitmentXCoord = bytes32(proof.pointKFragCommitment.xCoord);\n        pointKFragPokSign = byte(proof.pointKFragPok.sign);\n        pointKFragPokXCoord = bytes32(proof.pointKFragPok.xCoord);\n        bnSig = bytes32(proof.bnSig);\n        kFragSignature = proof.kFragSignature;\n        metadata = proof.metadata;\n    }\n\n    // `toCapsuleFrag` is split into two methods because of EVM stack problems with many variables\n    function toCorrectnessProofFromCapsuleFrag(bytes memory _cFragBytes)\n        public pure returns (\n            byte pointE2Sign,\n            bytes32 pointE2XCoord,\n            byte pointV2Sign,\n            bytes32 pointV2XCoord,\n            byte pointKFragCommitmentSign,\n            bytes32 pointKFragCommitmentXCoord,\n            byte pointKFragPokSign,\n            bytes32 pointKFragPokXCoord,\n            bytes32 bnSig,\n            bytes memory kFragSignature,\n            bytes memory metadata\n        )\n    {\n        UmbralDeserializer.CapsuleFrag memory cFrag = _cFragBytes.toCapsuleFrag();\n        UmbralDeserializer.CorrectnessProof memory proof = cFrag.proof;\n        pointE2Sign = byte(proof.pointE2.sign);\n        pointE2XCoord = bytes32(proof.pointE2.xCoord);\n        pointV2Sign = byte(proof.pointV2.sign);\n        pointV2XCoord = bytes32(proof.pointV2.xCoord);\n        pointKFragCommitmentSign = byte(proof.pointKFragCommitment.sign);\n        pointKFragCommitmentXCoord = bytes32(proof.pointKFragCommitment.xCoord);\n        pointKFragPokSign = byte(proof.pointKFragPok.sign);\n        pointKFragPokXCoord = bytes32(proof.pointKFragPok.xCoord);\n        bnSig = bytes32(proof.bnSig);\n        kFragSignature = proof.kFragSignature;\n        metadata = proof.metadata;\n    }\n\n    function toCapsuleFrag(bytes memory _cFragBytes)\n        public pure returns (\n            byte pointE1Sign,\n            bytes32 pointE1XCoord,\n            byte pointV1Sign,\n            bytes32 pointV1XCoord,\n            bytes32 kFragId,\n            byte pointPrecursorSign,\n            bytes32 pointPrecursorXCoord\n        )\n    {\n        UmbralDeserializer.CapsuleFrag memory cFrag = _cFragBytes.toCapsuleFrag();\n        pointE1Sign = byte(cFrag.pointE1.sign);\n        pointE1XCoord = bytes32(cFrag.pointE1.xCoord);\n        pointV1Sign = byte(cFrag.pointV1.sign);\n        pointV1XCoord = bytes32(cFrag.pointV1.xCoord);\n        kFragId = cFrag.kFragId;\n        pointPrecursorSign = byte(cFrag.pointPrecursor.sign);\n        pointPrecursorXCoord = bytes32(cFrag.pointPrecursor.xCoord);\n    }\n}\n\n\n/**\n* @notice Contract for using ReEncryptionValidator library\n*/\ncontract ReEncryptionValidatorMock {\n\n    using UmbralDeserializer for bytes;\n\n    function UMBRAL_PARAMETER_U_SIGN() public pure returns (uint8) {\n        return ReEncryptionValidator.UMBRAL_PARAMETER_U_SIGN;\n    }\n\n    function UMBRAL_PARAMETER_U_XCOORD() public pure returns (uint256) {\n        return ReEncryptionValidator.UMBRAL_PARAMETER_U_XCOORD;\n    }\n\n    function UMBRAL_PARAMETER_U_YCOORD() public pure returns (uint256) {\n        return ReEncryptionValidator.UMBRAL_PARAMETER_U_YCOORD;\n    }\n\n    function FIELD_ORDER() public pure returns (uint256) {\n        return ReEncryptionValidator.FIELD_ORDER;\n    }\n\n    function MINUS_2() public pure returns (uint256) {\n        return ReEncryptionValidator.MINUS_2;\n    }\n\n    function MINUS_ONE_HALF() public pure returns (uint256) {\n        return ReEncryptionValidator.MINUS_ONE_HALF;\n    }\n\n    function validateCFrag(\n        bytes memory _capsuleBytes,\n        bytes memory _cFragBytes,\n        bytes memory _precomputedBytes\n    )\n        public pure returns (bool)\n    {\n        return ReEncryptionValidator.validateCFrag(_capsuleBytes, _cFragBytes, _precomputedBytes);\n    }\n\n    function computeProofChallengeScalar(\n        bytes memory _capsuleBytes,\n        bytes memory _cFragBytes\n    )\n        public pure returns (uint256)\n    {\n        UmbralDeserializer.Capsule memory _capsule = _capsuleBytes.toCapsule();\n        UmbralDeserializer.CapsuleFrag memory _cFrag = _cFragBytes.toCapsuleFrag();\n        return ReEncryptionValidator.computeProofChallengeScalar(_capsule, _cFrag);\n    }\n\n    function extendedKeccakToBN (bytes memory _data) public pure returns (uint256) {\n        return ReEncryptionValidator.extendedKeccakToBN(_data);\n    }\n\n\tfunction checkCompressedPoint(\n\t\tuint8 _pointSign,\n\t\tuint256 _pointX,\n\t\tuint256 _pointY\n\t) public pure returns(bool) {\n        return ReEncryptionValidator.checkCompressedPoint(_pointSign, _pointX, _pointY);\n\t}\n\n    function checkSerializedCoordinates(bytes memory _coords) public pure returns(bool) {\n\t\treturn ReEncryptionValidator.checkSerializedCoordinates(_coords);\n\t}\n\n    function isOnCurve(uint256 Px, uint256 Py) public pure returns (bool) {\n        return ReEncryptionValidator.isOnCurve(Px, Py);\n    }\n\n    function ecmulVerify(\n    \tuint256 x1,\n    \tuint256 y1,\n    \tuint256 scalar,\n    \tuint256 qx,\n    \tuint256 qy\n    ) public pure returns(bool) {\n        return ReEncryptionValidator.ecmulVerify(x1, y1, scalar, qx, qy);\n\t}\n\n    function eqAffineJacobian(\n    \tuint256[2] memory P,\n    \tuint256[3] memory Q\n    ) public pure returns(bool){\n        return ReEncryptionValidator.eqAffineJacobian(P, Q);\n    }\n\n    function addAffineJacobian(\n    \tuint[2] memory P,\n    \tuint[2] memory Q\n    ) public pure returns (uint[3] memory) {\n        return ReEncryptionValidator.addAffineJacobian(P, Q);\n    }\n\n    function doubleJacobian(uint[3] memory P) public pure returns (uint[3] memory) {\n        return ReEncryptionValidator.doubleJacobian(P);\n    }\n}\n\n/**\n* @notice Contract for using Snapshot library\n*/\ncontract SnapshotMock {\n\n    // Helpers\n    uint128[] public history;\n\n    function length() public view returns(uint256){\n        return history.length;\n    }\n\n    function deleteHistory() public {\n        delete history;\n    }\n\n    // Mock functions\n    function encodeSnapshot(uint32 _time, uint96 _value) public pure returns(uint128) {\n        return Snapshot.encodeSnapshot(_time, _value);\n    }\n\n    function decodeSnapshot(uint128 _snapshot) public pure returns(uint32, uint96){\n        return Snapshot.decodeSnapshot(_snapshot);\n    }\n\n    function addSnapshot(uint256 _time, uint256 _value) public {\n        Snapshot.addSnapshot(history, _time, _value);\n    }\n\n    function getValueAt(uint256 _time) public view returns (uint96) {\n        return Snapshot.getValueAt(history, _time);\n    }\n\n    function lastSnapshot() public view returns (uint32, uint96) {\n        return Snapshot.lastSnapshot(history);\n    }\n\n    function lastValue() public view returns (uint96) {\n        return Snapshot.lastValue(history);\n    }\n\n\n}\n",
  "sourceMap": "1770:4052:28:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1770:4052:28;;;;;;;",
  "sourcePath": "contracts/LibTestSet.sol",
  "type": "contract"
}